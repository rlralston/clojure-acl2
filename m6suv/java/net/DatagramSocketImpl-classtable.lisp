; DatagramSocketImpl-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:37 CDT 2014.
;

(defconst *java.net.DatagramSocketImpl*
 (make-class-def
      '(class "java.net.DatagramSocketImpl"
            "java.lang.Object"
            (constant_pool)
            (fields
                        (field "localPort" int (accessflags  *class*  *protected* ) -1)
                        (field "fd" (class "java.io.FileDescriptor") (accessflags  *class*  *protected* ) -1))
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "create"
                              (parameters )
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *protected* )
                              (code))
                        (method "bind"
                              (parameters int (class "java.net.InetAddress"))
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *protected* )
                              (code))
                        (method "send"
                              (parameters (class "java.net.DatagramPacket"))
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *protected* )
                              (code))
                        (method "connect"
                              (parameters (class "java.net.InetAddress") int)
                              (returntype . void)
                              (accessflags  *class*  *protected* )
                              (code
                                   (max_stack . 0) (max_locals . 3) (code_length . 1)
                                   (parsedcode
                                      (0 (return))
                                      (endofcode 1))
                                   (Exceptions )
                                   (StackMap )))
                        (method "disconnect"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *protected* )
                              (code
                                   (max_stack . 0) (max_locals . 1) (code_length . 1)
                                   (parsedcode
                                      (0 (return))
                                      (endofcode 1))
                                   (Exceptions )
                                   (StackMap )))
                        (method "peek"
                              (parameters (class "java.net.InetAddress"))
                              (returntype . int)
                              (accessflags  *abstract*  *class*  *protected* )
                              (code))
                        (method "peekData"
                              (parameters (class "java.net.DatagramPacket"))
                              (returntype . int)
                              (accessflags  *abstract*  *class*  *protected* )
                              (code))
                        (method "receive"
                              (parameters (class "java.net.DatagramPacket"))
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *protected* )
                              (code))
                        (method "setTTL"
                              (parameters byte)
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *protected* )
                              (code))
                        (method "getTTL"
                              (parameters )
                              (returntype . byte)
                              (accessflags  *abstract*  *class*  *protected* )
                              (code))
                        (method "setTimeToLive"
                              (parameters int)
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *protected* )
                              (code))
                        (method "getTimeToLive"
                              (parameters )
                              (returntype . int)
                              (accessflags  *abstract*  *class*  *protected* )
                              (code))
                        (method "join"
                              (parameters (class "java.net.InetAddress"))
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *protected* )
                              (code))
                        (method "leave"
                              (parameters (class "java.net.InetAddress"))
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *protected* )
                              (code))
                        (method "joinGroup"
                              (parameters (class "java.net.SocketAddress") (class "java.net.NetworkInterface"))
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *protected* )
                              (code))
                        (method "leaveGroup"
                              (parameters (class "java.net.SocketAddress") (class "java.net.NetworkInterface"))
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *protected* )
                              (code))
                        (method "close"
                              (parameters )
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *protected* )
                              (code))
                        (method "getLocalPort"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *protected* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "localPort" "java.net.DatagramSocketImpl" int)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getFileDescriptor"
                              (parameters )
                              (returntype . (class "java.io.FileDescriptor"))
                              (accessflags  *class*  *protected* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "fd" "java.net.DatagramSocketImpl" (class "java.io.FileDescriptor"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "java.net.SocketOptions")
            (accessflags  *abstract*  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *DatagramSocketImpl-class-table*
  (make-static-class-decls 
   *java.net.DatagramSocketImpl*))

(defconst *package-name-map* 
  ("java.net.DatagramSocketImpl" . "java.net"))

