; LogManager$1-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:46 CDT 2014.
;

(defconst *java.util.logging.LogManager$1*
 (make-class-def
      '(class "java.util.logging.LogManager$1"
            "java.lang.Object"
            (constant_pool
                        (STRING  "java.util.logging.manager")
                        (STRING  "Could not load Logmanager \"")
                        (STRING  "\""))
            (fields)
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "run"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 4) (code_length . 169)
                                   (parsedcode
                                      (0 (aconst_null)) 
                                      (1 (astore_1)) 
                                      (2 (ldc 0)) ;;at TAG_6;;STRING:: "java.util.logging.manager"
                                      (4 (invokestatic (methodCP "getProperty" "java.lang.System" ((class "java.lang.String")) (class "java.lang.String")))) 
                                      (7 (astore_1)) 
                                      (8 (aload_1)) 
                                      (9 (ifnull 57)) ;;to TAG_0
                                      (12 (invokestatic (methodCP "getSystemClassLoader" "java.lang.ClassLoader" () (class "java.lang.ClassLoader")))) ;;at TAG_3
                                      (15 (aload_1)) 
                                      (16 (invokevirtual (methodCP "loadClass" "java.lang.ClassLoader" ((class "java.lang.String")) (class "java.lang.Class")))) 
                                      (19 (astore_2)) 
                                      (20 (aload_2)) 
                                      (21 (invokevirtual (methodCP "newInstance" "java.lang.Class" () (class "java.lang.Object")))) 
                                      (24 (checkcast (class "java.util.logging.LogManager"))) 
                                      (27 (invokestatic (methodCP "access$002" "java.util.logging.LogManager" ((class "java.util.logging.LogManager")) (class "java.util.logging.LogManager")))) 
                                      (30 (pop)) 
                                      (31 (goto 57)) ;;to TAG_0;;at TAG_4
                                      (34 (astore_2)) ;;at TAG_5
                                      (35 (invokestatic (methodCP "currentThread" "java.lang.Thread" () (class "java.lang.Thread")))) 
                                      (38 (invokevirtual (methodCP "getContextClassLoader" "java.lang.Thread" () (class "java.lang.ClassLoader")))) 
                                      (41 (aload_1)) 
                                      (42 (invokevirtual (methodCP "loadClass" "java.lang.ClassLoader" ((class "java.lang.String")) (class "java.lang.Class")))) 
                                      (45 (astore_3)) 
                                      (46 (aload_3)) 
                                      (47 (invokevirtual (methodCP "newInstance" "java.lang.Class" () (class "java.lang.Object")))) 
                                      (50 (checkcast (class "java.util.logging.LogManager"))) 
                                      (53 (invokestatic (methodCP "access$002" "java.util.logging.LogManager" ((class "java.util.logging.LogManager")) (class "java.util.logging.LogManager")))) 
                                      (56 (pop)) 
                                      (57 (goto 95)) ;;to TAG_1;;at TAG_0
                                      (60 (astore_2)) ;;at TAG_7
                                      (61 (getstatic (fieldCP "err" "java.lang.System" (class "java.io.PrintStream")))) 
                                      (64 (new (class "java.lang.StringBuilder"))) 
                                      (67 (dup)) 
                                      (68 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (71 (ldc 1)) ;;STRING:: "Could not load Logmanager \""
                                      (73 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (76 (aload_1)) 
                                      (77 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (80 (ldc 2)) ;;STRING:: "\""
                                      (82 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (85 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (88 (invokevirtual (methodCP "println" "java.io.PrintStream" ((class "java.lang.String")) void))) 
                                      (91 (aload_2)) 
                                      (92 (invokevirtual (methodCP "printStackTrace" "java.lang.Exception" () void))) 
                                      (95 (invokestatic (methodCP "access$000" "java.util.logging.LogManager" () (class "java.util.logging.LogManager")))) ;;at TAG_1
                                      (98 (ifnonnull 112))  ;;to TAG_2
                                      (101 (new (class "java.util.logging.LogManager"))) 
                                      (104 (dup)) 
                                      (105 (invokespecial (methodCP "<init>" "java.util.logging.LogManager" () void))) 
                                      (108 (invokestatic (methodCP "access$002" "java.util.logging.LogManager" ((class "java.util.logging.LogManager")) (class "java.util.logging.LogManager")))) 
                                      (111 (pop)) 
                                      (112 (invokestatic (methodCP "access$000" "java.util.logging.LogManager" () (class "java.util.logging.LogManager")))) ;;at TAG_2
                                      (115 (new (class "java.util.logging.LogManager$RootLogger"))) 
                                      (118 (dup)) 
                                      (119 (invokestatic (methodCP "access$000" "java.util.logging.LogManager" () (class "java.util.logging.LogManager")))) 
                                      (122 (dup)) 
                                      (123 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (126 (pop)) 
                                      (127 (aconst_null)) 
                                      (128 (invokespecial (methodCP "<init>" "java.util.logging.LogManager$RootLogger" ((class "java.util.logging.LogManager") (class "java.util.logging.LogManager$1")) void))) 
                                      (131 (invokestatic (methodCP "access$102" "java.util.logging.LogManager" ((class "java.util.logging.LogManager") (class "java.util.logging.Logger")) (class "java.util.logging.Logger")))) 
                                      (134 (pop)) 
                                      (135 (invokestatic (methodCP "access$000" "java.util.logging.LogManager" () (class "java.util.logging.LogManager")))) 
                                      (138 (invokestatic (methodCP "access$000" "java.util.logging.LogManager" () (class "java.util.logging.LogManager")))) 
                                      (141 (invokestatic (methodCP "access$100" "java.util.logging.LogManager" ((class "java.util.logging.LogManager")) (class "java.util.logging.Logger")))) 
                                      (144 (invokevirtual (methodCP "addLogger" "java.util.logging.LogManager" ((class "java.util.logging.Logger")) boolean))) 
                                      (147 (pop)) 
                                      (148 (getstatic (fieldCP "global" "java.util.logging.Logger" (class "java.util.logging.Logger")))) 
                                      (151 (invokestatic (methodCP "access$000" "java.util.logging.LogManager" () (class "java.util.logging.LogManager")))) 
                                      (154 (invokevirtual (methodCP "setLogManager" "java.util.logging.Logger" ((class "java.util.logging.LogManager")) void))) 
                                      (157 (invokestatic (methodCP "access$000" "java.util.logging.LogManager" () (class "java.util.logging.LogManager")))) 
                                      (160 (getstatic (fieldCP "global" "java.util.logging.Logger" (class "java.util.logging.Logger")))) 
                                      (163 (invokevirtual (methodCP "addLogger" "java.util.logging.LogManager" ((class "java.util.logging.Logger")) boolean))) 
                                      (166 (pop)) 
                                      (167 (aconst_null)) 
                                      (168 (areturn)) 
                                      (endofcode 169))
                                   (Exceptions 
                                     (handler 12 31  34 (class "java.lang.ClassNotFoundException"))
                                     (handler 2 57  60 (class "java.lang.Exception")))
                                   (StackMap ))))
            (interfaces "java.security.PrivilegedAction")
            (accessflags  *class*  *final*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "EnclosingMethod")
              (attribute "Signature")
              (attribute "InnerClasses")))))


(defconst *LogManager$1-class-table*
  (make-static-class-decls 
   *java.util.logging.LogManager$1*))

(defconst *package-name-map* 
  ("java.util.logging.LogManager$1" . "java.util.logging"))

