; LogRecord-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:46 CDT 2014.
;

(defconst *java.util.logging.LogRecord*
 (make-class-def
      '(class "java.util.logging.LogRecord"
            "java.lang.Object"
            (constant_pool
                        (INT 1073741823)
                        (LONG 5372048053134512534)
                        (LONG 1073741823)
                        (STRING  "LogRecord: bad version: ")
                        (STRING  ".")
                        (STRING  "java.lang.reflect.")
                        (STRING  "sun.reflect.")
                        (STRING  "java.util.logging.Logger")
                        (STRING  "java.util.logging.LoggingProxyImpl")
                        (STRING  "sun.util.logging."))
            (fields
                        (field "globalSequenceNumber" (class "java.util.concurrent.atomic.AtomicLong") (accessflags  *class*  *final*  *private*  *static* ) -1)
                        (field "MIN_SEQUENTIAL_THREAD_ID" int (accessflags  *class*  *final*  *private*  *static* ) 0)
                        (field "nextThreadId" (class "java.util.concurrent.atomic.AtomicInteger") (accessflags  *class*  *final*  *private*  *static* ) -1)
                        (field "threadIds" (class "java.lang.ThreadLocal") (accessflags  *class*  *final*  *private*  *static* ) -1)
                        (field "level" (class "java.util.logging.Level") (accessflags  *class*  *private* ) -1)
                        (field "sequenceNumber" long (accessflags  *class*  *private* ) -1)
                        (field "sourceClassName" (class "java.lang.String") (accessflags  *class*  *private* ) -1)
                        (field "sourceMethodName" (class "java.lang.String") (accessflags  *class*  *private* ) -1)
                        (field "message" (class "java.lang.String") (accessflags  *class*  *private* ) -1)
                        (field "threadID" int (accessflags  *class*  *private* ) -1)
                        (field "millis" long (accessflags  *class*  *private* ) -1)
                        (field "thrown" (class "java.lang.Throwable") (accessflags  *class*  *private* ) -1)
                        (field "loggerName" (class "java.lang.String") (accessflags  *class*  *private* ) -1)
                        (field "resourceBundleName" (class "java.lang.String") (accessflags  *class*  *private* ) -1)
                        (field "needToInferCaller" boolean (accessflags  *class*  *private*  *transient* ) -1)
                        (field "parameters" (array (class "java.lang.Object")) (accessflags  *class*  *private*  *transient* ) -1)
                        (field "resourceBundle" (class "java.util.ResourceBundle") (accessflags  *class*  *private*  *transient* ) -1)
                        (field "serialVersionUID" long (accessflags  *class*  *final*  *private*  *static* ) 1))
            (methods
                        (method "defaultThreadID"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 54)
                                   (parsedcode
                                      (0 (invokestatic (methodCP "currentThread" "java.lang.Thread" () (class "java.lang.Thread")))) 
                                      (3 (invokevirtual (methodCP "getId" "java.lang.Thread" () long))) 
                                      (6 (lstore_1)) 
                                      (7 (lload_1)) 
                                      (8 (ldc2_w 2)) ;; LONG:: "1073741823"
                                      (11 (lcmp)) 
                                      (12 (ifge 18))  ;;to TAG_0
                                      (15 (lload_1)) 
                                      (16 (l2i)) 
                                      (17 (ireturn)) 
                                      (18 (getstatic (fieldCP "threadIds" "java.util.logging.LogRecord" (class "java.lang.ThreadLocal")))) ;;at TAG_0
                                      (21 (invokevirtual (methodCP "get" "java.lang.ThreadLocal" () (class "java.lang.Object")))) 
                                      (24 (checkcast (class "java.lang.Integer"))) 
                                      (27 (astore_3)) 
                                      (28 (aload_3)) 
                                      (29 (ifnonnull 49)) ;;to TAG_1
                                      (32 (getstatic (fieldCP "nextThreadId" "java.util.logging.LogRecord" (class "java.util.concurrent.atomic.AtomicInteger")))) 
                                      (35 (invokevirtual (methodCP "getAndIncrement" "java.util.concurrent.atomic.AtomicInteger" () int))) 
                                      (38 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (41 (astore_3)) 
                                      (42 (getstatic (fieldCP "threadIds" "java.util.logging.LogRecord" (class "java.lang.ThreadLocal")))) 
                                      (45 (aload_3)) 
                                      (46 (invokevirtual (methodCP "set" "java.lang.ThreadLocal" ((class "java.lang.Object")) void))) 
                                      (49 (aload_3)) ;;at TAG_1
                                      (50 (invokevirtual (methodCP "intValue" "java.lang.Integer" () int))) 
                                      (53 (ireturn)) 
                                      (endofcode 54))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.util.logging.Level") (class "java.lang.String"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 50)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (aload_1))
                                      (5 (invokevirtual
					(methodCP "getClass" "java.lang.Object" () (class "java.lang.Class"))))
                                      (8 (pop))
                                      (9 (aload_0))
                                      (10 (aload_1))
                                      (11 (putfield (fieldCP "level" "java.util.logging.LogRecord" (class "java.util.logging.Level"))))
                                      (14 (aload_0))
                                      (15 (aload_2))
                                      (16 (putfield (fieldCP "message" "java.util.logging.LogRecord" (class "java.lang.String"))))
                                      (19 (aload_0))
                                      (20 (getstatic (fieldCP "globalSequenceNumber" "java.util.logging.LogRecord" (class "java.util.concurrent.atomic.AtomicLong"))))
                                      (23 (invokevirtual
					(methodCP "getAndIncrement" "java.util.concurrent.atomic.AtomicLong" () long)))
                                      (26 (putfield (fieldCP "sequenceNumber" "java.util.logging.LogRecord" long)))
                                      (29 (aload_0))
                                      (30 (aload_0))
                                      (31 (invokespecial
					(methodCP "defaultThreadID" "java.util.logging.LogRecord" () int)))
                                      (34 (putfield (fieldCP "threadID" "java.util.logging.LogRecord" int)))
                                      (37 (aload_0))
                                      (38 (invokestatic
					(methodCP "currentTimeMillis" "java.lang.System" () long)))
                                      (41 (putfield (fieldCP "millis" "java.util.logging.LogRecord" long)))
                                      (44 (aload_0))
                                      (45 (iconst_1))
                                      (46 (putfield (fieldCP "needToInferCaller" "java.util.logging.LogRecord" boolean)))
                                      (49 (return))
                                      (endofcode 50))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getLoggerName"
                              (parameters )
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "loggerName" "java.util.logging.LogRecord" (class "java.lang.String"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setLoggerName"
                              (parameters (class "java.lang.String"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (putfield (fieldCP "loggerName" "java.util.logging.LogRecord" (class "java.lang.String"))))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getResourceBundle"
                              (parameters )
                              (returntype . (class "java.util.ResourceBundle"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "resourceBundle" "java.util.logging.LogRecord" (class "java.util.ResourceBundle"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setResourceBundle"
                              (parameters (class "java.util.ResourceBundle"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (putfield (fieldCP "resourceBundle" "java.util.logging.LogRecord" (class "java.util.ResourceBundle"))))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getResourceBundleName"
                              (parameters )
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "resourceBundleName" "java.util.logging.LogRecord" (class "java.lang.String"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setResourceBundleName"
                              (parameters (class "java.lang.String"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (putfield (fieldCP "resourceBundleName" "java.util.logging.LogRecord" (class "java.lang.String"))))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getLevel"
                              (parameters )
                              (returntype . (class "java.util.logging.Level"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "level" "java.util.logging.LogRecord" (class "java.util.logging.Level"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setLevel"
                              (parameters (class "java.util.logging.Level"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 18)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (ifnonnull 12))  ;;to TAG_0
                                      (4 (new (class "java.lang.NullPointerException"))) 
                                      (7 (dup)) 
                                      (8 (invokespecial (methodCP "<init>" "java.lang.NullPointerException" () void))) 
                                      (11 (athrow)) 
                                      (12 (aload_0)) ;;at TAG_0
                                      (13 (aload_1)) 
                                      (14 (putfield (fieldCP "level" "java.util.logging.LogRecord" (class "java.util.logging.Level")))) 
                                      (17 (return)) 
                                      (endofcode 18))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getSequenceNumber"
                              (parameters )
                              (returntype . long)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "sequenceNumber" "java.util.logging.LogRecord" long)))
                                      (4 (lreturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setSequenceNumber"
                              (parameters long)
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (lload_1))
                                      (2 (putfield (fieldCP "sequenceNumber" "java.util.logging.LogRecord" long)))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getSourceClassName"
                              (parameters )
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "needToInferCaller" "java.util.logging.LogRecord" boolean))) 
                                      (4 (ifeq 11))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (invokespecial (methodCP "inferCaller" "java.util.logging.LogRecord" () void))) 
                                      (11 (aload_0)) ;;at TAG_0
                                      (12 (getfield (fieldCP "sourceClassName" "java.util.logging.LogRecord" (class "java.lang.String")))) 
                                      (15 (areturn)) 
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setSourceClassName"
                              (parameters (class "java.lang.String"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (putfield (fieldCP "sourceClassName" "java.util.logging.LogRecord" (class "java.lang.String"))))
                                      (5 (aload_0))
                                      (6 (iconst_0))
                                      (7 (putfield (fieldCP "needToInferCaller" "java.util.logging.LogRecord" boolean)))
                                      (10 (return))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getSourceMethodName"
                              (parameters )
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "needToInferCaller" "java.util.logging.LogRecord" boolean))) 
                                      (4 (ifeq 11))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (invokespecial (methodCP "inferCaller" "java.util.logging.LogRecord" () void))) 
                                      (11 (aload_0)) ;;at TAG_0
                                      (12 (getfield (fieldCP "sourceMethodName" "java.util.logging.LogRecord" (class "java.lang.String")))) 
                                      (15 (areturn)) 
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setSourceMethodName"
                              (parameters (class "java.lang.String"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (putfield (fieldCP "sourceMethodName" "java.util.logging.LogRecord" (class "java.lang.String"))))
                                      (5 (aload_0))
                                      (6 (iconst_0))
                                      (7 (putfield (fieldCP "needToInferCaller" "java.util.logging.LogRecord" boolean)))
                                      (10 (return))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getMessage"
                              (parameters )
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "message" "java.util.logging.LogRecord" (class "java.lang.String"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setMessage"
                              (parameters (class "java.lang.String"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (putfield (fieldCP "message" "java.util.logging.LogRecord" (class "java.lang.String"))))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getParameters"
                              (parameters )
                              (returntype . (array (class "java.lang.Object")))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "parameters" "java.util.logging.LogRecord" (array (class "java.lang.Object")))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setParameters"
                              (parameters (array (class "java.lang.Object")))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (putfield (fieldCP "parameters" "java.util.logging.LogRecord" (array (class "java.lang.Object")))))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getThreadID"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "threadID" "java.util.logging.LogRecord" int)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setThreadID"
                              (parameters int)
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (putfield (fieldCP "threadID" "java.util.logging.LogRecord" int)))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getMillis"
                              (parameters )
                              (returntype . long)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "millis" "java.util.logging.LogRecord" long)))
                                      (4 (lreturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setMillis"
                              (parameters long)
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (lload_1))
                                      (2 (putfield (fieldCP "millis" "java.util.logging.LogRecord" long)))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getThrown"
                              (parameters )
                              (returntype . (class "java.lang.Throwable"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "thrown" "java.util.logging.LogRecord" (class "java.lang.Throwable"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setThrown"
                              (parameters (class "java.lang.Throwable"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (putfield (fieldCP "thrown" "java.util.logging.LogRecord" (class "java.lang.Throwable"))))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "writeObject"
                              (parameters (class "java.io.ObjectOutputStream"))
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 84)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (invokevirtual (methodCP "defaultWriteObject" "java.io.ObjectOutputStream" () void))) 
                                      (4 (aload_1)) 
                                      (5 (iconst_1)) 
                                      (6 (invokevirtual (methodCP "writeByte" "java.io.ObjectOutputStream" (int) void))) 
                                      (9 (aload_1)) 
                                      (10 (iconst_0)) 
                                      (11 (invokevirtual (methodCP "writeByte" "java.io.ObjectOutputStream" (int) void))) 
                                      (14 (aload_0)) 
                                      (15 (getfield (fieldCP "parameters" "java.util.logging.LogRecord" (array (class "java.lang.Object"))))) 
                                      (18 (ifnonnull 27)) ;;to TAG_0
                                      (21 (aload_1)) 
                                      (22 (iconst_m1)) 
                                      (23 (invokevirtual (methodCP "writeInt" "java.io.ObjectOutputStream" (int) void))) 
                                      (26 (return)) 
                                      (27 (aload_1)) ;;at TAG_0
                                      (28 (aload_0)) 
                                      (29 (getfield (fieldCP "parameters" "java.util.logging.LogRecord" (array (class "java.lang.Object"))))) 
                                      (32 (arraylength)) 
                                      (33 (invokevirtual (methodCP "writeInt" "java.io.ObjectOutputStream" (int) void))) 
                                      (36 (iconst_0)) 
                                      (37 (istore_2)) 
                                      (38 (iload_2)) ;;at TAG_4
                                      (39 (aload_0)) 
                                      (40 (getfield (fieldCP "parameters" "java.util.logging.LogRecord" (array (class "java.lang.Object"))))) 
                                      (43 (arraylength)) 
                                      (44 (if_icmpge 83)) ;;to TAG_1
                                      (47 (aload_0)) 
                                      (48 (getfield (fieldCP "parameters" "java.util.logging.LogRecord" (array (class "java.lang.Object"))))) 
                                      (51 (iload_2)) 
                                      (52 (aaload)) 
                                      (53 (ifnonnull 64))  ;;to TAG_2
                                      (56 (aload_1)) 
                                      (57 (aconst_null)) 
                                      (58 (invokevirtual (methodCP "writeObject" "java.io.ObjectOutputStream" ((class "java.lang.Object")) void))) 
                                      (61 (goto 77)) ;;to TAG_3
                                      (64 (aload_1)) ;;at TAG_2
                                      (65 (aload_0)) 
                                      (66 (getfield (fieldCP "parameters" "java.util.logging.LogRecord" (array (class "java.lang.Object"))))) 
                                      (69 (iload_2)) 
                                      (70 (aaload)) 
                                      (71 (invokevirtual (methodCP "toString" "java.lang.Object" () (class "java.lang.String")))) 
                                      (74 (invokevirtual (methodCP "writeObject" "java.io.ObjectOutputStream" ((class "java.lang.Object")) void))) 
                                      (77 (iinc 2 1)) ;;at TAG_3
                                      (80 (goto 38)) ;;to TAG_4
                                      (83 (return)) ;;at TAG_1
                                      (endofcode 84))
                                   (Exceptions )
                                   (StackMap )))
                        (method "readObject"
                              (parameters (class "java.io.ObjectInputStream"))
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 4) (max_locals . 6) (code_length . 148)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (invokevirtual (methodCP "defaultReadObject" "java.io.ObjectInputStream" () void))) 
                                      (4 (aload_1)) 
                                      (5 (invokevirtual (methodCP "readByte" "java.io.ObjectInputStream" () byte))) 
                                      (8 (istore_2)) 
                                      (9 (aload_1)) 
                                      (10 (invokevirtual (methodCP "readByte" "java.io.ObjectInputStream" () byte))) 
                                      (13 (istore_3)) 
                                      (14 (iload_2)) 
                                      (15 (iconst_1)) 
                                      (16 (if_icmpeq 55)) ;;to TAG_0
                                      (19 (new (class "java.io.IOException"))) 
                                      (22 (dup)) 
                                      (23 (new (class "java.lang.StringBuilder"))) 
                                      (26 (dup)) 
                                      (27 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (30 (ldc 3)) ;;STRING:: "LogRecord: bad version: "
                                      (32 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (35 (iload_2)) 
                                      (36 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder")))) 
                                      (39 (ldc 4)) ;;STRING:: "."
                                      (41 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (44 (iload_3)) 
                                      (45 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder")))) 
                                      (48 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (51 (invokespecial (methodCP "<init>" "java.io.IOException" ((class "java.lang.String")) void))) 
                                      (54 (athrow)) 
                                      (55 (aload_1)) ;;at TAG_0
                                      (56 (invokevirtual (methodCP "readInt" "java.io.ObjectInputStream" () int))) 
                                      (59 (istore 4)) 
                                      (61 (iload 4)) 
                                      (63 (iconst_m1)) 
                                      (64 (if_icmpne 75)) ;;to TAG_1
                                      (67 (aload_0)) 
                                      (68 (aconst_null)) 
                                      (69 (putfield (fieldCP "parameters" "java.util.logging.LogRecord" (array (class "java.lang.Object"))))) 
                                      (72 (goto 114))  ;;to TAG_2
                                      (75 (aload_0)) ;;at TAG_1
                                      (76 (iload 4)) 
                                      (78 (anewarray (class "java.lang.Object"))) 
                                      (81 (putfield (fieldCP "parameters" "java.util.logging.LogRecord" (array (class "java.lang.Object"))))) 
                                      (84 (iconst_0)) 
                                      (85 (istore 5)) 
                                      (87 (iload 5)) ;;at TAG_3
                                      (89 (aload_0)) 
                                      (90 (getfield (fieldCP "parameters" "java.util.logging.LogRecord" (array (class "java.lang.Object"))))) 
                                      (93 (arraylength)) 
                                      (94 (if_icmpge 114))  ;;to TAG_2
                                      (97 (aload_0)) 
                                      (98 (getfield (fieldCP "parameters" "java.util.logging.LogRecord" (array (class "java.lang.Object"))))) 
                                      (101 (iload 5)) 
                                      (103 (aload_1)) 
                                      (104 (invokevirtual (methodCP "readObject" "java.io.ObjectInputStream" () (class "java.lang.Object")))) 
                                      (107 (aastore)) 
                                      (108 (iinc 5 1)) 
                                      (111 (goto 87)) ;;to TAG_3
                                      (114 (aload_0)) ;;at TAG_2
                                      (115 (getfield (fieldCP "resourceBundleName" "java.util.logging.LogRecord" (class "java.lang.String")))) 
                                      (118 (ifnull 142)) ;;to TAG_4
                                      (121 (aload_0)) ;;at TAG_5
                                      (122 (aload_0)) 
                                      (123 (getfield (fieldCP "resourceBundleName" "java.util.logging.LogRecord" (class "java.lang.String")))) 
                                      (126 (invokestatic (methodCP "getBundle" "java.util.ResourceBundle" ((class "java.lang.String")) (class "java.util.ResourceBundle")))) 
                                      (129 (putfield (fieldCP "resourceBundle" "java.util.logging.LogRecord" (class "java.util.ResourceBundle")))) 
                                      (132 (goto 142)) ;;to TAG_4;;at TAG_6
                                      (135 (astore 5)) ;;at TAG_7
                                      (137 (aload_0)) 
                                      (138 (aconst_null)) 
                                      (139 (putfield (fieldCP "resourceBundle" "java.util.logging.LogRecord" (class "java.util.ResourceBundle")))) 
                                      (142 (aload_0)) ;;at TAG_4
                                      (143 (iconst_0)) 
                                      (144 (putfield (fieldCP "needToInferCaller" "java.util.logging.LogRecord" boolean))) 
                                      (147 (return)) 
                                      (endofcode 148))
                                   (Exceptions 
                                     (handler 121 132  135 (class "java.util.MissingResourceException")))
                                   (StackMap )))
                        (method "inferCaller"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 3) (max_locals . 9) (code_length . 127)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (iconst_0)) 
                                      (2 (putfield (fieldCP "needToInferCaller" "java.util.logging.LogRecord" boolean))) 
                                      (5 (invokestatic (methodCP "getJavaLangAccess" "sun.misc.SharedSecrets" () (class "sun.misc.JavaLangAccess")))) 
                                      (8 (astore_1)) 
                                      (9 (new (class "java.lang.Throwable"))) 
                                      (12 (dup)) 
                                      (13 (invokespecial (methodCP "<init>" "java.lang.Throwable" () void))) 
                                      (16 (astore_2)) 
                                      (17 (aload_1)) 
                                      (18 (aload_2)) 
                                      (19 (invokeinterface (methodCP "getStackTraceDepth" "sun.misc.JavaLangAccess" ((class "java.lang.Throwable")) int) 2)) 
                                      (24 (istore_3)) 
                                      (25 (iconst_1)) 
                                      (26 (istore 4)) 
                                      (28 (iconst_0)) 
                                      (29 (istore 5)) 
                                      (31 (iload 5)) ;;at TAG_3
                                      (33 (iload_3)) 
                                      (34 (if_icmpge 126)) ;;to TAG_0
                                      (37 (aload_1)) 
                                      (38 (aload_2)) 
                                      (39 (iload 5)) 
                                      (41 (invokeinterface (methodCP "getStackTraceElement" "sun.misc.JavaLangAccess" ((class "java.lang.Throwable") int) (class "java.lang.StackTraceElement")) 3)) 
                                      (46 (astore 6)) 
                                      (48 (aload 6)) 
                                      (50 (invokevirtual (methodCP "getClassName" "java.lang.StackTraceElement" () (class "java.lang.String")))) 
                                      (53 (astore 7)) 
                                      (55 (aload_0)) 
                                      (56 (aload 7)) 
                                      (58 (invokespecial (methodCP "isLoggerImplFrame" "java.util.logging.LogRecord" ((class "java.lang.String")) boolean))) 
                                      (61 (istore 8)) 
                                      (63 (iload 4)) 
                                      (65 (ifeq 79)) ;;to TAG_1
                                      (68 (iload 8)) 
                                      (70 (ifeq 120))  ;;to TAG_2
                                      (73 (iconst_0)) 
                                      (74 (istore 4)) 
                                      (76 (goto 120))  ;;to TAG_2
                                      (79 (iload 8)) ;;at TAG_1
                                      (81 (ifne 120))  ;;to TAG_2
                                      (84 (aload 7)) 
                                      (86 (ldc 5)) ;;STRING:: "java.lang.reflect."
                                      (88 (invokevirtual (methodCP "startsWith" "java.lang.String" ((class "java.lang.String")) boolean))) 
                                      (91 (ifne 120))  ;;to TAG_2
                                      (94 (aload 7)) 
                                      (96 (ldc 6)) ;;STRING:: "sun.reflect."
                                      (98 (invokevirtual (methodCP "startsWith" "java.lang.String" ((class "java.lang.String")) boolean))) 
                                      (101 (ifne 120))  ;;to TAG_2
                                      (104 (aload_0)) 
                                      (105 (aload 7)) 
                                      (107 (invokevirtual (methodCP "setSourceClassName" "java.util.logging.LogRecord" ((class "java.lang.String")) void))) 
                                      (110 (aload_0)) 
                                      (111 (aload 6)) 
                                      (113 (invokevirtual (methodCP "getMethodName" "java.lang.StackTraceElement" () (class "java.lang.String")))) 
                                      (116 (invokevirtual (methodCP "setSourceMethodName" "java.util.logging.LogRecord" ((class "java.lang.String")) void))) 
                                      (119 (return)) 
                                      (120 (iinc 5 1)) ;;at TAG_2
                                      (123 (goto 31)) ;;to TAG_3
                                      (126 (return)) ;;at TAG_0
                                      (endofcode 127))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isLoggerImplFrame"
                              (parameters (class "java.lang.String"))
                              (returntype . boolean)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 33)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (ldc 7)) ;;STRING:: "java.util.logging.Logger"
                                      (3 (invokevirtual (methodCP "equals" "java.lang.String" ((class "java.lang.Object")) boolean))) 
                                      (6 (ifne 27)) ;;to TAG_0
                                      (9 (aload_1)) 
                                      (10 (ldc 8)) ;;STRING:: "java.util.logging.LoggingProxyImpl"
                                      (12 (invokevirtual (methodCP "startsWith" "java.lang.String" ((class "java.lang.String")) boolean))) 
                                      (15 (ifne 27)) ;;to TAG_0
                                      (18 (aload_1)) 
                                      (19 (ldc 9)) ;;STRING:: "sun.util.logging."
                                      (21 (invokevirtual (methodCP "startsWith" "java.lang.String" ((class "java.lang.String")) boolean))) 
                                      (24 (ifeq 31)) ;;to TAG_1
                                      (27 (iconst_1)) ;;at TAG_0
                                      (28 (goto 32))  ;;to TAG_2
                                      (31 (iconst_0)) ;;at TAG_1
                                      (32 (ireturn)) ;;at TAG_2
                                      (endofcode 33))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 34)
                                   (parsedcode
                                      (0 (new (class "java.util.concurrent.atomic.AtomicLong")))
                                      (3 (dup))
                                      (4 (lconst_0))
                                      (5 (invokespecial
					(methodCP "<init>" "java.util.concurrent.atomic.AtomicLong" (long) void)))
                                      (8 (putstatic (fieldCP "globalSequenceNumber" "java.util.logging.LogRecord" (class "java.util.concurrent.atomic.AtomicLong"))))
                                      (11 (new (class "java.util.concurrent.atomic.AtomicInteger")))
                                      (14 (dup))
                                      (15 (ldc 0))        ;;INT:: "1073741823"
                                      (17 (invokespecial
					(methodCP "<init>" "java.util.concurrent.atomic.AtomicInteger" (int) void)))
                                      (20 (putstatic (fieldCP "nextThreadId" "java.util.logging.LogRecord" (class "java.util.concurrent.atomic.AtomicInteger"))))
                                      (23 (new (class "java.lang.ThreadLocal")))
                                      (26 (dup))
                                      (27 (invokespecial
					(methodCP "<init>" "java.lang.ThreadLocal" () void)))
                                      (30 (putstatic (fieldCP "threadIds" "java.util.logging.LogRecord" (class "java.lang.ThreadLocal"))))
                                      (33 (return))
                                      (endofcode 34))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "java.io.Serializable")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *LogRecord-class-table*
  (make-static-class-decls 
   *java.util.logging.LogRecord*))

(defconst *package-name-map* 
  ("java.util.logging.LogRecord" . "java.util.logging"))

