; Formatter-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:46 CDT 2014.
;

(defconst *java.util.logging.Formatter*
 (make-class-def
      '(class "java.util.logging.Formatter"
            "java.lang.Object"
            (constant_pool
                        (STRING  "")
                        (STRING  "{0")
                        (STRING  "{1")
                        (STRING  "{2")
                        (STRING  "{3"))
            (fields)
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *protected* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "format"
                              (parameters (class "java.util.logging.LogRecord"))
                              (returntype . (class "java.lang.String"))
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getHead"
                              (parameters (class "java.util.logging.Handler"))
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 3)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: ""
                                      (2 (areturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getTail"
                              (parameters (class "java.util.logging.Handler"))
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 3)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: ""
                                      (2 (areturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "formatMessage"
                              (parameters (class "java.util.logging.LogRecord"))
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public*  *super*  *synchronized* )
                              (code
                                   (max_stack . 2) (max_locals . 5) (code_length . 101)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (invokevirtual (methodCP "getMessage" "java.util.logging.LogRecord" () (class "java.lang.String")))) 
                                      (4 (astore_2)) 
                                      (5 (aload_1)) 
                                      (6 (invokevirtual (methodCP "getResourceBundle" "java.util.logging.LogRecord" () (class "java.util.ResourceBundle")))) 
                                      (9 (astore_3)) 
                                      (10 (aload_3)) 
                                      (11 (ifnull 33)) ;;to TAG_0
                                      (14 (aload_3)) ;;at TAG_5
                                      (15 (aload_1)) 
                                      (16 (invokevirtual (methodCP "getMessage" "java.util.logging.LogRecord" () (class "java.lang.String")))) 
                                      (19 (invokevirtual (methodCP "getString" "java.util.ResourceBundle" ((class "java.lang.String")) (class "java.lang.String")))) 
                                      (22 (astore_2)) 
                                      (23 (goto 33)) ;;to TAG_0;;at TAG_6
                                      (26 (astore 4)) ;;at TAG_7
                                      (28 (aload_1)) 
                                      (29 (invokevirtual (methodCP "getMessage" "java.util.logging.LogRecord" () (class "java.lang.String")))) 
                                      (32 (astore_2)) 
                                      (33 (aload_1)) ;;at TAG_0
                                      (34 (invokevirtual (methodCP "getParameters" "java.util.logging.LogRecord" () (array (class "java.lang.Object"))))) 
                                      (37 (astore 4)) 
                                      (39 (aload 4)) 
                                      (41 (ifnull 50))  ;;to TAG_1
                                      (44 (aload 4)) 
                                      (46 (arraylength)) 
                                      (47 (ifne 52)) ;;to TAG_2
                                      (50 (aload_2)) ;;at TAG_1
                                      (51 (areturn)) ;;at TAG_8
                                      (52 (aload_2)) ;;at TAG_2
                                      (53 (ldc 1)) ;;STRING:: "{0"
                                      (55 (invokevirtual (methodCP "indexOf" "java.lang.String" ((class "java.lang.String")) int))) 
                                      (58 (ifge 88)) ;;to TAG_3
                                      (61 (aload_2)) 
                                      (62 (ldc 2)) ;;STRING:: "{1"
                                      (64 (invokevirtual (methodCP "indexOf" "java.lang.String" ((class "java.lang.String")) int))) 
                                      (67 (ifge 88)) ;;to TAG_3
                                      (70 (aload_2)) 
                                      (71 (ldc 3)) ;;STRING:: "{2"
                                      (73 (invokevirtual (methodCP "indexOf" "java.lang.String" ((class "java.lang.String")) int))) 
                                      (76 (ifge 88)) ;;to TAG_3
                                      (79 (aload_2)) 
                                      (80 (ldc 4)) ;;STRING:: "{3"
                                      (82 (invokevirtual (methodCP "indexOf" "java.lang.String" ((class "java.lang.String")) int))) 
                                      (85 (iflt 95)) ;;to TAG_4
                                      (88 (aload_2)) ;;at TAG_3
                                      (89 (aload 4)) 
                                      (91 (invokestatic (methodCP "format" "java.text.MessageFormat" ((class "java.lang.String") (array (class "java.lang.Object"))) (class "java.lang.String")))) 
                                      (94 (areturn)) ;;at TAG_10
                                      (95 (aload_2)) ;;at TAG_4
                                      (96 (areturn)) ;;at TAG_11
                                      (97 (astore 4)) ;;at TAG_9
                                      (99 (aload_2)) 
                                      (100 (areturn)) 
                                      (endofcode 101))
                                   (Exceptions 
                                     (handler 14 23  26 (class "java.util.MissingResourceException"))
                                     (handler 33 51  97 (class "java.lang.Exception"))
                                     (handler 52 94  97 (class "java.lang.Exception"))
                                     (handler 95 96  97 (class "java.lang.Exception")))
                                   (StackMap ))))
            (interfaces)
            (accessflags  *abstract*  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *Formatter-class-table*
  (make-static-class-decls 
   *java.util.logging.Formatter*))

(defconst *package-name-map* 
  ("java.util.logging.Formatter" . "java.util.logging"))

