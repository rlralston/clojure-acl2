; LogManager$Cleaner-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:46 CDT 2014.
;

(defconst *java.util.logging.LogManager$Cleaner*
 (make-class-def
      '(class "java.util.logging.LogManager$Cleaner"
            "java.lang.Thread"
            (constant_pool)
            (fields
                        (field "this$0" (class "java.util.logging.LogManager") (accessflags  *class*  *final* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "java.util.logging.LogManager"))
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (putfield (fieldCP "this$0" "java.util.logging.LogManager$Cleaner" (class "java.util.logging.LogManager"))))
                                      (5 (aload_0))
                                      (6 (invokespecial
					(methodCP "<init>" "java.lang.Thread" () void)))
                                      (9 (aload_0))
                                      (10 (aconst_null))
                                      (11 (invokevirtual
					(methodCP "setContextClassLoader" "java.util.logging.LogManager$Cleaner" ((class "java.lang.ClassLoader")) void)))
                                      (14 (return))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "run"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 47)
                                   (parsedcode
                                      (0 (invokestatic (methodCP "access$000" "java.util.logging.LogManager" () (class "java.util.logging.LogManager")))) 
                                      (3 (astore_1)) 
                                      (4 (aload_0)) 
                                      (5 (getfield (fieldCP "this$0" "java.util.logging.LogManager$Cleaner" (class "java.util.logging.LogManager")))) 
                                      (8 (dup)) 
                                      (9 (astore_2)) 
                                      (10 (monitorenter)) 
                                      (11 (aload_0)) ;;at TAG_1
                                      (12 (getfield (fieldCP "this$0" "java.util.logging.LogManager$Cleaner" (class "java.util.logging.LogManager")))) 
                                      (15 (iconst_1)) 
                                      (16 (invokestatic (methodCP "access$302" "java.util.logging.LogManager" ((class "java.util.logging.LogManager") boolean) boolean))) 
                                      (19 (pop)) 
                                      (20 (aload_0)) 
                                      (21 (getfield (fieldCP "this$0" "java.util.logging.LogManager$Cleaner" (class "java.util.logging.LogManager")))) 
                                      (24 (iconst_1)) 
                                      (25 (invokestatic (methodCP "access$402" "java.util.logging.LogManager" ((class "java.util.logging.LogManager") boolean) boolean))) 
                                      (28 (pop)) 
                                      (29 (aload_2)) 
                                      (30 (monitorexit)) 
                                      (31 (goto 39)) ;;to TAG_0;;at TAG_2
                                      (34 (astore_3)) ;;at TAG_3
                                      (35 (aload_2)) 
                                      (36 (monitorexit)) 
                                      (37 (aload_3)) ;;at TAG_4
                                      (38 (athrow)) 
                                      (39 (aload_0)) ;;at TAG_0
                                      (40 (getfield (fieldCP "this$0" "java.util.logging.LogManager$Cleaner" (class "java.util.logging.LogManager")))) 
                                      (43 (invokevirtual (methodCP "reset" "java.util.logging.LogManager" () void))) 
                                      (46 (return)) 
                                      (endofcode 47))
                                   (Exceptions 
                                     (handler 11 31  34 (class "java.lang.Throwable"))
                                     (handler 34 37  34 (class "java.lang.Throwable")))
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.util.logging.LogManager") (class "java.util.logging.LogManager$1"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokespecial
					(methodCP "<init>" "java.util.logging.LogManager$Cleaner" ((class "java.util.logging.LogManager")) void)))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *LogManager$Cleaner-class-table*
  (make-static-class-decls 
   *java.util.logging.LogManager$Cleaner*))

(defconst *package-name-map* 
  ("java.util.logging.LogManager$Cleaner" . "java.util.logging"))

