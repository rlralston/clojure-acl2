; LogManager$LoggerWeakRef-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:46 CDT 2014.
;

(defconst *java.util.logging.LogManager$LoggerWeakRef*
 (make-class-def
      '(class "java.util.logging.LogManager$LoggerWeakRef"
            "java.lang.ref.WeakReference"
            (constant_pool)
            (fields
                        (field "name" (class "java.lang.String") (accessflags  *class*  *private* ) -1)
                        (field "node" (class "java.util.logging.LogManager$LogNode") (accessflags  *class*  *private* ) -1)
                        (field "parentRef" (class "java.lang.ref.WeakReference") (accessflags  *class*  *private* ) -1)
                        (field "this$0" (class "java.util.logging.LogManager") (accessflags  *class*  *final* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "java.util.logging.LogManager") (class "java.util.logging.Logger"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 23)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (putfield (fieldCP "this$0" "java.util.logging.LogManager$LoggerWeakRef" (class "java.util.logging.LogManager"))))
                                      (5 (aload_0))
                                      (6 (aload_2))
                                      (7 (aload_1))
                                      (8 (invokestatic
					(methodCP "access$700" "java.util.logging.LogManager" ((class "java.util.logging.LogManager")) (class "java.lang.ref.ReferenceQueue"))))
                                      (11 (invokespecial
					(methodCP "<init>" "java.lang.ref.WeakReference" ((class "java.lang.Object") (class "java.lang.ref.ReferenceQueue")) void)))
                                      (14 (aload_0))
                                      (15 (aload_2))
                                      (16 (invokevirtual
					(methodCP "getName" "java.util.logging.Logger" () (class "java.lang.String"))))
                                      (19 (putfield (fieldCP "name" "java.util.logging.LogManager$LoggerWeakRef" (class "java.lang.String"))))
                                      (22 (return))
                                      (endofcode 23))
                                   (Exceptions )
                                   (StackMap )))
                        (method "dispose"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 72)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "node" "java.util.logging.LogManager$LoggerWeakRef" (class "java.util.logging.LogManager$LogNode")))) 
                                      (4 (ifnull 39)) ;;to TAG_0
                                      (7 (invokestatic (methodCP "access$000" "java.util.logging.LogManager" () (class "java.util.logging.LogManager")))) 
                                      (10 (invokestatic (methodCP "access$800" "java.util.logging.LogManager" ((class "java.util.logging.LogManager")) (class "java.util.Hashtable")))) 
                                      (13 (aload_0)) 
                                      (14 (getfield (fieldCP "name" "java.util.logging.LogManager$LoggerWeakRef" (class "java.lang.String")))) 
                                      (17 (invokevirtual (methodCP "remove" "java.util.Hashtable" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (20 (pop)) 
                                      (21 (aload_0)) 
                                      (22 (aconst_null)) 
                                      (23 (putfield (fieldCP "name" "java.util.logging.LogManager$LoggerWeakRef" (class "java.lang.String")))) 
                                      (26 (aload_0)) 
                                      (27 (getfield (fieldCP "node" "java.util.logging.LogManager$LoggerWeakRef" (class "java.util.logging.LogManager$LogNode")))) 
                                      (30 (aconst_null)) 
                                      (31 (putfield (fieldCP "loggerRef" "java.util.logging.LogManager$LogNode" (class "java.util.logging.LogManager$LoggerWeakRef")))) 
                                      (34 (aload_0)) 
                                      (35 (aconst_null)) 
                                      (36 (putfield (fieldCP "node" "java.util.logging.LogManager$LoggerWeakRef" (class "java.util.logging.LogManager$LogNode")))) 
                                      (39 (aload_0)) ;;at TAG_0
                                      (40 (getfield (fieldCP "parentRef" "java.util.logging.LogManager$LoggerWeakRef" (class "java.lang.ref.WeakReference")))) 
                                      (43 (ifnull 71)) ;;to TAG_1
                                      (46 (aload_0)) 
                                      (47 (getfield (fieldCP "parentRef" "java.util.logging.LogManager$LoggerWeakRef" (class "java.lang.ref.WeakReference")))) 
                                      (50 (invokevirtual (methodCP "get" "java.lang.ref.WeakReference" () (class "java.lang.Object")))) 
                                      (53 (checkcast (class "java.util.logging.Logger"))) 
                                      (56 (astore_1)) 
                                      (57 (aload_1)) 
                                      (58 (ifnull 66))  ;;to TAG_2
                                      (61 (aload_1)) 
                                      (62 (aload_0)) 
                                      (63 (invokevirtual (methodCP "removeChildLogger" "java.util.logging.Logger" ((class "java.util.logging.LogManager$LoggerWeakRef")) void))) 
                                      (66 (aload_0)) ;;at TAG_2
                                      (67 (aconst_null)) 
                                      (68 (putfield (fieldCP "parentRef" "java.util.logging.LogManager$LoggerWeakRef" (class "java.lang.ref.WeakReference")))) 
                                      (71 (return)) ;;at TAG_1
                                      (endofcode 72))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setNode"
                              (parameters (class "java.util.logging.LogManager$LogNode"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (putfield (fieldCP "node" "java.util.logging.LogManager$LoggerWeakRef" (class "java.util.logging.LogManager$LogNode"))))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setParentRef"
                              (parameters (class "java.lang.ref.WeakReference"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (putfield (fieldCP "parentRef" "java.util.logging.LogManager$LoggerWeakRef" (class "java.lang.ref.WeakReference"))))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "Signature")
              (attribute "InnerClasses")))))


(defconst *LogManager$LoggerWeakRef-class-table*
  (make-static-class-decls 
   *java.util.logging.LogManager$LoggerWeakRef*))

(defconst *package-name-map* 
  ("java.util.logging.LogManager$LoggerWeakRef" . "java.util.logging"))

