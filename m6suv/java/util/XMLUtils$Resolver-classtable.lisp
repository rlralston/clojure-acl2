; XMLUtils$Resolver-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:48 CDT 2014.
;

(defconst *java.util.XMLUtils$Resolver*
 (make-class-def
      '(class "java.util.XMLUtils$Resolver"
            "java.lang.Object"
            (constant_pool
                        (STRING  "http://java.sun.com/dtd/properties.dtd")
                        (STRING  "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- DTD for properties --><!ELEMENT properties ( comment?, entry* ) ><!ATTLIST properties version CDATA #FIXED \"1.0\"><!ELEMENT comment (#PCDATA) ><!ELEMENT entry (#PCDATA) ><!ATTLIST entry  key CDATA #REQUIRED>")
                        (STRING  "Invalid system identifier: "))
            (fields)
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "resolveEntity"
                              (parameters (class "java.lang.String") (class "java.lang.String"))
                              (returntype . (class "org.xml.sax.InputSource"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 4) (code_length . 61)
                                   (parsedcode
                                      (0 (aload_2)) 
                                      (1 (ldc 0)) ;;STRING:: "http://java.sun.com/dtd/properties.dtd"
                                      (3 (invokevirtual (methodCP "equals" "java.lang.String" ((class "java.lang.Object")) boolean))) 
                                      (6 (ifeq 34))  ;;to TAG_0
                                      (9 (new (class "org.xml.sax.InputSource"))) 
                                      (12 (dup)) 
                                      (13 (new (class "java.io.StringReader"))) 
                                      (16 (dup)) 
                                      (17 (ldc 1)) ;;STRING:: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- DTD for properties --><!ELEMENT properties ( comment?, entry* ) ><!ATTLIST properties version CDATA #FIXED \"1.0\"><!ELEMENT comment (#PCDATA) ><!ELEMENT entry (#PCDATA) ><!ATTLIST entry  key CDATA #REQUIRED>"
                                      (19 (invokespecial (methodCP "<init>" "java.io.StringReader" ((class "java.lang.String")) void))) 
                                      (22 (invokespecial (methodCP "<init>" "org.xml.sax.InputSource" ((class "java.io.Reader")) void))) 
                                      (25 (astore_3)) 
                                      (26 (aload_3)) 
                                      (27 (ldc 0)) ;;STRING:: "http://java.sun.com/dtd/properties.dtd"
                                      (29 (invokevirtual (methodCP "setSystemId" "org.xml.sax.InputSource" ((class "java.lang.String")) void))) 
                                      (32 (aload_3)) 
                                      (33 (areturn)) 
                                      (34 (new (class "org.xml.sax.SAXException"))) ;;at TAG_0
                                      (37 (dup)) 
                                      (38 (new (class "java.lang.StringBuilder"))) 
                                      (41 (dup)) 
                                      (42 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (45 (ldc 2)) ;;STRING:: "Invalid system identifier: "
                                      (47 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (50 (aload_2)) 
                                      (51 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (54 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (57 (invokespecial (methodCP "<init>" "org.xml.sax.SAXException" ((class "java.lang.String")) void))) 
                                      (60 (athrow)) 
                                      (endofcode 61))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.util.XMLUtils$1"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.util.XMLUtils$Resolver" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "org.xml.sax.EntityResolver")
            (accessflags  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *XMLUtils$Resolver-class-table*
  (make-static-class-decls 
   *java.util.XMLUtils$Resolver*))

(defconst *package-name-map* 
  ("java.util.XMLUtils$Resolver" . "java.util"))

