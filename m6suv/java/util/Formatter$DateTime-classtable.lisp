; Formatter$DateTime-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:45 CDT 2014.
;

(defconst *java.util.Formatter$DateTime*
 (make-class-def
      '(class "java.util.Formatter$DateTime"
            "java.lang.Object"
            (constant_pool
                        (INT 72)
                        (INT 73)
                        (INT 107)
                        (INT 108)
                        (INT 77)
                        (INT 78)
                        (INT 76)
                        (INT 81)
                        (INT 112)
                        (INT 115)
                        (INT 83)
                        (INT 84)
                        (INT 122)
                        (INT 90)
                        (INT 97)
                        (INT 65)
                        (INT 98)
                        (INT 66)
                        (INT 67)
                        (INT 100)
                        (INT 101)
                        (INT 104)
                        (INT 106)
                        (INT 109)
                        (INT 121)
                        (INT 89)
                        (INT 114)
                        (INT 82)
                        (INT 99)
                        (INT 68)
                        (INT 70))
            (fields
                        (field "HOUR_OF_DAY_0" char (accessflags  *class*  *final*  *static* ) 0)
                        (field "HOUR_0" char (accessflags  *class*  *final*  *static* ) 1)
                        (field "HOUR_OF_DAY" char (accessflags  *class*  *final*  *static* ) 2)
                        (field "HOUR" char (accessflags  *class*  *final*  *static* ) 3)
                        (field "MINUTE" char (accessflags  *class*  *final*  *static* ) 4)
                        (field "NANOSECOND" char (accessflags  *class*  *final*  *static* ) 5)
                        (field "MILLISECOND" char (accessflags  *class*  *final*  *static* ) 6)
                        (field "MILLISECOND_SINCE_EPOCH" char (accessflags  *class*  *final*  *static* ) 7)
                        (field "AM_PM" char (accessflags  *class*  *final*  *static* ) 8)
                        (field "SECONDS_SINCE_EPOCH" char (accessflags  *class*  *final*  *static* ) 9)
                        (field "SECOND" char (accessflags  *class*  *final*  *static* ) 10)
                        (field "TIME" char (accessflags  *class*  *final*  *static* ) 11)
                        (field "ZONE_NUMERIC" char (accessflags  *class*  *final*  *static* ) 12)
                        (field "ZONE" char (accessflags  *class*  *final*  *static* ) 13)
                        (field "NAME_OF_DAY_ABBREV" char (accessflags  *class*  *final*  *static* ) 14)
                        (field "NAME_OF_DAY" char (accessflags  *class*  *final*  *static* ) 15)
                        (field "NAME_OF_MONTH_ABBREV" char (accessflags  *class*  *final*  *static* ) 16)
                        (field "NAME_OF_MONTH" char (accessflags  *class*  *final*  *static* ) 17)
                        (field "CENTURY" char (accessflags  *class*  *final*  *static* ) 18)
                        (field "DAY_OF_MONTH_0" char (accessflags  *class*  *final*  *static* ) 19)
                        (field "DAY_OF_MONTH" char (accessflags  *class*  *final*  *static* ) 20)
                        (field "NAME_OF_MONTH_ABBREV_X" char (accessflags  *class*  *final*  *static* ) 21)
                        (field "DAY_OF_YEAR" char (accessflags  *class*  *final*  *static* ) 22)
                        (field "MONTH" char (accessflags  *class*  *final*  *static* ) 23)
                        (field "YEAR_2" char (accessflags  *class*  *final*  *static* ) 24)
                        (field "YEAR_4" char (accessflags  *class*  *final*  *static* ) 25)
                        (field "TIME_12_HOUR" char (accessflags  *class*  *final*  *static* ) 26)
                        (field "TIME_24_HOUR" char (accessflags  *class*  *final*  *static* ) 27)
                        (field "DATE_TIME" char (accessflags  *class*  *final*  *static* ) 28)
                        (field "DATE" char (accessflags  *class*  *final*  *static* ) 29)
                        (field "ISO_STANDARD_DATE" char (accessflags  *class*  *final*  *static* ) 30))
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isValid"
                              (parameters char)
                              (returntype . boolean)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 252)
                                   (parsedcode
                                      (0 (iload_0)) 
                                      (1 (tableswitch (tableswitchinfo 250 (65 . 122) (248 248 248 248 250 248 250 248 248 250 250 248 248 248 250 250 248 248 248 248 250 250 250 250 248 248 250 250 250 250 250 250 248 248 248 248 248 250 250 248 250 248 248 248 248 250 250 248 250 248 248 250 250 250 250 250 248 248))))  ;;to TAG_0;;to TAG_1
                                      (248 (iconst_1)) ;;at TAG_1
                                      (249 (ireturn)) 
                                      (250 (iconst_0)) ;;at TAG_0
                                      (251 (ireturn)) 
                                      (endofcode 252))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Formatter$DateTime-class-table*
  (make-static-class-decls 
   *java.util.Formatter$DateTime*))

(defconst *package-name-map* 
  ("java.util.Formatter$DateTime" . "java.util"))

