; AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:43 CDT 2014.
;

(defconst *java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl*
 (make-class-def
      '(class "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl"
            "java.util.concurrent.atomic.AtomicReferenceFieldUpdater"
            (constant_pool
                        (STRING  "Must be volatile type")
                        (STRING  "Class ")
                        (STRING  " can not access a protected member of class ")
                        (STRING  " using an instance of "))
            (fields
                        (field "unsafe" (class "sun.misc.Unsafe") (accessflags  *class*  *final*  *private*  *static* ) -1)
                        (field "offset" long (accessflags  *class*  *final*  *private* ) -1)
                        (field "tclass" (class "java.lang.Class") (accessflags  *class*  *final*  *private* ) -1)
                        (field "vclass" (class "java.lang.Class") (accessflags  *class*  *final*  *private* ) -1)
                        (field "cclass" (class "java.lang.Class") (accessflags  *class*  *final*  *private* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "java.lang.Class") (class "java.lang.Class") (class "java.lang.String"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 4) (max_locals . 9) (code_length . 165)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokespecial (methodCP "<init>" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater" () void))) 
                                      (4 (aconst_null)) 
                                      (5 (astore 4)) 
                                      (7 (aconst_null)) 
                                      (8 (astore 5)) 
                                      (10 (aconst_null)) 
                                      (11 (astore 6)) 
                                      (13 (iconst_0)) 
                                      (14 (istore 7)) 
                                      (16 (aload_1)) ;;at TAG_7
                                      (17 (aload_3)) 
                                      (18 (invokevirtual (methodCP "getDeclaredField" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.reflect.Field")))) 
                                      (21 (astore 4)) 
                                      (23 (iconst_3)) 
                                      (24 (invokestatic (methodCP "getCallerClass" "sun.reflect.Reflection" (int) (class "java.lang.Class")))) 
                                      (27 (astore 6)) 
                                      (29 (aload 4)) 
                                      (31 (invokevirtual (methodCP "getModifiers" "java.lang.reflect.Field" () int))) 
                                      (34 (istore 7)) 
                                      (36 (aload 6)) 
                                      (38 (aload_1)) 
                                      (39 (aconst_null)) 
                                      (40 (iload 7)) 
                                      (42 (invokestatic (methodCP "ensureMemberAccess" "sun.reflect.misc.ReflectUtil" ((class "java.lang.Class") (class "java.lang.Class") (class "java.lang.Object") int) void))) 
                                      (45 (aload_1)) 
                                      (46 (invokestatic (methodCP "checkPackageAccess" "sun.reflect.misc.ReflectUtil" ((class "java.lang.Class")) void))) 
                                      (49 (aload 4)) 
                                      (51 (invokevirtual (methodCP "getType" "java.lang.reflect.Field" () (class "java.lang.Class")))) 
                                      (54 (astore 5)) 
                                      (56 (goto 71)) ;;to TAG_0;;at TAG_8
                                      (59 (astore 8)) ;;at TAG_9
                                      (61 (new (class "java.lang.RuntimeException"))) 
                                      (64 (dup)) 
                                      (65 (aload 8)) 
                                      (67 (invokespecial (methodCP "<init>" "java.lang.RuntimeException" ((class "java.lang.Throwable")) void))) 
                                      (70 (athrow)) 
                                      (71 (aload_2)) ;;at TAG_0
                                      (72 (aload 5)) 
                                      (74 (if_acmpeq 85))  ;;to TAG_1
                                      (77 (new (class "java.lang.ClassCastException"))) 
                                      (80 (dup)) 
                                      (81 (invokespecial (methodCP "<init>" "java.lang.ClassCastException" () void))) 
                                      (84 (athrow)) 
                                      (85 (iload 7)) ;;at TAG_1
                                      (87 (invokestatic (methodCP "isVolatile" "java.lang.reflect.Modifier" (int) boolean))) 
                                      (90 (ifne 103)) ;;to TAG_2
                                      (93 (new (class "java.lang.IllegalArgumentException"))) 
                                      (96 (dup)) 
                                      (97 (ldc 0)) ;;STRING:: "Must be volatile type"
                                      (99 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (102 (athrow)) 
                                      (103 (aload_0)) ;;at TAG_2
                                      (104 (iload 7)) 
                                      (106 (invokestatic (methodCP "isProtected" "java.lang.reflect.Modifier" (int) boolean))) 
                                      (109 (ifeq 123)) ;;to TAG_3
                                      (112 (aload 6)) 
                                      (114 (aload_1)) 
                                      (115 (if_acmpeq 123)) ;;to TAG_3
                                      (118 (aload 6)) 
                                      (120 (goto 124)) ;;to TAG_4
                                      (123 (aconst_null)) ;;at TAG_3
                                      (124 (putfield (fieldCP "cclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) ;;at TAG_4
                                      (127 (aload_0)) 
                                      (128 (aload_1)) 
                                      (129 (putfield (fieldCP "tclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (132 (aload_2)) 
                                      (133 (ldc_w )) 
                                      (136 (if_acmpne 147)) ;;to TAG_5
                                      (139 (aload_0)) 
                                      (140 (aconst_null)) 
                                      (141 (putfield (fieldCP "vclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (144 (goto 152)) ;;to TAG_6
                                      (147 (aload_0)) ;;at TAG_5
                                      (148 (aload_2)) 
                                      (149 (putfield (fieldCP "vclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (152 (aload_0)) ;;at TAG_6
                                      (153 (getstatic (fieldCP "unsafe" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "sun.misc.Unsafe")))) 
                                      (156 (aload 4)) 
                                      (158 (invokevirtual (methodCP "objectFieldOffset" "sun.misc.Unsafe" ((class "java.lang.reflect.Field")) long))) 
                                      (161 (putfield (fieldCP "offset" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" long))) 
                                      (164 (return)) 
                                      (endofcode 165))
                                   (Exceptions 
                                     (handler 16 56  59 (class "java.lang.Exception")))
                                   (StackMap )))
                        (method "targetCheck"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 32)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "tclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (4 (aload_1)) 
                                      (5 (invokevirtual (methodCP "isInstance" "java.lang.Class" ((class "java.lang.Object")) boolean))) 
                                      (8 (ifne 19))  ;;to TAG_0
                                      (11 (new (class "java.lang.ClassCastException"))) 
                                      (14 (dup)) 
                                      (15 (invokespecial (methodCP "<init>" "java.lang.ClassCastException" () void))) 
                                      (18 (athrow)) 
                                      (19 (aload_0)) ;;at TAG_0
                                      (20 (getfield (fieldCP "cclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (23 (ifnull 31)) ;;to TAG_1
                                      (26 (aload_0)) 
                                      (27 (aload_1)) 
                                      (28 (invokespecial (methodCP "ensureProtectedAccess" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" ((class "java.lang.Object")) void))) 
                                      (31 (return)) ;;at TAG_1
                                      (endofcode 32))
                                   (Exceptions )
                                   (StackMap )))
                        (method "updateCheck"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 54)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "tclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (4 (aload_1)) 
                                      (5 (invokevirtual (methodCP "isInstance" "java.lang.Class" ((class "java.lang.Object")) boolean))) 
                                      (8 (ifeq 33)) ;;to TAG_0
                                      (11 (aload_2)) 
                                      (12 (ifnull 41)) ;;to TAG_1
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "vclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (19 (ifnull 41)) ;;to TAG_1
                                      (22 (aload_0)) 
                                      (23 (getfield (fieldCP "vclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (26 (aload_2)) 
                                      (27 (invokevirtual (methodCP "isInstance" "java.lang.Class" ((class "java.lang.Object")) boolean))) 
                                      (30 (ifne 41)) ;;to TAG_1
                                      (33 (new (class "java.lang.ClassCastException"))) ;;at TAG_0
                                      (36 (dup)) 
                                      (37 (invokespecial (methodCP "<init>" "java.lang.ClassCastException" () void))) 
                                      (40 (athrow)) 
                                      (41 (aload_0)) ;;at TAG_1
                                      (42 (getfield (fieldCP "cclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (45 (ifnull 53))  ;;to TAG_2
                                      (48 (aload_0)) 
                                      (49 (aload_1)) 
                                      (50 (invokespecial (methodCP "ensureProtectedAccess" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" ((class "java.lang.Object")) void))) 
                                      (53 (return)) ;;at TAG_2
                                      (endofcode 54))
                                   (Exceptions )
                                   (StackMap )))
                        (method "compareAndSet"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 4) (code_length . 64)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (ifnull 44))  ;;to TAG_0
                                      (4 (aload_1)) 
                                      (5 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (8 (aload_0)) 
                                      (9 (getfield (fieldCP "tclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (12 (if_acmpne 44))  ;;to TAG_0
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "cclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (19 (ifnonnull 44))  ;;to TAG_0
                                      (22 (aload_3)) 
                                      (23 (ifnull 50)) ;;to TAG_1
                                      (26 (aload_0)) 
                                      (27 (getfield (fieldCP "vclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (30 (ifnull 50)) ;;to TAG_1
                                      (33 (aload_0)) 
                                      (34 (getfield (fieldCP "vclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (37 (aload_3)) 
                                      (38 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (41 (if_acmpeq 50)) ;;to TAG_1
                                      (44 (aload_0)) ;;at TAG_0
                                      (45 (aload_1)) 
                                      (46 (aload_3)) 
                                      (47 (invokevirtual (methodCP "updateCheck" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" ((class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (50 (getstatic (fieldCP "unsafe" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "sun.misc.Unsafe")))) ;;at TAG_1
                                      (53 (aload_1)) 
                                      (54 (aload_0)) 
                                      (55 (getfield (fieldCP "offset" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" long))) 
                                      (58 (aload_2)) 
                                      (59 (aload_3)) 
                                      (60 (invokevirtual (methodCP "compareAndSwapObject" "sun.misc.Unsafe" ((class "java.lang.Object") long (class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (63 (ireturn)) 
                                      (endofcode 64))
                                   (Exceptions )
                                   (StackMap )))
                        (method "weakCompareAndSet"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 4) (code_length . 64)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (ifnull 44))  ;;to TAG_0
                                      (4 (aload_1)) 
                                      (5 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (8 (aload_0)) 
                                      (9 (getfield (fieldCP "tclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (12 (if_acmpne 44))  ;;to TAG_0
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "cclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (19 (ifnonnull 44))  ;;to TAG_0
                                      (22 (aload_3)) 
                                      (23 (ifnull 50)) ;;to TAG_1
                                      (26 (aload_0)) 
                                      (27 (getfield (fieldCP "vclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (30 (ifnull 50)) ;;to TAG_1
                                      (33 (aload_0)) 
                                      (34 (getfield (fieldCP "vclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (37 (aload_3)) 
                                      (38 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (41 (if_acmpeq 50)) ;;to TAG_1
                                      (44 (aload_0)) ;;at TAG_0
                                      (45 (aload_1)) 
                                      (46 (aload_3)) 
                                      (47 (invokevirtual (methodCP "updateCheck" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" ((class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (50 (getstatic (fieldCP "unsafe" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "sun.misc.Unsafe")))) ;;at TAG_1
                                      (53 (aload_1)) 
                                      (54 (aload_0)) 
                                      (55 (getfield (fieldCP "offset" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" long))) 
                                      (58 (aload_2)) 
                                      (59 (aload_3)) 
                                      (60 (invokevirtual (methodCP "compareAndSwapObject" "sun.misc.Unsafe" ((class "java.lang.Object") long (class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (63 (ireturn)) 
                                      (endofcode 64))
                                   (Exceptions )
                                   (StackMap )))
                        (method "set"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 3) (code_length . 63)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (ifnull 44))  ;;to TAG_0
                                      (4 (aload_1)) 
                                      (5 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (8 (aload_0)) 
                                      (9 (getfield (fieldCP "tclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (12 (if_acmpne 44))  ;;to TAG_0
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "cclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (19 (ifnonnull 44))  ;;to TAG_0
                                      (22 (aload_2)) 
                                      (23 (ifnull 50)) ;;to TAG_1
                                      (26 (aload_0)) 
                                      (27 (getfield (fieldCP "vclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (30 (ifnull 50)) ;;to TAG_1
                                      (33 (aload_0)) 
                                      (34 (getfield (fieldCP "vclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (37 (aload_2)) 
                                      (38 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (41 (if_acmpeq 50)) ;;to TAG_1
                                      (44 (aload_0)) ;;at TAG_0
                                      (45 (aload_1)) 
                                      (46 (aload_2)) 
                                      (47 (invokevirtual (methodCP "updateCheck" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" ((class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (50 (getstatic (fieldCP "unsafe" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "sun.misc.Unsafe")))) ;;at TAG_1
                                      (53 (aload_1)) 
                                      (54 (aload_0)) 
                                      (55 (getfield (fieldCP "offset" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" long))) 
                                      (58 (aload_2)) 
                                      (59 (invokevirtual (methodCP "putObjectVolatile" "sun.misc.Unsafe" ((class "java.lang.Object") long (class "java.lang.Object")) void))) 
                                      (62 (return)) 
                                      (endofcode 63))
                                   (Exceptions )
                                   (StackMap )))
                        (method "lazySet"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 3) (code_length . 63)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (ifnull 44))  ;;to TAG_0
                                      (4 (aload_1)) 
                                      (5 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (8 (aload_0)) 
                                      (9 (getfield (fieldCP "tclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (12 (if_acmpne 44))  ;;to TAG_0
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "cclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (19 (ifnonnull 44))  ;;to TAG_0
                                      (22 (aload_2)) 
                                      (23 (ifnull 50)) ;;to TAG_1
                                      (26 (aload_0)) 
                                      (27 (getfield (fieldCP "vclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (30 (ifnull 50)) ;;to TAG_1
                                      (33 (aload_0)) 
                                      (34 (getfield (fieldCP "vclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (37 (aload_2)) 
                                      (38 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (41 (if_acmpeq 50)) ;;to TAG_1
                                      (44 (aload_0)) ;;at TAG_0
                                      (45 (aload_1)) 
                                      (46 (aload_2)) 
                                      (47 (invokevirtual (methodCP "updateCheck" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" ((class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (50 (getstatic (fieldCP "unsafe" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "sun.misc.Unsafe")))) ;;at TAG_1
                                      (53 (aload_1)) 
                                      (54 (aload_0)) 
                                      (55 (getfield (fieldCP "offset" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" long))) 
                                      (58 (aload_2)) 
                                      (59 (invokevirtual (methodCP "putOrderedObject" "sun.misc.Unsafe" ((class "java.lang.Object") long (class "java.lang.Object")) void))) 
                                      (62 (return)) 
                                      (endofcode 63))
                                   (Exceptions )
                                   (StackMap )))
                        (method "get"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 39)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (ifnull 22))  ;;to TAG_0
                                      (4 (aload_1)) 
                                      (5 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (8 (aload_0)) 
                                      (9 (getfield (fieldCP "tclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (12 (if_acmpne 22))  ;;to TAG_0
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "cclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (19 (ifnull 27)) ;;to TAG_1
                                      (22 (aload_0)) ;;at TAG_0
                                      (23 (aload_1)) 
                                      (24 (invokevirtual (methodCP "targetCheck" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" ((class "java.lang.Object")) void))) 
                                      (27 (getstatic (fieldCP "unsafe" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "sun.misc.Unsafe")))) ;;at TAG_1
                                      (30 (aload_1)) 
                                      (31 (aload_0)) 
                                      (32 (getfield (fieldCP "offset" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" long))) 
                                      (35 (invokevirtual (methodCP "getObjectVolatile" "sun.misc.Unsafe" ((class "java.lang.Object") long) (class "java.lang.Object")))) 
                                      (38 (areturn)) 
                                      (endofcode 39))
                                   (Exceptions )
                                   (StackMap )))
                        (method "ensureProtectedAccess"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 6) (max_locals . 2) (code_length . 82)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "cclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (4 (aload_1)) 
                                      (5 (invokevirtual (methodCP "isInstance" "java.lang.Class" ((class "java.lang.Object")) boolean))) 
                                      (8 (ifeq 12))  ;;to TAG_0
                                      (11 (return)) 
                                      (12 (new (class "java.lang.RuntimeException"))) ;;at TAG_0
                                      (15 (dup)) 
                                      (16 (new (class "java.lang.IllegalAccessException"))) 
                                      (19 (dup)) 
                                      (20 (new (class "java.lang.StringBuilder"))) 
                                      (23 (dup)) 
                                      (24 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (27 (ldc 1)) ;;STRING:: "Class "
                                      (29 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (32 (aload_0)) 
                                      (33 (getfield (fieldCP "cclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (36 (invokevirtual (methodCP "getName" "java.lang.Class" () (class "java.lang.String")))) 
                                      (39 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (42 (ldc 2)) ;;STRING:: " can not access a protected member of class "
                                      (44 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (47 (aload_0)) 
                                      (48 (getfield (fieldCP "tclass" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "java.lang.Class")))) 
                                      (51 (invokevirtual (methodCP "getName" "java.lang.Class" () (class "java.lang.String")))) 
                                      (54 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (57 (ldc 3)) ;;STRING:: " using an instance of "
                                      (59 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (62 (aload_1)) 
                                      (63 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (66 (invokevirtual (methodCP "getName" "java.lang.Class" () (class "java.lang.String")))) 
                                      (69 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (72 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (75 (invokespecial (methodCP "<init>" "java.lang.IllegalAccessException" ((class "java.lang.String")) void))) 
                                      (78 (invokespecial (methodCP "<init>" "java.lang.RuntimeException" ((class "java.lang.Throwable")) void))) 
                                      (81 (athrow)) 
                                      (endofcode 82))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 0) (code_length . 7)
                                   (parsedcode
                                      (0 (invokestatic
					(methodCP "getUnsafe" "sun.misc.Unsafe" () (class "sun.misc.Unsafe"))))
                                      (3 (putstatic (fieldCP "unsafe" "java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" (class "sun.misc.Unsafe"))))
                                      (6 (return))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "Signature")
              (attribute "InnerClasses")))))


(defconst *AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl-class-table*
  (make-static-class-decls 
   *java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl*))

(defconst *package-name-map* 
  ("java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl" . "java.util.concurrent.atomic"))

