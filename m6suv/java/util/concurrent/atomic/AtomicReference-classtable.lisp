; AtomicReference-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:43 CDT 2014.
;

(defconst *java.util.concurrent.atomic.AtomicReference*
 (make-class-def
      '(class "java.util.concurrent.atomic.AtomicReference"
            "java.lang.Object"
            (constant_pool
                        (LONG -1848883965231344442)
                        (STRING  "value"))
            (fields
                        (field "serialVersionUID" long (accessflags  *class*  *final*  *private*  *static* ) 0)
                        (field "unsafe" (class "sun.misc.Unsafe") (accessflags  *class*  *final*  *private*  *static* ) -1)
                        (field "valueOffset" long (accessflags  *class*  *final*  *private*  *static* ) -1)
                        (field "value" (class "java.lang.Object") (accessflags  *class*  *private*  *volatile* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "value" "java.util.concurrent.atomic.AtomicReference" (class "java.lang.Object"))))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "get"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "value" "java.util.concurrent.atomic.AtomicReference" (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "set"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (putfield (fieldCP "value" "java.util.concurrent.atomic.AtomicReference" (class "java.lang.Object"))))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "lazySet"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 12)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "unsafe" "java.util.concurrent.atomic.AtomicReference" (class "sun.misc.Unsafe"))))
                                      (3 (aload_0))
                                      (4 (getstatic (fieldCP "valueOffset" "java.util.concurrent.atomic.AtomicReference" long)))
                                      (7 (aload_1))
                                      (8 (invokevirtual
					(methodCP "putOrderedObject" "sun.misc.Unsafe" ((class "java.lang.Object") long (class "java.lang.Object")) void)))
                                      (11 (return))
                                      (endofcode 12))
                                   (Exceptions )
                                   (StackMap )))
                        (method "compareAndSet"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 3) (code_length . 13)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "unsafe" "java.util.concurrent.atomic.AtomicReference" (class "sun.misc.Unsafe"))))
                                      (3 (aload_0))
                                      (4 (getstatic (fieldCP "valueOffset" "java.util.concurrent.atomic.AtomicReference" long)))
                                      (7 (aload_1))
                                      (8 (aload_2))
                                      (9 (invokevirtual
					(methodCP "compareAndSwapObject" "sun.misc.Unsafe" ((class "java.lang.Object") long (class "java.lang.Object") (class "java.lang.Object")) boolean)))
                                      (12 (ireturn))
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "weakCompareAndSet"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 3) (code_length . 13)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "unsafe" "java.util.concurrent.atomic.AtomicReference" (class "sun.misc.Unsafe"))))
                                      (3 (aload_0))
                                      (4 (getstatic (fieldCP "valueOffset" "java.util.concurrent.atomic.AtomicReference" long)))
                                      (7 (aload_1))
                                      (8 (aload_2))
                                      (9 (invokevirtual
					(methodCP "compareAndSwapObject" "sun.misc.Unsafe" ((class "java.lang.Object") long (class "java.lang.Object") (class "java.lang.Object")) boolean)))
                                      (12 (ireturn))
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getAndSet"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 19)
                                   (parsedcode
                                      (0 (aload_0)) ;;at TAG_1
                                      (1 (invokevirtual (methodCP "get" "java.util.concurrent.atomic.AtomicReference" () (class "java.lang.Object")))) 
                                      (4 (astore_2)) 
                                      (5 (aload_0)) 
                                      (6 (aload_2)) 
                                      (7 (aload_1)) 
                                      (8 (invokevirtual (methodCP "compareAndSet" "java.util.concurrent.atomic.AtomicReference" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (11 (ifeq 16))  ;;to TAG_0
                                      (14 (aload_2)) 
                                      (15 (areturn)) 
                                      (16 (goto 0)) ;;to TAG_1;;at TAG_0
                                      (endofcode 19))
                                   (Exceptions )
                                   (StackMap )))
                        (method "toString"
                              (parameters )
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "get" "java.util.concurrent.atomic.AtomicReference" () (class "java.lang.Object"))))
                                      (4 (invokestatic
					(methodCP "valueOf" "java.lang.String" ((class "java.lang.Object")) (class "java.lang.String"))))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 37)
                                   (parsedcode
                                      (0 (invokestatic (methodCP "getUnsafe" "sun.misc.Unsafe" () (class "sun.misc.Unsafe")))) 
                                      (3 (putstatic (fieldCP "unsafe" "java.util.concurrent.atomic.AtomicReference" (class "sun.misc.Unsafe")))) 
                                      (6 (getstatic (fieldCP "unsafe" "java.util.concurrent.atomic.AtomicReference" (class "sun.misc.Unsafe")))) ;;at TAG_1
                                      (9 (ldc_w )) 
                                      (12 (ldc 1)) ;;STRING:: "value"
                                      (14 (invokevirtual (methodCP "getDeclaredField" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.reflect.Field")))) 
                                      (17 (invokevirtual (methodCP "objectFieldOffset" "sun.misc.Unsafe" ((class "java.lang.reflect.Field")) long))) 
                                      (20 (putstatic (fieldCP "valueOffset" "java.util.concurrent.atomic.AtomicReference" long))) 
                                      (23 (goto 36)) ;;to TAG_0;;at TAG_2
                                      (26 (astore_0)) ;;at TAG_3
                                      (27 (new (class "java.lang.Error"))) 
                                      (30 (dup)) 
                                      (31 (aload_0)) 
                                      (32 (invokespecial (methodCP "<init>" "java.lang.Error" ((class "java.lang.Throwable")) void))) 
                                      (35 (athrow)) 
                                      (36 (return)) ;;at TAG_0
                                      (endofcode 37))
                                   (Exceptions 
                                     (handler 6 23  26 (class "java.lang.Exception")))
                                   (StackMap ))))
            (interfaces "java.io.Serializable")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "Signature")))))


(defconst *AtomicReference-class-table*
  (make-static-class-decls 
   *java.util.concurrent.atomic.AtomicReference*))

(defconst *package-name-map* 
  ("java.util.concurrent.atomic.AtomicReference" . "java.util.concurrent.atomic"))

