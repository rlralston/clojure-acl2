; Phaser$QNode-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:44 CDT 2014.
;

(defconst *java.util.concurrent.Phaser$QNode*
 (make-class-def
      '(class "java.util.concurrent.Phaser$QNode"
            "java.lang.Object"
            (constant_pool)
            (fields
                        (field "phaser" (class "java.util.concurrent.Phaser") (accessflags  *class*  *final* ) -1)
                        (field "phase" int (accessflags  *class*  *final* ) -1)
                        (field "interruptible" boolean (accessflags  *class*  *final* ) -1)
                        (field "timed" boolean (accessflags  *class*  *final* ) -1)
                        (field "wasInterrupted" boolean (accessflags  *class* ) -1)
                        (field "nanos" long (accessflags  *class* ) -1)
                        (field "lastTime" long (accessflags  *class* ) -1)
                        (field "thread" (class "java.lang.Thread") (accessflags  *class*  *volatile* ) -1)
                        (field "next" (class "java.util.concurrent.Phaser$QNode") (accessflags  *class* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "java.util.concurrent.Phaser") int boolean boolean long)
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 3) (max_locals . 7) (code_length . 55)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokespecial (methodCP "<init>" "java.lang.Object" () void))) 
                                      (4 (aload_0)) 
                                      (5 (aload_1)) 
                                      (6 (putfield (fieldCP "phaser" "java.util.concurrent.Phaser$QNode" (class "java.util.concurrent.Phaser")))) 
                                      (9 (aload_0)) 
                                      (10 (iload_2)) 
                                      (11 (putfield (fieldCP "phase" "java.util.concurrent.Phaser$QNode" int))) 
                                      (14 (aload_0)) 
                                      (15 (iload_3)) 
                                      (16 (putfield (fieldCP "interruptible" "java.util.concurrent.Phaser$QNode" boolean))) 
                                      (19 (aload_0)) 
                                      (20 (lload 5)) 
                                      (22 (putfield (fieldCP "nanos" "java.util.concurrent.Phaser$QNode" long))) 
                                      (25 (aload_0)) 
                                      (26 (iload 4)) 
                                      (28 (putfield (fieldCP "timed" "java.util.concurrent.Phaser$QNode" boolean))) 
                                      (31 (aload_0)) 
                                      (32 (iload 4)) 
                                      (34 (ifeq 43))  ;;to TAG_0
                                      (37 (invokestatic (methodCP "nanoTime" "java.lang.System" () long))) 
                                      (40 (goto 44)) ;;to TAG_1
                                      (43 (lconst_0)) ;;at TAG_0
                                      (44 (putfield (fieldCP "lastTime" "java.util.concurrent.Phaser$QNode" long))) ;;at TAG_1
                                      (47 (aload_0)) 
                                      (48 (invokestatic (methodCP "currentThread" "java.lang.Thread" () (class "java.lang.Thread")))) 
                                      (51 (putfield (fieldCP "thread" "java.util.concurrent.Phaser$QNode" (class "java.lang.Thread")))) 
                                      (54 (return)) 
                                      (endofcode 55))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isReleasable"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 3) (code_length . 120)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "thread" "java.util.concurrent.Phaser$QNode" (class "java.lang.Thread")))) 
                                      (4 (ifnonnull 9)) ;;to TAG_0
                                      (7 (iconst_1)) 
                                      (8 (ireturn)) 
                                      (9 (aload_0)) ;;at TAG_0
                                      (10 (getfield (fieldCP "phaser" "java.util.concurrent.Phaser$QNode" (class "java.util.concurrent.Phaser")))) 
                                      (13 (invokevirtual (methodCP "getPhase" "java.util.concurrent.Phaser" () int))) 
                                      (16 (aload_0)) 
                                      (17 (getfield (fieldCP "phase" "java.util.concurrent.Phaser$QNode" int))) 
                                      (20 (if_icmpeq 30)) ;;to TAG_1
                                      (23 (aload_0)) 
                                      (24 (aconst_null)) 
                                      (25 (putfield (fieldCP "thread" "java.util.concurrent.Phaser$QNode" (class "java.lang.Thread")))) 
                                      (28 (iconst_1)) 
                                      (29 (ireturn)) 
                                      (30 (invokestatic (methodCP "interrupted" "java.lang.Thread" () boolean))) ;;at TAG_1
                                      (33 (ifeq 41))  ;;to TAG_2
                                      (36 (aload_0)) 
                                      (37 (iconst_1)) 
                                      (38 (putfield (fieldCP "wasInterrupted" "java.util.concurrent.Phaser$QNode" boolean))) 
                                      (41 (aload_0)) ;;at TAG_2
                                      (42 (getfield (fieldCP "wasInterrupted" "java.util.concurrent.Phaser$QNode" boolean))) 
                                      (45 (ifeq 62)) ;;to TAG_3
                                      (48 (aload_0)) 
                                      (49 (getfield (fieldCP "interruptible" "java.util.concurrent.Phaser$QNode" boolean))) 
                                      (52 (ifeq 62)) ;;to TAG_3
                                      (55 (aload_0)) 
                                      (56 (aconst_null)) 
                                      (57 (putfield (fieldCP "thread" "java.util.concurrent.Phaser$QNode" (class "java.lang.Thread")))) 
                                      (60 (iconst_1)) 
                                      (61 (ireturn)) 
                                      (62 (aload_0)) ;;at TAG_3
                                      (63 (getfield (fieldCP "timed" "java.util.concurrent.Phaser$QNode" boolean))) 
                                      (66 (ifeq 118)) ;;to TAG_4
                                      (69 (aload_0)) 
                                      (70 (getfield (fieldCP "nanos" "java.util.concurrent.Phaser$QNode" long))) 
                                      (73 (lconst_0)) 
                                      (74 (lcmp)) 
                                      (75 (ifle 102)) ;;to TAG_5
                                      (78 (invokestatic (methodCP "nanoTime" "java.lang.System" () long))) 
                                      (81 (lstore_1)) 
                                      (82 (aload_0)) 
                                      (83 (dup)) 
                                      (84 (getfield (fieldCP "nanos" "java.util.concurrent.Phaser$QNode" long))) 
                                      (87 (lload_1)) 
                                      (88 (aload_0)) 
                                      (89 (getfield (fieldCP "lastTime" "java.util.concurrent.Phaser$QNode" long))) 
                                      (92 (lsub)) 
                                      (93 (lsub)) 
                                      (94 (putfield (fieldCP "nanos" "java.util.concurrent.Phaser$QNode" long))) 
                                      (97 (aload_0)) 
                                      (98 (lload_1)) 
                                      (99 (putfield (fieldCP "lastTime" "java.util.concurrent.Phaser$QNode" long))) 
                                      (102 (aload_0)) ;;at TAG_5
                                      (103 (getfield (fieldCP "nanos" "java.util.concurrent.Phaser$QNode" long))) 
                                      (106 (lconst_0)) 
                                      (107 (lcmp)) 
                                      (108 (ifgt 118)) ;;to TAG_4
                                      (111 (aload_0)) 
                                      (112 (aconst_null)) 
                                      (113 (putfield (fieldCP "thread" "java.util.concurrent.Phaser$QNode" (class "java.lang.Thread")))) 
                                      (116 (iconst_1)) 
                                      (117 (ireturn)) 
                                      (118 (iconst_0)) ;;at TAG_4
                                      (119 (ireturn)) 
                                      (endofcode 120))
                                   (Exceptions )
                                   (StackMap )))
                        (method "block"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 1) (code_length . 45)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "isReleasable" "java.util.concurrent.Phaser$QNode" () boolean))) 
                                      (4 (ifeq 9)) ;;to TAG_0
                                      (7 (iconst_1)) 
                                      (8 (ireturn)) 
                                      (9 (aload_0)) ;;at TAG_0
                                      (10 (getfield (fieldCP "timed" "java.util.concurrent.Phaser$QNode" boolean))) 
                                      (13 (ifne 23)) ;;to TAG_1
                                      (16 (aload_0)) 
                                      (17 (invokestatic (methodCP "park" "java.util.concurrent.locks.LockSupport" ((class "java.lang.Object")) void))) 
                                      (20 (goto 40))  ;;to TAG_2
                                      (23 (aload_0)) ;;at TAG_1
                                      (24 (getfield (fieldCP "nanos" "java.util.concurrent.Phaser$QNode" long))) 
                                      (27 (lconst_0)) 
                                      (28 (lcmp)) 
                                      (29 (ifle 40))  ;;to TAG_2
                                      (32 (aload_0)) 
                                      (33 (aload_0)) 
                                      (34 (getfield (fieldCP "nanos" "java.util.concurrent.Phaser$QNode" long))) 
                                      (37 (invokestatic (methodCP "parkNanos" "java.util.concurrent.locks.LockSupport" ((class "java.lang.Object") long) void))) 
                                      (40 (aload_0)) ;;at TAG_2
                                      (41 (invokevirtual (methodCP "isReleasable" "java.util.concurrent.Phaser$QNode" () boolean))) 
                                      (44 (ireturn)) 
                                      (endofcode 45))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "java.util.concurrent.ForkJoinPool$ManagedBlocker")
            (accessflags  *class*  *final*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Phaser$QNode-class-table*
  (make-static-class-decls 
   *java.util.concurrent.Phaser$QNode*))

(defconst *package-name-map* 
  ("java.util.concurrent.Phaser$QNode" . "java.util.concurrent"))

