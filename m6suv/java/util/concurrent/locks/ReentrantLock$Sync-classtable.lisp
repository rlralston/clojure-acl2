; ReentrantLock$Sync-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:44 CDT 2014.
;

(defconst *java.util.concurrent.locks.ReentrantLock$Sync*
 (make-class-def
      '(class "java.util.concurrent.locks.ReentrantLock$Sync"
            "java.util.concurrent.locks.AbstractQueuedSynchronizer"
            (constant_pool
                        (LONG -5179523762034025860)
                        (STRING  "Maximum lock count exceeded"))
            (fields
                        (field "serialVersionUID" long (accessflags  *class*  *final*  *private*  *static* ) 0))
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.util.concurrent.locks.AbstractQueuedSynchronizer" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "lock"
                              (parameters )
                              (returntype . void)
                              (accessflags  *abstract*  *class* )
                              (code))
                        (method "nonfairTryAcquire"
                              (parameters int)
                              (returntype . boolean)
                              (accessflags  *class*  *final* )
                              (code
                                   (max_stack . 3) (max_locals . 5) (code_length . 67)
                                   (parsedcode
                                      (0 (invokestatic (methodCP "currentThread" "java.lang.Thread" () (class "java.lang.Thread")))) 
                                      (3 (astore_2)) 
                                      (4 (aload_0)) 
                                      (5 (invokevirtual (methodCP "getState" "java.util.concurrent.locks.ReentrantLock$Sync" () int))) 
                                      (8 (istore_3)) 
                                      (9 (iload_3)) 
                                      (10 (ifne 29)) ;;to TAG_0
                                      (13 (aload_0)) 
                                      (14 (iconst_0)) 
                                      (15 (iload_1)) 
                                      (16 (invokevirtual (methodCP "compareAndSetState" "java.util.concurrent.locks.ReentrantLock$Sync" (int int) boolean))) 
                                      (19 (ifeq 65)) ;;to TAG_1
                                      (22 (aload_0)) 
                                      (23 (aload_2)) 
                                      (24 (invokevirtual (methodCP "setExclusiveOwnerThread" "java.util.concurrent.locks.ReentrantLock$Sync" ((class "java.lang.Thread")) void))) 
                                      (27 (iconst_1)) 
                                      (28 (ireturn)) 
                                      (29 (aload_2)) ;;at TAG_0
                                      (30 (aload_0)) 
                                      (31 (invokevirtual (methodCP "getExclusiveOwnerThread" "java.util.concurrent.locks.ReentrantLock$Sync" () (class "java.lang.Thread")))) 
                                      (34 (if_acmpne 65)) ;;to TAG_1
                                      (37 (iload_3)) 
                                      (38 (iload_1)) 
                                      (39 (iadd)) 
                                      (40 (istore 4)) 
                                      (42 (iload 4)) 
                                      (44 (ifge 57))  ;;to TAG_2
                                      (47 (new (class "java.lang.Error"))) 
                                      (50 (dup)) 
                                      (51 (ldc 1)) ;;STRING:: "Maximum lock count exceeded"
                                      (53 (invokespecial (methodCP "<init>" "java.lang.Error" ((class "java.lang.String")) void))) 
                                      (56 (athrow)) 
                                      (57 (aload_0)) ;;at TAG_2
                                      (58 (iload 4)) 
                                      (60 (invokevirtual (methodCP "setState" "java.util.concurrent.locks.ReentrantLock$Sync" (int) void))) 
                                      (63 (iconst_1)) 
                                      (64 (ireturn)) 
                                      (65 (iconst_0)) ;;at TAG_1
                                      (66 (ireturn)) 
                                      (endofcode 67))
                                   (Exceptions )
                                   (StackMap )))
                        (method "tryRelease"
                              (parameters int)
                              (returntype . boolean)
                              (accessflags  *class*  *final*  *protected* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 45)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "getState" "java.util.concurrent.locks.ReentrantLock$Sync" () int))) 
                                      (4 (iload_1)) 
                                      (5 (isub)) 
                                      (6 (istore_2)) 
                                      (7 (invokestatic (methodCP "currentThread" "java.lang.Thread" () (class "java.lang.Thread")))) 
                                      (10 (aload_0)) 
                                      (11 (invokevirtual (methodCP "getExclusiveOwnerThread" "java.util.concurrent.locks.ReentrantLock$Sync" () (class "java.lang.Thread")))) 
                                      (14 (if_acmpeq 25))  ;;to TAG_0
                                      (17 (new (class "java.lang.IllegalMonitorStateException"))) 
                                      (20 (dup)) 
                                      (21 (invokespecial (methodCP "<init>" "java.lang.IllegalMonitorStateException" () void))) 
                                      (24 (athrow)) 
                                      (25 (iconst_0)) ;;at TAG_0
                                      (26 (istore_3)) 
                                      (27 (iload_2)) 
                                      (28 (ifne 38)) ;;to TAG_1
                                      (31 (iconst_1)) 
                                      (32 (istore_3)) 
                                      (33 (aload_0)) 
                                      (34 (aconst_null)) 
                                      (35 (invokevirtual (methodCP "setExclusiveOwnerThread" "java.util.concurrent.locks.ReentrantLock$Sync" ((class "java.lang.Thread")) void))) 
                                      (38 (aload_0)) ;;at TAG_1
                                      (39 (iload_2)) 
                                      (40 (invokevirtual (methodCP "setState" "java.util.concurrent.locks.ReentrantLock$Sync" (int) void))) 
                                      (43 (iload_3)) 
                                      (44 (ireturn)) 
                                      (endofcode 45))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isHeldExclusively"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *final*  *protected* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "getExclusiveOwnerThread" "java.util.concurrent.locks.ReentrantLock$Sync" () (class "java.lang.Thread")))) 
                                      (4 (invokestatic (methodCP "currentThread" "java.lang.Thread" () (class "java.lang.Thread")))) 
                                      (7 (if_acmpne 14))  ;;to TAG_0
                                      (10 (iconst_1)) 
                                      (11 (goto 15)) ;;to TAG_1
                                      (14 (iconst_0)) ;;at TAG_0
                                      (15 (ireturn)) ;;at TAG_1
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "newCondition"
                              (parameters )
                              (returntype . (class "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject"))
                              (accessflags  *class*  *final* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 9)
                                   (parsedcode
                                      (0 (new (class "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject")))
                                      (3 (dup))
                                      (4 (aload_0))
                                      (5 (invokespecial
					(methodCP "<init>" "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject" ((class "java.util.concurrent.locks.AbstractQueuedSynchronizer")) void)))
                                      (8 (areturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getOwner"
                              (parameters )
                              (returntype . (class "java.lang.Thread"))
                              (accessflags  *class*  *final* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "getState" "java.util.concurrent.locks.ReentrantLock$Sync" () int))) 
                                      (4 (ifne 11))  ;;to TAG_0
                                      (7 (aconst_null)) 
                                      (8 (goto 15)) ;;to TAG_1
                                      (11 (aload_0)) ;;at TAG_0
                                      (12 (invokevirtual (methodCP "getExclusiveOwnerThread" "java.util.concurrent.locks.ReentrantLock$Sync" () (class "java.lang.Thread")))) 
                                      (15 (areturn)) ;;at TAG_1
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getHoldCount"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *final* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "isHeldExclusively" "java.util.concurrent.locks.ReentrantLock$Sync" () boolean))) 
                                      (4 (ifeq 14))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (invokevirtual (methodCP "getState" "java.util.concurrent.locks.ReentrantLock$Sync" () int))) 
                                      (11 (goto 15)) ;;to TAG_1
                                      (14 (iconst_0)) ;;at TAG_0
                                      (15 (ireturn)) ;;at TAG_1
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isLocked"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *final* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "getState" "java.util.concurrent.locks.ReentrantLock$Sync" () int))) 
                                      (4 (ifeq 11))  ;;to TAG_0
                                      (7 (iconst_1)) 
                                      (8 (goto 12)) ;;to TAG_1
                                      (11 (iconst_0)) ;;at TAG_0
                                      (12 (ireturn)) ;;at TAG_1
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "readObject"
                              (parameters (class "java.io.ObjectInputStream"))
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (invokevirtual
					(methodCP "defaultReadObject" "java.io.ObjectInputStream" () void)))
                                      (4 (aload_0))
                                      (5 (iconst_0))
                                      (6 (invokevirtual
					(methodCP "setState" "java.util.concurrent.locks.ReentrantLock$Sync" (int) void)))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *abstract*  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *ReentrantLock$Sync-class-table*
  (make-static-class-decls 
   *java.util.concurrent.locks.ReentrantLock$Sync*))

(defconst *package-name-map* 
  ("java.util.concurrent.locks.ReentrantLock$Sync" . "java.util.concurrent.locks"))

