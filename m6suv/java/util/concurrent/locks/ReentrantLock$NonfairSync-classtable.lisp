; ReentrantLock$NonfairSync-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:44 CDT 2014.
;

(defconst *java.util.concurrent.locks.ReentrantLock$NonfairSync*
 (make-class-def
      '(class "java.util.concurrent.locks.ReentrantLock$NonfairSync"
            "java.util.concurrent.locks.ReentrantLock$Sync"
            (constant_pool
                        (LONG 7316153563782823691))
            (fields
                        (field "serialVersionUID" long (accessflags  *class*  *final*  *private*  *static* ) 0))
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.util.concurrent.locks.ReentrantLock$Sync" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "lock"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *final* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 25)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (iconst_0)) 
                                      (2 (iconst_1)) 
                                      (3 (invokevirtual (methodCP "compareAndSetState" "java.util.concurrent.locks.ReentrantLock$NonfairSync" (int int) boolean))) 
                                      (6 (ifeq 19))  ;;to TAG_0
                                      (9 (aload_0)) 
                                      (10 (invokestatic (methodCP "currentThread" "java.lang.Thread" () (class "java.lang.Thread")))) 
                                      (13 (invokevirtual (methodCP "setExclusiveOwnerThread" "java.util.concurrent.locks.ReentrantLock$NonfairSync" ((class "java.lang.Thread")) void))) 
                                      (16 (goto 24)) ;;to TAG_1
                                      (19 (aload_0)) ;;at TAG_0
                                      (20 (iconst_1)) 
                                      (21 (invokevirtual (methodCP "acquire" "java.util.concurrent.locks.ReentrantLock$NonfairSync" (int) void))) 
                                      (24 (return)) ;;at TAG_1
                                      (endofcode 25))
                                   (Exceptions )
                                   (StackMap )))
                        (method "tryAcquire"
                              (parameters int)
                              (returntype . boolean)
                              (accessflags  *class*  *final*  *protected* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (invokevirtual
					(methodCP "nonfairTryAcquire" "java.util.concurrent.locks.ReentrantLock$NonfairSync" (int) boolean)))
                                      (5 (ireturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *ReentrantLock$NonfairSync-class-table*
  (make-static-class-decls 
   *java.util.concurrent.locks.ReentrantLock$NonfairSync*))

(defconst *package-name-map* 
  ("java.util.concurrent.locks.ReentrantLock$NonfairSync" . "java.util.concurrent.locks"))

