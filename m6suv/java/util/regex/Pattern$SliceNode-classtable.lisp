; Pattern$SliceNode-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:47 CDT 2014.
;

(defconst *java.util.regex.Pattern$SliceNode*
 (make-class-def
      '(class "java.util.regex.Pattern$SliceNode"
            "java.util.regex.Pattern$Node"
            (constant_pool)
            (fields
                        (field "buffer" (array int) (accessflags  *class* ) -1))
            (methods
                        (method "<init>"
                              (parameters (array int))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.util.regex.Pattern$Node" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "buffer" "java.util.regex.Pattern$SliceNode" (array int))))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "study"
                              (parameters (class "java.util.regex.Pattern$TreeInfo"))
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 37)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (dup))
                                      (2 (getfield (fieldCP "minLength" "java.util.regex.Pattern$TreeInfo" int)))
                                      (5 (aload_0))
                                      (6 (getfield (fieldCP "buffer" "java.util.regex.Pattern$SliceNode" (array int))))
                                      (9 (arraylength))
                                      (10 (iadd))
                                      (11 (putfield (fieldCP "minLength" "java.util.regex.Pattern$TreeInfo" int)))
                                      (14 (aload_1))
                                      (15 (dup))
                                      (16 (getfield (fieldCP "maxLength" "java.util.regex.Pattern$TreeInfo" int)))
                                      (19 (aload_0))
                                      (20 (getfield (fieldCP "buffer" "java.util.regex.Pattern$SliceNode" (array int))))
                                      (23 (arraylength))
                                      (24 (iadd))
                                      (25 (putfield (fieldCP "maxLength" "java.util.regex.Pattern$TreeInfo" int)))
                                      (28 (aload_0))
                                      (29 (getfield (fieldCP "next" "java.util.regex.Pattern$SliceNode" (class "java.util.regex.Pattern$Node"))))
                                      (32 (aload_1))
                                      (33 (invokevirtual
					(methodCP "study" "java.util.regex.Pattern$Node" ((class "java.util.regex.Pattern$TreeInfo")) boolean)))
                                      (36 (ireturn))
                                      (endofcode 37))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Pattern$SliceNode-class-table*
  (make-static-class-decls 
   *java.util.regex.Pattern$SliceNode*))

(defconst *package-name-map* 
  ("java.util.regex.Pattern$SliceNode" . "java.util.regex"))

