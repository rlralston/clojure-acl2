; Pattern$Start-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:47 CDT 2014.
;

(defconst *java.util.regex.Pattern$Start*
 (make-class-def
      '(class "java.util.regex.Pattern$Start"
            "java.util.regex.Pattern$Node"
            (constant_pool)
            (fields
                        (field "minLength" int (accessflags  *class* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "java.util.regex.Pattern$Node"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 35)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.util.regex.Pattern$Node" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "next" "java.util.regex.Pattern$Start" (class "java.util.regex.Pattern$Node"))))
                                      (9 (new (class "java.util.regex.Pattern$TreeInfo")))
                                      (12 (dup))
                                      (13 (invokespecial
					(methodCP "<init>" "java.util.regex.Pattern$TreeInfo" () void)))
                                      (16 (astore_2))
                                      (17 (aload_0))
                                      (18 (getfield (fieldCP "next" "java.util.regex.Pattern$Start" (class "java.util.regex.Pattern$Node"))))
                                      (21 (aload_2))
                                      (22 (invokevirtual
					(methodCP "study" "java.util.regex.Pattern$Node" ((class "java.util.regex.Pattern$TreeInfo")) boolean)))
                                      (25 (pop))
                                      (26 (aload_0))
                                      (27 (aload_2))
                                      (28 (getfield (fieldCP "minLength" "java.util.regex.Pattern$TreeInfo" int)))
                                      (31 (putfield (fieldCP "minLength" "java.util.regex.Pattern$Start" int)))
                                      (34 (return))
                                      (endofcode 35))
                                   (Exceptions )
                                   (StackMap )))
                        (method "match"
                              (parameters (class "java.util.regex.Matcher") int (class "java.lang.CharSequence"))
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 4) (max_locals . 5) (code_length . 90)
                                   (parsedcode
                                      (0 (iload_2)) 
                                      (1 (aload_1)) 
                                      (2 (getfield (fieldCP "to" "java.util.regex.Matcher" int))) 
                                      (5 (aload_0)) 
                                      (6 (getfield (fieldCP "minLength" "java.util.regex.Pattern$Start" int))) 
                                      (9 (isub)) 
                                      (10 (if_icmple 20)) ;;to TAG_0
                                      (13 (aload_1)) 
                                      (14 (iconst_1)) 
                                      (15 (putfield (fieldCP "hitEnd" "java.util.regex.Matcher" boolean))) 
                                      (18 (iconst_0)) 
                                      (19 (ireturn)) 
                                      (20 (aload_1)) ;;at TAG_0
                                      (21 (getfield (fieldCP "to" "java.util.regex.Matcher" int))) 
                                      (24 (aload_0)) 
                                      (25 (getfield (fieldCP "minLength" "java.util.regex.Pattern$Start" int))) 
                                      (28 (isub)) 
                                      (29 (istore 4)) 
                                      (31 (iload_2)) ;;at TAG_3
                                      (32 (iload 4)) 
                                      (34 (if_icmpgt 83)) ;;to TAG_1
                                      (37 (aload_0)) 
                                      (38 (getfield (fieldCP "next" "java.util.regex.Pattern$Start" (class "java.util.regex.Pattern$Node")))) 
                                      (41 (aload_1)) 
                                      (42 (iload_2)) 
                                      (43 (aload_3)) 
                                      (44 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (47 (ifeq 77))  ;;to TAG_2
                                      (50 (aload_1)) 
                                      (51 (iload_2)) 
                                      (52 (putfield (fieldCP "first" "java.util.regex.Matcher" int))) 
                                      (55 (aload_1)) 
                                      (56 (getfield (fieldCP "groups" "java.util.regex.Matcher" (array int)))) 
                                      (59 (iconst_0)) 
                                      (60 (aload_1)) 
                                      (61 (getfield (fieldCP "first" "java.util.regex.Matcher" int))) 
                                      (64 (iastore)) 
                                      (65 (aload_1)) 
                                      (66 (getfield (fieldCP "groups" "java.util.regex.Matcher" (array int)))) 
                                      (69 (iconst_1)) 
                                      (70 (aload_1)) 
                                      (71 (getfield (fieldCP "last" "java.util.regex.Matcher" int))) 
                                      (74 (iastore)) 
                                      (75 (iconst_1)) 
                                      (76 (ireturn)) 
                                      (77 (iinc 2 1)) ;;at TAG_2
                                      (80 (goto 31)) ;;to TAG_3
                                      (83 (aload_1)) ;;at TAG_1
                                      (84 (iconst_1)) 
                                      (85 (putfield (fieldCP "hitEnd" "java.util.regex.Matcher" boolean))) 
                                      (88 (iconst_0)) 
                                      (89 (ireturn)) 
                                      (endofcode 90))
                                   (Exceptions )
                                   (StackMap )))
                        (method "study"
                              (parameters (class "java.util.regex.Pattern$TreeInfo"))
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 21)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "next" "java.util.regex.Pattern$Start" (class "java.util.regex.Pattern$Node"))))
                                      (4 (aload_1))
                                      (5 (invokevirtual
					(methodCP "study" "java.util.regex.Pattern$Node" ((class "java.util.regex.Pattern$TreeInfo")) boolean)))
                                      (8 (pop))
                                      (9 (aload_1))
                                      (10 (iconst_0))
                                      (11 (putfield (fieldCP "maxValid" "java.util.regex.Pattern$TreeInfo" boolean)))
                                      (14 (aload_1))
                                      (15 (iconst_0))
                                      (16 (putfield (fieldCP "deterministic" "java.util.regex.Pattern$TreeInfo" boolean)))
                                      (19 (iconst_0))
                                      (20 (ireturn))
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Pattern$Start-class-table*
  (make-static-class-decls 
   *java.util.regex.Pattern$Start*))

(defconst *package-name-map* 
  ("java.util.regex.Pattern$Start" . "java.util.regex"))

