; Pattern$Begin-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:47 CDT 2014.
;

(defconst *java.util.regex.Pattern$Begin*
 (make-class-def
      '(class "java.util.regex.Pattern$Begin"
            "java.util.regex.Pattern$Node"
            (constant_pool)
            (fields)
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.util.regex.Pattern$Node" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "match"
                              (parameters (class "java.util.regex.Matcher") int (class "java.lang.CharSequence"))
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 4) (max_locals . 5) (code_length . 62)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (getfield (fieldCP "anchoringBounds" "java.util.regex.Matcher" boolean))) 
                                      (4 (ifeq 14)) ;;to TAG_0
                                      (7 (aload_1)) 
                                      (8 (getfield (fieldCP "from" "java.util.regex.Matcher" int))) 
                                      (11 (goto 15)) ;;to TAG_1
                                      (14 (iconst_0)) ;;at TAG_0
                                      (15 (istore 4)) ;;at TAG_1
                                      (17 (iload_2)) 
                                      (18 (iload 4)) 
                                      (20 (if_icmpne 60))  ;;to TAG_2
                                      (23 (aload_0)) 
                                      (24 (getfield (fieldCP "next" "java.util.regex.Pattern$Begin" (class "java.util.regex.Pattern$Node")))) 
                                      (27 (aload_1)) 
                                      (28 (iload_2)) 
                                      (29 (aload_3)) 
                                      (30 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (33 (ifeq 60))  ;;to TAG_2
                                      (36 (aload_1)) 
                                      (37 (iload_2)) 
                                      (38 (putfield (fieldCP "first" "java.util.regex.Matcher" int))) 
                                      (41 (aload_1)) 
                                      (42 (getfield (fieldCP "groups" "java.util.regex.Matcher" (array int)))) 
                                      (45 (iconst_0)) 
                                      (46 (iload_2)) 
                                      (47 (iastore)) 
                                      (48 (aload_1)) 
                                      (49 (getfield (fieldCP "groups" "java.util.regex.Matcher" (array int)))) 
                                      (52 (iconst_1)) 
                                      (53 (aload_1)) 
                                      (54 (getfield (fieldCP "last" "java.util.regex.Matcher" int))) 
                                      (57 (iastore)) 
                                      (58 (iconst_1)) 
                                      (59 (ireturn)) 
                                      (60 (iconst_0)) ;;at TAG_2
                                      (61 (ireturn)) 
                                      (endofcode 62))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Pattern$Begin-class-table*
  (make-static-class-decls 
   *java.util.regex.Pattern$Begin*))

(defconst *package-name-map* 
  ("java.util.regex.Pattern$Begin" . "java.util.regex"))

