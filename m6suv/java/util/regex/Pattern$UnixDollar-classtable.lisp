; Pattern$UnixDollar-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:47 CDT 2014.
;

(defconst *java.util.regex.Pattern$UnixDollar*
 (make-class-def
      '(class "java.util.regex.Pattern$UnixDollar"
            "java.util.regex.Pattern$Node"
            (constant_pool)
            (fields
                        (field "multiline" boolean (accessflags  *class* ) -1))
            (methods
                        (method "<init>"
                              (parameters boolean)
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.util.regex.Pattern$Node" () void)))
                                      (4 (aload_0))
                                      (5 (iload_1))
                                      (6 (putfield (fieldCP "multiline" "java.util.regex.Pattern$UnixDollar" boolean)))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "match"
                              (parameters (class "java.util.regex.Matcher") int (class "java.lang.CharSequence"))
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 4) (max_locals . 6) (code_length . 100)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (getfield (fieldCP "anchoringBounds" "java.util.regex.Matcher" boolean))) 
                                      (4 (ifeq 14)) ;;to TAG_0
                                      (7 (aload_1)) 
                                      (8 (getfield (fieldCP "to" "java.util.regex.Matcher" int))) 
                                      (11 (goto 18)) ;;to TAG_1
                                      (14 (aload_1)) ;;at TAG_0
                                      (15 (invokevirtual (methodCP "getTextLength" "java.util.regex.Matcher" () int))) 
                                      (18 (istore 4)) ;;at TAG_1
                                      (20 (iload_2)) 
                                      (21 (iload 4)) 
                                      (23 (if_icmpge 79))  ;;to TAG_2
                                      (26 (aload_3)) 
                                      (27 (iload_2)) 
                                      (28 (invokeinterface (methodCP "charAt" "java.lang.CharSequence" (int) char) 2)) 
                                      (33 (istore 5)) 
                                      (35 (iload 5)) 
                                      (37 (bipush 10)) 
                                      (39 (if_icmpne 77)) ;;to TAG_3
                                      (42 (aload_0)) 
                                      (43 (getfield (fieldCP "multiline" "java.util.regex.Pattern$UnixDollar" boolean))) 
                                      (46 (ifne 59)) ;;to TAG_4
                                      (49 (iload_2)) 
                                      (50 (iload 4)) 
                                      (52 (iconst_1)) 
                                      (53 (isub)) 
                                      (54 (if_icmpeq 59)) ;;to TAG_4
                                      (57 (iconst_0)) 
                                      (58 (ireturn)) 
                                      (59 (aload_0)) ;;at TAG_4
                                      (60 (getfield (fieldCP "multiline" "java.util.regex.Pattern$UnixDollar" boolean))) 
                                      (63 (ifeq 79))  ;;to TAG_2
                                      (66 (aload_0)) 
                                      (67 (getfield (fieldCP "next" "java.util.regex.Pattern$UnixDollar" (class "java.util.regex.Pattern$Node")))) 
                                      (70 (aload_1)) 
                                      (71 (iload_2)) 
                                      (72 (aload_3)) 
                                      (73 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (76 (ireturn)) 
                                      (77 (iconst_0)) ;;at TAG_3
                                      (78 (ireturn)) 
                                      (79 (aload_1)) ;;at TAG_2
                                      (80 (iconst_1)) 
                                      (81 (putfield (fieldCP "hitEnd" "java.util.regex.Matcher" boolean))) 
                                      (84 (aload_1)) 
                                      (85 (iconst_1)) 
                                      (86 (putfield (fieldCP "requireEnd" "java.util.regex.Matcher" boolean))) 
                                      (89 (aload_0)) 
                                      (90 (getfield (fieldCP "next" "java.util.regex.Pattern$UnixDollar" (class "java.util.regex.Pattern$Node")))) 
                                      (93 (aload_1)) 
                                      (94 (iload_2)) 
                                      (95 (aload_3)) 
                                      (96 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (99 (ireturn)) 
                                      (endofcode 100))
                                   (Exceptions )
                                   (StackMap )))
                        (method "study"
                              (parameters (class "java.util.regex.Pattern$TreeInfo"))
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 14)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "next" "java.util.regex.Pattern$UnixDollar" (class "java.util.regex.Pattern$Node"))))
                                      (4 (aload_1))
                                      (5 (invokevirtual
					(methodCP "study" "java.util.regex.Pattern$Node" ((class "java.util.regex.Pattern$TreeInfo")) boolean)))
                                      (8 (pop))
                                      (9 (aload_1))
                                      (10 (getfield (fieldCP "deterministic" "java.util.regex.Pattern$TreeInfo" boolean)))
                                      (13 (ireturn))
                                      (endofcode 14))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Pattern$UnixDollar-class-table*
  (make-static-class-decls 
   *java.util.regex.Pattern$UnixDollar*))

(defconst *package-name-map* 
  ("java.util.regex.Pattern$UnixDollar" . "java.util.regex"))

