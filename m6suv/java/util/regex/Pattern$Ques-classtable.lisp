; Pattern$Ques-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:47 CDT 2014.
;

(defconst *java.util.regex.Pattern$Ques*
 (make-class-def
      '(class "java.util.regex.Pattern$Ques"
            "java.util.regex.Pattern$Node"
            (constant_pool)
            (fields
                        (field "atom" (class "java.util.regex.Pattern$Node") (accessflags  *class* ) -1)
                        (field "type" int (accessflags  *class* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "java.util.regex.Pattern$Node") int)
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.util.regex.Pattern$Node" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "atom" "java.util.regex.Pattern$Ques" (class "java.util.regex.Pattern$Node"))))
                                      (9 (aload_0))
                                      (10 (iload_2))
                                      (11 (putfield (fieldCP "type" "java.util.regex.Pattern$Ques" int)))
                                      (14 (return))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "match"
                              (parameters (class "java.util.regex.Matcher") int (class "java.lang.CharSequence"))
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 192)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "type" "java.util.regex.Pattern$Ques" int))) 
                                      (4 (tableswitch (tableswitchinfo 157 (0 . 2) (32 80 128))))  ;;to TAG_1;;to TAG_2;;to TAG_3;;to TAG_0
                                      (32 (aload_0)) ;;at TAG_1
                                      (33 (getfield (fieldCP "atom" "java.util.regex.Pattern$Ques" (class "java.util.regex.Pattern$Node")))) 
                                      (36 (aload_1)) 
                                      (37 (iload_2)) 
                                      (38 (aload_3)) 
                                      (39 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (42 (ifeq 61)) ;;to TAG_4
                                      (45 (aload_0)) 
                                      (46 (getfield (fieldCP "next" "java.util.regex.Pattern$Ques" (class "java.util.regex.Pattern$Node")))) 
                                      (49 (aload_1)) 
                                      (50 (aload_1)) 
                                      (51 (getfield (fieldCP "last" "java.util.regex.Matcher" int))) 
                                      (54 (aload_3)) 
                                      (55 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (58 (ifne 74)) ;;to TAG_5
                                      (61 (aload_0)) ;;at TAG_4
                                      (62 (getfield (fieldCP "next" "java.util.regex.Pattern$Ques" (class "java.util.regex.Pattern$Node")))) 
                                      (65 (aload_1)) 
                                      (66 (iload_2)) 
                                      (67 (aload_3)) 
                                      (68 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (71 (ifeq 78)) ;;to TAG_6
                                      (74 (iconst_1)) ;;at TAG_5
                                      (75 (goto 79)) ;;to TAG_7
                                      (78 (iconst_0)) ;;at TAG_6
                                      (79 (ireturn)) ;;at TAG_7
                                      (80 (aload_0)) ;;at TAG_2
                                      (81 (getfield (fieldCP "next" "java.util.regex.Pattern$Ques" (class "java.util.regex.Pattern$Node")))) 
                                      (84 (aload_1)) 
                                      (85 (iload_2)) 
                                      (86 (aload_3)) 
                                      (87 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (90 (ifne 122)) ;;to TAG_8
                                      (93 (aload_0)) 
                                      (94 (getfield (fieldCP "atom" "java.util.regex.Pattern$Ques" (class "java.util.regex.Pattern$Node")))) 
                                      (97 (aload_1)) 
                                      (98 (iload_2)) 
                                      (99 (aload_3)) 
                                      (100 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (103 (ifeq 126)) ;;to TAG_9
                                      (106 (aload_0)) 
                                      (107 (getfield (fieldCP "next" "java.util.regex.Pattern$Ques" (class "java.util.regex.Pattern$Node")))) 
                                      (110 (aload_1)) 
                                      (111 (aload_1)) 
                                      (112 (getfield (fieldCP "last" "java.util.regex.Matcher" int))) 
                                      (115 (aload_3)) 
                                      (116 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (119 (ifeq 126)) ;;to TAG_9
                                      (122 (iconst_1)) ;;at TAG_8
                                      (123 (goto 127)) ;;to TAG_10
                                      (126 (iconst_0)) ;;at TAG_9
                                      (127 (ireturn)) ;;at TAG_10
                                      (128 (aload_0)) ;;at TAG_3
                                      (129 (getfield (fieldCP "atom" "java.util.regex.Pattern$Ques" (class "java.util.regex.Pattern$Node")))) 
                                      (132 (aload_1)) 
                                      (133 (iload_2)) 
                                      (134 (aload_3)) 
                                      (135 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (138 (ifeq 146)) ;;to TAG_11
                                      (141 (aload_1)) 
                                      (142 (getfield (fieldCP "last" "java.util.regex.Matcher" int))) 
                                      (145 (istore_2)) 
                                      (146 (aload_0)) ;;at TAG_11
                                      (147 (getfield (fieldCP "next" "java.util.regex.Pattern$Ques" (class "java.util.regex.Pattern$Node")))) 
                                      (150 (aload_1)) 
                                      (151 (iload_2)) 
                                      (152 (aload_3)) 
                                      (153 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (156 (ireturn)) 
                                      (157 (aload_0)) ;;at TAG_0
                                      (158 (getfield (fieldCP "atom" "java.util.regex.Pattern$Ques" (class "java.util.regex.Pattern$Node")))) 
                                      (161 (aload_1)) 
                                      (162 (iload_2)) 
                                      (163 (aload_3)) 
                                      (164 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (167 (ifeq 190)) ;;to TAG_12
                                      (170 (aload_0)) 
                                      (171 (getfield (fieldCP "next" "java.util.regex.Pattern$Ques" (class "java.util.regex.Pattern$Node")))) 
                                      (174 (aload_1)) 
                                      (175 (aload_1)) 
                                      (176 (getfield (fieldCP "last" "java.util.regex.Matcher" int))) 
                                      (179 (aload_3)) 
                                      (180 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (183 (ifeq 190)) ;;to TAG_12
                                      (186 (iconst_1)) 
                                      (187 (goto 191)) ;;to TAG_13
                                      (190 (iconst_0)) ;;at TAG_12
                                      (191 (ireturn)) ;;at TAG_13
                                      (endofcode 192))
                                   (Exceptions )
                                   (StackMap )))
                        (method "study"
                              (parameters (class "java.util.regex.Pattern$TreeInfo"))
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 59)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "type" "java.util.regex.Pattern$Ques" int))) 
                                      (4 (iconst_3)) 
                                      (5 (if_icmpeq 41))  ;;to TAG_0
                                      (8 (aload_1)) 
                                      (9 (getfield (fieldCP "minLength" "java.util.regex.Pattern$TreeInfo" int))) 
                                      (12 (istore_2)) 
                                      (13 (aload_0)) 
                                      (14 (getfield (fieldCP "atom" "java.util.regex.Pattern$Ques" (class "java.util.regex.Pattern$Node")))) 
                                      (17 (aload_1)) 
                                      (18 (invokevirtual (methodCP "study" "java.util.regex.Pattern$Node" ((class "java.util.regex.Pattern$TreeInfo")) boolean))) 
                                      (21 (pop)) 
                                      (22 (aload_1)) 
                                      (23 (iload_2)) 
                                      (24 (putfield (fieldCP "minLength" "java.util.regex.Pattern$TreeInfo" int))) 
                                      (27 (aload_1)) 
                                      (28 (iconst_0)) 
                                      (29 (putfield (fieldCP "deterministic" "java.util.regex.Pattern$TreeInfo" boolean))) 
                                      (32 (aload_0)) 
                                      (33 (getfield (fieldCP "next" "java.util.regex.Pattern$Ques" (class "java.util.regex.Pattern$Node")))) 
                                      (36 (aload_1)) 
                                      (37 (invokevirtual (methodCP "study" "java.util.regex.Pattern$Node" ((class "java.util.regex.Pattern$TreeInfo")) boolean))) 
                                      (40 (ireturn)) 
                                      (41 (aload_0)) ;;at TAG_0
                                      (42 (getfield (fieldCP "atom" "java.util.regex.Pattern$Ques" (class "java.util.regex.Pattern$Node")))) 
                                      (45 (aload_1)) 
                                      (46 (invokevirtual (methodCP "study" "java.util.regex.Pattern$Node" ((class "java.util.regex.Pattern$TreeInfo")) boolean))) 
                                      (49 (pop)) 
                                      (50 (aload_0)) 
                                      (51 (getfield (fieldCP "next" "java.util.regex.Pattern$Ques" (class "java.util.regex.Pattern$Node")))) 
                                      (54 (aload_1)) 
                                      (55 (invokevirtual (methodCP "study" "java.util.regex.Pattern$Node" ((class "java.util.regex.Pattern$TreeInfo")) boolean))) 
                                      (58 (ireturn)) 
                                      (endofcode 59))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Pattern$Ques-class-table*
  (make-static-class-decls 
   *java.util.regex.Pattern$Ques*))

(defconst *package-name-map* 
  ("java.util.regex.Pattern$Ques" . "java.util.regex"))

