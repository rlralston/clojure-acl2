; Pattern$Bound-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:47 CDT 2014.
;

(defconst *java.util.regex.Pattern$Bound*
 (make-class-def
      '(class "java.util.regex.Pattern$Bound"
            "java.util.regex.Pattern$Node"
            (constant_pool)
            (fields
                        (field "LEFT" int (accessflags  *class*  *static* ) -1)
                        (field "RIGHT" int (accessflags  *class*  *static* ) -1)
                        (field "BOTH" int (accessflags  *class*  *static* ) -1)
                        (field "NONE" int (accessflags  *class*  *static* ) -1)
                        (field "type" int (accessflags  *class* ) -1)
                        (field "useUWORD" boolean (accessflags  *class* ) -1))
            (methods
                        (method "<init>"
                              (parameters int boolean)
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.util.regex.Pattern$Node" () void)))
                                      (4 (aload_0))
                                      (5 (iload_1))
                                      (6 (putfield (fieldCP "type" "java.util.regex.Pattern$Bound" int)))
                                      (9 (aload_0))
                                      (10 (iload_2))
                                      (11 (putfield (fieldCP "useUWORD" "java.util.regex.Pattern$Bound" boolean)))
                                      (14 (return))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isWord"
                              (parameters int)
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 36)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "useUWORD" "java.util.regex.Pattern$Bound" boolean))) 
                                      (4 (ifeq 17)) ;;to TAG_0
                                      (7 (getstatic (fieldCP "WORD" "java.util.regex.UnicodeProp" (class "java.util.regex.UnicodeProp")))) 
                                      (10 (iload_1)) 
                                      (11 (invokevirtual (methodCP "is" "java.util.regex.UnicodeProp" (int) boolean))) 
                                      (14 (goto 35)) ;;to TAG_1
                                      (17 (iload_1)) ;;at TAG_0
                                      (18 (bipush 95)) 
                                      (20 (if_icmpeq 30))  ;;to TAG_2
                                      (23 (iload_1)) 
                                      (24 (invokestatic (methodCP "isLetterOrDigit" "java.lang.Character" (int) boolean))) 
                                      (27 (ifeq 34)) ;;to TAG_3
                                      (30 (iconst_1)) ;;at TAG_2
                                      (31 (goto 35)) ;;to TAG_1
                                      (34 (iconst_0)) ;;at TAG_3
                                      (35 (ireturn)) ;;at TAG_1
                                      (endofcode 36))
                                   (Exceptions )
                                   (StackMap )))
                        (method "check"
                              (parameters (class "java.util.regex.Matcher") int (class "java.lang.CharSequence"))
                              (returntype . int)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 3) (max_locals . 9) (code_length . 174)
                                   (parsedcode
                                      (0 (iconst_0)) 
                                      (1 (istore 5)) 
                                      (3 (aload_1)) 
                                      (4 (getfield (fieldCP "from" "java.util.regex.Matcher" int))) 
                                      (7 (istore 6)) 
                                      (9 (aload_1)) 
                                      (10 (getfield (fieldCP "to" "java.util.regex.Matcher" int))) 
                                      (13 (istore 7)) 
                                      (15 (aload_1)) 
                                      (16 (getfield (fieldCP "transparentBounds" "java.util.regex.Matcher" boolean))) 
                                      (19 (ifeq 31)) ;;to TAG_0
                                      (22 (iconst_0)) 
                                      (23 (istore 6)) 
                                      (25 (aload_1)) 
                                      (26 (invokevirtual (methodCP "getTextLength" "java.util.regex.Matcher" () int))) 
                                      (29 (istore 7)) 
                                      (31 (iload_2)) ;;at TAG_0
                                      (32 (iload 6)) 
                                      (34 (if_icmple 81))  ;;to TAG_1
                                      (37 (aload_3)) 
                                      (38 (iload_2)) 
                                      (39 (invokestatic (methodCP "codePointBefore" "java.lang.Character" ((class "java.lang.CharSequence") int) int))) 
                                      (42 (istore 4)) 
                                      (44 (aload_0)) 
                                      (45 (iload 4)) 
                                      (47 (invokevirtual (methodCP "isWord" "java.util.regex.Pattern$Bound" (int) boolean))) 
                                      (50 (ifne 74)) ;;to TAG_2
                                      (53 (iload 4)) 
                                      (55 (invokestatic (methodCP "getType" "java.lang.Character" (int) int))) 
                                      (58 (bipush 6)) 
                                      (60 (if_icmpne 78)) ;;to TAG_3
                                      (63 (aload_1)) 
                                      (64 (iload_2)) 
                                      (65 (iconst_1)) 
                                      (66 (isub)) 
                                      (67 (aload_3)) 
                                      (68 (invokestatic (methodCP "access$400" "java.util.regex.Pattern" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (71 (ifeq 78)) ;;to TAG_3
                                      (74 (iconst_1)) ;;at TAG_2
                                      (75 (goto 79)) ;;to TAG_4
                                      (78 (iconst_0)) ;;at TAG_3
                                      (79 (istore 5)) ;;at TAG_4
                                      (81 (iconst_0)) ;;at TAG_1
                                      (82 (istore 8)) 
                                      (84 (iload_2)) 
                                      (85 (iload 7)) 
                                      (87 (if_icmpge 135)) ;;to TAG_5
                                      (90 (aload_3)) 
                                      (91 (iload_2)) 
                                      (92 (invokestatic (methodCP "codePointAt" "java.lang.Character" ((class "java.lang.CharSequence") int) int))) 
                                      (95 (istore 4)) 
                                      (97 (aload_0)) 
                                      (98 (iload 4)) 
                                      (100 (invokevirtual (methodCP "isWord" "java.util.regex.Pattern$Bound" (int) boolean))) 
                                      (103 (ifne 125)) ;;to TAG_6
                                      (106 (iload 4)) 
                                      (108 (invokestatic (methodCP "getType" "java.lang.Character" (int) int))) 
                                      (111 (bipush 6)) 
                                      (113 (if_icmpne 129)) ;;to TAG_7
                                      (116 (aload_1)) 
                                      (117 (iload_2)) 
                                      (118 (aload_3)) 
                                      (119 (invokestatic (methodCP "access$400" "java.util.regex.Pattern" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (122 (ifeq 129)) ;;to TAG_7
                                      (125 (iconst_1)) ;;at TAG_6
                                      (126 (goto 130)) ;;to TAG_8
                                      (129 (iconst_0)) ;;at TAG_7
                                      (130 (istore 8)) ;;at TAG_8
                                      (132 (goto 145)) ;;to TAG_9
                                      (135 (aload_1)) ;;at TAG_5
                                      (136 (iconst_1)) 
                                      (137 (putfield (fieldCP "hitEnd" "java.util.regex.Matcher" boolean))) 
                                      (140 (aload_1)) 
                                      (141 (iconst_1)) 
                                      (142 (putfield (fieldCP "requireEnd" "java.util.regex.Matcher" boolean))) 
                                      (145 (iload 5)) ;;at TAG_9
                                      (147 (iload 8)) 
                                      (149 (ixor)) 
                                      (150 (ifeq 170)) ;;to TAG_10
                                      (153 (iload 8)) 
                                      (155 (ifeq 164)) ;;to TAG_11
                                      (158 (getstatic (fieldCP "LEFT" "java.util.regex.Pattern$Bound" int))) 
                                      (161 (goto 173)) ;;to TAG_12
                                      (164 (getstatic (fieldCP "RIGHT" "java.util.regex.Pattern$Bound" int))) ;;at TAG_11
                                      (167 (goto 173)) ;;to TAG_12
                                      (170 (getstatic (fieldCP "NONE" "java.util.regex.Pattern$Bound" int))) ;;at TAG_10
                                      (173 (ireturn)) ;;at TAG_12
                                      (endofcode 174))
                                   (Exceptions )
                                   (StackMap )))
                        (method "match"
                              (parameters (class "java.util.regex.Matcher") int (class "java.lang.CharSequence"))
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 34)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (aload_1)) 
                                      (2 (iload_2)) 
                                      (3 (aload_3)) 
                                      (4 (invokevirtual (methodCP "check" "java.util.regex.Pattern$Bound" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) int))) 
                                      (7 (aload_0)) 
                                      (8 (getfield (fieldCP "type" "java.util.regex.Pattern$Bound" int))) 
                                      (11 (iand)) 
                                      (12 (ifle 32))  ;;to TAG_0
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "next" "java.util.regex.Pattern$Bound" (class "java.util.regex.Pattern$Node")))) 
                                      (19 (aload_1)) 
                                      (20 (iload_2)) 
                                      (21 (aload_3)) 
                                      (22 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (25 (ifeq 32))  ;;to TAG_0
                                      (28 (iconst_1)) 
                                      (29 (goto 33)) ;;to TAG_1
                                      (32 (iconst_0)) ;;at TAG_0
                                      (33 (ireturn)) ;;at TAG_1
                                      (endofcode 34))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 0) (code_length . 17)
                                   (parsedcode
                                      (0 (iconst_1))
                                      (1 (putstatic (fieldCP "LEFT" "java.util.regex.Pattern$Bound" int)))
                                      (4 (iconst_2))
                                      (5 (putstatic (fieldCP "RIGHT" "java.util.regex.Pattern$Bound" int)))
                                      (8 (iconst_3))
                                      (9 (putstatic (fieldCP "BOTH" "java.util.regex.Pattern$Bound" int)))
                                      (12 (iconst_4))
                                      (13 (putstatic (fieldCP "NONE" "java.util.regex.Pattern$Bound" int)))
                                      (16 (return))
                                      (endofcode 17))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Pattern$Bound-class-table*
  (make-static-class-decls 
   *java.util.regex.Pattern$Bound*))

(defconst *package-name-map* 
  ("java.util.regex.Pattern$Bound" . "java.util.regex"))

