; Pattern$GroupRef-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:47 CDT 2014.
;

(defconst *java.util.regex.Pattern$GroupRef*
 (make-class-def
      '(class "java.util.regex.Pattern$GroupRef"
            "java.util.regex.Pattern$Node"
            (constant_pool)
            (fields
                        (field "head" (class "java.util.regex.Pattern$GroupHead") (accessflags  *class* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "java.util.regex.Pattern$GroupHead"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.util.regex.Pattern$Node" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "head" "java.util.regex.Pattern$GroupRef" (class "java.util.regex.Pattern$GroupHead"))))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "match"
                              (parameters (class "java.util.regex.Matcher") int (class "java.lang.CharSequence"))
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 35)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "head" "java.util.regex.Pattern$GroupRef" (class "java.util.regex.Pattern$GroupHead")))) 
                                      (4 (aload_1)) 
                                      (5 (iload_2)) 
                                      (6 (aload_3)) 
                                      (7 (invokevirtual (methodCP "matchRef" "java.util.regex.Pattern$GroupHead" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (10 (ifeq 33))  ;;to TAG_0
                                      (13 (aload_0)) 
                                      (14 (getfield (fieldCP "next" "java.util.regex.Pattern$GroupRef" (class "java.util.regex.Pattern$Node")))) 
                                      (17 (aload_1)) 
                                      (18 (aload_1)) 
                                      (19 (getfield (fieldCP "last" "java.util.regex.Matcher" int))) 
                                      (22 (aload_3)) 
                                      (23 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (26 (ifeq 33))  ;;to TAG_0
                                      (29 (iconst_1)) 
                                      (30 (goto 34)) ;;to TAG_1
                                      (33 (iconst_0)) ;;at TAG_0
                                      (34 (ireturn)) ;;at TAG_1
                                      (endofcode 35))
                                   (Exceptions )
                                   (StackMap )))
                        (method "study"
                              (parameters (class "java.util.regex.Pattern$TreeInfo"))
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 19)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (iconst_0))
                                      (2 (putfield (fieldCP "maxValid" "java.util.regex.Pattern$TreeInfo" boolean)))
                                      (5 (aload_1))
                                      (6 (iconst_0))
                                      (7 (putfield (fieldCP "deterministic" "java.util.regex.Pattern$TreeInfo" boolean)))
                                      (10 (aload_0))
                                      (11 (getfield (fieldCP "next" "java.util.regex.Pattern$GroupRef" (class "java.util.regex.Pattern$Node"))))
                                      (14 (aload_1))
                                      (15 (invokevirtual
					(methodCP "study" "java.util.regex.Pattern$Node" ((class "java.util.regex.Pattern$TreeInfo")) boolean)))
                                      (18 (ireturn))
                                      (endofcode 19))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Pattern$GroupRef-class-table*
  (make-static-class-decls 
   *java.util.regex.Pattern$GroupRef*))

(defconst *package-name-map* 
  ("java.util.regex.Pattern$GroupRef" . "java.util.regex"))

