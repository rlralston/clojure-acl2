; Pattern$CharProperty-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:47 CDT 2014.
;

(defconst *java.util.regex.Pattern$CharProperty*
 (make-class-def
      '(class "java.util.regex.Pattern$CharProperty"
            "java.util.regex.Pattern$Node"
            (constant_pool)
            (fields)
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.util.regex.Pattern$Node" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isSatisfiedBy"
                              (parameters int)
                              (returntype . boolean)
                              (accessflags  *abstract*  *class* )
                              (code))
                        (method "complement"
                              (parameters )
                              (returntype . (class "java.util.regex.Pattern$CharProperty"))
                              (accessflags  *class* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 9)
                                   (parsedcode
                                      (0 (new (class "java.util.regex.Pattern$CharProperty$1")))
                                      (3 (dup))
                                      (4 (aload_0))
                                      (5 (invokespecial
					(methodCP "<init>" "java.util.regex.Pattern$CharProperty$1" ((class "java.util.regex.Pattern$CharProperty")) void)))
                                      (8 (areturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "match"
                              (parameters (class "java.util.regex.Matcher") int (class "java.lang.CharSequence"))
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 4) (max_locals . 5) (code_length . 56)
                                   (parsedcode
                                      (0 (iload_2)) 
                                      (1 (aload_1)) 
                                      (2 (getfield (fieldCP "to" "java.util.regex.Matcher" int))) 
                                      (5 (if_icmpge 49)) ;;to TAG_0
                                      (8 (aload_3)) 
                                      (9 (iload_2)) 
                                      (10 (invokestatic (methodCP "codePointAt" "java.lang.Character" ((class "java.lang.CharSequence") int) int))) 
                                      (13 (istore 4)) 
                                      (15 (aload_0)) 
                                      (16 (iload 4)) 
                                      (18 (invokevirtual (methodCP "isSatisfiedBy" "java.util.regex.Pattern$CharProperty" (int) boolean))) 
                                      (21 (ifeq 47)) ;;to TAG_1
                                      (24 (aload_0)) 
                                      (25 (getfield (fieldCP "next" "java.util.regex.Pattern$CharProperty" (class "java.util.regex.Pattern$Node")))) 
                                      (28 (aload_1)) 
                                      (29 (iload_2)) 
                                      (30 (iload 4)) 
                                      (32 (invokestatic (methodCP "charCount" "java.lang.Character" (int) int))) 
                                      (35 (iadd)) 
                                      (36 (aload_3)) 
                                      (37 (invokevirtual (methodCP "match" "java.util.regex.Pattern$Node" ((class "java.util.regex.Matcher") int (class "java.lang.CharSequence")) boolean))) 
                                      (40 (ifeq 47)) ;;to TAG_1
                                      (43 (iconst_1)) 
                                      (44 (goto 48))  ;;to TAG_2
                                      (47 (iconst_0)) ;;at TAG_1
                                      (48 (ireturn)) ;;at TAG_2
                                      (49 (aload_1)) ;;at TAG_0
                                      (50 (iconst_1)) 
                                      (51 (putfield (fieldCP "hitEnd" "java.util.regex.Matcher" boolean))) 
                                      (54 (iconst_0)) 
                                      (55 (ireturn)) 
                                      (endofcode 56))
                                   (Exceptions )
                                   (StackMap )))
                        (method "study"
                              (parameters (class "java.util.regex.Pattern$TreeInfo"))
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 29)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (dup))
                                      (2 (getfield (fieldCP "minLength" "java.util.regex.Pattern$TreeInfo" int)))
                                      (5 (iconst_1))
                                      (6 (iadd))
                                      (7 (putfield (fieldCP "minLength" "java.util.regex.Pattern$TreeInfo" int)))
                                      (10 (aload_1))
                                      (11 (dup))
                                      (12 (getfield (fieldCP "maxLength" "java.util.regex.Pattern$TreeInfo" int)))
                                      (15 (iconst_1))
                                      (16 (iadd))
                                      (17 (putfield (fieldCP "maxLength" "java.util.regex.Pattern$TreeInfo" int)))
                                      (20 (aload_0))
                                      (21 (getfield (fieldCP "next" "java.util.regex.Pattern$CharProperty" (class "java.util.regex.Pattern$Node"))))
                                      (24 (aload_1))
                                      (25 (invokevirtual
					(methodCP "study" "java.util.regex.Pattern$Node" ((class "java.util.regex.Pattern$TreeInfo")) boolean)))
                                      (28 (ireturn))
                                      (endofcode 29))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.util.regex.Pattern$1"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.util.regex.Pattern$CharProperty" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *abstract*  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Pattern$CharProperty-class-table*
  (make-static-class-decls 
   *java.util.regex.Pattern$CharProperty*))

(defconst *package-name-map* 
  ("java.util.regex.Pattern$CharProperty" . "java.util.regex"))

