; ReflectionUtils-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:31 CDT 2014.
;

(defconst *java.beans.ReflectionUtils*
 (make-class-def
      '(class "java.beans.ReflectionUtils"
            "java.lang.Object"
            (constant_pool)
            (fields)
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isPrimitive"
                              (parameters (class "java.lang.Class"))
                              (returntype . boolean)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokestatic (methodCP "primitiveTypeFor" "java.beans.ReflectionUtils" ((class "java.lang.Class")) (class "java.lang.Class")))) 
                                      (4 (ifnull 11))  ;;to TAG_0
                                      (7 (iconst_1)) 
                                      (8 (goto 12)) ;;to TAG_1
                                      (11 (iconst_0)) ;;at TAG_0
                                      (12 (ireturn)) ;;at TAG_1
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "primitiveTypeFor"
                              (parameters (class "java.lang.Class"))
                              (returntype . (class "java.lang.Class"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 101)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ldc_w )) 
                                      (4 (if_acmpne 11)) ;;to TAG_0
                                      (7 (getstatic (fieldCP "TYPE" "java.lang.Boolean" (class "java.lang.Class")))) 
                                      (10 (areturn)) 
                                      (11 (aload_0)) ;;at TAG_0
                                      (12 (ldc_w )) 
                                      (15 (if_acmpne 22))  ;;to TAG_1
                                      (18 (getstatic (fieldCP "TYPE" "java.lang.Byte" (class "java.lang.Class")))) 
                                      (21 (areturn)) 
                                      (22 (aload_0)) ;;at TAG_1
                                      (23 (ldc_w )) 
                                      (26 (if_acmpne 33)) ;;to TAG_2
                                      (29 (getstatic (fieldCP "TYPE" "java.lang.Character" (class "java.lang.Class")))) 
                                      (32 (areturn)) 
                                      (33 (aload_0)) ;;at TAG_2
                                      (34 (ldc_w )) 
                                      (37 (if_acmpne 44)) ;;to TAG_3
                                      (40 (getstatic (fieldCP "TYPE" "java.lang.Short" (class "java.lang.Class")))) 
                                      (43 (areturn)) 
                                      (44 (aload_0)) ;;at TAG_3
                                      (45 (ldc_w )) 
                                      (48 (if_acmpne 55)) ;;to TAG_4
                                      (51 (getstatic (fieldCP "TYPE" "java.lang.Integer" (class "java.lang.Class")))) 
                                      (54 (areturn)) 
                                      (55 (aload_0)) ;;at TAG_4
                                      (56 (ldc_w )) 
                                      (59 (if_acmpne 66)) ;;to TAG_5
                                      (62 (getstatic (fieldCP "TYPE" "java.lang.Long" (class "java.lang.Class")))) 
                                      (65 (areturn)) 
                                      (66 (aload_0)) ;;at TAG_5
                                      (67 (ldc_w )) 
                                      (70 (if_acmpne 77)) ;;to TAG_6
                                      (73 (getstatic (fieldCP "TYPE" "java.lang.Float" (class "java.lang.Class")))) 
                                      (76 (areturn)) 
                                      (77 (aload_0)) ;;at TAG_6
                                      (78 (ldc_w )) 
                                      (81 (if_acmpne 88)) ;;to TAG_7
                                      (84 (getstatic (fieldCP "TYPE" "java.lang.Double" (class "java.lang.Class")))) 
                                      (87 (areturn)) 
                                      (88 (aload_0)) ;;at TAG_7
                                      (89 (ldc_w )) 
                                      (92 (if_acmpne 99)) ;;to TAG_8
                                      (95 (getstatic (fieldCP "TYPE" "java.lang.Void" (class "java.lang.Class")))) 
                                      (98 (areturn)) 
                                      (99 (aconst_null)) ;;at TAG_8
                                      (100 (areturn)) 
                                      (endofcode 101))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getPrivateField"
                              (parameters (class "java.lang.Object") (class "java.lang.Class") (class "java.lang.String") (class "java.beans.ExceptionListener"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 5) (code_length . 36)
                                   (parsedcode
                                      (0 (aload_1)) ;;at TAG_1
                                      (1 (aload_2)) 
                                      (2 (invokevirtual (methodCP "getDeclaredField" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.reflect.Field")))) 
                                      (5 (astore 4)) 
                                      (7 (aload 4)) 
                                      (9 (iconst_1)) 
                                      (10 (invokevirtual (methodCP "setAccessible" "java.lang.reflect.Field" (boolean) void))) 
                                      (13 (aload 4)) 
                                      (15 (aload_0)) 
                                      (16 (invokevirtual (methodCP "get" "java.lang.reflect.Field" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (19 (areturn)) ;;at TAG_2
                                      (20 (astore 4)) ;;at TAG_3
                                      (22 (aload_3)) 
                                      (23 (ifnull 34)) ;;to TAG_0
                                      (26 (aload_3)) 
                                      (27 (aload 4)) 
                                      (29 (invokeinterface (methodCP "exceptionThrown" "java.beans.ExceptionListener" ((class "java.lang.Exception")) void) 2)) 
                                      (34 (aconst_null)) ;;at TAG_0
                                      (35 (areturn)) 
                                      (endofcode 36))
                                   (Exceptions 
                                     (handler 0 19  20 (class "java.lang.Exception")))
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *ReflectionUtils-class-table*
  (make-static-class-decls 
   *java.beans.ReflectionUtils*))

(defconst *package-name-map* 
  ("java.beans.ReflectionUtils" . "java.beans"))

