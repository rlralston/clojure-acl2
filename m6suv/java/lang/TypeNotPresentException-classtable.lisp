; TypeNotPresentException-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:36 CDT 2014.
;

(defconst *java.lang.TypeNotPresentException*
 (make-class-def
      '(class "java.lang.TypeNotPresentException"
            "java.lang.RuntimeException"
            (constant_pool
                        (LONG -5101214195716534496)
                        (STRING  "Type ")
                        (STRING  " not present"))
            (fields
                        (field "serialVersionUID" long (accessflags  *class*  *final*  *private*  *static* ) 0)
                        (field "typeName" (class "java.lang.String") (accessflags  *class*  *private* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "java.lang.String") (class "java.lang.Throwable"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 35)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (new (class "java.lang.StringBuilder")))
                                      (4 (dup))
                                      (5 (invokespecial
					(methodCP "<init>" "java.lang.StringBuilder" () void)))
                                      (8 (ldc 1))         ;;STRING:: "Type "
                                      (10 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (13 (aload_1))
                                      (14 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (17 (ldc 2))        ;;STRING:: " not present"
                                      (19 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (22 (invokevirtual
					(methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String"))))
                                      (25 (aload_2))
                                      (26 (invokespecial
					(methodCP "<init>" "java.lang.RuntimeException" ((class "java.lang.String") (class "java.lang.Throwable")) void)))
                                      (29 (aload_0))
                                      (30 (aload_1))
                                      (31 (putfield (fieldCP "typeName" "java.lang.TypeNotPresentException" (class "java.lang.String"))))
                                      (34 (return))
                                      (endofcode 35))
                                   (Exceptions )
                                   (StackMap )))
                        (method "typeName"
                              (parameters )
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "typeName" "java.lang.TypeNotPresentException" (class "java.lang.String"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *TypeNotPresentException-class-table*
  (make-static-class-decls 
   *java.lang.TypeNotPresentException*))

(defconst *package-name-map* 
  ("java.lang.TypeNotPresentException" . "java.lang"))

