; Instrumentation-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:33 CDT 2014.
;

(defconst *java.lang.instrument.Instrumentation*
 (make-class-def
      '(class "java.lang.instrument.Instrumentation"
            "java.lang.Object"
            (constant_pool)
            (fields)
            (methods
                        (method "addTransformer"
                              (parameters (class "java.lang.instrument.ClassFileTransformer") boolean)
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "addTransformer"
                              (parameters (class "java.lang.instrument.ClassFileTransformer"))
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "removeTransformer"
                              (parameters (class "java.lang.instrument.ClassFileTransformer"))
                              (returntype . boolean)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "isRetransformClassesSupported"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "retransformClasses"
                              (parameters (array (class "java.lang.Class")))
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *public*  *transient* )
                              (code))
                        (method "isRedefineClassesSupported"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "redefineClasses"
                              (parameters (array (class "java.lang.instrument.ClassDefinition")))
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *public*  *transient* )
                              (code))
                        (method "isModifiableClass"
                              (parameters (class "java.lang.Class"))
                              (returntype . boolean)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getAllLoadedClasses"
                              (parameters )
                              (returntype . (array (class "java.lang.Class")))
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getInitiatedClasses"
                              (parameters (class "java.lang.ClassLoader"))
                              (returntype . (array (class "java.lang.Class")))
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getObjectSize"
                              (parameters (class "java.lang.Object"))
                              (returntype . long)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "appendToBootstrapClassLoaderSearch"
                              (parameters (class "java.util.jar.JarFile"))
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "appendToSystemClassLoaderSearch"
                              (parameters (class "java.util.jar.JarFile"))
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "isNativeMethodPrefixSupported"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "setNativeMethodPrefix"
                              (parameters (class "java.lang.instrument.ClassFileTransformer") (class "java.lang.String"))
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *public* )
                              (code)))
            (interfaces)
            (accessflags  *abstract*  *interface*  *public* )
            (attributes
              (attribute "SourceFile")))))


(defconst *Instrumentation-class-table*
  (make-static-class-decls 
   *java.lang.instrument.Instrumentation*))

(defconst *package-name-map* 
  ("java.lang.instrument.Instrumentation" . "java.lang.instrument"))

