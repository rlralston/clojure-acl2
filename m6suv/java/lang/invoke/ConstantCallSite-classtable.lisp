; ConstantCallSite-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:34 CDT 2014.
;

(defconst *java.lang.invoke.ConstantCallSite*
 (make-class-def
      '(class "java.lang.invoke.ConstantCallSite"
            "java.lang.invoke.CallSite"
            (constant_pool)
            (fields
                        (field "isFrozen" boolean (accessflags  *class*  *final*  *private* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "java.lang.invoke.MethodHandle"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokespecial
					(methodCP "<init>" "java.lang.invoke.CallSite" ((class "java.lang.invoke.MethodHandle")) void)))
                                      (5 (aload_0))
                                      (6 (iconst_1))
                                      (7 (putfield (fieldCP "isFrozen" "java.lang.invoke.ConstantCallSite" boolean)))
                                      (10 (return))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.invoke.MethodType") (class "java.lang.invoke.MethodHandle"))
                              (returntype . void)
                              (accessflags  *class*  *protected* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 12)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aload_2))
                                      (3 (invokespecial
					(methodCP "<init>" "java.lang.invoke.CallSite" ((class "java.lang.invoke.MethodType") (class "java.lang.invoke.MethodHandle")) void)))
                                      (6 (aload_0))
                                      (7 (iconst_1))
                                      (8 (putfield (fieldCP "isFrozen" "java.lang.invoke.ConstantCallSite" boolean)))
                                      (11 (return))
                                      (endofcode 12))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getTarget"
                              (parameters )
                              (returntype . (class "java.lang.invoke.MethodHandle"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 20)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "isFrozen" "java.lang.invoke.ConstantCallSite" boolean))) 
                                      (4 (ifne 15))  ;;to TAG_0
                                      (7 (new (class "java.lang.IllegalStateException"))) 
                                      (10 (dup)) 
                                      (11 (invokespecial (methodCP "<init>" "java.lang.IllegalStateException" () void))) 
                                      (14 (athrow)) 
                                      (15 (aload_0)) ;;at TAG_0
                                      (16 (getfield (fieldCP "target" "java.lang.invoke.ConstantCallSite" (class "java.lang.invoke.MethodHandle")))) 
                                      (19 (areturn)) 
                                      (endofcode 20))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setTarget"
                              (parameters (class "java.lang.invoke.MethodHandle"))
                              (returntype . void)
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "dynamicInvoker"
                              (parameters )
                              (returntype . (class "java.lang.invoke.MethodHandle"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "getTarget" "java.lang.invoke.ConstantCallSite" () (class "java.lang.invoke.MethodHandle"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *ConstantCallSite-class-table*
  (make-static-class-decls 
   *java.lang.invoke.ConstantCallSite*))

(defconst *package-name-map* 
  ("java.lang.invoke.ConstantCallSite" . "java.lang.invoke"))

