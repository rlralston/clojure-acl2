; ThreadMXBean-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:35 CDT 2014.
;

(defconst *java.lang.management.ThreadMXBean*
 (make-class-def
      '(class "java.lang.management.ThreadMXBean"
            "java.lang.Object"
            (constant_pool)
            (fields)
            (methods
                        (method "getThreadCount"
                              (parameters )
                              (returntype . int)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getPeakThreadCount"
                              (parameters )
                              (returntype . int)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getTotalStartedThreadCount"
                              (parameters )
                              (returntype . long)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getDaemonThreadCount"
                              (parameters )
                              (returntype . int)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getAllThreadIds"
                              (parameters )
                              (returntype . (array long))
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getThreadInfo"
                              (parameters long)
                              (returntype . (class "java.lang.management.ThreadInfo"))
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getThreadInfo"
                              (parameters (array long))
                              (returntype . (array (class "java.lang.management.ThreadInfo")))
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getThreadInfo"
                              (parameters long int)
                              (returntype . (class "java.lang.management.ThreadInfo"))
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getThreadInfo"
                              (parameters (array long) int)
                              (returntype . (array (class "java.lang.management.ThreadInfo")))
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "isThreadContentionMonitoringSupported"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "isThreadContentionMonitoringEnabled"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "setThreadContentionMonitoringEnabled"
                              (parameters boolean)
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getCurrentThreadCpuTime"
                              (parameters )
                              (returntype . long)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getCurrentThreadUserTime"
                              (parameters )
                              (returntype . long)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getThreadCpuTime"
                              (parameters long)
                              (returntype . long)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getThreadUserTime"
                              (parameters long)
                              (returntype . long)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "isThreadCpuTimeSupported"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "isCurrentThreadCpuTimeSupported"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "isThreadCpuTimeEnabled"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "setThreadCpuTimeEnabled"
                              (parameters boolean)
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "findMonitorDeadlockedThreads"
                              (parameters )
                              (returntype . (array long))
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "resetPeakThreadCount"
                              (parameters )
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "findDeadlockedThreads"
                              (parameters )
                              (returntype . (array long))
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "isObjectMonitorUsageSupported"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "isSynchronizerUsageSupported"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "getThreadInfo"
                              (parameters (array long) boolean boolean)
                              (returntype . (array (class "java.lang.management.ThreadInfo")))
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "dumpAllThreads"
                              (parameters boolean boolean)
                              (returntype . (array (class "java.lang.management.ThreadInfo")))
                              (accessflags  *abstract*  *class*  *public* )
                              (code)))
            (interfaces "java.lang.management.PlatformManagedObject")
            (accessflags  *abstract*  *interface*  *public* )
            (attributes
              (attribute "SourceFile")))))


(defconst *ThreadMXBean-class-table*
  (make-static-class-decls 
   *java.lang.management.ThreadMXBean*))

(defconst *package-name-map* 
  ("java.lang.management.ThreadMXBean" . "java.lang.management"))

