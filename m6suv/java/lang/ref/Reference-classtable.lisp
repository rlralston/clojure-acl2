; Reference-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:36 CDT 2014.
;

(defconst *java.lang.ref.Reference*
 (make-class-def
      '(class "java.lang.ref.Reference"
            "java.lang.Object"
            (constant_pool
                        (STRING  "Reference Handler"))
            (fields
                        (field "referent" (class "java.lang.Object") (accessflags  *class*  *private* ) -1)
                        (field "queue" (class "java.lang.ref.ReferenceQueue") (accessflags  *class* ) -1)
                        (field "next" (class "java.lang.ref.Reference") (accessflags  *class* ) -1)
                        (field "discovered" (class "java.lang.ref.Reference") (accessflags  *class*  *private*  *transient* ) -1)
                        (field "lock" (class "java.lang.ref.Reference$Lock") (accessflags  *class*  *private*  *static* ) -1)
                        (field "pending" (class "java.lang.ref.Reference") (accessflags  *class*  *private*  *static* ) -1))
            (methods
                        (method "get"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "referent" "java.lang.ref.Reference" (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "clear"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aconst_null))
                                      (2 (putfield (fieldCP "referent" "java.lang.ref.Reference" (class "java.lang.Object"))))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isEnqueued"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 34)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (dup)) 
                                      (2 (astore_1)) 
                                      (3 (monitorenter)) 
                                      (4 (aload_0)) ;;at TAG_2
                                      (5 (getfield (fieldCP "queue" "java.lang.ref.Reference" (class "java.lang.ref.ReferenceQueue")))) 
                                      (8 (getstatic (fieldCP "NULL" "java.lang.ref.ReferenceQueue" (class "java.lang.ref.ReferenceQueue")))) 
                                      (11 (if_acmpeq 25)) ;;to TAG_0
                                      (14 (aload_0)) 
                                      (15 (getfield (fieldCP "next" "java.lang.ref.Reference" (class "java.lang.ref.Reference")))) 
                                      (18 (ifnull 25)) ;;to TAG_0
                                      (21 (iconst_1)) 
                                      (22 (goto 26)) ;;to TAG_1
                                      (25 (iconst_0)) ;;at TAG_0
                                      (26 (aload_1)) ;;at TAG_1
                                      (27 (monitorexit)) 
                                      (28 (ireturn)) ;;at TAG_3
                                      (29 (astore_2)) ;;at TAG_4
                                      (30 (aload_1)) 
                                      (31 (monitorexit)) 
                                      (32 (aload_2)) ;;at TAG_5
                                      (33 (athrow)) 
                                      (endofcode 34))
                                   (Exceptions 
                                     (handler 4 28  29 (class "java.lang.Throwable"))
                                     (handler 29 32  29 (class "java.lang.Throwable")))
                                   (StackMap )))
                        (method "enqueue"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 9)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "queue" "java.lang.ref.Reference" (class "java.lang.ref.ReferenceQueue"))))
                                      (4 (aload_0))
                                      (5 (invokevirtual
					(methodCP "enqueue" "java.lang.ref.ReferenceQueue" ((class "java.lang.ref.Reference")) boolean)))
                                      (8 (ireturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 7)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aconst_null))
                                      (3 (invokespecial
					(methodCP "<init>" "java.lang.ref.Reference" ((class "java.lang.Object") (class "java.lang.ref.ReferenceQueue")) void)))
                                      (6 (return))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object") (class "java.lang.ref.ReferenceQueue"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 25)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokespecial (methodCP "<init>" "java.lang.Object" () void))) 
                                      (4 (aload_0)) 
                                      (5 (aload_1)) 
                                      (6 (putfield (fieldCP "referent" "java.lang.ref.Reference" (class "java.lang.Object")))) 
                                      (9 (aload_0)) 
                                      (10 (aload_2)) 
                                      (11 (ifnonnull 20))  ;;to TAG_0
                                      (14 (getstatic (fieldCP "NULL" "java.lang.ref.ReferenceQueue" (class "java.lang.ref.ReferenceQueue")))) 
                                      (17 (goto 21)) ;;to TAG_1
                                      (20 (aload_2)) ;;at TAG_0
                                      (21 (putfield (fieldCP "queue" "java.lang.ref.Reference" (class "java.lang.ref.ReferenceQueue")))) ;;at TAG_1
                                      (24 (return)) 
                                      (endofcode 25))
                                   (Exceptions )
                                   (StackMap )))
                        (method "access$100"
                              (parameters )
                              (returntype . (class "java.lang.ref.Reference$Lock"))
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 0) (code_length . 4)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "lock" "java.lang.ref.Reference" (class "java.lang.ref.Reference$Lock"))))
                                      (3 (areturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "access$200"
                              (parameters )
                              (returntype . (class "java.lang.ref.Reference"))
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 0) (code_length . 4)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "pending" "java.lang.ref.Reference" (class "java.lang.ref.Reference"))))
                                      (3 (areturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "access$202"
                              (parameters (class "java.lang.ref.Reference"))
                              (returntype . (class "java.lang.ref.Reference"))
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (dup))
                                      (2 (putstatic (fieldCP "pending" "java.lang.ref.Reference" (class "java.lang.ref.Reference"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 65)
                                   (parsedcode
                                      (0 (new (class "java.lang.ref.Reference$Lock"))) 
                                      (3 (dup)) 
                                      (4 (aconst_null)) 
                                      (5 (invokespecial (methodCP "<init>" "java.lang.ref.Reference$Lock" ((class "java.lang.ref.Reference$1")) void))) 
                                      (8 (putstatic (fieldCP "lock" "java.lang.ref.Reference" (class "java.lang.ref.Reference$Lock")))) 
                                      (11 (aconst_null)) 
                                      (12 (putstatic (fieldCP "pending" "java.lang.ref.Reference" (class "java.lang.ref.Reference")))) 
                                      (15 (invokestatic (methodCP "currentThread" "java.lang.Thread" () (class "java.lang.Thread")))) 
                                      (18 (invokevirtual (methodCP "getThreadGroup" "java.lang.Thread" () (class "java.lang.ThreadGroup")))) 
                                      (21 (astore_0)) 
                                      (22 (aload_0)) 
                                      (23 (astore_1)) 
                                      (24 (aload_1)) ;;at TAG_1
                                      (25 (ifnull 38))  ;;to TAG_0
                                      (28 (aload_1)) 
                                      (29 (astore_0)) 
                                      (30 (aload_0)) 
                                      (31 (invokevirtual (methodCP "getParent" "java.lang.ThreadGroup" () (class "java.lang.ThreadGroup")))) 
                                      (34 (astore_1)) 
                                      (35 (goto 24)) ;;to TAG_1
                                      (38 (new (class "java.lang.ref.Reference$ReferenceHandler"))) ;;at TAG_0
                                      (41 (dup)) 
                                      (42 (aload_0)) 
                                      (43 (ldc 0)) ;;STRING:: "Reference Handler"
                                      (45 (invokespecial (methodCP "<init>" "java.lang.ref.Reference$ReferenceHandler" ((class "java.lang.ThreadGroup") (class "java.lang.String")) void))) 
                                      (48 (astore_1)) 
                                      (49 (aload_1)) 
                                      (50 (bipush 10)) 
                                      (52 (invokevirtual (methodCP "setPriority" "java.lang.Thread" (int) void))) 
                                      (55 (aload_1)) 
                                      (56 (iconst_1)) 
                                      (57 (invokevirtual (methodCP "setDaemon" "java.lang.Thread" (boolean) void))) 
                                      (60 (aload_1)) 
                                      (61 (invokevirtual (methodCP "start" "java.lang.Thread" () void))) 
                                      (64 (return)) 
                                      (endofcode 65))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *abstract*  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "Signature")
              (attribute "InnerClasses")))))


(defconst *Reference-class-table*
  (make-static-class-decls 
   *java.lang.ref.Reference*))

(defconst *package-name-map* 
  ("java.lang.ref.Reference" . "java.lang.ref"))

