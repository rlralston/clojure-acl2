; SimpleFileVisitor-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:39 CDT 2014.
;

(defconst *java.nio.file.SimpleFileVisitor*
 (make-class-def
      '(class "java.nio.file.SimpleFileVisitor"
            "java.lang.Object"
            (constant_pool)
            (fields)
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *protected* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "preVisitDirectory"
                              (parameters (class "java.lang.Object") (class "java.nio.file.attribute.BasicFileAttributes"))
                              (returntype . (class "java.nio.file.FileVisitResult"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 14)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (invokestatic
					(methodCP "requireNonNull" "java.util.Objects" ((class "java.lang.Object")) (class "java.lang.Object"))))
                                      (4 (pop))
                                      (5 (aload_2))
                                      (6 (invokestatic
					(methodCP "requireNonNull" "java.util.Objects" ((class "java.lang.Object")) (class "java.lang.Object"))))
                                      (9 (pop))
                                      (10 (getstatic (fieldCP "CONTINUE" "java.nio.file.FileVisitResult" (class "java.nio.file.FileVisitResult"))))
                                      (13 (areturn))
                                      (endofcode 14))
                                   (Exceptions )
                                   (StackMap )))
                        (method "visitFile"
                              (parameters (class "java.lang.Object") (class "java.nio.file.attribute.BasicFileAttributes"))
                              (returntype . (class "java.nio.file.FileVisitResult"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 14)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (invokestatic
					(methodCP "requireNonNull" "java.util.Objects" ((class "java.lang.Object")) (class "java.lang.Object"))))
                                      (4 (pop))
                                      (5 (aload_2))
                                      (6 (invokestatic
					(methodCP "requireNonNull" "java.util.Objects" ((class "java.lang.Object")) (class "java.lang.Object"))))
                                      (9 (pop))
                                      (10 (getstatic (fieldCP "CONTINUE" "java.nio.file.FileVisitResult" (class "java.nio.file.FileVisitResult"))))
                                      (13 (areturn))
                                      (endofcode 14))
                                   (Exceptions )
                                   (StackMap )))
                        (method "visitFileFailed"
                              (parameters (class "java.lang.Object") (class "java.io.IOException"))
                              (returntype . (class "java.nio.file.FileVisitResult"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 7)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (invokestatic
					(methodCP "requireNonNull" "java.util.Objects" ((class "java.lang.Object")) (class "java.lang.Object"))))
                                      (4 (pop))
                                      (5 (aload_2))
                                      (6 (athrow))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap )))
                        (method "postVisitDirectory"
                              (parameters (class "java.lang.Object") (class "java.io.IOException"))
                              (returntype . (class "java.nio.file.FileVisitResult"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (invokestatic (methodCP "requireNonNull" "java.util.Objects" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (4 (pop)) 
                                      (5 (aload_2)) 
                                      (6 (ifnull 11))  ;;to TAG_0
                                      (9 (aload_2)) 
                                      (10 (athrow)) 
                                      (11 (getstatic (fieldCP "CONTINUE" "java.nio.file.FileVisitResult" (class "java.nio.file.FileVisitResult")))) ;;at TAG_0
                                      (14 (areturn)) 
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "java.nio.file.FileVisitor")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "Signature")))))


(defconst *SimpleFileVisitor-class-table*
  (make-static-class-decls 
   *java.nio.file.SimpleFileVisitor*))

(defconst *package-name-map* 
  ("java.nio.file.SimpleFileVisitor" . "java.nio.file"))

