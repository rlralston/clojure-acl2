; Paths-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:39 CDT 2014.
;

(defconst *java.nio.file.Paths*
 (make-class-def
      '(class "java.nio.file.Paths"
            "java.lang.Object"
            (constant_pool
                        (STRING  "Missing scheme")
                        (STRING  "file")
                        (STRING  "Provider \"")
                        (STRING  "\" not installed"))
            (fields)
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "get"
                              (parameters (class "java.lang.String") (array (class "java.lang.String")))
                              (returntype . (class "java.nio.file.Path"))
                              (accessflags  *class*  *public*  *static*  *transient* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 9)
                                   (parsedcode
                                      (0 (invokestatic
					(methodCP "getDefault" "java.nio.file.FileSystems" () (class "java.nio.file.FileSystem"))))
                                      (3 (aload_0))
                                      (4 (aload_1))
                                      (5 (invokevirtual
					(methodCP "getPath" "java.nio.file.FileSystem" ((class "java.lang.String") (array (class "java.lang.String"))) (class "java.nio.file.Path"))))
                                      (8 (areturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "get"
                              (parameters (class "java.net.URI"))
                              (returntype . (class "java.nio.file.Path"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 119)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "getScheme" "java.net.URI" () (class "java.lang.String")))) 
                                      (4 (astore_1)) 
                                      (5 (aload_1)) 
                                      (6 (ifnonnull 19)) ;;to TAG_0
                                      (9 (new (class "java.lang.IllegalArgumentException"))) 
                                      (12 (dup)) 
                                      (13 (ldc 0)) ;;STRING:: "Missing scheme"
                                      (15 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (18 (athrow)) 
                                      (19 (aload_1)) ;;at TAG_0
                                      (20 (ldc 1)) ;;STRING:: "file"
                                      (22 (invokevirtual (methodCP "equalsIgnoreCase" "java.lang.String" ((class "java.lang.String")) boolean))) 
                                      (25 (ifeq 39)) ;;to TAG_1
                                      (28 (invokestatic (methodCP "getDefault" "java.nio.file.FileSystems" () (class "java.nio.file.FileSystem")))) 
                                      (31 (invokevirtual (methodCP "provider" "java.nio.file.FileSystem" () (class "java.nio.file.spi.FileSystemProvider")))) 
                                      (34 (aload_0)) 
                                      (35 (invokevirtual (methodCP "getPath" "java.nio.file.spi.FileSystemProvider" ((class "java.net.URI")) (class "java.nio.file.Path")))) 
                                      (38 (areturn)) 
                                      (39 (invokestatic (methodCP "installedProviders" "java.nio.file.spi.FileSystemProvider" () (class "java.util.List")))) ;;at TAG_1
                                      (42 (invokeinterface (methodCP "iterator" "java.util.List" () (class "java.util.Iterator")) 1)) 
                                      (47 (astore_2)) 
                                      (48 (aload_2)) ;;at TAG_4
                                      (49 (invokeinterface (methodCP "hasNext" "java.util.Iterator" () boolean) 1)) 
                                      (54 (ifeq 87))  ;;to TAG_2
                                      (57 (aload_2)) 
                                      (58 (invokeinterface (methodCP "next" "java.util.Iterator" () (class "java.lang.Object")) 1)) 
                                      (63 (checkcast (class "java.nio.file.spi.FileSystemProvider"))) 
                                      (66 (astore_3)) 
                                      (67 (aload_3)) 
                                      (68 (invokevirtual (methodCP "getScheme" "java.nio.file.spi.FileSystemProvider" () (class "java.lang.String")))) 
                                      (71 (aload_1)) 
                                      (72 (invokevirtual (methodCP "equalsIgnoreCase" "java.lang.String" ((class "java.lang.String")) boolean))) 
                                      (75 (ifeq 84)) ;;to TAG_3
                                      (78 (aload_3)) 
                                      (79 (aload_0)) 
                                      (80 (invokevirtual (methodCP "getPath" "java.nio.file.spi.FileSystemProvider" ((class "java.net.URI")) (class "java.nio.file.Path")))) 
                                      (83 (areturn)) 
                                      (84 (goto 48)) ;;to TAG_4;;at TAG_3
                                      (87 (new (class "java.nio.file.FileSystemNotFoundException"))) ;;at TAG_2
                                      (90 (dup)) 
                                      (91 (new (class "java.lang.StringBuilder"))) 
                                      (94 (dup)) 
                                      (95 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (98 (ldc 2)) ;;STRING:: "Provider \""
                                      (100 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (103 (aload_1)) 
                                      (104 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (107 (ldc 3)) ;;STRING:: "\" not installed"
                                      (109 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (112 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (115 (invokespecial (methodCP "<init>" "java.nio.file.FileSystemNotFoundException" ((class "java.lang.String")) void))) 
                                      (118 (athrow)) 
                                      (endofcode 119))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *Paths-class-table*
  (make-static-class-decls 
   *java.nio.file.Paths*))

(defconst *package-name-map* 
  ("java.nio.file.Paths" . "java.nio.file"))

