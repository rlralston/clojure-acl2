; DirectoryIteratorException-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:39 CDT 2014.
;

(defconst *java.nio.file.DirectoryIteratorException*
 (make-class-def
      '(class "java.nio.file.DirectoryIteratorException"
            "java.util.ConcurrentModificationException"
            (constant_pool
                        (LONG -6012699886086212874)
                        (STRING  "Cause must be an IOException"))
            (fields
                        (field "serialVersionUID" long (accessflags  *class*  *final*  *private*  *static* ) 0))
            (methods
                        (method "<init>"
                              (parameters (class "java.io.IOException"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 12)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokestatic
					(methodCP "requireNonNull" "java.util.Objects" ((class "java.lang.Object")) (class "java.lang.Object"))))
                                      (5 (checkcast (class "java.lang.Throwable")))
                                      (8 (invokespecial
					(methodCP "<init>" "java.util.ConcurrentModificationException" ((class "java.lang.Throwable")) void)))
                                      (11 (return))
                                      (endofcode 12))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getCause"
                              (parameters )
                              (returntype . (class "java.io.IOException"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "getCause" "java.util.ConcurrentModificationException" () (class "java.lang.Throwable"))))
                                      (4 (checkcast (class "java.io.IOException")))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "readObject"
                              (parameters (class "java.io.ObjectInputStream"))
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 27)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (invokevirtual (methodCP "defaultReadObject" "java.io.ObjectInputStream" () void))) 
                                      (4 (aload_0)) 
                                      (5 (invokespecial (methodCP "getCause" "java.util.ConcurrentModificationException" () (class "java.lang.Throwable")))) 
                                      (8 (astore_2)) 
                                      (9 (aload_2)) 
                                      (10 (instanceof (class "java.io.IOException"))) 
                                      (13 (ifne 26))  ;;to TAG_0
                                      (16 (new (class "java.io.InvalidObjectException"))) 
                                      (19 (dup)) 
                                      (20 (ldc 1)) ;;STRING:: "Cause must be an IOException"
                                      (22 (invokespecial (methodCP "<init>" "java.io.InvalidObjectException" ((class "java.lang.String")) void))) 
                                      (25 (athrow)) 
                                      (26 (return)) ;;at TAG_0
                                      (endofcode 27))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getCause"
                              (parameters )
                              (returntype . (class "java.lang.Throwable"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "getCause" "java.nio.file.DirectoryIteratorException" () (class "java.io.IOException"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *DirectoryIteratorException-class-table*
  (make-static-class-decls 
   *java.nio.file.DirectoryIteratorException*))

(defconst *package-name-map* 
  ("java.nio.file.DirectoryIteratorException" . "java.nio.file"))

