; TempFileHelper$PosixPermissions-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:39 CDT 2014.
;

(defconst *java.nio.file.TempFileHelper$PosixPermissions*
 (make-class-def
      '(class "java.nio.file.TempFileHelper$PosixPermissions"
            "java.lang.Object"
            (constant_pool)
            (fields
                        (field "filePermissions" (class "java.nio.file.attribute.FileAttribute") (accessflags  *class*  *final*  *static* ) -1)
                        (field "dirPermissions" (class "java.nio.file.attribute.FileAttribute") (accessflags  *class*  *final*  *static* ) -1))
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 0) (code_length . 34)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "OWNER_READ" "java.nio.file.attribute.PosixFilePermission" (class "java.nio.file.attribute.PosixFilePermission"))))
                                      (3 (getstatic (fieldCP "OWNER_WRITE" "java.nio.file.attribute.PosixFilePermission" (class "java.nio.file.attribute.PosixFilePermission"))))
                                      (6 (invokestatic
					(methodCP "of" "java.util.EnumSet" ((class "java.lang.Enum") (class "java.lang.Enum")) (class "java.util.EnumSet"))))
                                      (9 (invokestatic
					(methodCP "asFileAttribute" "java.nio.file.attribute.PosixFilePermissions" ((class "java.util.Set")) (class "java.nio.file.attribute.FileAttribute"))))
                                      (12 (putstatic (fieldCP "filePermissions" "java.nio.file.TempFileHelper$PosixPermissions" (class "java.nio.file.attribute.FileAttribute"))))
                                      (15 (getstatic (fieldCP "OWNER_READ" "java.nio.file.attribute.PosixFilePermission" (class "java.nio.file.attribute.PosixFilePermission"))))
                                      (18 (getstatic (fieldCP "OWNER_WRITE" "java.nio.file.attribute.PosixFilePermission" (class "java.nio.file.attribute.PosixFilePermission"))))
                                      (21 (getstatic (fieldCP "OWNER_EXECUTE" "java.nio.file.attribute.PosixFilePermission" (class "java.nio.file.attribute.PosixFilePermission"))))
                                      (24 (invokestatic
					(methodCP "of" "java.util.EnumSet" ((class "java.lang.Enum") (class "java.lang.Enum") (class "java.lang.Enum")) (class "java.util.EnumSet"))))
                                      (27 (invokestatic
					(methodCP "asFileAttribute" "java.nio.file.attribute.PosixFilePermissions" ((class "java.util.Set")) (class "java.nio.file.attribute.FileAttribute"))))
                                      (30 (putstatic (fieldCP "dirPermissions" "java.nio.file.TempFileHelper$PosixPermissions" (class "java.nio.file.attribute.FileAttribute"))))
                                      (33 (return))
                                      (endofcode 34))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *TempFileHelper$PosixPermissions-class-table*
  (make-static-class-decls 
   *java.nio.file.TempFileHelper$PosixPermissions*))

(defconst *package-name-map* 
  ("java.nio.file.TempFileHelper$PosixPermissions" . "java.nio.file"))

