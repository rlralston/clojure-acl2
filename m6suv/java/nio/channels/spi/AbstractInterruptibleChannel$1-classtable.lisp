; AbstractInterruptibleChannel$1-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:38 CDT 2014.
;

(defconst *java.nio.channels.spi.AbstractInterruptibleChannel$1*
 (make-class-def
      '(class "java.nio.channels.spi.AbstractInterruptibleChannel$1"
            "java.lang.Object"
            (constant_pool)
            (fields
                        (field "this$0" (class "java.nio.channels.spi.AbstractInterruptibleChannel") (accessflags  *class*  *final* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "java.nio.channels.spi.AbstractInterruptibleChannel"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (putfield (fieldCP "this$0" "java.nio.channels.spi.AbstractInterruptibleChannel$1" (class "java.nio.channels.spi.AbstractInterruptibleChannel"))))
                                      (5 (aload_0))
                                      (6 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "interrupt"
                              (parameters (class "java.lang.Thread"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 5) (code_length . 65)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "this$0" "java.nio.channels.spi.AbstractInterruptibleChannel$1" (class "java.nio.channels.spi.AbstractInterruptibleChannel")))) 
                                      (4 (invokestatic (methodCP "access$000" "java.nio.channels.spi.AbstractInterruptibleChannel" ((class "java.nio.channels.spi.AbstractInterruptibleChannel")) (class "java.lang.Object")))) 
                                      (7 (dup)) 
                                      (8 (astore_2)) 
                                      (9 (monitorenter)) 
                                      (10 (aload_0)) ;;at TAG_6
                                      (11 (getfield (fieldCP "this$0" "java.nio.channels.spi.AbstractInterruptibleChannel$1" (class "java.nio.channels.spi.AbstractInterruptibleChannel")))) 
                                      (14 (invokestatic (methodCP "access$100" "java.nio.channels.spi.AbstractInterruptibleChannel" ((class "java.nio.channels.spi.AbstractInterruptibleChannel")) boolean))) 
                                      (17 (ifne 23)) ;;to TAG_0
                                      (20 (aload_2)) 
                                      (21 (monitorexit)) 
                                      (22 (return)) ;;at TAG_7
                                      (23 (aload_0)) ;;at TAG_0
                                      (24 (getfield (fieldCP "this$0" "java.nio.channels.spi.AbstractInterruptibleChannel$1" (class "java.nio.channels.spi.AbstractInterruptibleChannel")))) 
                                      (27 (iconst_0)) 
                                      (28 (invokestatic (methodCP "access$102" "java.nio.channels.spi.AbstractInterruptibleChannel" ((class "java.nio.channels.spi.AbstractInterruptibleChannel") boolean) boolean))) 
                                      (31 (pop)) 
                                      (32 (aload_0)) 
                                      (33 (getfield (fieldCP "this$0" "java.nio.channels.spi.AbstractInterruptibleChannel$1" (class "java.nio.channels.spi.AbstractInterruptibleChannel")))) 
                                      (36 (aload_1)) 
                                      (37 (invokestatic (methodCP "access$202" "java.nio.channels.spi.AbstractInterruptibleChannel" ((class "java.nio.channels.spi.AbstractInterruptibleChannel") (class "java.lang.Thread")) (class "java.lang.Thread")))) 
                                      (40 (pop)) 
                                      (41 (aload_0)) ;;at TAG_3
                                      (42 (getfield (fieldCP "this$0" "java.nio.channels.spi.AbstractInterruptibleChannel$1" (class "java.nio.channels.spi.AbstractInterruptibleChannel")))) 
                                      (45 (invokevirtual (methodCP "implCloseChannel" "java.nio.channels.spi.AbstractInterruptibleChannel" () void))) 
                                      (48 (goto 52))  ;;to TAG_1;;at TAG_4
                                      (51 (astore_3)) ;;at TAG_5
                                      (52 (aload_2)) ;;at TAG_1
                                      (53 (monitorexit)) 
                                      (54 (goto 64)) ;;to TAG_2;;at TAG_9
                                      (57 (astore 4)) ;;at TAG_8
                                      (59 (aload_2)) 
                                      (60 (monitorexit)) 
                                      (61 (aload 4)) ;;at TAG_10
                                      (63 (athrow)) 
                                      (64 (return)) ;;at TAG_2
                                      (endofcode 65))
                                   (Exceptions 
                                     (handler 41 48  51 (class "java.io.IOException"))
                                     (handler 10 22  57 (class "java.lang.Throwable"))
                                     (handler 23 54  57 (class "java.lang.Throwable"))
                                     (handler 57 61  57 (class "java.lang.Throwable")))
                                   (StackMap ))))
            (interfaces "sun.nio.ch.Interruptible")
            (accessflags  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "EnclosingMethod")
              (attribute "InnerClasses")))))


(defconst *AbstractInterruptibleChannel$1-class-table*
  (make-static-class-decls 
   *java.nio.channels.spi.AbstractInterruptibleChannel$1*))

(defconst *package-name-map* 
  ("java.nio.channels.spi.AbstractInterruptibleChannel$1" . "java.nio.channels.spi"))

