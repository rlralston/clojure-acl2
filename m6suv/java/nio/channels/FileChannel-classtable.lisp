; FileChannel-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:38 CDT 2014.
;

(defconst *java.nio.channels.FileChannel*
 (make-class-def
      '(class "java.nio.channels.FileChannel"
            "java.nio.channels.spi.AbstractInterruptibleChannel"
            (constant_pool
                        (LONG 9223372036854775807))
            (fields
                        (field "NO_ATTRIBUTES" (array (class "java.nio.file.attribute.FileAttribute")) (accessflags  *class*  *final*  *private*  *static* ) -1))
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *protected* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.nio.channels.spi.AbstractInterruptibleChannel" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "open"
                              (parameters (class "java.nio.file.Path") (class "java.util.Set") (array (class "java.nio.file.attribute.FileAttribute")))
                              (returntype . (class "java.nio.channels.FileChannel"))
                              (accessflags  *class*  *public*  *static*  *transient* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 18)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokeinterface
					(methodCP "getFileSystem" "java.nio.file.Path" () (class "java.nio.file.FileSystem")) 1))
                                      (6 (invokevirtual
					(methodCP "provider" "java.nio.file.FileSystem" () (class "java.nio.file.spi.FileSystemProvider"))))
                                      (9 (astore_3))
                                      (10 (aload_3))
                                      (11 (aload_0))
                                      (12 (aload_1))
                                      (13 (aload_2))
                                      (14 (invokevirtual
					(methodCP "newFileChannel" "java.nio.file.spi.FileSystemProvider" ((class "java.nio.file.Path") (class "java.util.Set") (array (class "java.nio.file.attribute.FileAttribute"))) (class "java.nio.channels.FileChannel"))))
                                      (17 (areturn))
                                      (endofcode 18))
                                   (Exceptions )
                                   (StackMap )))
                        (method "open"
                              (parameters (class "java.nio.file.Path") (array (class "java.nio.file.OpenOption")))
                              (returntype . (class "java.nio.channels.FileChannel"))
                              (accessflags  *class*  *public*  *static*  *transient* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 25)
                                   (parsedcode
                                      (0 (new (class "java.util.HashSet")))
                                      (3 (dup))
                                      (4 (aload_1))
                                      (5 (arraylength))
                                      (6 (invokespecial
					(methodCP "<init>" "java.util.HashSet" (int) void)))
                                      (9 (astore_2))
                                      (10 (aload_2))
                                      (11 (aload_1))
                                      (12 (invokestatic
					(methodCP "addAll" "java.util.Collections" ((class "java.util.Collection") (array (class "java.lang.Object"))) boolean)))
                                      (15 (pop))
                                      (16 (aload_0))
                                      (17 (aload_2))
                                      (18 (getstatic (fieldCP "NO_ATTRIBUTES" "java.nio.channels.FileChannel" (array (class "java.nio.file.attribute.FileAttribute")))))
                                      (21 (invokestatic
					(methodCP "open" "java.nio.channels.FileChannel" ((class "java.nio.file.Path") (class "java.util.Set") (array (class "java.nio.file.attribute.FileAttribute"))) (class "java.nio.channels.FileChannel"))))
                                      (24 (areturn))
                                      (endofcode 25))
                                   (Exceptions )
                                   (StackMap )))
                        (method "read"
                              (parameters (class "java.nio.ByteBuffer"))
                              (returntype . int)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "read"
                              (parameters (array (class "java.nio.ByteBuffer")) int int)
                              (returntype . long)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "read"
                              (parameters (array (class "java.nio.ByteBuffer")))
                              (returntype . long)
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 9)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (iconst_0))
                                      (3 (aload_1))
                                      (4 (arraylength))
                                      (5 (invokevirtual
					(methodCP "read" "java.nio.channels.FileChannel" ((array (class "java.nio.ByteBuffer")) int int) long)))
                                      (8 (lreturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "write"
                              (parameters (class "java.nio.ByteBuffer"))
                              (returntype . int)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "write"
                              (parameters (array (class "java.nio.ByteBuffer")) int int)
                              (returntype . long)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "write"
                              (parameters (array (class "java.nio.ByteBuffer")))
                              (returntype . long)
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 9)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (iconst_0))
                                      (3 (aload_1))
                                      (4 (arraylength))
                                      (5 (invokevirtual
					(methodCP "write" "java.nio.channels.FileChannel" ((array (class "java.nio.ByteBuffer")) int int) long)))
                                      (8 (lreturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "position"
                              (parameters )
                              (returntype . long)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "position"
                              (parameters long)
                              (returntype . (class "java.nio.channels.FileChannel"))
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "size"
                              (parameters )
                              (returntype . long)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "truncate"
                              (parameters long)
                              (returntype . (class "java.nio.channels.FileChannel"))
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "force"
                              (parameters boolean)
                              (returntype . void)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "transferTo"
                              (parameters long long (class "java.nio.channels.WritableByteChannel"))
                              (returntype . long)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "transferFrom"
                              (parameters (class "java.nio.channels.ReadableByteChannel") long long)
                              (returntype . long)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "read"
                              (parameters (class "java.nio.ByteBuffer") long)
                              (returntype . int)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "write"
                              (parameters (class "java.nio.ByteBuffer") long)
                              (returntype . int)
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "map"
                              (parameters (class "java.nio.channels.FileChannel$MapMode") long long)
                              (returntype . (class "java.nio.MappedByteBuffer"))
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "lock"
                              (parameters long long boolean)
                              (returntype . (class "java.nio.channels.FileLock"))
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "lock"
                              (parameters )
                              (returntype . (class "java.nio.channels.FileLock"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 1) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (lconst_0))
                                      (2 (ldc2_w 0))      ;; LONG:: "9223372036854775807"
                                      (5 (iconst_0))
                                      (6 (invokevirtual
					(methodCP "lock" "java.nio.channels.FileChannel" (long long boolean) (class "java.nio.channels.FileLock"))))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "tryLock"
                              (parameters long long boolean)
                              (returntype . (class "java.nio.channels.FileLock"))
                              (accessflags  *abstract*  *class*  *public* )
                              (code))
                        (method "tryLock"
                              (parameters )
                              (returntype . (class "java.nio.channels.FileLock"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 1) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (lconst_0))
                                      (2 (ldc2_w 0))      ;; LONG:: "9223372036854775807"
                                      (5 (iconst_0))
                                      (6 (invokevirtual
					(methodCP "tryLock" "java.nio.channels.FileChannel" (long long boolean) (class "java.nio.channels.FileLock"))))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "truncate"
                              (parameters long)
                              (returntype . (class "java.nio.channels.SeekableByteChannel"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (lload_1))
                                      (2 (invokevirtual
					(methodCP "truncate" "java.nio.channels.FileChannel" (long) (class "java.nio.channels.FileChannel"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "position"
                              (parameters long)
                              (returntype . (class "java.nio.channels.SeekableByteChannel"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (lload_1))
                                      (2 (invokevirtual
					(methodCP "position" "java.nio.channels.FileChannel" (long) (class "java.nio.channels.FileChannel"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 0) (code_length . 8)
                                   (parsedcode
                                      (0 (iconst_0))
                                      (1 (anewarray (class "java.nio.file.attribute.FileAttribute")))
                                      (4 (putstatic (fieldCP "NO_ATTRIBUTES" "java.nio.channels.FileChannel" (array (class "java.nio.file.attribute.FileAttribute")))))
                                      (7 (return))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "java.nio.channels.SeekableByteChannel" "java.nio.channels.GatheringByteChannel" "java.nio.channels.ScatteringByteChannel")
            (accessflags  *abstract*  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *FileChannel-class-table*
  (make-static-class-decls 
   *java.nio.channels.FileChannel*))

(defconst *package-name-map* 
  ("java.nio.channels.FileChannel" . "java.nio.channels"))

