; ECParameterSpec-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:39:41 CDT 2014.
;

(defconst *java.security.spec.ECParameterSpec*
 (make-class-def
      '(class "java.security.spec.ECParameterSpec"
            "java.lang.Object"
            (constant_pool
                        (STRING  "curve is null")
                        (STRING  "g is null")
                        (STRING  "n is null")
                        (STRING  "n is not positive")
                        (STRING  "h is not positive"))
            (fields
                        (field "curve" (class "java.security.spec.EllipticCurve") (accessflags  *class*  *final*  *private* ) -1)
                        (field "g" (class "java.security.spec.ECPoint") (accessflags  *class*  *final*  *private* ) -1)
                        (field "n" (class "java.math.BigInteger") (accessflags  *class*  *final*  *private* ) -1)
                        (field "h" int (accessflags  *class*  *final*  *private* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "java.security.spec.EllipticCurve") (class "java.security.spec.ECPoint") (class "java.math.BigInteger") int)
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 5) (code_length . 101)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokespecial (methodCP "<init>" "java.lang.Object" () void))) 
                                      (4 (aload_1)) 
                                      (5 (ifnonnull 18)) ;;to TAG_0
                                      (8 (new (class "java.lang.NullPointerException"))) 
                                      (11 (dup)) 
                                      (12 (ldc 0)) ;;STRING:: "curve is null"
                                      (14 (invokespecial (methodCP "<init>" "java.lang.NullPointerException" ((class "java.lang.String")) void))) 
                                      (17 (athrow)) 
                                      (18 (aload_2)) ;;at TAG_0
                                      (19 (ifnonnull 32)) ;;to TAG_1
                                      (22 (new (class "java.lang.NullPointerException"))) 
                                      (25 (dup)) 
                                      (26 (ldc 1)) ;;STRING:: "g is null"
                                      (28 (invokespecial (methodCP "<init>" "java.lang.NullPointerException" ((class "java.lang.String")) void))) 
                                      (31 (athrow)) 
                                      (32 (aload_3)) ;;at TAG_1
                                      (33 (ifnonnull 46))  ;;to TAG_2
                                      (36 (new (class "java.lang.NullPointerException"))) 
                                      (39 (dup)) 
                                      (40 (ldc 2)) ;;STRING:: "n is null"
                                      (42 (invokespecial (methodCP "<init>" "java.lang.NullPointerException" ((class "java.lang.String")) void))) 
                                      (45 (athrow)) 
                                      (46 (aload_3)) ;;at TAG_2
                                      (47 (invokevirtual (methodCP "signum" "java.math.BigInteger" () int))) 
                                      (50 (iconst_1)) 
                                      (51 (if_icmpeq 64)) ;;to TAG_3
                                      (54 (new (class "java.lang.IllegalArgumentException"))) 
                                      (57 (dup)) 
                                      (58 (ldc 3)) ;;STRING:: "n is not positive"
                                      (60 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (63 (athrow)) 
                                      (64 (iload 4)) ;;at TAG_3
                                      (66 (ifgt 79)) ;;to TAG_4
                                      (69 (new (class "java.lang.IllegalArgumentException"))) 
                                      (72 (dup)) 
                                      (73 (ldc 4)) ;;STRING:: "h is not positive"
                                      (75 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (78 (athrow)) 
                                      (79 (aload_0)) ;;at TAG_4
                                      (80 (aload_1)) 
                                      (81 (putfield (fieldCP "curve" "java.security.spec.ECParameterSpec" (class "java.security.spec.EllipticCurve")))) 
                                      (84 (aload_0)) 
                                      (85 (aload_2)) 
                                      (86 (putfield (fieldCP "g" "java.security.spec.ECParameterSpec" (class "java.security.spec.ECPoint")))) 
                                      (89 (aload_0)) 
                                      (90 (aload_3)) 
                                      (91 (putfield (fieldCP "n" "java.security.spec.ECParameterSpec" (class "java.math.BigInteger")))) 
                                      (94 (aload_0)) 
                                      (95 (iload 4)) 
                                      (97 (putfield (fieldCP "h" "java.security.spec.ECParameterSpec" int))) 
                                      (100 (return)) 
                                      (endofcode 101))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getCurve"
                              (parameters )
                              (returntype . (class "java.security.spec.EllipticCurve"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "curve" "java.security.spec.ECParameterSpec" (class "java.security.spec.EllipticCurve"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getGenerator"
                              (parameters )
                              (returntype . (class "java.security.spec.ECPoint"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "g" "java.security.spec.ECParameterSpec" (class "java.security.spec.ECPoint"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getOrder"
                              (parameters )
                              (returntype . (class "java.math.BigInteger"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "n" "java.security.spec.ECParameterSpec" (class "java.math.BigInteger"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getCofactor"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "h" "java.security.spec.ECParameterSpec" int)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "java.security.spec.AlgorithmParameterSpec")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *ECParameterSpec-class-table*
  (make-static-class-decls 
   *java.security.spec.ECParameterSpec*))

(defconst *package-name-map* 
  ("java.security.spec.ECParameterSpec" . "java.security.spec"))

