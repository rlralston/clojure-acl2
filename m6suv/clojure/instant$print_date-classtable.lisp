; instant$print_date-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:49 CDT 2014.
;

(defconst *clojure.instant$print_date*
 (make-class-def
      '(class "clojure.instant$print_date"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.instant")
                        (STRING  "thread-local-utc-date-format")
                        (STRING  "get")
                        (STRING  "#inst \"")
                        (STRING  "write")
                        (STRING  "format")
                        (STRING  "\""))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 14)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.instant"
                                      (2 (ldc 1))         ;;STRING:: "thread-local-utc-date-format"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.instant$print_date" (class "clojure.lang.Var"))))
                                      (13 (return))
                                      (endofcode 14))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 12) (max_locals . 4) (code_length . 74)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.instant$print_date" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (ldc 2))         ;;STRING:: "get"
                                      (8 (invokestatic
					(methodCP "invokeNoArgInstanceMember" "clojure.lang.Reflector" ((class "java.lang.Object") (class "java.lang.String")) (class "java.lang.Object"))))
                                      (11 (astore_3))
                                      (12 (aload_2))
                                      (13 (checkcast (class "java.io.Writer")))
                                      (16 (ldc 3))        ;;STRING:: "#inst \""
                                      (18 (checkcast (class "java.lang.String")))
                                      (21 (invokevirtual
					(methodCP "write" "java.io.Writer" ((class "java.lang.String")) void)))
                                      (24 (aconst_null))
                                      (25 (pop))
                                      (26 (aload_2))
                                      (27 (ldc 4))        ;;STRING:: "write"
                                      (29 (iconst_1))
                                      (30 (anewarray (class "java.lang.Object")))
                                      (33 (dup))
                                      (34 (iconst_0))
                                      (35 (aload_3))
                                      (36 (aconst_null))
                                      (37 (astore_3))
                                      (38 (ldc 5))        ;;STRING:: "format"
                                      (40 (iconst_1))
                                      (41 (anewarray (class "java.lang.Object")))
                                      (44 (dup))
                                      (45 (iconst_0))
                                      (46 (aload_1))
                                      (47 (aconst_null))
                                      (48 (astore_1))
                                      (49 (aastore))
                                      (50 (invokestatic
					(methodCP "invokeInstanceMethod" "clojure.lang.Reflector" ((class "java.lang.Object") (class "java.lang.String") (array (class "java.lang.Object"))) (class "java.lang.Object"))))
                                      (53 (aastore))
                                      (54 (invokestatic
					(methodCP "invokeInstanceMethod" "clojure.lang.Reflector" ((class "java.lang.Object") (class "java.lang.String") (array (class "java.lang.Object"))) (class "java.lang.Object"))))
                                      (57 (pop))
                                      (58 (aload_2))
                                      (59 (aconst_null))
                                      (60 (astore_2))
                                      (61 (checkcast (class "java.io.Writer")))
                                      (64 (ldc 6))        ;;STRING:: "\""
                                      (66 (checkcast (class "java.lang.String")))
                                      (69 (invokevirtual
					(methodCP "write" "java.io.Writer" ((class "java.lang.String")) void)))
                                      (72 (aconst_null))
                                      (73 (areturn))
                                      (endofcode 74))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *instant$print_date-class-table*
  (make-static-class-decls 
   *clojure.instant$print_date*))

(defconst *package-name-map* 
  ("clojure.instant$print_date" . "clojure"))

