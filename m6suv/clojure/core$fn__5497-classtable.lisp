; core$fn__5497-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:42 CDT 2014.
;

(defconst *clojure.core$fn__5497*
 (make-class-def
      '(class "clojure.core$fn__5497"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "print-sequential")
                        (STRING  "format")
                        (STRING  "class")
                        (STRING  "instance?")
                        (STRING  "agent-error")
                        (STRING  "pr-on")
                        (STRING  "list")
                        (STRING  "not")
                        (STRING  "pending")
                        (STRING  "deref")
                        (STRING  "#<%s@%x%s: ")
                        (STRING  " FAILED")
                        (STRING  "")
                        (STRING  ">"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 130)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "print-sequential"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$fn__5497" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "format"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$fn__5497" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "class"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$fn__5497" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "instance?"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.core$fn__5497" (class "clojure.lang.Var"))))
                                      (52 (ldc 0))        ;;STRING:: "clojure.core"
                                      (54 (ldc 5))        ;;STRING:: "agent-error"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.core$fn__5497" (class "clojure.lang.Var"))))
                                      (65 (ldc 0))        ;;STRING:: "clojure.core"
                                      (67 (ldc 6))        ;;STRING:: "pr-on"
                                      (69 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (72 (checkcast (class "clojure.lang.Var")))
                                      (75 (putstatic (fieldCP "const__5" "clojure.core$fn__5497" (class "clojure.lang.Var"))))
                                      (78 (ldc 0))        ;;STRING:: "clojure.core"
                                      (80 (ldc 7))        ;;STRING:: "list"
                                      (82 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (85 (checkcast (class "clojure.lang.Var")))
                                      (88 (putstatic (fieldCP "const__6" "clojure.core$fn__5497" (class "clojure.lang.Var"))))
                                      (91 (ldc 0))        ;;STRING:: "clojure.core"
                                      (93 (ldc 8))        ;;STRING:: "not"
                                      (95 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (98 (checkcast (class "clojure.lang.Var")))
                                      (101 (putstatic (fieldCP "const__7" "clojure.core$fn__5497" (class "clojure.lang.Var"))))
                                      (104 (aconst_null))
                                      (105 (ldc 9))       ;;STRING:: "pending"
                                      (107 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (110 (checkcast (class "clojure.lang.Keyword")))
                                      (113 (putstatic (fieldCP "const__8" "clojure.core$fn__5497" (class "clojure.lang.Keyword"))))
                                      (116 (ldc 0))       ;;STRING:: "clojure.core"
                                      (118 (ldc 10))      ;;STRING:: "deref"
                                      (120 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (123 (checkcast (class "clojure.lang.Var")))
                                      (126 (putstatic (fieldCP "const__9" "clojure.core$fn__5497" (class "clojure.lang.Var"))))
                                      (129 (return))
                                      (endofcode 130))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 9) (max_locals . 4) (code_length . 240)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$fn__5497" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (getstatic (fieldCP "const__1" "clojure.core$fn__5497" (class "clojure.lang.Var")))) 
                                      (12 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (15 (checkcast (class "clojure.lang.IFn"))) 
                                      (18 (ldc 11)) ;;STRING:: "#<%s@%x%s: "
                                      (20 (getstatic (fieldCP "const__2" "clojure.core$fn__5497" (class "clojure.lang.Var")))) 
                                      (23 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (26 (checkcast (class "clojure.lang.IFn"))) 
                                      (29 (aload_1)) 
                                      (30 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (35 (checkcast (class "java.lang.Class"))) 
                                      (38 (invokevirtual (methodCP "getSimpleName" "java.lang.Class" () (class "java.lang.String")))) 
                                      (41 (aload_1)) 
                                      (42 (invokestatic (methodCP "identityHashCode" "java.lang.System" ((class "java.lang.Object")) int))) 
                                      (45 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (48 (aload_1)) 
                                      (49 (instanceof (class "clojure.lang.Agent"))) 
                                      (52 (istore_3)) 
                                      (53 (iload_3)) 
                                      (54 (ifeq 76)) ;;to TAG_0
                                      (57 (getstatic (fieldCP "const__4" "clojure.core$fn__5497" (class "clojure.lang.Var")))) 
                                      (60 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (63 (checkcast (class "clojure.lang.IFn"))) 
                                      (66 (aload_1)) 
                                      (67 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (72 (goto 89))  ;;to TAG_1
                                      (75 (pop)) 
                                      (76 (iload_3)) ;;at TAG_0
                                      (77 (ifeq 86)) ;;to TAG_2
                                      (80 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (83 (goto 89))  ;;to TAG_1
                                      (86 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_2
                                      (89 (dup)) ;;at TAG_1
                                      (90 (ifnull 104)) ;;to TAG_3
                                      (93 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (96 (if_acmpeq 105)) ;;to TAG_4
                                      (99 (ldc 12)) ;;STRING:: " FAILED"
                                      (101 (goto 107)) ;;to TAG_5
                                      (104 (pop)) ;;at TAG_3
                                      (105 (ldc 13)) ;;at TAG_4;;STRING:: ""
                                      (107 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5)) ;;at TAG_5
                                      (112 (getstatic (fieldCP "const__5" "clojure.core$fn__5497" (class "clojure.lang.Var")))) 
                                      (115 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (118 (ldc 13)) ;;STRING:: ""
                                      (120 (ldc 14)) ;;STRING:: ">"
                                      (122 (getstatic (fieldCP "const__6" "clojure.core$fn__5497" (class "clojure.lang.Var")))) 
                                      (125 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (128 (checkcast (class "clojure.lang.IFn"))) 
                                      (131 (aload_1)) 
                                      (132 (instanceof (class "clojure.lang.IPending"))) 
                                      (135 (istore_3)) 
                                      (136 (iload_3)) 
                                      (137 (ifeq 179)) ;;to TAG_6
                                      (140 (getstatic (fieldCP "const__7" "clojure.core$fn__5497" (class "clojure.lang.Var")))) 
                                      (143 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (146 (checkcast (class "clojure.lang.IFn"))) 
                                      (149 (aload_1)) 
                                      (150 (checkcast (class "clojure.lang.IPending"))) 
                                      (153 (invokeinterface (methodCP "isRealized" "clojure.lang.IPending" () boolean) 1)) 
                                      (158 (ifeq 167)) ;;to TAG_7
                                      (161 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (164 (goto 170)) ;;to TAG_8
                                      (167 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_7
                                      (170 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_8
                                      (175 (goto 192)) ;;to TAG_9
                                      (178 (pop)) 
                                      (179 (iload_3)) ;;at TAG_6
                                      (180 (ifeq 189)) ;;to TAG_10
                                      (183 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (186 (goto 192)) ;;to TAG_9
                                      (189 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_10
                                      (192 (dup)) ;;at TAG_9
                                      (193 (ifnull 208)) ;;to TAG_11
                                      (196 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (199 (if_acmpeq 209)) ;;to TAG_12
                                      (202 (getstatic (fieldCP "const__8" "clojure.core$fn__5497" (class "clojure.lang.Keyword")))) 
                                      (205 (goto 226)) ;;to TAG_13
                                      (208 (pop)) ;;at TAG_11
                                      (209 (getstatic (fieldCP "const__9" "clojure.core$fn__5497" (class "clojure.lang.Var")))) ;;at TAG_12
                                      (212 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (215 (checkcast (class "clojure.lang.IFn"))) 
                                      (218 (aload_1)) 
                                      (219 (aconst_null)) 
                                      (220 (astore_1)) 
                                      (221 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (226 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_13
                                      (231 (aload_2)) 
                                      (232 (aconst_null)) 
                                      (233 (astore_2)) 
                                      (234 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 7)) 
                                      (239 (areturn)) 
                                      (endofcode 240))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$fn__5497-class-table*
  (make-static-class-decls 
   *clojure.core$fn__5497*))

(defconst *package-name-map* 
  ("clojure.core$fn__5497" . "clojure"))

