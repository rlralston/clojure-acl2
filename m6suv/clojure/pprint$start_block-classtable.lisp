; pprint$start_block-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:57 CDT 2014.
;

(defconst *clojure.pprint$start_block*
 (make-class-def
      '(class "clojure.pprint$start_block"
            "clojure.lang.AFunction"
            (constant_pool)
            (fields)
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 0) (max_locals . 0) (code_length . 1)
                                   (parsedcode
                                      (0 (return))
                                      (endofcode 1))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 5) (code_length . 28)
                                   (parsedcode
                                      (0 (new (class "clojure.pprint$start_block$fn__7536")))
                                      (3 (dup))
                                      (4 (aload 4))
                                      (6 (aconst_null))
                                      (7 (astore 4))
                                      (9 (aload_2))
                                      (10 (aconst_null))
                                      (11 (astore_2))
                                      (12 (aload_3))
                                      (13 (aconst_null))
                                      (14 (astore_3))
                                      (15 (aload_1))
                                      (16 (aconst_null))
                                      (17 (astore_1))
                                      (18 (invokespecial
					(methodCP "<init>" "clojure.pprint$start_block$fn__7536" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) void)))
                                      (21 (checkcast (class "java.util.concurrent.Callable")))
                                      (24 (invokestatic
					(methodCP "runInTransaction" "clojure.lang.LockingTransaction" ((class "java.util.concurrent.Callable")) (class "java.lang.Object"))))
                                      (27 (areturn))
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$start_block-class-table*
  (make-static-class-decls 
   *clojure.pprint$start_block*))

(defconst *package-name-map* 
  ("clojure.pprint$start_block" . "clojure"))

