; reflect__init-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:58 CDT 2014.
;

(defconst *clojure.reflect__init*
 (make-class-def
      '(class "clojure.reflect__init"
            "java.lang.Object"
            (constant_pool
                        (STRING  "Protocol for reflection implementers.")
                        (STRING  "A TypeReference can be unambiguously converted to a type name on\n   the host platform.\n\n   All typerefs are normalized into symbols. If you need to\n   normalize a typeref yourself, call typesym.")
                        (STRING  "reflect/java")
                        (STRING  "clojure.core")
                        (STRING  "in-ns")
                        (STRING  "clojure.reflect")
                        (STRING  "doc")
                        (STRING  "Reflection on Host Types\nAlpha - subject to change.\n\nTwo main entry points: \n\n* type-reflect reflects on something that implements TypeReference.\n* reflect (for REPL use) reflects on the class of an instance, or\n  on a class if passed a class\n\nKey features:\n\n* Exposes the read side of reflection as pure data. Reflecting\n  on a type returns a map with keys :bases, :flags, and :members.\n\n* Canonicalizes class names as Clojure symbols. Types can extend\n  to the TypeReference protocol to indicate that they can be\n  unambiguously resolved as a type name. The canonical format\n  requires one non-Java-ish convention: array brackets are <>\n  instead of [] so they can be part of a Clojure symbol.\n\n* Pluggable Reflectors for different implementations. The default\n  JavaReflector is good when you have a class in hand, or use\n  the AsmReflector for \"hands off\" reflection without forcing\n  classes to load.\n\nPlatform implementers must:\n\n* Create an implementation of Reflector.\n* Create one or more implementations of TypeReference.\n* def default-reflector to be an instance that satisfies Reflector.")
                        (STRING  "added")
                        (STRING  "1.3")
                        (STRING  "author")
                        (STRING  "Stuart Halloway")
                        (STRING  "alter-meta!")
                        (STRING  "Reflector")
                        (STRING  "assoc")
                        (STRING  "assert-same-protocol")
                        (STRING  "do-reflect")
                        (STRING  "arglists")
                        (STRING  "reflector")
                        (STRING  "typeref")
                        (STRING  "alter-var-root")
                        (STRING  "merge")
                        (STRING  "on")
                        (STRING  "clojure.reflect.Reflector")
                        (STRING  "on-interface")
                        (STRING  "sigs")
                        (STRING  "name")
                        (STRING  "var")
                        (STRING  "method-map")
                        (STRING  "method-builders")
                        (STRING  "intern")
                        (STRING  "*ns*")
                        (STRING  "with-meta")
                        (STRING  "protocol")
                        (STRING  "-reset-methods")
                        (STRING  "TypeReference")
                        (STRING  "typename")
                        (STRING  "o")
                        (STRING  "Returns Java name as returned by ASM getClassName, e.g. byte[], java.lang.String[]")
                        (STRING  "clojure.reflect.TypeReference")
                        (STRING  "default-reflector")
                        (STRING  "file")
                        (STRING  "column")
                        (STRING  "line")
                        (STRING  "declared")
                        (STRING  "clojure/reflect.clj")
                        (STRING  "type-reflect")
                        (STRING  "&")
                        (STRING  "options")
                        (STRING  "Alpha - subject to change.\n   Reflect on a typeref, returning a map with :bases, :flags, and\n  :members. In the discussion below, names are always Clojure symbols.\n\n   :bases            a set of names of the type\ns bases\n   :flags            a set of keywords naming the boolean attributes\n                     of the type.\n   :members          a set of the type\ns members. Each membrer is a map\n                     and can be a constructor, method, or field.\n\n   Keys common to all members:\n   :name             name of the type \n   :declaring-class  name of the declarer\n   :flags            keyword naming boolean attributes of the member\n\n   Keys specific to constructors:\n   :parameter-types  vector of parameter type names\n   :exception-types  vector of exception type names\n\n   Key specific to methods:\n   :parameter-types  vector of parameter type names\n   :exception-types  vector of exception type names\n   :return-type      return type name\n\n   Keys specific to fields:\n   :type             type name\n\n   Options:\n\n     :ancestors     in addition to the keys described above, also\n                    include an :ancestors key with the entire set of\n                    ancestors, and add all ancestor members to\n                    :members.\n     :reflector     implementation to use. Defaults to JavaReflector,\n                    AsmReflector is also an option.")
                        (STRING  "reflect")
                        (STRING  "obj")
                        (STRING  "Alpha - subject to change.\n   Reflect on the type of obj (or obj itself if obj is a class).\n   Return value and options are the same as for type-reflect. ")
                        (STRING  "load")
                        (STRING  "clojure.reflect__init"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.ISeq") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__19" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__20" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__21" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__22" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__23" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__24" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__25" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__26" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__27" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__28" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__29" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__30" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__31" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__32" (class "clojure.lang.ISeq") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__33" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__34" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__35" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__36" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__37" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__38" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__39" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__40" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__41" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__42" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__43" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__44" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__45" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__46" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__47" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__48" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__49" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__50" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__51" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__52" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__53" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__54" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__55" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__56" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__57" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__58" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__59" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__60" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "load"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 39) (max_locals . 0) (code_length . 621)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (getstatic (fieldCP "const__1" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (12 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (17 (new (class "clojure.reflect$loading__4910__auto__"))) 
                                      (20 (dup)) 
                                      (21 (invokespecial (methodCP "<init>" "clojure.reflect$loading__4910__auto__" () void))) 
                                      (24 (checkcast (class "clojure.lang.IFn"))) 
                                      (27 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (32 (getstatic (fieldCP "const__1" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (35 (checkcast (class "clojure.lang.Symbol"))) 
                                      (38 (getstatic (fieldCP "const__2" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (41 (invokevirtual (methodCP "equals" "clojure.lang.Symbol" ((class "java.lang.Object")) boolean))) 
                                      (44 (ifeq 52))  ;;to TAG_0
                                      (47 (aconst_null)) 
                                      (48 (goto 67)) ;;to TAG_1
                                      (51 (pop)) 
                                      (52 (new (class "clojure.reflect$fn__8983"))) ;;at TAG_0
                                      (55 (dup)) 
                                      (56 (invokespecial (methodCP "<init>" "clojure.reflect$fn__8983" () void))) 
                                      (59 (checkcast (class "java.util.concurrent.Callable"))) 
                                      (62 (invokestatic (methodCP "runInTransaction" "clojure.lang.LockingTransaction" ((class "java.util.concurrent.Callable")) (class "java.lang.Object")))) 
                                      (65 (pop)) 
                                      (66 (aconst_null)) 
                                      (67 (new (class "clojure.reflect$fn__8987"))) ;;at TAG_1
                                      (70 (dup)) 
                                      (71 (invokespecial (methodCP "<init>" "clojure.reflect$fn__8987" () void))) 
                                      (74 (checkcast (class "clojure.lang.IFn"))) 
                                      (77 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (82 (aconst_null)) 
                                      (83 (getstatic (fieldCP "const__3" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (86 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (89 (checkcast (class "clojure.lang.IFn"))) 
                                      (92 (getstatic (fieldCP "const__4" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (95 (getstatic (fieldCP "const__5" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (98 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (101 (getstatic (fieldCP "const__6" "clojure.reflect__init" (class "clojure.lang.Keyword")))) 
                                      (104 (ldc 0)) ;;STRING:: "Protocol for reflection implementers."
                                      (106 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5)) 
                                      (111 (getstatic (fieldCP "const__7" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (114 (checkcast (class "clojure.lang.IFn"))) 
                                      (117 (getstatic (fieldCP "const__4" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (120 (getstatic (fieldCP "const__8" "clojure.reflect__init" (class "clojure.lang.ISeq")))) 
                                      (123 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (128 (getstatic (fieldCP "const__9" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (131 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (134 (checkcast (class "clojure.lang.IFn"))) 
                                      (137 (getstatic (fieldCP "const__4" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (140 (getstatic (fieldCP "const__10" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (143 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (146 (getstatic (fieldCP "const__5" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (149 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (152 (checkcast (class "clojure.lang.IFn"))) 
                                      (155 (getstatic (fieldCP "const__15" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (158 (getstatic (fieldCP "const__16" "clojure.reflect__init" (class "clojure.lang.Keyword")))) 
                                      (161 (getstatic (fieldCP "const__17" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (164 (getstatic (fieldCP "const__18" "clojure.reflect__init" (class "clojure.lang.Keyword")))) 
                                      (167 (getstatic (fieldCP "const__4" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (170 (getstatic (fieldCP "const__19" "clojure.reflect__init" (class "clojure.lang.Keyword")))) 
                                      (173 (getstatic (fieldCP "const__21" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (176 (getstatic (fieldCP "const__22" "clojure.reflect__init" (class "clojure.lang.Keyword")))) 
                                      (179 (iconst_2)) 
                                      (180 (anewarray (class "java.lang.Object"))) 
                                      (183 (dup)) 
                                      (184 (iconst_0)) 
                                      (185 (getstatic (fieldCP "const__23" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (188 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (191 (checkcast (class "clojure.lang.IFn"))) 
                                      (194 (getstatic (fieldCP "const__24" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (197 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (200 (getstatic (fieldCP "const__25" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (203 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (206 (checkcast (class "clojure.lang.IFn"))) 
                                      (209 (getstatic (fieldCP "const__26" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (212 (getstatic (fieldCP "const__10" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (215 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (218 (checkcast (class "clojure.lang.IFn"))) 
                                      (221 (getstatic (fieldCP "const__27" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (224 (iconst_2)) 
                                      (225 (anewarray (class "java.lang.Object"))) 
                                      (228 (dup)) 
                                      (229 (iconst_0)) 
                                      (230 (getstatic (fieldCP "const__28" "clojure.reflect__init" (class "clojure.lang.Keyword")))) 
                                      (233 (aastore)) 
                                      (234 (dup)) 
                                      (235 (iconst_1)) 
                                      (236 (getstatic (fieldCP "const__4" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (239 (aastore)) 
                                      (240 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (243 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (248 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (253 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (258 (aastore)) 
                                      (259 (dup)) 
                                      (260 (iconst_1)) 
                                      (261 (new (class "clojure.reflect$fn__8990"))) 
                                      (264 (dup)) 
                                      (265 (invokespecial (methodCP "<init>" "clojure.reflect$fn__8990" () void))) 
                                      (268 (aastore)) 
                                      (269 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (272 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 10)) 
                                      (277 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (282 (getstatic (fieldCP "const__29" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (285 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (288 (checkcast (class "clojure.lang.IFn"))) 
                                      (291 (getstatic (fieldCP "const__4" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (294 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (297 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (302 (getstatic (fieldCP "const__30" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (305 (new (class "clojure.reflect$fn__9005"))) 
                                      (308 (dup)) 
                                      (309 (invokespecial (methodCP "<init>" "clojure.reflect$fn__9005" () void))) 
                                      (312 (checkcast (class "clojure.lang.IFn"))) 
                                      (315 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (320 (aconst_null)) 
                                      (321 (getstatic (fieldCP "const__3" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (324 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (327 (checkcast (class "clojure.lang.IFn"))) 
                                      (330 (getstatic (fieldCP "const__31" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (333 (getstatic (fieldCP "const__5" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (336 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (339 (getstatic (fieldCP "const__6" "clojure.reflect__init" (class "clojure.lang.Keyword")))) 
                                      (342 (ldc 1)) ;;STRING:: "A TypeReference can be unambiguously converted to a type name on\n   the host platform.\n\n   All typerefs are normalized into symbols. If you need to\n   normalize a typeref yourself, call typesym."
                                      (344 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5)) 
                                      (349 (getstatic (fieldCP "const__7" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (352 (checkcast (class "clojure.lang.IFn"))) 
                                      (355 (getstatic (fieldCP "const__31" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (358 (getstatic (fieldCP "const__32" "clojure.reflect__init" (class "clojure.lang.ISeq")))) 
                                      (361 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (366 (getstatic (fieldCP "const__9" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (369 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (372 (checkcast (class "clojure.lang.IFn"))) 
                                      (375 (getstatic (fieldCP "const__31" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (378 (getstatic (fieldCP "const__10" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (381 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (384 (getstatic (fieldCP "const__5" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (387 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (390 (checkcast (class "clojure.lang.IFn"))) 
                                      (393 (getstatic (fieldCP "const__35" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (396 (getstatic (fieldCP "const__16" "clojure.reflect__init" (class "clojure.lang.Keyword")))) 
                                      (399 (getstatic (fieldCP "const__36" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (402 (getstatic (fieldCP "const__18" "clojure.reflect__init" (class "clojure.lang.Keyword")))) 
                                      (405 (getstatic (fieldCP "const__31" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (408 (getstatic (fieldCP "const__19" "clojure.reflect__init" (class "clojure.lang.Keyword")))) 
                                      (411 (getstatic (fieldCP "const__38" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (414 (getstatic (fieldCP "const__22" "clojure.reflect__init" (class "clojure.lang.Keyword")))) 
                                      (417 (iconst_2)) 
                                      (418 (anewarray (class "java.lang.Object"))) 
                                      (421 (dup)) 
                                      (422 (iconst_0)) 
                                      (423 (getstatic (fieldCP "const__23" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (426 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (429 (checkcast (class "clojure.lang.IFn"))) 
                                      (432 (getstatic (fieldCP "const__24" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (435 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (438 (getstatic (fieldCP "const__25" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (441 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (444 (checkcast (class "clojure.lang.IFn"))) 
                                      (447 (getstatic (fieldCP "const__39" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (450 (getstatic (fieldCP "const__10" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (453 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (456 (checkcast (class "clojure.lang.IFn"))) 
                                      (459 (getstatic (fieldCP "const__40" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (462 (iconst_2)) 
                                      (463 (anewarray (class "java.lang.Object"))) 
                                      (466 (dup)) 
                                      (467 (iconst_0)) 
                                      (468 (getstatic (fieldCP "const__28" "clojure.reflect__init" (class "clojure.lang.Keyword")))) 
                                      (471 (aastore)) 
                                      (472 (dup)) 
                                      (473 (iconst_1)) 
                                      (474 (getstatic (fieldCP "const__31" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (477 (aastore)) 
                                      (478 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (481 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (486 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (491 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (496 (aastore)) 
                                      (497 (dup)) 
                                      (498 (iconst_1)) 
                                      (499 (new (class "clojure.reflect$fn__9008"))) 
                                      (502 (dup)) 
                                      (503 (invokespecial (methodCP "<init>" "clojure.reflect$fn__9008" () void))) 
                                      (506 (aastore)) 
                                      (507 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (510 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 10)) 
                                      (515 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (520 (getstatic (fieldCP "const__29" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (523 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (526 (checkcast (class "clojure.lang.IFn"))) 
                                      (529 (getstatic (fieldCP "const__31" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (532 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (535 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (540 (getstatic (fieldCP "const__41" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (543 (getstatic (fieldCP "const__42" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (546 (dup)) 
                                      (547 (getstatic (fieldCP "const__49" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (550 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (553 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (556 (getstatic (fieldCP "const__50" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (559 (dup)) 
                                      (560 (getstatic (fieldCP "const__55" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (563 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (566 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (569 (dup)) 
                                      (570 (new (class "clojure.reflect$type_reflect"))) 
                                      (573 (dup)) 
                                      (574 (invokespecial (methodCP "<init>" "clojure.reflect$type_reflect" () void))) 
                                      (577 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (580 (getstatic (fieldCP "const__56" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (583 (dup)) 
                                      (584 (getstatic (fieldCP "const__59" "clojure.reflect__init" (class "clojure.lang.AFn")))) 
                                      (587 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (590 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (593 (dup)) 
                                      (594 (new (class "clojure.reflect$reflect"))) 
                                      (597 (dup)) 
                                      (598 (invokespecial (methodCP "<init>" "clojure.reflect$reflect" () void))) 
                                      (601 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (604 (getstatic (fieldCP "const__60" "clojure.reflect__init" (class "clojure.lang.Var")))) 
                                      (607 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (610 (checkcast (class "clojure.lang.IFn"))) 
                                      (613 (ldc 2)) ;;STRING:: "reflect/java"
                                      (615 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (620 (return)) 
                                      (endofcode 621))
                                   (Exceptions )
                                   (StackMap )))
                        (method "__init0"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 18) (max_locals . 0) (code_length . 2507)
                                   (parsedcode
                                      (0 (ldc 3))         ;;STRING:: "clojure.core"
                                      (2 (ldc 4))         ;;STRING:: "in-ns"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.reflect__init" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc_w 5))      ;;STRING:: "clojure.reflect"
                                      (17 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (20 (checkcast (class "clojure.lang.IObj")))
                                      (23 (bipush 6))
                                      (25 (anewarray (class "java.lang.Object")))
                                      (28 (dup))
                                      (29 (iconst_0))
                                      (30 (aconst_null))
                                      (31 (ldc_w 6))      ;;STRING:: "doc"
                                      (34 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (37 (aastore))
                                      (38 (dup))
                                      (39 (iconst_1))
                                      (40 (ldc_w 7))      ;;STRING:: "Reflection on Host Types\nAlpha - subject to change.\n\nTwo main entry points: \n\n* type-reflect reflects on something that implements TypeReference.\n* reflect (for REPL use) reflects on the class of an instance, or\n  on a class if passed a class\n\nKey features:\n\n* Exposes the read side of reflection as pure data. Reflecting\n  on a type returns a map with keys :bases, :flags, and :members.\n\n* Canonicalizes class names as Clojure symbols. Types can extend\n  to the TypeReference protocol to indicate that they can be\n  unambiguously resolved as a type name. The canonical format\n  requires one non-Java-ish convention: array brackets are <>\n  instead of [] so they can be part of a Clojure symbol.\n\n* Pluggable Reflectors for different implementations. The default\n  JavaReflector is good when you have a class in hand, or use\n  the AsmReflector for \"hands off\" reflection without forcing\n  classes to load.\n\nPlatform implementers must:\n\n* Create an implementation of Reflector.\n* Create one or more implementations of TypeReference.\n* def default-reflector to be an instance that satisfies Reflector."
                                      (43 (aastore))
                                      (44 (dup))
                                      (45 (iconst_2))
                                      (46 (aconst_null))
                                      (47 (ldc_w 8))      ;;STRING:: "added"
                                      (50 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (53 (aastore))
                                      (54 (dup))
                                      (55 (iconst_3))
                                      (56 (ldc_w 9))      ;;STRING:: "1.3"
                                      (59 (aastore))
                                      (60 (dup))
                                      (61 (iconst_4))
                                      (62 (aconst_null))
                                      (63 (ldc_w 10))     ;;STRING:: "author"
                                      (66 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (69 (aastore))
                                      (70 (dup))
                                      (71 (iconst_5))
                                      (72 (ldc_w 11))     ;;STRING:: "Stuart Halloway"
                                      (75 (aastore))
                                      (76 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (79 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (82 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (87 (checkcast (class "clojure.lang.AFn")))
                                      (90 (putstatic (fieldCP "const__1" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (93 (aconst_null))
                                      (94 (ldc 3))        ;;STRING:: "clojure.core"
                                      (96 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (99 (checkcast (class "clojure.lang.AFn")))
                                      (102 (putstatic (fieldCP "const__2" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (105 (ldc 3))       ;;STRING:: "clojure.core"
                                      (107 (ldc_w 12))    ;;STRING:: "alter-meta!"
                                      (110 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (113 (checkcast (class "clojure.lang.Var")))
                                      (116 (putstatic (fieldCP "const__3" "clojure.reflect__init" (class "clojure.lang.Var"))))
                                      (119 (ldc_w 5))     ;;STRING:: "clojure.reflect"
                                      (122 (ldc_w 13))    ;;STRING:: "Reflector"
                                      (125 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (128 (checkcast (class "clojure.lang.Var")))
                                      (131 (putstatic (fieldCP "const__4" "clojure.reflect__init" (class "clojure.lang.Var"))))
                                      (134 (ldc 3))       ;;STRING:: "clojure.core"
                                      (136 (ldc_w 14))    ;;STRING:: "assoc"
                                      (139 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (142 (checkcast (class "clojure.lang.Var")))
                                      (145 (putstatic (fieldCP "const__5" "clojure.reflect__init" (class "clojure.lang.Var"))))
                                      (148 (aconst_null))
                                      (149 (ldc_w 6))     ;;STRING:: "doc"
                                      (152 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (155 (checkcast (class "clojure.lang.Keyword")))
                                      (158 (putstatic (fieldCP "const__6" "clojure.reflect__init" (class "clojure.lang.Keyword"))))
                                      (161 (ldc 3))       ;;STRING:: "clojure.core"
                                      (163 (ldc_w 15))    ;;STRING:: "assert-same-protocol"
                                      (166 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (169 (checkcast (class "clojure.lang.Var")))
                                      (172 (putstatic (fieldCP "const__7" "clojure.reflect__init" (class "clojure.lang.Var"))))
                                      (175 (iconst_1))
                                      (176 (anewarray (class "java.lang.Object")))
                                      (179 (dup))
                                      (180 (iconst_0))
                                      (181 (aconst_null))
                                      (182 (ldc_w 16))    ;;STRING:: "do-reflect"
                                      (185 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (188 (checkcast (class "clojure.lang.IObj")))
                                      (191 (iconst_4))
                                      (192 (anewarray (class "java.lang.Object")))
                                      (195 (dup))
                                      (196 (iconst_0))
                                      (197 (aconst_null))
                                      (198 (ldc_w 17))    ;;STRING:: "arglists"
                                      (201 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (204 (aastore))
                                      (205 (dup))
                                      (206 (iconst_1))
                                      (207 (iconst_1))
                                      (208 (anewarray (class "java.lang.Object")))
                                      (211 (dup))
                                      (212 (iconst_0))
                                      (213 (iconst_2))
                                      (214 (anewarray (class "java.lang.Object")))
                                      (217 (dup))
                                      (218 (iconst_0))
                                      (219 (aconst_null))
                                      (220 (ldc_w 18))    ;;STRING:: "reflector"
                                      (223 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (226 (aastore))
                                      (227 (dup))
                                      (228 (iconst_1))
                                      (229 (aconst_null))
                                      (230 (ldc_w 19))    ;;STRING:: "typeref"
                                      (233 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (236 (aastore))
                                      (237 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (240 (aastore))
                                      (241 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (244 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (247 (aastore))
                                      (248 (dup))
                                      (249 (iconst_2))
                                      (250 (aconst_null))
                                      (251 (ldc_w 6))     ;;STRING:: "doc"
                                      (254 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (257 (aastore))
                                      (258 (dup))
                                      (259 (iconst_3))
                                      (260 (aconst_null))
                                      (261 (aastore))
                                      (262 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (265 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (268 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (273 (aastore))
                                      (274 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (277 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (280 (checkcast (class "clojure.lang.ISeq")))
                                      (283 (putstatic (fieldCP "const__8" "clojure.reflect__init" (class "clojure.lang.ISeq"))))
                                      (286 (ldc 3))       ;;STRING:: "clojure.core"
                                      (288 (ldc_w 20))    ;;STRING:: "alter-var-root"
                                      (291 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (294 (checkcast (class "clojure.lang.Var")))
                                      (297 (putstatic (fieldCP "const__9" "clojure.reflect__init" (class "clojure.lang.Var"))))
                                      (300 (ldc 3))       ;;STRING:: "clojure.core"
                                      (302 (ldc_w 21))    ;;STRING:: "merge"
                                      (305 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (308 (checkcast (class "clojure.lang.Var")))
                                      (311 (putstatic (fieldCP "const__10" "clojure.reflect__init" (class "clojure.lang.Var"))))
                                      (314 (aconst_null))
                                      (315 (ldc_w 22))    ;;STRING:: "on"
                                      (318 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (321 (checkcast (class "clojure.lang.Keyword")))
                                      (324 (putstatic (fieldCP "const__11" "clojure.reflect__init" (class "clojure.lang.Keyword"))))
                                      (327 (aconst_null))
                                      (328 (ldc_w 23))    ;;STRING:: "clojure.reflect.Reflector"
                                      (331 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (334 (checkcast (class "clojure.lang.AFn")))
                                      (337 (putstatic (fieldCP "const__12" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (340 (aconst_null))
                                      (341 (ldc_w 24))    ;;STRING:: "on-interface"
                                      (344 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (347 (checkcast (class "clojure.lang.Keyword")))
                                      (350 (putstatic (fieldCP "const__13" "clojure.reflect__init" (class "clojure.lang.Keyword"))))
                                      (353 (ldc_w 23))    ;;STRING:: "clojure.reflect.Reflector"
                                      (356 (invokestatic
					(methodCP "forName" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.Class"))))
                                      (359 (putstatic (fieldCP "const__14" "clojure.reflect__init" (class "java.lang.Object"))))
                                      (362 (bipush 6))
                                      (364 (anewarray (class "java.lang.Object")))
                                      (367 (dup))
                                      (368 (iconst_0))
                                      (369 (aconst_null))
                                      (370 (ldc_w 22))    ;;STRING:: "on"
                                      (373 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (376 (aastore))
                                      (377 (dup))
                                      (378 (iconst_1))
                                      (379 (aconst_null))
                                      (380 (ldc_w 23))    ;;STRING:: "clojure.reflect.Reflector"
                                      (383 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (386 (aastore))
                                      (387 (dup))
                                      (388 (iconst_2))
                                      (389 (aconst_null))
                                      (390 (ldc_w 6))     ;;STRING:: "doc"
                                      (393 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (396 (aastore))
                                      (397 (dup))
                                      (398 (iconst_3))
                                      (399 (ldc 0))       ;;STRING:: "Protocol for reflection implementers."
                                      (401 (aastore))
                                      (402 (dup))
                                      (403 (iconst_4))
                                      (404 (aconst_null))
                                      (405 (ldc_w 24))    ;;STRING:: "on-interface"
                                      (408 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (411 (aastore))
                                      (412 (dup))
                                      (413 (iconst_5))
                                      (414 (ldc_w 23))    ;;STRING:: "clojure.reflect.Reflector"
                                      (417 (invokestatic
					(methodCP "forName" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.Class"))))
                                      (420 (aastore))
                                      (421 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (424 (checkcast (class "clojure.lang.AFn")))
                                      (427 (putstatic (fieldCP "const__15" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (430 (aconst_null))
                                      (431 (ldc_w 25))    ;;STRING:: "sigs"
                                      (434 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (437 (checkcast (class "clojure.lang.Keyword")))
                                      (440 (putstatic (fieldCP "const__16" "clojure.reflect__init" (class "clojure.lang.Keyword"))))
                                      (443 (iconst_2))
                                      (444 (anewarray (class "java.lang.Object")))
                                      (447 (dup))
                                      (448 (iconst_0))
                                      (449 (aconst_null))
                                      (450 (ldc_w 16))    ;;STRING:: "do-reflect"
                                      (453 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (456 (aastore))
                                      (457 (dup))
                                      (458 (iconst_1))
                                      (459 (bipush 6))
                                      (461 (anewarray (class "java.lang.Object")))
                                      (464 (dup))
                                      (465 (iconst_0))
                                      (466 (aconst_null))
                                      (467 (ldc_w 6))     ;;STRING:: "doc"
                                      (470 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (473 (aastore))
                                      (474 (dup))
                                      (475 (iconst_1))
                                      (476 (aconst_null))
                                      (477 (aastore))
                                      (478 (dup))
                                      (479 (iconst_2))
                                      (480 (aconst_null))
                                      (481 (ldc_w 17))    ;;STRING:: "arglists"
                                      (484 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (487 (aastore))
                                      (488 (dup))
                                      (489 (iconst_3))
                                      (490 (iconst_1))
                                      (491 (anewarray (class "java.lang.Object")))
                                      (494 (dup))
                                      (495 (iconst_0))
                                      (496 (iconst_2))
                                      (497 (anewarray (class "java.lang.Object")))
                                      (500 (dup))
                                      (501 (iconst_0))
                                      (502 (aconst_null))
                                      (503 (ldc_w 18))    ;;STRING:: "reflector"
                                      (506 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (509 (aastore))
                                      (510 (dup))
                                      (511 (iconst_1))
                                      (512 (aconst_null))
                                      (513 (ldc_w 19))    ;;STRING:: "typeref"
                                      (516 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (519 (aastore))
                                      (520 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (523 (aastore))
                                      (524 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (527 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (530 (aastore))
                                      (531 (dup))
                                      (532 (iconst_4))
                                      (533 (aconst_null))
                                      (534 (ldc_w 26))    ;;STRING:: "name"
                                      (537 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (540 (aastore))
                                      (541 (dup))
                                      (542 (iconst_5))
                                      (543 (aconst_null))
                                      (544 (ldc_w 16))    ;;STRING:: "do-reflect"
                                      (547 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (550 (checkcast (class "clojure.lang.IObj")))
                                      (553 (iconst_4))
                                      (554 (anewarray (class "java.lang.Object")))
                                      (557 (dup))
                                      (558 (iconst_0))
                                      (559 (aconst_null))
                                      (560 (ldc_w 17))    ;;STRING:: "arglists"
                                      (563 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (566 (aastore))
                                      (567 (dup))
                                      (568 (iconst_1))
                                      (569 (iconst_1))
                                      (570 (anewarray (class "java.lang.Object")))
                                      (573 (dup))
                                      (574 (iconst_0))
                                      (575 (iconst_2))
                                      (576 (anewarray (class "java.lang.Object")))
                                      (579 (dup))
                                      (580 (iconst_0))
                                      (581 (aconst_null))
                                      (582 (ldc_w 18))    ;;STRING:: "reflector"
                                      (585 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (588 (aastore))
                                      (589 (dup))
                                      (590 (iconst_1))
                                      (591 (aconst_null))
                                      (592 (ldc_w 19))    ;;STRING:: "typeref"
                                      (595 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (598 (aastore))
                                      (599 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (602 (aastore))
                                      (603 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (606 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (609 (aastore))
                                      (610 (dup))
                                      (611 (iconst_2))
                                      (612 (aconst_null))
                                      (613 (ldc_w 6))     ;;STRING:: "doc"
                                      (616 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (619 (aastore))
                                      (620 (dup))
                                      (621 (iconst_3))
                                      (622 (aconst_null))
                                      (623 (aastore))
                                      (624 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (627 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (630 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (635 (aastore))
                                      (636 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (639 (aastore))
                                      (640 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (643 (checkcast (class "clojure.lang.AFn")))
                                      (646 (putstatic (fieldCP "const__17" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (649 (aconst_null))
                                      (650 (ldc_w 27))    ;;STRING:: "var"
                                      (653 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (656 (checkcast (class "clojure.lang.Keyword")))
                                      (659 (putstatic (fieldCP "const__18" "clojure.reflect__init" (class "clojure.lang.Keyword"))))
                                      (662 (aconst_null))
                                      (663 (ldc_w 28))    ;;STRING:: "method-map"
                                      (666 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (669 (checkcast (class "clojure.lang.Keyword")))
                                      (672 (putstatic (fieldCP "const__19" "clojure.reflect__init" (class "clojure.lang.Keyword"))))
                                      (675 (aconst_null))
                                      (676 (ldc_w 16))    ;;STRING:: "do-reflect"
                                      (679 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (682 (checkcast (class "clojure.lang.Keyword")))
                                      (685 (putstatic (fieldCP "const__20" "clojure.reflect__init" (class "clojure.lang.Keyword"))))
                                      (688 (iconst_2))
                                      (689 (anewarray (class "java.lang.Object")))
                                      (692 (dup))
                                      (693 (iconst_0))
                                      (694 (aconst_null))
                                      (695 (ldc_w 16))    ;;STRING:: "do-reflect"
                                      (698 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (701 (aastore))
                                      (702 (dup))
                                      (703 (iconst_1))
                                      (704 (aconst_null))
                                      (705 (ldc_w 16))    ;;STRING:: "do-reflect"
                                      (708 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (711 (aastore))
                                      (712 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (715 (checkcast (class "clojure.lang.AFn")))
                                      (718 (putstatic (fieldCP "const__21" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (721 (aconst_null))
                                      (722 (ldc_w 29))    ;;STRING:: "method-builders"
                                      (725 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (728 (checkcast (class "clojure.lang.Keyword")))
                                      (731 (putstatic (fieldCP "const__22" "clojure.reflect__init" (class "clojure.lang.Keyword"))))
                                      (734 (ldc 3))       ;;STRING:: "clojure.core"
                                      (736 (ldc_w 30))    ;;STRING:: "intern"
                                      (739 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (742 (checkcast (class "clojure.lang.Var")))
                                      (745 (putstatic (fieldCP "const__23" "clojure.reflect__init" (class "clojure.lang.Var"))))
                                      (748 (ldc 3))       ;;STRING:: "clojure.core"
                                      (750 (ldc_w 31))    ;;STRING:: "*ns*"
                                      (753 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (756 (checkcast (class "clojure.lang.Var")))
                                      (759 (putstatic (fieldCP "const__24" "clojure.reflect__init" (class "clojure.lang.Var"))))
                                      (762 (ldc 3))       ;;STRING:: "clojure.core"
                                      (764 (ldc_w 32))    ;;STRING:: "with-meta"
                                      (767 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (770 (checkcast (class "clojure.lang.Var")))
                                      (773 (putstatic (fieldCP "const__25" "clojure.reflect__init" (class "clojure.lang.Var"))))
                                      (776 (aconst_null))
                                      (777 (ldc_w 16))    ;;STRING:: "do-reflect"
                                      (780 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (783 (checkcast (class "clojure.lang.IObj")))
                                      (786 (iconst_4))
                                      (787 (anewarray (class "java.lang.Object")))
                                      (790 (dup))
                                      (791 (iconst_0))
                                      (792 (aconst_null))
                                      (793 (ldc_w 17))    ;;STRING:: "arglists"
                                      (796 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (799 (aastore))
                                      (800 (dup))
                                      (801 (iconst_1))
                                      (802 (iconst_1))
                                      (803 (anewarray (class "java.lang.Object")))
                                      (806 (dup))
                                      (807 (iconst_0))
                                      (808 (iconst_2))
                                      (809 (anewarray (class "java.lang.Object")))
                                      (812 (dup))
                                      (813 (iconst_0))
                                      (814 (aconst_null))
                                      (815 (ldc_w 18))    ;;STRING:: "reflector"
                                      (818 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (821 (aastore))
                                      (822 (dup))
                                      (823 (iconst_1))
                                      (824 (aconst_null))
                                      (825 (ldc_w 19))    ;;STRING:: "typeref"
                                      (828 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (831 (aastore))
                                      (832 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (835 (aastore))
                                      (836 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (839 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (842 (aastore))
                                      (843 (dup))
                                      (844 (iconst_2))
                                      (845 (aconst_null))
                                      (846 (ldc_w 6))     ;;STRING:: "doc"
                                      (849 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (852 (aastore))
                                      (853 (dup))
                                      (854 (iconst_3))
                                      (855 (aconst_null))
                                      (856 (aastore))
                                      (857 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (860 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (863 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (868 (checkcast (class "clojure.lang.AFn")))
                                      (871 (putstatic (fieldCP "const__26" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (874 (bipush 6))
                                      (876 (anewarray (class "java.lang.Object")))
                                      (879 (dup))
                                      (880 (iconst_0))
                                      (881 (aconst_null))
                                      (882 (ldc_w 6))     ;;STRING:: "doc"
                                      (885 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (888 (aastore))
                                      (889 (dup))
                                      (890 (iconst_1))
                                      (891 (aconst_null))
                                      (892 (aastore))
                                      (893 (dup))
                                      (894 (iconst_2))
                                      (895 (aconst_null))
                                      (896 (ldc_w 17))    ;;STRING:: "arglists"
                                      (899 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (902 (aastore))
                                      (903 (dup))
                                      (904 (iconst_3))
                                      (905 (iconst_1))
                                      (906 (anewarray (class "java.lang.Object")))
                                      (909 (dup))
                                      (910 (iconst_0))
                                      (911 (iconst_2))
                                      (912 (anewarray (class "java.lang.Object")))
                                      (915 (dup))
                                      (916 (iconst_0))
                                      (917 (aconst_null))
                                      (918 (ldc_w 18))    ;;STRING:: "reflector"
                                      (921 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (924 (aastore))
                                      (925 (dup))
                                      (926 (iconst_1))
                                      (927 (aconst_null))
                                      (928 (ldc_w 19))    ;;STRING:: "typeref"
                                      (931 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (934 (aastore))
                                      (935 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (938 (aastore))
                                      (939 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (942 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (945 (aastore))
                                      (946 (dup))
                                      (947 (iconst_4))
                                      (948 (aconst_null))
                                      (949 (ldc_w 26))    ;;STRING:: "name"
                                      (952 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (955 (aastore))
                                      (956 (dup))
                                      (957 (iconst_5))
                                      (958 (aconst_null))
                                      (959 (ldc_w 16))    ;;STRING:: "do-reflect"
                                      (962 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (965 (checkcast (class "clojure.lang.IObj")))
                                      (968 (iconst_4))
                                      (969 (anewarray (class "java.lang.Object")))
                                      (972 (dup))
                                      (973 (iconst_0))
                                      (974 (aconst_null))
                                      (975 (ldc_w 17))    ;;STRING:: "arglists"
                                      (978 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (981 (aastore))
                                      (982 (dup))
                                      (983 (iconst_1))
                                      (984 (iconst_1))
                                      (985 (anewarray (class "java.lang.Object")))
                                      (988 (dup))
                                      (989 (iconst_0))
                                      (990 (iconst_2))
                                      (991 (anewarray (class "java.lang.Object")))
                                      (994 (dup))
                                      (995 (iconst_0))
                                      (996 (aconst_null))
                                      (997 (ldc_w 18))    ;;STRING:: "reflector"
                                      (1000 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1003 (aastore))
                                      (1004 (dup))
                                      (1005 (iconst_1))
                                      (1006 (aconst_null))
                                      (1007 (ldc_w 19))   ;;STRING:: "typeref"
                                      (1010 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1013 (aastore))
                                      (1014 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1017 (aastore))
                                      (1018 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1021 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1024 (aastore))
                                      (1025 (dup))
                                      (1026 (iconst_2))
                                      (1027 (aconst_null))
                                      (1028 (ldc_w 6))    ;;STRING:: "doc"
                                      (1031 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1034 (aastore))
                                      (1035 (dup))
                                      (1036 (iconst_3))
                                      (1037 (aconst_null))
                                      (1038 (aastore))
                                      (1039 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1042 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (1045 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (1050 (aastore))
                                      (1051 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1054 (checkcast (class "clojure.lang.AFn")))
                                      (1057 (putstatic (fieldCP "const__27" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (1060 (aconst_null))
                                      (1061 (ldc_w 33))   ;;STRING:: "protocol"
                                      (1064 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1067 (checkcast (class "clojure.lang.Keyword")))
                                      (1070 (putstatic (fieldCP "const__28" "clojure.reflect__init" (class "clojure.lang.Keyword"))))
                                      (1073 (ldc 3))      ;;STRING:: "clojure.core"
                                      (1075 (ldc_w 34))   ;;STRING:: "-reset-methods"
                                      (1078 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (1081 (checkcast (class "clojure.lang.Var")))
                                      (1084 (putstatic (fieldCP "const__29" "clojure.reflect__init" (class "clojure.lang.Var"))))
                                      (1087 (aconst_null))
                                      (1088 (ldc_w 13))   ;;STRING:: "Reflector"
                                      (1091 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1094 (checkcast (class "clojure.lang.AFn")))
                                      (1097 (putstatic (fieldCP "const__30" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (1100 (ldc_w 5))    ;;STRING:: "clojure.reflect"
                                      (1103 (ldc_w 35))   ;;STRING:: "TypeReference"
                                      (1106 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (1109 (checkcast (class "clojure.lang.Var")))
                                      (1112 (putstatic (fieldCP "const__31" "clojure.reflect__init" (class "clojure.lang.Var"))))
                                      (1115 (iconst_1))
                                      (1116 (anewarray (class "java.lang.Object")))
                                      (1119 (dup))
                                      (1120 (iconst_0))
                                      (1121 (aconst_null))
                                      (1122 (ldc_w 36))   ;;STRING:: "typename"
                                      (1125 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1128 (checkcast (class "clojure.lang.IObj")))
                                      (1131 (iconst_4))
                                      (1132 (anewarray (class "java.lang.Object")))
                                      (1135 (dup))
                                      (1136 (iconst_0))
                                      (1137 (aconst_null))
                                      (1138 (ldc_w 17))   ;;STRING:: "arglists"
                                      (1141 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1144 (aastore))
                                      (1145 (dup))
                                      (1146 (iconst_1))
                                      (1147 (iconst_1))
                                      (1148 (anewarray (class "java.lang.Object")))
                                      (1151 (dup))
                                      (1152 (iconst_0))
                                      (1153 (iconst_1))
                                      (1154 (anewarray (class "java.lang.Object")))
                                      (1157 (dup))
                                      (1158 (iconst_0))
                                      (1159 (aconst_null))
                                      (1160 (ldc_w 37))   ;;STRING:: "o"
                                      (1163 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1166 (aastore))
                                      (1167 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1170 (aastore))
                                      (1171 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1174 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1177 (aastore))
                                      (1178 (dup))
                                      (1179 (iconst_2))
                                      (1180 (aconst_null))
                                      (1181 (ldc_w 6))    ;;STRING:: "doc"
                                      (1184 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1187 (aastore))
                                      (1188 (dup))
                                      (1189 (iconst_3))
                                      (1190 (ldc_w 38))   ;;STRING:: "Returns Java name as returned by ASM getClassName, e.g. byte[], java.lang.String[]"
                                      (1193 (aastore))
                                      (1194 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1197 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (1200 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (1205 (aastore))
                                      (1206 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1209 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1212 (checkcast (class "clojure.lang.ISeq")))
                                      (1215 (putstatic (fieldCP "const__32" "clojure.reflect__init" (class "clojure.lang.ISeq"))))
                                      (1218 (aconst_null))
                                      (1219 (ldc_w 39))   ;;STRING:: "clojure.reflect.TypeReference"
                                      (1222 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1225 (checkcast (class "clojure.lang.AFn")))
                                      (1228 (putstatic (fieldCP "const__33" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (1231 (ldc_w 39))   ;;STRING:: "clojure.reflect.TypeReference"
                                      (1234 (invokestatic
					(methodCP "forName" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.Class"))))
                                      (1237 (putstatic (fieldCP "const__34" "clojure.reflect__init" (class "java.lang.Object"))))
                                      (1240 (bipush 6))
                                      (1242 (anewarray (class "java.lang.Object")))
                                      (1245 (dup))
                                      (1246 (iconst_0))
                                      (1247 (aconst_null))
                                      (1248 (ldc_w 22))   ;;STRING:: "on"
                                      (1251 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1254 (aastore))
                                      (1255 (dup))
                                      (1256 (iconst_1))
                                      (1257 (aconst_null))
                                      (1258 (ldc_w 39))   ;;STRING:: "clojure.reflect.TypeReference"
                                      (1261 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1264 (aastore))
                                      (1265 (dup))
                                      (1266 (iconst_2))
                                      (1267 (aconst_null))
                                      (1268 (ldc_w 6))    ;;STRING:: "doc"
                                      (1271 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1274 (aastore))
                                      (1275 (dup))
                                      (1276 (iconst_3))
                                      (1277 (ldc 1))      ;;STRING:: "A TypeReference can be unambiguously converted to a type name on\n   the host platform.\n\n   All typerefs are normalized into symbols. If you need to\n   normalize a typeref yourself, call typesym."
                                      (1279 (aastore))
                                      (1280 (dup))
                                      (1281 (iconst_4))
                                      (1282 (aconst_null))
                                      (1283 (ldc_w 24))   ;;STRING:: "on-interface"
                                      (1286 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1289 (aastore))
                                      (1290 (dup))
                                      (1291 (iconst_5))
                                      (1292 (ldc_w 39))   ;;STRING:: "clojure.reflect.TypeReference"
                                      (1295 (invokestatic
					(methodCP "forName" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.Class"))))
                                      (1298 (aastore))
                                      (1299 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1302 (checkcast (class "clojure.lang.AFn")))
                                      (1305 (putstatic (fieldCP "const__35" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (1308 (iconst_2))
                                      (1309 (anewarray (class "java.lang.Object")))
                                      (1312 (dup))
                                      (1313 (iconst_0))
                                      (1314 (aconst_null))
                                      (1315 (ldc_w 36))   ;;STRING:: "typename"
                                      (1318 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1321 (aastore))
                                      (1322 (dup))
                                      (1323 (iconst_1))
                                      (1324 (bipush 6))
                                      (1326 (anewarray (class "java.lang.Object")))
                                      (1329 (dup))
                                      (1330 (iconst_0))
                                      (1331 (aconst_null))
                                      (1332 (ldc_w 6))    ;;STRING:: "doc"
                                      (1335 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1338 (aastore))
                                      (1339 (dup))
                                      (1340 (iconst_1))
                                      (1341 (ldc_w 38))   ;;STRING:: "Returns Java name as returned by ASM getClassName, e.g. byte[], java.lang.String[]"
                                      (1344 (aastore))
                                      (1345 (dup))
                                      (1346 (iconst_2))
                                      (1347 (aconst_null))
                                      (1348 (ldc_w 17))   ;;STRING:: "arglists"
                                      (1351 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1354 (aastore))
                                      (1355 (dup))
                                      (1356 (iconst_3))
                                      (1357 (iconst_1))
                                      (1358 (anewarray (class "java.lang.Object")))
                                      (1361 (dup))
                                      (1362 (iconst_0))
                                      (1363 (iconst_1))
                                      (1364 (anewarray (class "java.lang.Object")))
                                      (1367 (dup))
                                      (1368 (iconst_0))
                                      (1369 (aconst_null))
                                      (1370 (ldc_w 37))   ;;STRING:: "o"
                                      (1373 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1376 (aastore))
                                      (1377 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1380 (aastore))
                                      (1381 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1384 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1387 (aastore))
                                      (1388 (dup))
                                      (1389 (iconst_4))
                                      (1390 (aconst_null))
                                      (1391 (ldc_w 26))   ;;STRING:: "name"
                                      (1394 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1397 (aastore))
                                      (1398 (dup))
                                      (1399 (iconst_5))
                                      (1400 (aconst_null))
                                      (1401 (ldc_w 36))   ;;STRING:: "typename"
                                      (1404 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1407 (checkcast (class "clojure.lang.IObj")))
                                      (1410 (iconst_4))
                                      (1411 (anewarray (class "java.lang.Object")))
                                      (1414 (dup))
                                      (1415 (iconst_0))
                                      (1416 (aconst_null))
                                      (1417 (ldc_w 17))   ;;STRING:: "arglists"
                                      (1420 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1423 (aastore))
                                      (1424 (dup))
                                      (1425 (iconst_1))
                                      (1426 (iconst_1))
                                      (1427 (anewarray (class "java.lang.Object")))
                                      (1430 (dup))
                                      (1431 (iconst_0))
                                      (1432 (iconst_1))
                                      (1433 (anewarray (class "java.lang.Object")))
                                      (1436 (dup))
                                      (1437 (iconst_0))
                                      (1438 (aconst_null))
                                      (1439 (ldc_w 37))   ;;STRING:: "o"
                                      (1442 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1445 (aastore))
                                      (1446 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1449 (aastore))
                                      (1450 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1453 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1456 (aastore))
                                      (1457 (dup))
                                      (1458 (iconst_2))
                                      (1459 (aconst_null))
                                      (1460 (ldc_w 6))    ;;STRING:: "doc"
                                      (1463 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1466 (aastore))
                                      (1467 (dup))
                                      (1468 (iconst_3))
                                      (1469 (ldc_w 38))   ;;STRING:: "Returns Java name as returned by ASM getClassName, e.g. byte[], java.lang.String[]"
                                      (1472 (aastore))
                                      (1473 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1476 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (1479 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (1484 (aastore))
                                      (1485 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1488 (aastore))
                                      (1489 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1492 (checkcast (class "clojure.lang.AFn")))
                                      (1495 (putstatic (fieldCP "const__36" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (1498 (aconst_null))
                                      (1499 (ldc_w 36))   ;;STRING:: "typename"
                                      (1502 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1505 (checkcast (class "clojure.lang.Keyword")))
                                      (1508 (putstatic (fieldCP "const__37" "clojure.reflect__init" (class "clojure.lang.Keyword"))))
                                      (1511 (iconst_2))
                                      (1512 (anewarray (class "java.lang.Object")))
                                      (1515 (dup))
                                      (1516 (iconst_0))
                                      (1517 (aconst_null))
                                      (1518 (ldc_w 36))   ;;STRING:: "typename"
                                      (1521 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1524 (aastore))
                                      (1525 (dup))
                                      (1526 (iconst_1))
                                      (1527 (aconst_null))
                                      (1528 (ldc_w 36))   ;;STRING:: "typename"
                                      (1531 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1534 (aastore))
                                      (1535 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1538 (checkcast (class "clojure.lang.AFn")))
                                      (1541 (putstatic (fieldCP "const__38" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (1544 (aconst_null))
                                      (1545 (ldc_w 36))   ;;STRING:: "typename"
                                      (1548 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1551 (checkcast (class "clojure.lang.IObj")))
                                      (1554 (iconst_4))
                                      (1555 (anewarray (class "java.lang.Object")))
                                      (1558 (dup))
                                      (1559 (iconst_0))
                                      (1560 (aconst_null))
                                      (1561 (ldc_w 17))   ;;STRING:: "arglists"
                                      (1564 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1567 (aastore))
                                      (1568 (dup))
                                      (1569 (iconst_1))
                                      (1570 (iconst_1))
                                      (1571 (anewarray (class "java.lang.Object")))
                                      (1574 (dup))
                                      (1575 (iconst_0))
                                      (1576 (iconst_1))
                                      (1577 (anewarray (class "java.lang.Object")))
                                      (1580 (dup))
                                      (1581 (iconst_0))
                                      (1582 (aconst_null))
                                      (1583 (ldc_w 37))   ;;STRING:: "o"
                                      (1586 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1589 (aastore))
                                      (1590 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1593 (aastore))
                                      (1594 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1597 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1600 (aastore))
                                      (1601 (dup))
                                      (1602 (iconst_2))
                                      (1603 (aconst_null))
                                      (1604 (ldc_w 6))    ;;STRING:: "doc"
                                      (1607 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1610 (aastore))
                                      (1611 (dup))
                                      (1612 (iconst_3))
                                      (1613 (ldc_w 38))   ;;STRING:: "Returns Java name as returned by ASM getClassName, e.g. byte[], java.lang.String[]"
                                      (1616 (aastore))
                                      (1617 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1620 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (1623 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (1628 (checkcast (class "clojure.lang.AFn")))
                                      (1631 (putstatic (fieldCP "const__39" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (1634 (bipush 6))
                                      (1636 (anewarray (class "java.lang.Object")))
                                      (1639 (dup))
                                      (1640 (iconst_0))
                                      (1641 (aconst_null))
                                      (1642 (ldc_w 6))    ;;STRING:: "doc"
                                      (1645 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1648 (aastore))
                                      (1649 (dup))
                                      (1650 (iconst_1))
                                      (1651 (ldc_w 38))   ;;STRING:: "Returns Java name as returned by ASM getClassName, e.g. byte[], java.lang.String[]"
                                      (1654 (aastore))
                                      (1655 (dup))
                                      (1656 (iconst_2))
                                      (1657 (aconst_null))
                                      (1658 (ldc_w 17))   ;;STRING:: "arglists"
                                      (1661 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1664 (aastore))
                                      (1665 (dup))
                                      (1666 (iconst_3))
                                      (1667 (iconst_1))
                                      (1668 (anewarray (class "java.lang.Object")))
                                      (1671 (dup))
                                      (1672 (iconst_0))
                                      (1673 (iconst_1))
                                      (1674 (anewarray (class "java.lang.Object")))
                                      (1677 (dup))
                                      (1678 (iconst_0))
                                      (1679 (aconst_null))
                                      (1680 (ldc_w 37))   ;;STRING:: "o"
                                      (1683 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1686 (aastore))
                                      (1687 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1690 (aastore))
                                      (1691 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1694 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1697 (aastore))
                                      (1698 (dup))
                                      (1699 (iconst_4))
                                      (1700 (aconst_null))
                                      (1701 (ldc_w 26))   ;;STRING:: "name"
                                      (1704 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1707 (aastore))
                                      (1708 (dup))
                                      (1709 (iconst_5))
                                      (1710 (aconst_null))
                                      (1711 (ldc_w 36))   ;;STRING:: "typename"
                                      (1714 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1717 (checkcast (class "clojure.lang.IObj")))
                                      (1720 (iconst_4))
                                      (1721 (anewarray (class "java.lang.Object")))
                                      (1724 (dup))
                                      (1725 (iconst_0))
                                      (1726 (aconst_null))
                                      (1727 (ldc_w 17))   ;;STRING:: "arglists"
                                      (1730 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1733 (aastore))
                                      (1734 (dup))
                                      (1735 (iconst_1))
                                      (1736 (iconst_1))
                                      (1737 (anewarray (class "java.lang.Object")))
                                      (1740 (dup))
                                      (1741 (iconst_0))
                                      (1742 (iconst_1))
                                      (1743 (anewarray (class "java.lang.Object")))
                                      (1746 (dup))
                                      (1747 (iconst_0))
                                      (1748 (aconst_null))
                                      (1749 (ldc_w 37))   ;;STRING:: "o"
                                      (1752 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1755 (aastore))
                                      (1756 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1759 (aastore))
                                      (1760 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1763 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1766 (aastore))
                                      (1767 (dup))
                                      (1768 (iconst_2))
                                      (1769 (aconst_null))
                                      (1770 (ldc_w 6))    ;;STRING:: "doc"
                                      (1773 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1776 (aastore))
                                      (1777 (dup))
                                      (1778 (iconst_3))
                                      (1779 (ldc_w 38))   ;;STRING:: "Returns Java name as returned by ASM getClassName, e.g. byte[], java.lang.String[]"
                                      (1782 (aastore))
                                      (1783 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1786 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (1789 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (1794 (aastore))
                                      (1795 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1798 (checkcast (class "clojure.lang.AFn")))
                                      (1801 (putstatic (fieldCP "const__40" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (1804 (aconst_null))
                                      (1805 (ldc_w 35))   ;;STRING:: "TypeReference"
                                      (1808 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1811 (checkcast (class "clojure.lang.AFn")))
                                      (1814 (putstatic (fieldCP "const__41" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (1817 (ldc_w 5))    ;;STRING:: "clojure.reflect"
                                      (1820 (ldc_w 40))   ;;STRING:: "default-reflector"
                                      (1823 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (1826 (checkcast (class "clojure.lang.Var")))
                                      (1829 (putstatic (fieldCP "const__42" "clojure.reflect__init" (class "clojure.lang.Var"))))
                                      (1832 (aconst_null))
                                      (1833 (ldc_w 41))   ;;STRING:: "file"
                                      (1836 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1839 (checkcast (class "clojure.lang.Keyword")))
                                      (1842 (putstatic (fieldCP "const__43" "clojure.reflect__init" (class "clojure.lang.Keyword"))))
                                      (1845 (aconst_null))
                                      (1846 (ldc_w 42))   ;;STRING:: "column"
                                      (1849 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1852 (checkcast (class "clojure.lang.Keyword")))
                                      (1855 (putstatic (fieldCP "const__44" "clojure.reflect__init" (class "clojure.lang.Keyword"))))
                                      (1858 (iconst_1))
                                      (1859 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1862 (putstatic (fieldCP "const__45" "clojure.reflect__init" (class "java.lang.Object"))))
                                      (1865 (aconst_null))
                                      (1866 (ldc_w 43))   ;;STRING:: "line"
                                      (1869 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1872 (checkcast (class "clojure.lang.Keyword")))
                                      (1875 (putstatic (fieldCP "const__46" "clojure.reflect__init" (class "clojure.lang.Keyword"))))
                                      (1878 (bipush 56))
                                      (1880 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1883 (putstatic (fieldCP "const__47" "clojure.reflect__init" (class "java.lang.Object"))))
                                      (1886 (aconst_null))
                                      (1887 (ldc_w 44))   ;;STRING:: "declared"
                                      (1890 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1893 (checkcast (class "clojure.lang.Keyword")))
                                      (1896 (putstatic (fieldCP "const__48" "clojure.reflect__init" (class "clojure.lang.Keyword"))))
                                      (1899 (bipush 8))
                                      (1901 (anewarray (class "java.lang.Object")))
                                      (1904 (dup))
                                      (1905 (iconst_0))
                                      (1906 (aconst_null))
                                      (1907 (ldc_w 42))   ;;STRING:: "column"
                                      (1910 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1913 (aastore))
                                      (1914 (dup))
                                      (1915 (iconst_1))
                                      (1916 (iconst_1))
                                      (1917 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1920 (aastore))
                                      (1921 (dup))
                                      (1922 (iconst_2))
                                      (1923 (aconst_null))
                                      (1924 (ldc_w 44))   ;;STRING:: "declared"
                                      (1927 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1930 (aastore))
                                      (1931 (dup))
                                      (1932 (iconst_3))
                                      (1933 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (1936 (aastore))
                                      (1937 (dup))
                                      (1938 (iconst_4))
                                      (1939 (aconst_null))
                                      (1940 (ldc_w 43))   ;;STRING:: "line"
                                      (1943 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1946 (aastore))
                                      (1947 (dup))
                                      (1948 (iconst_5))
                                      (1949 (bipush 56))
                                      (1951 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1954 (aastore))
                                      (1955 (dup))
                                      (1956 (bipush 6))
                                      (1958 (aconst_null))
                                      (1959 (ldc_w 41))   ;;STRING:: "file"
                                      (1962 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1965 (aastore))
                                      (1966 (dup))
                                      (1967 (bipush 7))
                                      (1969 (ldc_w 45))   ;;STRING:: "clojure/reflect.clj"
                                      (1972 (aastore))
                                      (1973 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1976 (checkcast (class "clojure.lang.AFn")))
                                      (1979 (putstatic (fieldCP "const__49" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (1982 (ldc_w 5))    ;;STRING:: "clojure.reflect"
                                      (1985 (ldc_w 46))   ;;STRING:: "type-reflect"
                                      (1988 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (1991 (checkcast (class "clojure.lang.Var")))
                                      (1994 (putstatic (fieldCP "const__50" "clojure.reflect__init" (class "clojure.lang.Var"))))
                                      (1997 (bipush 58))
                                      (1999 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2002 (putstatic (fieldCP "const__51" "clojure.reflect__init" (class "java.lang.Object"))))
                                      (2005 (aconst_null))
                                      (2006 (ldc_w 17))   ;;STRING:: "arglists"
                                      (2009 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2012 (checkcast (class "clojure.lang.Keyword")))
                                      (2015 (putstatic (fieldCP "const__52" "clojure.reflect__init" (class "clojure.lang.Keyword"))))
                                      (2018 (iconst_1))
                                      (2019 (anewarray (class "java.lang.Object")))
                                      (2022 (dup))
                                      (2023 (iconst_0))
                                      (2024 (iconst_3))
                                      (2025 (anewarray (class "java.lang.Object")))
                                      (2028 (dup))
                                      (2029 (iconst_0))
                                      (2030 (aconst_null))
                                      (2031 (ldc_w 19))   ;;STRING:: "typeref"
                                      (2034 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2037 (aastore))
                                      (2038 (dup))
                                      (2039 (iconst_1))
                                      (2040 (aconst_null))
                                      (2041 (ldc_w 47))   ;;STRING:: "&"
                                      (2044 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2047 (aastore))
                                      (2048 (dup))
                                      (2049 (iconst_2))
                                      (2050 (aconst_null))
                                      (2051 (ldc_w 48))   ;;STRING:: "options"
                                      (2054 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2057 (aastore))
                                      (2058 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2061 (aastore))
                                      (2062 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2065 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2068 (putstatic (fieldCP "const__53" "clojure.reflect__init" (class "java.lang.Object"))))
                                      (2071 (aconst_null))
                                      (2072 (ldc_w 8))    ;;STRING:: "added"
                                      (2075 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2078 (checkcast (class "clojure.lang.Keyword")))
                                      (2081 (putstatic (fieldCP "const__54" "clojure.reflect__init" (class "clojure.lang.Keyword"))))
                                      (2084 (bipush 12))
                                      (2086 (anewarray (class "java.lang.Object")))
                                      (2089 (dup))
                                      (2090 (iconst_0))
                                      (2091 (aconst_null))
                                      (2092 (ldc_w 17))   ;;STRING:: "arglists"
                                      (2095 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2098 (aastore))
                                      (2099 (dup))
                                      (2100 (iconst_1))
                                      (2101 (iconst_1))
                                      (2102 (anewarray (class "java.lang.Object")))
                                      (2105 (dup))
                                      (2106 (iconst_0))
                                      (2107 (iconst_3))
                                      (2108 (anewarray (class "java.lang.Object")))
                                      (2111 (dup))
                                      (2112 (iconst_0))
                                      (2113 (aconst_null))
                                      (2114 (ldc_w 19))   ;;STRING:: "typeref"
                                      (2117 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2120 (aastore))
                                      (2121 (dup))
                                      (2122 (iconst_1))
                                      (2123 (aconst_null))
                                      (2124 (ldc_w 47))   ;;STRING:: "&"
                                      (2127 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2130 (aastore))
                                      (2131 (dup))
                                      (2132 (iconst_2))
                                      (2133 (aconst_null))
                                      (2134 (ldc_w 48))   ;;STRING:: "options"
                                      (2137 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2140 (aastore))
                                      (2141 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2144 (aastore))
                                      (2145 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2148 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2151 (aastore))
                                      (2152 (dup))
                                      (2153 (iconst_2))
                                      (2154 (aconst_null))
                                      (2155 (ldc_w 42))   ;;STRING:: "column"
                                      (2158 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2161 (aastore))
                                      (2162 (dup))
                                      (2163 (iconst_3))
                                      (2164 (iconst_1))
                                      (2165 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2168 (aastore))
                                      (2169 (dup))
                                      (2170 (iconst_4))
                                      (2171 (aconst_null))
                                      (2172 (ldc_w 8))    ;;STRING:: "added"
                                      (2175 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2178 (aastore))
                                      (2179 (dup))
                                      (2180 (iconst_5))
                                      (2181 (ldc_w 9))    ;;STRING:: "1.3"
                                      (2184 (aastore))
                                      (2185 (dup))
                                      (2186 (bipush 6))
                                      (2188 (aconst_null))
                                      (2189 (ldc_w 6))    ;;STRING:: "doc"
                                      (2192 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2195 (aastore))
                                      (2196 (dup))
                                      (2197 (bipush 7))
                                      (2199 (ldc_w 49))   ;;STRING:: "Alpha - subject to change.\n   Reflect on a typeref, returning a map with :bases, :flags, and\n  :members. In the discussion below, names are always Clojure symbols.\n\n   :bases            a set of names of the type\ns bases\n   :flags            a set of keywords naming the boolean attributes\n                     of the type.\n   :members          a set of the type\ns members. Each membrer is a map\n                     and can be a constructor, method, or field.\n\n   Keys common to all members:\n   :name             name of the type \n   :declaring-class  name of the declarer\n   :flags            keyword naming boolean attributes of the member\n\n   Keys specific to constructors:\n   :parameter-types  vector of parameter type names\n   :exception-types  vector of exception type names\n\n   Key specific to methods:\n   :parameter-types  vector of parameter type names\n   :exception-types  vector of exception type names\n   :return-type      return type name\n\n   Keys specific to fields:\n   :type             type name\n\n   Options:\n\n     :ancestors     in addition to the keys described above, also\n                    include an :ancestors key with the entire set of\n                    ancestors, and add all ancestor members to\n                    :members.\n     :reflector     implementation to use. Defaults to JavaReflector,\n                    AsmReflector is also an option."
                                      (2202 (aastore))
                                      (2203 (dup))
                                      (2204 (bipush 8))
                                      (2206 (aconst_null))
                                      (2207 (ldc_w 43))   ;;STRING:: "line"
                                      (2210 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2213 (aastore))
                                      (2214 (dup))
                                      (2215 (bipush 9))
                                      (2217 (bipush 58))
                                      (2219 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2222 (aastore))
                                      (2223 (dup))
                                      (2224 (bipush 10))
                                      (2226 (aconst_null))
                                      (2227 (ldc_w 41))   ;;STRING:: "file"
                                      (2230 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2233 (aastore))
                                      (2234 (dup))
                                      (2235 (bipush 11))
                                      (2237 (ldc_w 45))   ;;STRING:: "clojure/reflect.clj"
                                      (2240 (aastore))
                                      (2241 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (2244 (checkcast (class "clojure.lang.AFn")))
                                      (2247 (putstatic (fieldCP "const__55" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (2250 (ldc_w 5))    ;;STRING:: "clojure.reflect"
                                      (2253 (ldc_w 50))   ;;STRING:: "reflect"
                                      (2256 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (2259 (checkcast (class "clojure.lang.Var")))
                                      (2262 (putstatic (fieldCP "const__56" "clojure.reflect__init" (class "clojure.lang.Var"))))
                                      (2265 (bipush 115))
                                      (2267 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2270 (putstatic (fieldCP "const__57" "clojure.reflect__init" (class "java.lang.Object"))))
                                      (2273 (iconst_1))
                                      (2274 (anewarray (class "java.lang.Object")))
                                      (2277 (dup))
                                      (2278 (iconst_0))
                                      (2279 (iconst_3))
                                      (2280 (anewarray (class "java.lang.Object")))
                                      (2283 (dup))
                                      (2284 (iconst_0))
                                      (2285 (aconst_null))
                                      (2286 (ldc_w 51))   ;;STRING:: "obj"
                                      (2289 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2292 (aastore))
                                      (2293 (dup))
                                      (2294 (iconst_1))
                                      (2295 (aconst_null))
                                      (2296 (ldc_w 47))   ;;STRING:: "&"
                                      (2299 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2302 (aastore))
                                      (2303 (dup))
                                      (2304 (iconst_2))
                                      (2305 (aconst_null))
                                      (2306 (ldc_w 48))   ;;STRING:: "options"
                                      (2309 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2312 (aastore))
                                      (2313 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2316 (aastore))
                                      (2317 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2320 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2323 (putstatic (fieldCP "const__58" "clojure.reflect__init" (class "java.lang.Object"))))
                                      (2326 (bipush 12))
                                      (2328 (anewarray (class "java.lang.Object")))
                                      (2331 (dup))
                                      (2332 (iconst_0))
                                      (2333 (aconst_null))
                                      (2334 (ldc_w 17))   ;;STRING:: "arglists"
                                      (2337 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2340 (aastore))
                                      (2341 (dup))
                                      (2342 (iconst_1))
                                      (2343 (iconst_1))
                                      (2344 (anewarray (class "java.lang.Object")))
                                      (2347 (dup))
                                      (2348 (iconst_0))
                                      (2349 (iconst_3))
                                      (2350 (anewarray (class "java.lang.Object")))
                                      (2353 (dup))
                                      (2354 (iconst_0))
                                      (2355 (aconst_null))
                                      (2356 (ldc_w 51))   ;;STRING:: "obj"
                                      (2359 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2362 (aastore))
                                      (2363 (dup))
                                      (2364 (iconst_1))
                                      (2365 (aconst_null))
                                      (2366 (ldc_w 47))   ;;STRING:: "&"
                                      (2369 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2372 (aastore))
                                      (2373 (dup))
                                      (2374 (iconst_2))
                                      (2375 (aconst_null))
                                      (2376 (ldc_w 48))   ;;STRING:: "options"
                                      (2379 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2382 (aastore))
                                      (2383 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2386 (aastore))
                                      (2387 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2390 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2393 (aastore))
                                      (2394 (dup))
                                      (2395 (iconst_2))
                                      (2396 (aconst_null))
                                      (2397 (ldc_w 42))   ;;STRING:: "column"
                                      (2400 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2403 (aastore))
                                      (2404 (dup))
                                      (2405 (iconst_3))
                                      (2406 (iconst_1))
                                      (2407 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2410 (aastore))
                                      (2411 (dup))
                                      (2412 (iconst_4))
                                      (2413 (aconst_null))
                                      (2414 (ldc_w 8))    ;;STRING:: "added"
                                      (2417 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2420 (aastore))
                                      (2421 (dup))
                                      (2422 (iconst_5))
                                      (2423 (ldc_w 9))    ;;STRING:: "1.3"
                                      (2426 (aastore))
                                      (2427 (dup))
                                      (2428 (bipush 6))
                                      (2430 (aconst_null))
                                      (2431 (ldc_w 6))    ;;STRING:: "doc"
                                      (2434 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2437 (aastore))
                                      (2438 (dup))
                                      (2439 (bipush 7))
                                      (2441 (ldc_w 52))   ;;STRING:: "Alpha - subject to change.\n   Reflect on the type of obj (or obj itself if obj is a class).\n   Return value and options are the same as for type-reflect. "
                                      (2444 (aastore))
                                      (2445 (dup))
                                      (2446 (bipush 8))
                                      (2448 (aconst_null))
                                      (2449 (ldc_w 43))   ;;STRING:: "line"
                                      (2452 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2455 (aastore))
                                      (2456 (dup))
                                      (2457 (bipush 9))
                                      (2459 (bipush 115))
                                      (2461 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2464 (aastore))
                                      (2465 (dup))
                                      (2466 (bipush 10))
                                      (2468 (aconst_null))
                                      (2469 (ldc_w 41))   ;;STRING:: "file"
                                      (2472 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2475 (aastore))
                                      (2476 (dup))
                                      (2477 (bipush 11))
                                      (2479 (ldc_w 45))   ;;STRING:: "clojure/reflect.clj"
                                      (2482 (aastore))
                                      (2483 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (2486 (checkcast (class "clojure.lang.AFn")))
                                      (2489 (putstatic (fieldCP "const__59" "clojure.reflect__init" (class "clojure.lang.AFn"))))
                                      (2492 (ldc 3))      ;;STRING:: "clojure.core"
                                      (2494 (ldc_w 53))   ;;STRING:: "load"
                                      (2497 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (2500 (checkcast (class "clojure.lang.Var")))
                                      (2503 (putstatic (fieldCP "const__60" "clojure.reflect__init" (class "clojure.lang.Var"))))
                                      (2506 (return))
                                      (endofcode 2507))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 0) (code_length . 29)
                                   (parsedcode
                                      (0 (invokestatic (methodCP "__init0" "clojure.reflect__init" () void))) 
                                      (3 (ldc_w 54)) ;;STRING:: "clojure.reflect__init"
                                      (6 (invokestatic (methodCP "forName" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.Class")))) 
                                      (9 (invokevirtual (methodCP "getClassLoader" "java.lang.Class" () (class "java.lang.ClassLoader")))) 
                                      (12 (invokestatic (methodCP "pushNSandLoader" "clojure.lang.Compiler" ((class "java.lang.ClassLoader")) void))) 
                                      (15 (invokestatic (methodCP "load" "clojure.reflect__init" () void))) ;;at TAG_1
                                      (18 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) ;;at TAG_2
                                      (21 (goto 28)) ;;to TAG_0
                                      (24 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) ;;at TAG_3
                                      (27 (athrow)) 
                                      (28 (return)) ;;at TAG_0
                                      (endofcode 29))
                                   (Exceptions 
                                     (handler 15 18  24 (class "java.lang.Throwable")))
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes))))


(defconst *reflect__init-class-table*
  (make-static-class-decls 
   *clojure.reflect__init*))

(defconst *package-name-map* 
  ("clojure.reflect__init" . "clojure"))

