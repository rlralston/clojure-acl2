; pprint$format_cardinal_english-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:56 CDT 2014.
;

(defconst *clojure.pprint$format_cardinal_english*
 (make-class-def
      '(class "clojure.pprint$format_cardinal_english"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.pprint")
                        (STRING  "next-arg")
                        (STRING  "clojure.core")
                        (STRING  "nth")
                        (STRING  "=")
                        (STRING  "print")
                        (STRING  "neg?")
                        (STRING  "-")
                        (STRING  "remainders")
                        (LONG 1000)
                        (STRING  "<=")
                        (STRING  "count")
                        (STRING  "english-scale-numbers")
                        (STRING  "map")
                        (STRING  "format-simple-cardinal")
                        (STRING  "add-english-scales")
                        (STRING  "str")
                        (STRING  "format-integer")
                        (LONG 10)
                        (STRING  "mincol")
                        (STRING  "padchar")
                        (STRING  "commachar")
                        (STRING  "commainterval")
                        (LONG 3)
                        (STRING  "colon")
                        (STRING  "init-navigator")
                        (STRING  "zero")
                        (STRING  "minus "))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__19" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__20" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__21" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__22" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__23" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__24" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__25" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__26" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__27" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__28" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__29" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 0) (code_length . 507)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.pprint"
                                      (2 (ldc 1))         ;;STRING:: "next-arg"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var"))))
                                      (13 (ldc 2))        ;;STRING:: "clojure.core"
                                      (15 (ldc 3))        ;;STRING:: "nth"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var"))))
                                      (26 (lconst_0))
                                      (27 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (30 (putstatic (fieldCP "const__2" "clojure.pprint$format_cardinal_english" (class "java.lang.Object"))))
                                      (33 (lconst_1))
                                      (34 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (37 (putstatic (fieldCP "const__3" "clojure.pprint$format_cardinal_english" (class "java.lang.Object"))))
                                      (40 (ldc 2))        ;;STRING:: "clojure.core"
                                      (42 (ldc 4))        ;;STRING:: "="
                                      (44 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (47 (checkcast (class "clojure.lang.Var")))
                                      (50 (putstatic (fieldCP "const__4" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var"))))
                                      (53 (ldc 2))        ;;STRING:: "clojure.core"
                                      (55 (ldc 5))        ;;STRING:: "print"
                                      (57 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (60 (checkcast (class "clojure.lang.Var")))
                                      (63 (putstatic (fieldCP "const__5" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var"))))
                                      (66 (ldc 2))        ;;STRING:: "clojure.core"
                                      (68 (ldc 6))        ;;STRING:: "neg?"
                                      (70 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (73 (checkcast (class "clojure.lang.Var")))
                                      (76 (putstatic (fieldCP "const__6" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var"))))
                                      (79 (ldc 2))        ;;STRING:: "clojure.core"
                                      (81 (ldc 7))        ;;STRING:: "-"
                                      (83 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (86 (checkcast (class "clojure.lang.Var")))
                                      (89 (putstatic (fieldCP "const__7" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var"))))
                                      (92 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (94 (ldc 8))        ;;STRING:: "remainders"
                                      (96 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (99 (checkcast (class "clojure.lang.Var")))
                                      (102 (putstatic (fieldCP "const__8" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var"))))
                                      (105 (ldc2_w 9))    ;; LONG:: "1000"
                                      (108 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (111 (putstatic (fieldCP "const__9" "clojure.pprint$format_cardinal_english" (class "java.lang.Object"))))
                                      (114 (ldc 2))       ;;STRING:: "clojure.core"
                                      (116 (ldc 10))      ;;STRING:: "<="
                                      (118 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (121 (checkcast (class "clojure.lang.Var")))
                                      (124 (putstatic (fieldCP "const__10" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var"))))
                                      (127 (ldc 2))       ;;STRING:: "clojure.core"
                                      (129 (ldc 11))      ;;STRING:: "count"
                                      (131 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (134 (checkcast (class "clojure.lang.Var")))
                                      (137 (putstatic (fieldCP "const__11" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var"))))
                                      (140 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (142 (ldc 12))      ;;STRING:: "english-scale-numbers"
                                      (144 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (147 (checkcast (class "clojure.lang.Var")))
                                      (150 (putstatic (fieldCP "const__12" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var"))))
                                      (153 (ldc 2))       ;;STRING:: "clojure.core"
                                      (155 (ldc 13))      ;;STRING:: "map"
                                      (157 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (160 (checkcast (class "clojure.lang.Var")))
                                      (163 (putstatic (fieldCP "const__13" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var"))))
                                      (166 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (168 (ldc 14))      ;;STRING:: "format-simple-cardinal"
                                      (170 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (173 (checkcast (class "clojure.lang.Var")))
                                      (176 (putstatic (fieldCP "const__14" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var"))))
                                      (179 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (181 (ldc 15))      ;;STRING:: "add-english-scales"
                                      (183 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (186 (checkcast (class "clojure.lang.Var")))
                                      (189 (putstatic (fieldCP "const__15" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var"))))
                                      (192 (ldc 2))       ;;STRING:: "clojure.core"
                                      (194 (ldc 16))      ;;STRING:: "str"
                                      (196 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (199 (checkcast (class "clojure.lang.Var")))
                                      (202 (putstatic (fieldCP "const__16" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var"))))
                                      (205 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (207 (ldc 17))      ;;STRING:: "format-integer"
                                      (209 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (212 (checkcast (class "clojure.lang.Var")))
                                      (215 (putstatic (fieldCP "const__17" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var"))))
                                      (218 (ldc2_w 18))   ;; LONG:: "10"
                                      (221 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (224 (putstatic (fieldCP "const__18" "clojure.pprint$format_cardinal_english" (class "java.lang.Object"))))
                                      (227 (aconst_null))
                                      (228 (ldc 19))      ;;STRING:: "mincol"
                                      (230 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (233 (checkcast (class "clojure.lang.Keyword")))
                                      (236 (putstatic (fieldCP "const__19" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Keyword"))))
                                      (239 (aconst_null))
                                      (240 (ldc 20))      ;;STRING:: "padchar"
                                      (242 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (245 (checkcast (class "clojure.lang.Keyword")))
                                      (248 (putstatic (fieldCP "const__20" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Keyword"))))
                                      (251 (bipush 32))
                                      (253 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (256 (putstatic (fieldCP "const__21" "clojure.pprint$format_cardinal_english" (class "java.lang.Object"))))
                                      (259 (aconst_null))
                                      (260 (ldc 21))      ;;STRING:: "commachar"
                                      (262 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (265 (checkcast (class "clojure.lang.Keyword")))
                                      (268 (putstatic (fieldCP "const__22" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Keyword"))))
                                      (271 (bipush 44))
                                      (273 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (276 (putstatic (fieldCP "const__23" "clojure.pprint$format_cardinal_english" (class "java.lang.Object"))))
                                      (279 (aconst_null))
                                      (280 (ldc 22))      ;;STRING:: "commainterval"
                                      (282 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (285 (checkcast (class "clojure.lang.Keyword")))
                                      (288 (putstatic (fieldCP "const__24" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Keyword"))))
                                      (291 (ldc2_w 23))   ;; LONG:: "3"
                                      (294 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (297 (putstatic (fieldCP "const__25" "clojure.pprint$format_cardinal_english" (class "java.lang.Object"))))
                                      (300 (aconst_null))
                                      (301 (ldc 24))      ;;STRING:: "colon"
                                      (303 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (306 (checkcast (class "clojure.lang.Keyword")))
                                      (309 (putstatic (fieldCP "const__26" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Keyword"))))
                                      (312 (bipush 10))
                                      (314 (anewarray (class "java.lang.Object")))
                                      (317 (dup))
                                      (318 (iconst_0))
                                      (319 (aconst_null))
                                      (320 (ldc 21))      ;;STRING:: "commachar"
                                      (322 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (325 (aastore))
                                      (326 (dup))
                                      (327 (iconst_1))
                                      (328 (bipush 44))
                                      (330 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (333 (aastore))
                                      (334 (dup))
                                      (335 (iconst_2))
                                      (336 (aconst_null))
                                      (337 (ldc 24))      ;;STRING:: "colon"
                                      (339 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (342 (aastore))
                                      (343 (dup))
                                      (344 (iconst_3))
                                      (345 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (348 (aastore))
                                      (349 (dup))
                                      (350 (iconst_4))
                                      (351 (aconst_null))
                                      (352 (ldc 20))      ;;STRING:: "padchar"
                                      (354 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (357 (aastore))
                                      (358 (dup))
                                      (359 (iconst_5))
                                      (360 (bipush 32))
                                      (362 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (365 (aastore))
                                      (366 (dup))
                                      (367 (bipush 6))
                                      (369 (aconst_null))
                                      (370 (ldc 19))      ;;STRING:: "mincol"
                                      (372 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (375 (aastore))
                                      (376 (dup))
                                      (377 (bipush 7))
                                      (379 (lconst_0))
                                      (380 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (383 (aastore))
                                      (384 (dup))
                                      (385 (bipush 8))
                                      (387 (aconst_null))
                                      (388 (ldc 22))      ;;STRING:: "commainterval"
                                      (390 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (393 (aastore))
                                      (394 (dup))
                                      (395 (bipush 9))
                                      (397 (ldc2_w 23))   ;; LONG:: "3"
                                      (400 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (403 (aastore))
                                      (404 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (407 (checkcast (class "clojure.lang.AFn")))
                                      (410 (putstatic (fieldCP "const__27" "clojure.pprint$format_cardinal_english" (class "clojure.lang.AFn"))))
                                      (413 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (415 (ldc 25))      ;;STRING:: "init-navigator"
                                      (417 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (420 (checkcast (class "clojure.lang.Var")))
                                      (423 (putstatic (fieldCP "const__28" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var"))))
                                      (426 (bipush 8))
                                      (428 (anewarray (class "java.lang.Object")))
                                      (431 (dup))
                                      (432 (iconst_0))
                                      (433 (aconst_null))
                                      (434 (ldc 21))      ;;STRING:: "commachar"
                                      (436 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (439 (aastore))
                                      (440 (dup))
                                      (441 (iconst_1))
                                      (442 (lconst_0))
                                      (443 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (446 (aastore))
                                      (447 (dup))
                                      (448 (iconst_2))
                                      (449 (aconst_null))
                                      (450 (ldc 20))      ;;STRING:: "padchar"
                                      (452 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (455 (aastore))
                                      (456 (dup))
                                      (457 (iconst_3))
                                      (458 (lconst_0))
                                      (459 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (462 (aastore))
                                      (463 (dup))
                                      (464 (iconst_4))
                                      (465 (aconst_null))
                                      (466 (ldc 19))      ;;STRING:: "mincol"
                                      (468 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (471 (aastore))
                                      (472 (dup))
                                      (473 (iconst_5))
                                      (474 (lconst_0))
                                      (475 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (478 (aastore))
                                      (479 (dup))
                                      (480 (bipush 6))
                                      (482 (aconst_null))
                                      (483 (ldc 22))      ;;STRING:: "commainterval"
                                      (485 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (488 (aastore))
                                      (489 (dup))
                                      (490 (bipush 7))
                                      (492 (lconst_0))
                                      (493 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (496 (aastore))
                                      (497 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (500 (checkcast (class "clojure.lang.AFn")))
                                      (503 (putstatic (fieldCP "const__29" "clojure.pprint$format_cardinal_english" (class "clojure.lang.AFn"))))
                                      (506 (return))
                                      (endofcode 507))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 9) (max_locals . 11) (code_length . 307)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_2)) 
                                      (10 (aconst_null)) 
                                      (11 (astore_2)) 
                                      (12 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (17 (astore 4)) 
                                      (19 (aload 4)) 
                                      (21 (lconst_0)) 
                                      (22 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (25 (aconst_null)) 
                                      (26 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (29 (astore 5)) 
                                      (31 (aload 4)) 
                                      (33 (aconst_null)) 
                                      (34 (astore 4)) 
                                      (36 (lconst_1)) 
                                      (37 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (40 (aconst_null)) 
                                      (41 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (44 (astore 6)) 
                                      (46 (lconst_0)) 
                                      (47 (aload 5)) 
                                      (49 (invokestatic (methodCP "equiv" "clojure.lang.Util" (long (class "java.lang.Object")) boolean))) 
                                      (52 (ifeq 76)) ;;to TAG_0
                                      (55 (getstatic (fieldCP "const__5" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var")))) 
                                      (58 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (61 (checkcast (class "clojure.lang.IFn"))) 
                                      (64 (ldc 26)) ;;STRING:: "zero"
                                      (66 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (71 (pop)) 
                                      (72 (goto 301)) ;;to TAG_1
                                      (75 (pop)) 
                                      (76 (aload 5)) ;;at TAG_0
                                      (78 (invokestatic (methodCP "isNeg" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (81 (ifeq 93))  ;;to TAG_2
                                      (84 (aload 5)) 
                                      (86 (invokestatic (methodCP "minus" "clojure.lang.Numbers" ((class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (89 (goto 95)) ;;to TAG_3
                                      (92 (pop)) 
                                      (93 (aload 5)) ;;at TAG_2
                                      (95 (astore 7)) ;;at TAG_3
                                      (97 (getstatic (fieldCP "const__8" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var")))) 
                                      (100 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (103 (checkcast (class "clojure.lang.IFn"))) 
                                      (106 (getstatic (fieldCP "const__9" "clojure.pprint$format_cardinal_english" (class "java.lang.Object")))) 
                                      (109 (aload 7)) 
                                      (111 (aconst_null)) 
                                      (112 (astore 7)) 
                                      (114 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (119 (astore 8)) 
                                      (121 (aload 8)) 
                                      (123 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (126 (i2l)) 
                                      (127 (getstatic (fieldCP "const__12" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var")))) 
                                      (130 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (133 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (136 (i2l)) 
                                      (137 (lcmp)) 
                                      (138 (ifgt 248)) ;;to TAG_4
                                      (141 (getstatic (fieldCP "const__13" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var")))) 
                                      (144 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (147 (checkcast (class "clojure.lang.IFn"))) 
                                      (150 (getstatic (fieldCP "const__14" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var")))) 
                                      (153 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (156 (aload 8)) 
                                      (158 (aconst_null)) 
                                      (159 (astore 8)) 
                                      (161 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (166 (astore 9)) 
                                      (168 (getstatic (fieldCP "const__15" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var")))) 
                                      (171 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (174 (checkcast (class "clojure.lang.IFn"))) 
                                      (177 (aload 9)) 
                                      (179 (aconst_null)) 
                                      (180 (astore 9)) 
                                      (182 (getstatic (fieldCP "const__2" "clojure.pprint$format_cardinal_english" (class "java.lang.Object")))) 
                                      (185 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (190 (astore 10)) 
                                      (192 (getstatic (fieldCP "const__5" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var")))) 
                                      (195 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (198 (checkcast (class "clojure.lang.IFn"))) 
                                      (201 (getstatic (fieldCP "const__16" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var")))) 
                                      (204 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (207 (checkcast (class "clojure.lang.IFn"))) 
                                      (210 (aload 5)) 
                                      (212 (aconst_null)) 
                                      (213 (astore 5)) 
                                      (215 (invokestatic (methodCP "isNeg" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (218 (ifeq 227)) ;;to TAG_5
                                      (221 (ldc 27)) ;;STRING:: "minus "
                                      (223 (goto 228)) ;;to TAG_6
                                      (226 (pop)) 
                                      (227 (aconst_null)) ;;at TAG_5
                                      (228 (aload 10)) ;;at TAG_6
                                      (230 (aconst_null)) 
                                      (231 (astore 10)) 
                                      (233 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (238 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (243 (pop)) 
                                      (244 (goto 301)) ;;to TAG_1
                                      (247 (pop)) 
                                      (248 (getstatic (fieldCP "const__17" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var")))) ;;at TAG_4
                                      (251 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (254 (checkcast (class "clojure.lang.IFn"))) 
                                      (257 (getstatic (fieldCP "const__18" "clojure.pprint$format_cardinal_english" (class "java.lang.Object")))) 
                                      (260 (getstatic (fieldCP "const__27" "clojure.pprint$format_cardinal_english" (class "clojure.lang.AFn")))) 
                                      (263 (getstatic (fieldCP "const__28" "clojure.pprint$format_cardinal_english" (class "clojure.lang.Var")))) 
                                      (266 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (269 (checkcast (class "clojure.lang.IFn"))) 
                                      (272 (iconst_1)) 
                                      (273 (anewarray (class "java.lang.Object"))) 
                                      (276 (dup)) 
                                      (277 (iconst_0)) 
                                      (278 (aload 5)) 
                                      (280 (aconst_null)) 
                                      (281 (astore 5)) 
                                      (283 (aastore)) 
                                      (284 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (287 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (292 (getstatic (fieldCP "const__29" "clojure.pprint$format_cardinal_english" (class "clojure.lang.AFn")))) 
                                      (295 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5)) 
                                      (300 (pop)) 
                                      (301 (aload 6)) ;;at TAG_1
                                      (303 (aconst_null)) 
                                      (304 (astore 6)) 
                                      (306 (areturn)) 
                                      (endofcode 307))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$format_cardinal_english-class-table*
  (make-static-class-decls 
   *clojure.pprint$format_cardinal_english*))

(defconst *package-name-map* 
  ("clojure.pprint$format_cardinal_english" . "clojure"))

