; pprint$format_simple_number-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:56 CDT 2014.
;

(defconst *clojure.pprint$format_simple_number*
 (make-class-def
      '(class "clojure.pprint$format_simple_number"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "integer?")
                        (STRING  "=")
                        (STRING  "clojure.pprint")
                        (STRING  "*print-base*")
                        (LONG 10)
                        (STRING  "str")
                        (STRING  "*print-radix*")
                        (STRING  "get")
                        (STRING  "special-radix-markers")
                        (STRING  "opt-base-str")
                        (STRING  "ratio?")
                        (STRING  "else")
                        (STRING  ".")
                        (STRING  "#")
                        (STRING  "r")
                        (STRING  "numerator")
                        (STRING  "/")
                        (STRING  "denominator"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 139)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "integer?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$format_simple_number" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "="
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$format_simple_number" (class "clojure.lang.Var"))))
                                      (26 (ldc 3))        ;;STRING:: "clojure.pprint"
                                      (28 (ldc 4))        ;;STRING:: "*print-base*"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.pprint$format_simple_number" (class "clojure.lang.Var"))))
                                      (39 (ldc2_w 5))     ;; LONG:: "10"
                                      (42 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (45 (putstatic (fieldCP "const__3" "clojure.pprint$format_simple_number" (class "java.lang.Object"))))
                                      (48 (ldc 0))        ;;STRING:: "clojure.core"
                                      (50 (ldc 6))        ;;STRING:: "str"
                                      (52 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (55 (checkcast (class "clojure.lang.Var")))
                                      (58 (putstatic (fieldCP "const__4" "clojure.pprint$format_simple_number" (class "clojure.lang.Var"))))
                                      (61 (ldc 3))        ;;STRING:: "clojure.pprint"
                                      (63 (ldc 7))        ;;STRING:: "*print-radix*"
                                      (65 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (68 (checkcast (class "clojure.lang.Var")))
                                      (71 (putstatic (fieldCP "const__5" "clojure.pprint$format_simple_number" (class "clojure.lang.Var"))))
                                      (74 (ldc 0))        ;;STRING:: "clojure.core"
                                      (76 (ldc 8))        ;;STRING:: "get"
                                      (78 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (81 (checkcast (class "clojure.lang.Var")))
                                      (84 (putstatic (fieldCP "const__6" "clojure.pprint$format_simple_number" (class "clojure.lang.Var"))))
                                      (87 (ldc 3))        ;;STRING:: "clojure.pprint"
                                      (89 (ldc 9))        ;;STRING:: "special-radix-markers"
                                      (91 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (94 (checkcast (class "clojure.lang.Var")))
                                      (97 (putstatic (fieldCP "const__7" "clojure.pprint$format_simple_number" (class "clojure.lang.Var"))))
                                      (100 (ldc 3))       ;;STRING:: "clojure.pprint"
                                      (102 (ldc 10))      ;;STRING:: "opt-base-str"
                                      (104 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (107 (checkcast (class "clojure.lang.Var")))
                                      (110 (putstatic (fieldCP "const__8" "clojure.pprint$format_simple_number" (class "clojure.lang.Var"))))
                                      (113 (ldc 0))       ;;STRING:: "clojure.core"
                                      (115 (ldc 11))      ;;STRING:: "ratio?"
                                      (117 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (120 (checkcast (class "clojure.lang.Var")))
                                      (123 (putstatic (fieldCP "const__9" "clojure.pprint$format_simple_number" (class "clojure.lang.Var"))))
                                      (126 (aconst_null))
                                      (127 (ldc 12))      ;;STRING:: "else"
                                      (129 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (132 (checkcast (class "clojure.lang.Keyword")))
                                      (135 (putstatic (fieldCP "const__10" "clojure.pprint$format_simple_number" (class "clojure.lang.Keyword"))))
                                      (138 (return))
                                      (endofcode 139))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 8) (max_locals . 3) (code_length . 402)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_1)) 
                                      (10 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (15 (dup)) 
                                      (16 (ifnull 203)) ;;to TAG_0
                                      (19 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (22 (if_acmpeq 204)) ;;to TAG_1
                                      (25 (getstatic (fieldCP "const__2" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (28 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (31 (ldc2_w 5)) ;; LONG:: "10"
                                      (34 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") long) boolean))) 
                                      (37 (ifeq 84)) ;;to TAG_2
                                      (40 (getstatic (fieldCP "const__4" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (43 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (46 (checkcast (class "clojure.lang.IFn"))) 
                                      (49 (aload_1)) 
                                      (50 (aconst_null)) 
                                      (51 (astore_1)) 
                                      (52 (getstatic (fieldCP "const__5" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (55 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (58 (dup)) 
                                      (59 (ifnull 73)) ;;to TAG_3
                                      (62 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (65 (if_acmpeq 74)) ;;to TAG_4
                                      (68 (ldc 13)) ;;STRING:: "."
                                      (70 (goto 75))  ;;to TAG_5
                                      (73 (pop)) ;;at TAG_3
                                      (74 (aconst_null)) ;;at TAG_4
                                      (75 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) ;;at TAG_5
                                      (80 (goto 200)) ;;to TAG_6
                                      (83 (pop)) 
                                      (84 (getstatic (fieldCP "const__4" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) ;;at TAG_2
                                      (87 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (90 (checkcast (class "clojure.lang.IFn"))) 
                                      (93 (getstatic (fieldCP "const__5" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (96 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (99 (dup)) 
                                      (100 (ifnull 170)) ;;to TAG_7
                                      (103 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (106 (if_acmpeq 171)) ;;to TAG_8
                                      (109 (getstatic (fieldCP "const__7" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (112 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (115 (getstatic (fieldCP "const__2" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (118 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (121 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (124 (astore_2)) 
                                      (125 (aload_2)) 
                                      (126 (dup)) 
                                      (127 (ifnull 142)) ;;to TAG_9
                                      (130 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (133 (if_acmpeq 143)) ;;to TAG_10
                                      (136 (aload_2)) 
                                      (137 (aconst_null)) 
                                      (138 (astore_2)) 
                                      (139 (goto 167)) ;;to TAG_11
                                      (142 (pop)) ;;at TAG_9
                                      (143 (getstatic (fieldCP "const__4" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) ;;at TAG_10
                                      (146 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (149 (checkcast (class "clojure.lang.IFn"))) 
                                      (152 (ldc 14)) ;;STRING:: "#"
                                      (154 (getstatic (fieldCP "const__2" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (157 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (160 (ldc 15)) ;;STRING:: "r"
                                      (162 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (167 (goto 172)) ;;to TAG_12;;at TAG_11
                                      (170 (pop)) ;;at TAG_7
                                      (171 (aconst_null)) ;;at TAG_8
                                      (172 (getstatic (fieldCP "const__8" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) ;;at TAG_12
                                      (175 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (178 (checkcast (class "clojure.lang.IFn"))) 
                                      (181 (getstatic (fieldCP "const__2" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (184 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (187 (aload_1)) 
                                      (188 (aconst_null)) 
                                      (189 (astore_1)) 
                                      (190 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (195 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (200 (goto 401)) ;;to TAG_13;;at TAG_6
                                      (203 (pop)) ;;at TAG_0
                                      (204 (getstatic (fieldCP "const__9" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) ;;at TAG_1
                                      (207 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (210 (checkcast (class "clojure.lang.IFn"))) 
                                      (213 (aload_1)) 
                                      (214 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (219 (dup)) 
                                      (220 (ifnull 381)) ;;to TAG_14
                                      (223 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (226 (if_acmpeq 382)) ;;to TAG_15
                                      (229 (getstatic (fieldCP "const__4" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (232 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (235 (checkcast (class "clojure.lang.IFn"))) 
                                      (238 (getstatic (fieldCP "const__5" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (241 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (244 (dup)) 
                                      (245 (ifnull 315)) ;;to TAG_16
                                      (248 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (251 (if_acmpeq 316)) ;;to TAG_17
                                      (254 (getstatic (fieldCP "const__7" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (257 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (260 (getstatic (fieldCP "const__2" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (263 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (266 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (269 (astore_2)) 
                                      (270 (aload_2)) 
                                      (271 (dup)) 
                                      (272 (ifnull 287)) ;;to TAG_18
                                      (275 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (278 (if_acmpeq 288)) ;;to TAG_19
                                      (281 (aload_2)) 
                                      (282 (aconst_null)) 
                                      (283 (astore_2)) 
                                      (284 (goto 312)) ;;to TAG_20
                                      (287 (pop)) ;;at TAG_18
                                      (288 (getstatic (fieldCP "const__4" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) ;;at TAG_19
                                      (291 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (294 (checkcast (class "clojure.lang.IFn"))) 
                                      (297 (ldc 14)) ;;STRING:: "#"
                                      (299 (getstatic (fieldCP "const__2" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (302 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (305 (ldc 15)) ;;STRING:: "r"
                                      (307 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (312 (goto 317)) ;;to TAG_21;;at TAG_20
                                      (315 (pop)) ;;at TAG_16
                                      (316 (aconst_null)) ;;at TAG_17
                                      (317 (getstatic (fieldCP "const__8" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) ;;at TAG_21
                                      (320 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (323 (checkcast (class "clojure.lang.IFn"))) 
                                      (326 (getstatic (fieldCP "const__2" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (329 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (332 (aload_1)) 
                                      (333 (ldc 16)) ;;STRING:: "numerator"
                                      (335 (invokestatic (methodCP "invokeNoArgInstanceMember" "clojure.lang.Reflector" ((class "java.lang.Object") (class "java.lang.String")) (class "java.lang.Object")))) 
                                      (338 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (343 (ldc 17)) ;;STRING:: "/"
                                      (345 (getstatic (fieldCP "const__8" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (348 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (351 (checkcast (class "clojure.lang.IFn"))) 
                                      (354 (getstatic (fieldCP "const__2" "clojure.pprint$format_simple_number" (class "clojure.lang.Var")))) 
                                      (357 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (360 (aload_1)) 
                                      (361 (aconst_null)) 
                                      (362 (astore_1)) 
                                      (363 (ldc 18)) ;;STRING:: "denominator"
                                      (365 (invokestatic (methodCP "invokeNoArgInstanceMember" "clojure.lang.Reflector" ((class "java.lang.Object") (class "java.lang.String")) (class "java.lang.Object")))) 
                                      (368 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (373 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5)) 
                                      (378 (goto 401)) ;;to TAG_13
                                      (381 (pop)) ;;at TAG_14
                                      (382 (getstatic (fieldCP "const__10" "clojure.pprint$format_simple_number" (class "clojure.lang.Keyword")))) ;;at TAG_15
                                      (385 (dup)) 
                                      (386 (ifnull 399)) ;;to TAG_22
                                      (389 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (392 (if_acmpeq 400)) ;;to TAG_23
                                      (395 (aconst_null)) 
                                      (396 (goto 401)) ;;to TAG_13
                                      (399 (pop)) ;;at TAG_22
                                      (400 (aconst_null)) ;;at TAG_23
                                      (401 (areturn)) ;;at TAG_13
                                      (endofcode 402))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$format_simple_number-class-table*
  (make-static-class-decls 
   *clojure.pprint$format_simple_number*))

(defconst *package-name-map* 
  ("clojure.pprint$format_simple_number" . "clojure"))

