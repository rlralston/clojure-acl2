; main$eval_opt-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:53 CDT 2014.
;

(defconst *clojure.main$eval_opt*
 (make-class-def
      '(class "clojure.main$eval_opt"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "push-thread-bindings")
                        (STRING  "hash-map")
                        (STRING  "*read-eval*")
                        (STRING  "=")
                        (STRING  "unknown")
                        (STRING  "eval")
                        (STRING  "nil?")
                        (STRING  "prn"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 104)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "push-thread-bindings"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.main$eval_opt" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "hash-map"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.main$eval_opt" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "*read-eval*"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.main$eval_opt" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "="
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.main$eval_opt" (class "clojure.lang.Var"))))
                                      (52 (aconst_null))
                                      (53 (ldc 5))        ;;STRING:: "unknown"
                                      (55 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (58 (checkcast (class "clojure.lang.Keyword")))
                                      (61 (putstatic (fieldCP "const__4" "clojure.main$eval_opt" (class "clojure.lang.Keyword"))))
                                      (64 (ldc 0))        ;;STRING:: "clojure.core"
                                      (66 (ldc 6))        ;;STRING:: "eval"
                                      (68 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (71 (checkcast (class "clojure.lang.Var")))
                                      (74 (putstatic (fieldCP "const__5" "clojure.main$eval_opt" (class "clojure.lang.Var"))))
                                      (77 (ldc 0))        ;;STRING:: "clojure.core"
                                      (79 (ldc 7))        ;;STRING:: "nil?"
                                      (81 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (84 (checkcast (class "clojure.lang.Var")))
                                      (87 (putstatic (fieldCP "const__6" "clojure.main$eval_opt" (class "clojure.lang.Var"))))
                                      (90 (ldc 0))        ;;STRING:: "clojure.core"
                                      (92 (ldc 8))        ;;STRING:: "prn"
                                      (94 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (97 (checkcast (class "clojure.lang.Var")))
                                      (100 (putstatic (fieldCP "const__7" "clojure.main$eval_opt" (class "clojure.lang.Var"))))
                                      (103 (return))
                                      (endofcode 104))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 6) (code_length . 261)
                                   (parsedcode
                                      (0 (new (class "java.lang.Object"))) 
                                      (3 (dup)) 
                                      (4 (invokespecial (methodCP "<init>" "java.lang.Object" () void))) 
                                      (7 (astore_2)) 
                                      (8 (new (class "clojure.lang.LineNumberingPushbackReader"))) 
                                      (11 (dup)) 
                                      (12 (new (class "java.io.StringReader"))) 
                                      (15 (dup)) 
                                      (16 (aload_1)) 
                                      (17 (aconst_null)) 
                                      (18 (astore_1)) 
                                      (19 (checkcast (class "java.lang.String"))) 
                                      (22 (invokespecial (methodCP "<init>" "java.io.StringReader" ((class "java.lang.String")) void))) 
                                      (25 (checkcast (class "java.io.Reader"))) 
                                      (28 (invokespecial (methodCP "<init>" "clojure.lang.LineNumberingPushbackReader" ((class "java.io.Reader")) void))) 
                                      (31 (astore_3)) 
                                      (32 (getstatic (fieldCP "const__0" "clojure.main$eval_opt" (class "clojure.lang.Var")))) 
                                      (35 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (38 (checkcast (class "clojure.lang.IFn"))) 
                                      (41 (getstatic (fieldCP "const__1" "clojure.main$eval_opt" (class "clojure.lang.Var")))) 
                                      (44 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (47 (checkcast (class "clojure.lang.IFn"))) 
                                      (50 (getstatic (fieldCP "const__2" "clojure.main$eval_opt" (class "clojure.lang.Var")))) 
                                      (53 (getstatic (fieldCP "const__4" "clojure.main$eval_opt" (class "clojure.lang.Keyword")))) 
                                      (56 (getstatic (fieldCP "const__2" "clojure.main$eval_opt" (class "clojure.lang.Var")))) 
                                      (59 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (62 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (65 (ifeq 75)) ;;to TAG_0
                                      (68 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (71 (goto 81))  ;;to TAG_1
                                      (74 (pop)) 
                                      (75 (getstatic (fieldCP "const__2" "clojure.main$eval_opt" (class "clojure.lang.Var")))) ;;at TAG_0
                                      (78 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (81 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) ;;at TAG_1
                                      (86 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (91 (pop)) 
                                      (92 (new (class "clojure.main$eval_opt$fn__6602"))) 
                                      (95 (dup)) 
                                      (96 (aload_2)) 
                                      (97 (aload_3)) 
                                      (98 (invokespecial (methodCP "<init>" "clojure.main$eval_opt$fn__6602" ((class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (101 (checkcast (class "clojure.lang.IFn"))) 
                                      (104 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (109 (astore 4)) 
                                      (111 (aload 4)) ;;at TAG_8
                                      (113 (aload_2)) 
                                      (114 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (117 (ifeq 125)) ;;to TAG_2
                                      (120 (aconst_null)) 
                                      (121 (goto 260)) ;;to TAG_3
                                      (124 (pop)) 
                                      (125 (getstatic (fieldCP "const__5" "clojure.main$eval_opt" (class "clojure.lang.Var")))) ;;at TAG_2
                                      (128 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (131 (checkcast (class "clojure.lang.IFn"))) 
                                      (134 (aload 4)) 
                                      (136 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (141 (astore 5)) 
                                      (143 (aload 5)) 
                                      (145 (aconst_null)) 
                                      (146 (invokestatic (methodCP "identical" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (149 (ifeq 158)) ;;to TAG_4
                                      (152 (aconst_null)) 
                                      (153 (pop)) 
                                      (154 (goto 178)) ;;to TAG_5
                                      (157 (pop)) 
                                      (158 (getstatic (fieldCP "const__7" "clojure.main$eval_opt" (class "clojure.lang.Var")))) ;;at TAG_4
                                      (161 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (164 (checkcast (class "clojure.lang.IFn"))) 
                                      (167 (aload 5)) 
                                      (169 (aconst_null)) 
                                      (170 (astore 5)) 
                                      (172 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (177 (pop)) 
                                      (178 (getstatic (fieldCP "const__0" "clojure.main$eval_opt" (class "clojure.lang.Var")))) ;;at TAG_5
                                      (181 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (184 (checkcast (class "clojure.lang.IFn"))) 
                                      (187 (getstatic (fieldCP "const__1" "clojure.main$eval_opt" (class "clojure.lang.Var")))) 
                                      (190 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (193 (checkcast (class "clojure.lang.IFn"))) 
                                      (196 (getstatic (fieldCP "const__2" "clojure.main$eval_opt" (class "clojure.lang.Var")))) 
                                      (199 (getstatic (fieldCP "const__4" "clojure.main$eval_opt" (class "clojure.lang.Keyword")))) 
                                      (202 (getstatic (fieldCP "const__2" "clojure.main$eval_opt" (class "clojure.lang.Var")))) 
                                      (205 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (208 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (211 (ifeq 221)) ;;to TAG_6
                                      (214 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (217 (goto 227)) ;;to TAG_7
                                      (220 (pop)) 
                                      (221 (getstatic (fieldCP "const__2" "clojure.main$eval_opt" (class "clojure.lang.Var")))) ;;at TAG_6
                                      (224 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (227 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) ;;at TAG_7
                                      (232 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (237 (pop)) 
                                      (238 (new (class "clojure.main$eval_opt$fn__6604"))) 
                                      (241 (dup)) 
                                      (242 (aload_2)) 
                                      (243 (aload_3)) 
                                      (244 (invokespecial (methodCP "<init>" "clojure.main$eval_opt$fn__6604" ((class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (247 (checkcast (class "clojure.lang.IFn"))) 
                                      (250 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (255 (astore 4)) 
                                      (257 (goto 111)) ;;to TAG_8
                                      (260 (areturn)) ;;at TAG_3
                                      (endofcode 261))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *main$eval_opt-class-table*
  (make-static-class-decls 
   *clojure.main$eval_opt*))

(defconst *package-name-map* 
  ("clojure.main$eval_opt" . "clojure"))

