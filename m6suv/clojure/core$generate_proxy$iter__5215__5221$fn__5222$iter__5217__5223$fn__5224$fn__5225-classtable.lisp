; core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:43 CDT 2014.
;

(defconst *clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225*
 (make-class-def
      '(class "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "int")
                        (STRING  "<")
                        (STRING  "method-sig")
                        (STRING  "not")
                        (STRING  "chunk-append")
                        (STRING  "unchecked-inc"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "c__4588__auto__" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "size__4589__auto__" int (accessflags  *class* ) -1)
                        (field "considered" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "b__5220" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 86)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "int"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" (class "clojure.lang.Var"))))
                                      (13 (lconst_0))
                                      (14 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (17 (putstatic (fieldCP "const__1" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" (class "java.lang.Object"))))
                                      (20 (ldc 0))        ;;STRING:: "clojure.core"
                                      (22 (ldc 2))        ;;STRING:: "<"
                                      (24 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (27 (checkcast (class "clojure.lang.Var")))
                                      (30 (putstatic (fieldCP "const__2" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" (class "clojure.lang.Var"))))
                                      (33 (ldc 0))        ;;STRING:: "clojure.core"
                                      (35 (ldc 3))        ;;STRING:: "method-sig"
                                      (37 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (40 (checkcast (class "clojure.lang.Var")))
                                      (43 (putstatic (fieldCP "const__3" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" (class "clojure.lang.Var"))))
                                      (46 (ldc 0))        ;;STRING:: "clojure.core"
                                      (48 (ldc 4))        ;;STRING:: "not"
                                      (50 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (53 (checkcast (class "clojure.lang.Var")))
                                      (56 (putstatic (fieldCP "const__4" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" (class "clojure.lang.Var"))))
                                      (59 (ldc 0))        ;;STRING:: "clojure.core"
                                      (61 (ldc 5))        ;;STRING:: "chunk-append"
                                      (63 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (66 (checkcast (class "clojure.lang.Var")))
                                      (69 (putstatic (fieldCP "const__5" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" (class "clojure.lang.Var"))))
                                      (72 (ldc 0))        ;;STRING:: "clojure.core"
                                      (74 (ldc 6))        ;;STRING:: "unchecked-inc"
                                      (76 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (79 (checkcast (class "clojure.lang.Var")))
                                      (82 (putstatic (fieldCP "const__6" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" (class "clojure.lang.Var"))))
                                      (85 (return))
                                      (endofcode 86))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object") int (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 5) (code_length . 26)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "c__4588__auto__" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" (class "java.lang.Object"))))
                                      (9 (aload_0))
                                      (10 (iload_2))
                                      (11 (putfield (fieldCP "size__4589__auto__" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" int)))
                                      (14 (aload_0))
                                      (15 (aload_3))
                                      (16 (putfield (fieldCP "considered" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" (class "java.lang.Object"))))
                                      (19 (aload_0))
                                      (20 (aload 4))
                                      (22 (putfield (fieldCP "b__5220" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" (class "java.lang.Object"))))
                                      (25 (return))
                                      (endofcode 26))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 5) (code_length . 154)
                                   (parsedcode
                                      (0 (lconst_0)) 
                                      (1 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (4 (i2l)) 
                                      (5 (lstore_1)) 
                                      (6 (lload_1)) ;;at TAG_3
                                      (7 (aload_0)) 
                                      (8 (getfield (fieldCP "size__4589__auto__" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" int))) 
                                      (11 (i2l)) 
                                      (12 (lcmp)) 
                                      (13 (ifge 150)) ;;to TAG_0
                                      (16 (aload_0)) 
                                      (17 (getfield (fieldCP "c__4588__auto__" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" (class "java.lang.Object")))) 
                                      (20 (checkcast (class "clojure.lang.Indexed"))) 
                                      (23 (lload_1)) 
                                      (24 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (27 (invokeinterface (methodCP "nth" "clojure.lang.Indexed" (int) (class "java.lang.Object")) 2)) 
                                      (32 (astore_3)) 
                                      (33 (getstatic (fieldCP "const__3" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" (class "clojure.lang.Var")))) 
                                      (36 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (39 (checkcast (class "clojure.lang.IFn"))) 
                                      (42 (aload_3)) 
                                      (43 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (48 (astore 4)) 
                                      (50 (getstatic (fieldCP "const__4" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" (class "clojure.lang.Var")))) 
                                      (53 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (56 (checkcast (class "clojure.lang.IFn"))) 
                                      (59 (aload_0)) 
                                      (60 (getfield (fieldCP "considered" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" (class "java.lang.Object")))) 
                                      (63 (checkcast (class "clojure.lang.IFn"))) 
                                      (66 (aload 4)) 
                                      (68 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (73 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (78 (dup)) 
                                      (79 (ifnull 138)) ;;to TAG_1
                                      (82 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (85 (if_acmpeq 139))  ;;to TAG_2
                                      (88 (getstatic (fieldCP "const__5" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" (class "clojure.lang.Var")))) 
                                      (91 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (94 (checkcast (class "clojure.lang.IFn"))) 
                                      (97 (aload_0)) 
                                      (98 (getfield (fieldCP "b__5220" "clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" (class "java.lang.Object")))) 
                                      (101 (iconst_2)) 
                                      (102 (anewarray (class "java.lang.Object"))) 
                                      (105 (dup)) 
                                      (106 (iconst_0)) 
                                      (107 (aload 4)) 
                                      (109 (aconst_null)) 
                                      (110 (astore 4)) 
                                      (112 (aastore)) 
                                      (113 (dup)) 
                                      (114 (iconst_1)) 
                                      (115 (aload_3)) 
                                      (116 (aconst_null)) 
                                      (117 (astore_3)) 
                                      (118 (aastore)) 
                                      (119 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (122 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (127 (pop)) 
                                      (128 (lload_1)) 
                                      (129 (lconst_1)) 
                                      (130 (ladd)) 
                                      (131 (lstore_1)) 
                                      (132 (goto 6)) ;;to TAG_3
                                      (135 (goto 146)) ;;to TAG_4
                                      (138 (pop)) ;;at TAG_1
                                      (139 (lload_1)) ;;at TAG_2
                                      (140 (lconst_1)) 
                                      (141 (ladd)) 
                                      (142 (lstore_1)) 
                                      (143 (goto 6)) ;;to TAG_3
                                      (146 (goto 153)) ;;to TAG_5;;at TAG_4
                                      (149 (pop)) 
                                      (150 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_0
                                      (153 (areturn)) ;;at TAG_5
                                      (endofcode 154))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225-class-table*
  (make-static-class-decls 
   *clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225*))

(defconst *package-name-map* 
  ("clojure.core$generate_proxy$iter__5215__5221$fn__5222$iter__5217__5223$fn__5224$fn__5225" . "clojure"))

