; core$promise-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:45 CDT 2014.
;

(defconst *clojure.core$promise*
 (make-class-def
      '(class "clojure.core$promise"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "atom")
                        (STRING  "line")
                        (STRING  "column"))
            (fields
                        (field "const__0" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 0) (code_length . 108)
                                   (parsedcode
                                      (0 (lconst_1))
                                      (1 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (4 (putstatic (fieldCP "const__0" "clojure.core$promise" (class "java.lang.Object"))))
                                      (7 (ldc 0))         ;;STRING:: "clojure.core"
                                      (9 (ldc 1))         ;;STRING:: "atom"
                                      (11 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (14 (checkcast (class "clojure.lang.Var")))
                                      (17 (putstatic (fieldCP "const__1" "clojure.core$promise" (class "clojure.lang.Var"))))
                                      (20 (aconst_null))
                                      (21 (ldc 2))        ;;STRING:: "line"
                                      (23 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (26 (checkcast (class "clojure.lang.Keyword")))
                                      (29 (putstatic (fieldCP "const__2" "clojure.core$promise" (class "clojure.lang.Keyword"))))
                                      (32 (sipush 6440))
                                      (35 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (38 (putstatic (fieldCP "const__3" "clojure.core$promise" (class "java.lang.Object"))))
                                      (41 (aconst_null))
                                      (42 (ldc 3))        ;;STRING:: "column"
                                      (44 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (47 (checkcast (class "clojure.lang.Keyword")))
                                      (50 (putstatic (fieldCP "const__4" "clojure.core$promise" (class "clojure.lang.Keyword"))))
                                      (53 (iconst_5))
                                      (54 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (57 (putstatic (fieldCP "const__5" "clojure.core$promise" (class "java.lang.Object"))))
                                      (60 (iconst_4))
                                      (61 (anewarray (class "java.lang.Object")))
                                      (64 (dup))
                                      (65 (iconst_0))
                                      (66 (aconst_null))
                                      (67 (ldc 3))        ;;STRING:: "column"
                                      (69 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (72 (aastore))
                                      (73 (dup))
                                      (74 (iconst_1))
                                      (75 (iconst_5))
                                      (76 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (79 (aastore))
                                      (80 (dup))
                                      (81 (iconst_2))
                                      (82 (aconst_null))
                                      (83 (ldc 2))        ;;STRING:: "line"
                                      (85 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (88 (aastore))
                                      (89 (dup))
                                      (90 (iconst_3))
                                      (91 (sipush 6440))
                                      (94 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (97 (aastore))
                                      (98 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (101 (checkcast (class "clojure.lang.AFn")))
                                      (104 (putstatic (fieldCP "const__6" "clojure.core$promise" (class "clojure.lang.AFn"))))
                                      (107 (return))
                                      (endofcode 108))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 3) (code_length . 57)
                                   (parsedcode
                                      (0 (new (class "java.util.concurrent.CountDownLatch")))
                                      (3 (dup))
                                      (4 (lconst_1))
                                      (5 (invokestatic
					(methodCP "intCast" "clojure.lang.RT" (long) int)))
                                      (8 (invokespecial
					(methodCP "<init>" "java.util.concurrent.CountDownLatch" (int) void)))
                                      (11 (astore_1))
                                      (12 (getstatic (fieldCP "const__1" "clojure.core$promise" (class "clojure.lang.Var"))))
                                      (15 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (18 (checkcast (class "clojure.lang.IFn")))
                                      (21 (aload_1))
                                      (22 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (27 (astore_2))
                                      (28 (new (class "clojure.core$promise$reify__6310")))
                                      (31 (dup))
                                      (32 (aconst_null))
                                      (33 (aload_1))
                                      (34 (aconst_null))
                                      (35 (astore_1))
                                      (36 (aload_2))
                                      (37 (aconst_null))
                                      (38 (astore_2))
                                      (39 (invokespecial
					(methodCP "<init>" "clojure.core$promise$reify__6310" ((class "clojure.lang.IPersistentMap") (class "java.lang.Object") (class "java.lang.Object")) void)))
                                      (42 (checkcast (class "clojure.lang.IObj")))
                                      (45 (getstatic (fieldCP "const__6" "clojure.core$promise" (class "clojure.lang.AFn"))))
                                      (48 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (51 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (56 (areturn))
                                      (endofcode 57))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$promise-class-table*
  (make-static-class-decls 
   *clojure.core$promise*))

(defconst *package-name-map* 
  ("clojure.core$promise" . "clojure"))

