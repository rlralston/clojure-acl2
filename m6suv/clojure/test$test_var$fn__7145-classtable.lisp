; test$test_var$fn__7145-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:59 CDT 2014.
;

(defconst *clojure.test$test_var$fn__7145*
 (make-class-def
      '(class "clojure.test$test_var$fn__7145"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.test")
                        (STRING  "do-report")
                        (STRING  "type")
                        (STRING  "error")
                        (STRING  "message")
                        (STRING  "expected")
                        (STRING  "actual")
                        (STRING  "Uncaught exception, not in assertion."))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "t" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 74)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.test"
                                      (2 (ldc 1))         ;;STRING:: "do-report"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.test$test_var$fn__7145" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "type"
                                      (16 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (19 (checkcast (class "clojure.lang.Keyword")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.test$test_var$fn__7145" (class "clojure.lang.Keyword"))))
                                      (25 (aconst_null))
                                      (26 (ldc 3))        ;;STRING:: "error"
                                      (28 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (31 (checkcast (class "clojure.lang.Keyword")))
                                      (34 (putstatic (fieldCP "const__2" "clojure.test$test_var$fn__7145" (class "clojure.lang.Keyword"))))
                                      (37 (aconst_null))
                                      (38 (ldc 4))        ;;STRING:: "message"
                                      (40 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (43 (checkcast (class "clojure.lang.Keyword")))
                                      (46 (putstatic (fieldCP "const__3" "clojure.test$test_var$fn__7145" (class "clojure.lang.Keyword"))))
                                      (49 (aconst_null))
                                      (50 (ldc 5))        ;;STRING:: "expected"
                                      (52 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (55 (checkcast (class "clojure.lang.Keyword")))
                                      (58 (putstatic (fieldCP "const__4" "clojure.test$test_var$fn__7145" (class "clojure.lang.Keyword"))))
                                      (61 (aconst_null))
                                      (62 (ldc 6))        ;;STRING:: "actual"
                                      (64 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (67 (checkcast (class "clojure.lang.Keyword")))
                                      (70 (putstatic (fieldCP "const__5" "clojure.test$test_var$fn__7145" (class "clojure.lang.Keyword"))))
                                      (73 (return))
                                      (endofcode 74))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "t" "clojure.test$test_var$fn__7145" (class "java.lang.Object"))))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 3) (code_length . 92)
                                   (parsedcode
                                      (0 (aload_0)) ;;at TAG_1
                                      (1 (getfield (fieldCP "t" "clojure.test$test_var$fn__7145" (class "java.lang.Object")))) 
                                      (4 (checkcast (class "clojure.lang.IFn"))) 
                                      (7 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (12 (astore_1)) 
                                      (13 (goto 90)) ;;to TAG_0;;at TAG_2
                                      (16 (astore_2)) ;;at TAG_3
                                      (17 (getstatic (fieldCP "const__0" "clojure.test$test_var$fn__7145" (class "clojure.lang.Var")))) 
                                      (20 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (23 (checkcast (class "clojure.lang.IFn"))) 
                                      (26 (bipush 8)) 
                                      (28 (anewarray (class "java.lang.Object"))) 
                                      (31 (dup)) 
                                      (32 (iconst_0)) 
                                      (33 (getstatic (fieldCP "const__1" "clojure.test$test_var$fn__7145" (class "clojure.lang.Keyword")))) 
                                      (36 (aastore)) 
                                      (37 (dup)) 
                                      (38 (iconst_1)) 
                                      (39 (getstatic (fieldCP "const__2" "clojure.test$test_var$fn__7145" (class "clojure.lang.Keyword")))) 
                                      (42 (aastore)) 
                                      (43 (dup)) 
                                      (44 (iconst_2)) 
                                      (45 (getstatic (fieldCP "const__3" "clojure.test$test_var$fn__7145" (class "clojure.lang.Keyword")))) 
                                      (48 (aastore)) 
                                      (49 (dup)) 
                                      (50 (iconst_3)) 
                                      (51 (ldc 7)) ;;STRING:: "Uncaught exception, not in assertion."
                                      (53 (aastore)) 
                                      (54 (dup)) 
                                      (55 (iconst_4)) 
                                      (56 (getstatic (fieldCP "const__4" "clojure.test$test_var$fn__7145" (class "clojure.lang.Keyword")))) 
                                      (59 (aastore)) 
                                      (60 (dup)) 
                                      (61 (iconst_5)) 
                                      (62 (aconst_null)) 
                                      (63 (aastore)) 
                                      (64 (dup)) 
                                      (65 (bipush 6)) 
                                      (67 (getstatic (fieldCP "const__5" "clojure.test$test_var$fn__7145" (class "clojure.lang.Keyword")))) 
                                      (70 (aastore)) 
                                      (71 (dup)) 
                                      (72 (bipush 7)) 
                                      (74 (aload_2)) 
                                      (75 (aconst_null)) 
                                      (76 (astore_2)) 
                                      (77 (aastore)) 
                                      (78 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (81 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (86 (astore_1)) 
                                      (87 (goto 90)) ;;to TAG_0
                                      (90 (aload_1)) ;;at TAG_0
                                      (91 (areturn)) 
                                      (endofcode 92))
                                   (Exceptions 
                                     (handler 0 13  16 (class "java.lang.Throwable")))
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *test$test_var$fn__7145-class-table*
  (make-static-class-decls 
   *clojure.test$test_var$fn__7145*))

(defconst *package-name-map* 
  ("clojure.test$test_var$fn__7145" . "clojure"))

