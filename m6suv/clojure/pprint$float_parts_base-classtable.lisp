; pprint$float_parts_base-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:55 CDT 2014.
;

(defconst *clojure.pprint$float_parts_base*
 (make-class-def
      '(class "clojure.pprint$float_parts_base"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "int")
                        (STRING  "neg?")
                        (STRING  "str")
                        (STRING  "dec")
                        (STRING  "count")
                        (STRING  "subs")
                        (STRING  "inc")
                        (LONG 2))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 131)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "int"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$float_parts_base" (class "clojure.lang.Var"))))
                                      (13 (bipush 101))
                                      (15 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (18 (putstatic (fieldCP "const__1" "clojure.pprint$float_parts_base" (class "java.lang.Object"))))
                                      (21 (ldc 0))        ;;STRING:: "clojure.core"
                                      (23 (ldc 2))        ;;STRING:: "neg?"
                                      (25 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (28 (checkcast (class "clojure.lang.Var")))
                                      (31 (putstatic (fieldCP "const__2" "clojure.pprint$float_parts_base" (class "clojure.lang.Var"))))
                                      (34 (bipush 46))
                                      (36 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (39 (putstatic (fieldCP "const__3" "clojure.pprint$float_parts_base" (class "java.lang.Object"))))
                                      (42 (ldc 0))        ;;STRING:: "clojure.core"
                                      (44 (ldc 3))        ;;STRING:: "str"
                                      (46 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (49 (checkcast (class "clojure.lang.Var")))
                                      (52 (putstatic (fieldCP "const__4" "clojure.pprint$float_parts_base" (class "clojure.lang.Var"))))
                                      (55 (ldc 0))        ;;STRING:: "clojure.core"
                                      (57 (ldc 4))        ;;STRING:: "dec"
                                      (59 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (62 (checkcast (class "clojure.lang.Var")))
                                      (65 (putstatic (fieldCP "const__5" "clojure.pprint$float_parts_base" (class "clojure.lang.Var"))))
                                      (68 (ldc 0))        ;;STRING:: "clojure.core"
                                      (70 (ldc 5))        ;;STRING:: "count"
                                      (72 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (75 (checkcast (class "clojure.lang.Var")))
                                      (78 (putstatic (fieldCP "const__6" "clojure.pprint$float_parts_base" (class "clojure.lang.Var"))))
                                      (81 (ldc 0))        ;;STRING:: "clojure.core"
                                      (83 (ldc 6))        ;;STRING:: "subs"
                                      (85 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (88 (checkcast (class "clojure.lang.Var")))
                                      (91 (putstatic (fieldCP "const__7" "clojure.pprint$float_parts_base" (class "clojure.lang.Var"))))
                                      (94 (lconst_0))
                                      (95 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (98 (putstatic (fieldCP "const__8" "clojure.pprint$float_parts_base" (class "java.lang.Object"))))
                                      (101 (ldc 0))       ;;STRING:: "clojure.core"
                                      (103 (ldc 7))       ;;STRING:: "inc"
                                      (105 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (108 (checkcast (class "clojure.lang.Var")))
                                      (111 (putstatic (fieldCP "const__9" "clojure.pprint$float_parts_base" (class "clojure.lang.Var"))))
                                      (114 (lconst_1))
                                      (115 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (118 (putstatic (fieldCP "const__10" "clojure.pprint$float_parts_base" (class "java.lang.Object"))))
                                      (121 (ldc2_w 8))    ;; LONG:: "2"
                                      (124 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (127 (putstatic (fieldCP "const__11" "clojure.pprint$float_parts_base" (class "java.lang.Object"))))
                                      (130 (return))
                                      (endofcode 131))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 9) (max_locals . 5) (code_length . 301)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (aconst_null)) 
                                      (2 (astore_1)) 
                                      (3 (invokevirtual (methodCP "toString" "java.lang.Object" () (class "java.lang.String")))) 
                                      (6 (checkcast (class "java.lang.String"))) 
                                      (9 (invokevirtual (methodCP "toLowerCase" "java.lang.String" () (class "java.lang.String")))) 
                                      (12 (astore_2)) 
                                      (13 (aload_2)) 
                                      (14 (checkcast (class "java.lang.String"))) 
                                      (17 (getstatic (fieldCP "const__1" "clojure.pprint$float_parts_base" (class "java.lang.Object")))) 
                                      (20 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (23 (invokevirtual (methodCP "indexOf" "java.lang.String" (int) int))) 
                                      (26 (istore_3)) 
                                      (27 (iload_3)) 
                                      (28 (i2l)) 
                                      (29 (lconst_0)) 
                                      (30 (lcmp)) 
                                      (31 (ifge 205)) ;;to TAG_0
                                      (34 (aload_2)) 
                                      (35 (checkcast (class "java.lang.String"))) 
                                      (38 (getstatic (fieldCP "const__3" "clojure.pprint$float_parts_base" (class "java.lang.Object")))) 
                                      (41 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (44 (invokevirtual (methodCP "indexOf" "java.lang.String" (int) int))) 
                                      (47 (istore 4)) 
                                      (49 (iload 4)) 
                                      (51 (i2l)) 
                                      (52 (lconst_0)) 
                                      (53 (lcmp)) 
                                      (54 (ifge 102)) ;;to TAG_1
                                      (57 (iconst_2)) 
                                      (58 (anewarray (class "java.lang.Object"))) 
                                      (61 (dup)) 
                                      (62 (iconst_0)) 
                                      (63 (aload_2)) 
                                      (64 (aastore)) 
                                      (65 (dup)) 
                                      (66 (iconst_1)) 
                                      (67 (getstatic (fieldCP "const__4" "clojure.pprint$float_parts_base" (class "clojure.lang.Var")))) 
                                      (70 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (73 (checkcast (class "clojure.lang.IFn"))) 
                                      (76 (aload_2)) 
                                      (77 (aconst_null)) 
                                      (78 (astore_2)) 
                                      (79 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (82 (i2l)) 
                                      (83 (invokestatic (methodCP "dec" "clojure.lang.Numbers" (long) long))) 
                                      (86 (invokestatic (methodCP "num" "clojure.lang.Numbers" (long) (class "java.lang.Number")))) 
                                      (89 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (94 (aastore)) 
                                      (95 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (98 (goto 201))  ;;to TAG_2
                                      (101 (pop)) 
                                      (102 (iconst_2)) ;;at TAG_1
                                      (103 (anewarray (class "java.lang.Object"))) 
                                      (106 (dup)) 
                                      (107 (iconst_0)) 
                                      (108 (getstatic (fieldCP "const__4" "clojure.pprint$float_parts_base" (class "clojure.lang.Var")))) 
                                      (111 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (114 (checkcast (class "clojure.lang.IFn"))) 
                                      (117 (getstatic (fieldCP "const__7" "clojure.pprint$float_parts_base" (class "clojure.lang.Var")))) 
                                      (120 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (123 (checkcast (class "clojure.lang.IFn"))) 
                                      (126 (aload_2)) 
                                      (127 (getstatic (fieldCP "const__8" "clojure.pprint$float_parts_base" (class "java.lang.Object")))) 
                                      (130 (iload 4)) 
                                      (132 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (135 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (140 (getstatic (fieldCP "const__7" "clojure.pprint$float_parts_base" (class "clojure.lang.Var")))) 
                                      (143 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (146 (checkcast (class "clojure.lang.IFn"))) 
                                      (149 (aload_2)) 
                                      (150 (aconst_null)) 
                                      (151 (astore_2)) 
                                      (152 (iload 4)) 
                                      (154 (i2l)) 
                                      (155 (invokestatic (methodCP "inc" "clojure.lang.Numbers" (long) long))) 
                                      (158 (invokestatic (methodCP "num" "clojure.lang.Numbers" (long) (class "java.lang.Number")))) 
                                      (161 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (166 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (171 (aastore)) 
                                      (172 (dup)) 
                                      (173 (iconst_1)) 
                                      (174 (getstatic (fieldCP "const__4" "clojure.pprint$float_parts_base" (class "clojure.lang.Var")))) 
                                      (177 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (180 (checkcast (class "clojure.lang.IFn"))) 
                                      (183 (iload 4)) 
                                      (185 (i2l)) 
                                      (186 (invokestatic (methodCP "dec" "clojure.lang.Numbers" (long) long))) 
                                      (189 (invokestatic (methodCP "num" "clojure.lang.Numbers" (long) (class "java.lang.Number")))) 
                                      (192 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (197 (aastore)) 
                                      (198 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (201 (goto 300)) ;;to TAG_3;;at TAG_2
                                      (204 (pop)) 
                                      (205 (iconst_2)) ;;at TAG_0
                                      (206 (anewarray (class "java.lang.Object"))) 
                                      (209 (dup)) 
                                      (210 (iconst_0)) 
                                      (211 (getstatic (fieldCP "const__4" "clojure.pprint$float_parts_base" (class "clojure.lang.Var")))) 
                                      (214 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (217 (checkcast (class "clojure.lang.IFn"))) 
                                      (220 (getstatic (fieldCP "const__7" "clojure.pprint$float_parts_base" (class "clojure.lang.Var")))) 
                                      (223 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (226 (checkcast (class "clojure.lang.IFn"))) 
                                      (229 (aload_2)) 
                                      (230 (getstatic (fieldCP "const__8" "clojure.pprint$float_parts_base" (class "java.lang.Object")))) 
                                      (233 (getstatic (fieldCP "const__10" "clojure.pprint$float_parts_base" (class "java.lang.Object")))) 
                                      (236 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (241 (getstatic (fieldCP "const__7" "clojure.pprint$float_parts_base" (class "clojure.lang.Var")))) 
                                      (244 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (247 (checkcast (class "clojure.lang.IFn"))) 
                                      (250 (aload_2)) 
                                      (251 (getstatic (fieldCP "const__11" "clojure.pprint$float_parts_base" (class "java.lang.Object")))) 
                                      (254 (iload_3)) 
                                      (255 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (258 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (263 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (268 (aastore)) 
                                      (269 (dup)) 
                                      (270 (iconst_1)) 
                                      (271 (getstatic (fieldCP "const__7" "clojure.pprint$float_parts_base" (class "clojure.lang.Var")))) 
                                      (274 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (277 (checkcast (class "clojure.lang.IFn"))) 
                                      (280 (aload_2)) 
                                      (281 (aconst_null)) 
                                      (282 (astore_2)) 
                                      (283 (iload_3)) 
                                      (284 (i2l)) 
                                      (285 (invokestatic (methodCP "inc" "clojure.lang.Numbers" (long) long))) 
                                      (288 (invokestatic (methodCP "num" "clojure.lang.Numbers" (long) (class "java.lang.Number")))) 
                                      (291 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (296 (aastore)) 
                                      (297 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (300 (areturn)) ;;at TAG_3
                                      (endofcode 301))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$float_parts_base-class-table*
  (make-static-class-decls 
   *clojure.pprint$float_parts_base*))

(defconst *package-name-map* 
  ("clojure.pprint$float_parts_base" . "clojure"))

