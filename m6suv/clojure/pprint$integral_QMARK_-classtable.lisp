; pprint$integral_QMARK_-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:56 CDT 2014.
;

(defconst *clojure.pprint$integral_QMARK_*
 (make-class-def
      '(class "clojure.pprint$integral_QMARK_"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "integer?")
                        (STRING  "decimal?")
                        (STRING  ">=")
                        (STRING  "bigdec")
                        (STRING  "float?")
                        (STRING  "=")
                        (STRING  "ratio?")
                        (STRING  "rem")
                        (STRING  "else"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 131)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "integer?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$integral_QMARK_" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "decimal?"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$integral_QMARK_" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: ">="
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.pprint$integral_QMARK_" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "bigdec"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.pprint$integral_QMARK_" (class "clojure.lang.Var"))))
                                      (52 (lconst_0))
                                      (53 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (56 (putstatic (fieldCP "const__4" "clojure.pprint$integral_QMARK_" (class "java.lang.Object"))))
                                      (59 (lconst_1))
                                      (60 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (63 (putstatic (fieldCP "const__5" "clojure.pprint$integral_QMARK_" (class "java.lang.Object"))))
                                      (66 (ldc 0))        ;;STRING:: "clojure.core"
                                      (68 (ldc 5))        ;;STRING:: "float?"
                                      (70 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (73 (checkcast (class "clojure.lang.Var")))
                                      (76 (putstatic (fieldCP "const__6" "clojure.pprint$integral_QMARK_" (class "clojure.lang.Var"))))
                                      (79 (ldc 0))        ;;STRING:: "clojure.core"
                                      (81 (ldc 6))        ;;STRING:: "="
                                      (83 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (86 (checkcast (class "clojure.lang.Var")))
                                      (89 (putstatic (fieldCP "const__7" "clojure.pprint$integral_QMARK_" (class "clojure.lang.Var"))))
                                      (92 (ldc 0))        ;;STRING:: "clojure.core"
                                      (94 (ldc 7))        ;;STRING:: "ratio?"
                                      (96 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (99 (checkcast (class "clojure.lang.Var")))
                                      (102 (putstatic (fieldCP "const__8" "clojure.pprint$integral_QMARK_" (class "clojure.lang.Var"))))
                                      (105 (ldc 0))       ;;STRING:: "clojure.core"
                                      (107 (ldc 8))       ;;STRING:: "rem"
                                      (109 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (112 (checkcast (class "clojure.lang.Var")))
                                      (115 (putstatic (fieldCP "const__9" "clojure.pprint$integral_QMARK_" (class "clojure.lang.Var"))))
                                      (118 (aconst_null))
                                      (119 (ldc 9))       ;;STRING:: "else"
                                      (121 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (124 (checkcast (class "clojure.lang.Keyword")))
                                      (127 (putstatic (fieldCP "const__10" "clojure.pprint$integral_QMARK_" (class "clojure.lang.Keyword"))))
                                      (130 (return))
                                      (endofcode 131))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 3) (code_length . 253)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$integral_QMARK_" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_1)) 
                                      (10 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (15 (dup)) 
                                      (16 (ifnull 31)) ;;to TAG_0
                                      (19 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (22 (if_acmpeq 32))  ;;to TAG_1
                                      (25 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (28 (goto 252)) ;;to TAG_2
                                      (31 (pop)) ;;at TAG_0
                                      (32 (getstatic (fieldCP "const__1" "clojure.pprint$integral_QMARK_" (class "clojure.lang.Var")))) ;;at TAG_1
                                      (35 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (38 (checkcast (class "clojure.lang.IFn"))) 
                                      (41 (aload_1)) 
                                      (42 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (47 (dup)) 
                                      (48 (ifnull 105)) ;;to TAG_3
                                      (51 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (54 (if_acmpeq 106)) ;;to TAG_4
                                      (57 (getstatic (fieldCP "const__3" "clojure.pprint$integral_QMARK_" (class "clojure.lang.Var")))) 
                                      (60 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (63 (checkcast (class "clojure.lang.IFn"))) 
                                      (66 (getstatic (fieldCP "const__4" "clojure.pprint$integral_QMARK_" (class "java.lang.Object")))) 
                                      (69 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (74 (checkcast (class "java.math.BigDecimal"))) 
                                      (77 (invokevirtual (methodCP "stripTrailingZeros" "java.math.BigDecimal" () (class "java.math.BigDecimal")))) 
                                      (80 (checkcast (class "java.math.BigDecimal"))) 
                                      (83 (invokevirtual (methodCP "ulp" "java.math.BigDecimal" () (class "java.math.BigDecimal")))) 
                                      (86 (lconst_1)) 
                                      (87 (invokestatic (methodCP "gte" "clojure.lang.Numbers" ((class "java.lang.Object") long) boolean))) 
                                      (90 (ifeq 99)) ;;to TAG_5
                                      (93 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (96 (goto 102)) ;;to TAG_6
                                      (99 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_5
                                      (102 (goto 252)) ;;to TAG_2;;at TAG_6
                                      (105 (pop)) ;;at TAG_3
                                      (106 (getstatic (fieldCP "const__6" "clojure.pprint$integral_QMARK_" (class "clojure.lang.Var")))) ;;at TAG_4
                                      (109 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (112 (checkcast (class "clojure.lang.IFn"))) 
                                      (115 (aload_1)) 
                                      (116 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (121 (dup)) 
                                      (122 (ifnull 162)) ;;to TAG_7
                                      (125 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (128 (if_acmpeq 163)) ;;to TAG_8
                                      (131 (aload_1)) 
                                      (132 (aload_1)) 
                                      (133 (aconst_null)) 
                                      (134 (astore_1)) 
                                      (135 (checkcast (class "java.lang.Number"))) 
                                      (138 (invokestatic (methodCP "doubleCast" "clojure.lang.RT" ((class "java.lang.Object")) double))) 
                                      (141 (invokestatic (methodCP "floor" "java.lang.Math" (double) double))) 
                                      (144 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") double) boolean))) 
                                      (147 (ifeq 156)) ;;to TAG_9
                                      (150 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (153 (goto 159)) ;;to TAG_10
                                      (156 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_9
                                      (159 (goto 252)) ;;to TAG_2;;at TAG_10
                                      (162 (pop)) ;;at TAG_7
                                      (163 (getstatic (fieldCP "const__8" "clojure.pprint$integral_QMARK_" (class "clojure.lang.Var")))) ;;at TAG_8
                                      (166 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (169 (checkcast (class "clojure.lang.IFn"))) 
                                      (172 (aload_1)) 
                                      (173 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (178 (dup)) 
                                      (179 (ifnull 230)) ;;to TAG_11
                                      (182 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (185 (if_acmpeq 231)) ;;to TAG_12
                                      (188 (aload_1)) 
                                      (189 (aconst_null)) 
                                      (190 (astore_1)) 
                                      (191 (astore_2)) 
                                      (192 (lconst_0)) 
                                      (193 (aload_2)) 
                                      (194 (checkcast (class "clojure.lang.Ratio"))) 
                                      (197 (getfield (fieldCP "numerator" "clojure.lang.Ratio" (class "java.math.BigInteger")))) 
                                      (200 (aload_2)) 
                                      (201 (aconst_null)) 
                                      (202 (astore_2)) 
                                      (203 (checkcast (class "clojure.lang.Ratio"))) 
                                      (206 (getfield (fieldCP "denominator" "clojure.lang.Ratio" (class "java.math.BigInteger")))) 
                                      (209 (invokestatic (methodCP "remainder" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (212 (invokestatic (methodCP "equiv" "clojure.lang.Util" (long (class "java.lang.Object")) boolean))) 
                                      (215 (ifeq 224)) ;;to TAG_13
                                      (218 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (221 (goto 227)) ;;to TAG_14
                                      (224 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_13
                                      (227 (goto 252)) ;;to TAG_2;;at TAG_14
                                      (230 (pop)) ;;at TAG_11
                                      (231 (getstatic (fieldCP "const__10" "clojure.pprint$integral_QMARK_" (class "clojure.lang.Keyword")))) ;;at TAG_12
                                      (234 (dup)) 
                                      (235 (ifnull 250)) ;;to TAG_15
                                      (238 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (241 (if_acmpeq 251)) ;;to TAG_16
                                      (244 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (247 (goto 252)) ;;to TAG_2
                                      (250 (pop)) ;;at TAG_15
                                      (251 (aconst_null)) ;;at TAG_16
                                      (252 (areturn)) ;;at TAG_2
                                      (endofcode 253))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$integral_QMARK_-class-table*
  (make-static-class-decls 
   *clojure.pprint$integral_QMARK_*))

(defconst *package-name-map* 
  ("clojure.pprint$integral_QMARK_" . "clojure"))

