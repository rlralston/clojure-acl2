; pprint$choice_conditional-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:55 CDT 2014.
;

(defconst *clojure.pprint$choice_conditional*
 (make-class-def
      '(class "clojure.pprint$choice_conditional"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "selector")
                        (STRING  "clojure.pprint")
                        (STRING  "next-arg")
                        (STRING  "clojure.core")
                        (STRING  "nth")
                        (STRING  "clauses")
                        (STRING  "neg?")
                        (STRING  ">=")
                        (STRING  "count")
                        (STRING  "first")
                        (STRING  "else")
                        (STRING  "execute-sub-format")
                        (STRING  "base-args"))
            (fields
                        (field "const__0" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__1__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__1__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__2__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__2__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__3__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__3__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 234)
                                   (parsedcode
                                      (0 (aconst_null))
                                      (1 (ldc 0))         ;;STRING:: "selector"
                                      (3 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (6 (checkcast (class "clojure.lang.Keyword")))
                                      (9 (putstatic (fieldCP "const__0" "clojure.pprint$choice_conditional" (class "clojure.lang.Keyword"))))
                                      (12 (ldc 1))        ;;STRING:: "clojure.pprint"
                                      (14 (ldc 2))        ;;STRING:: "next-arg"
                                      (16 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (19 (checkcast (class "clojure.lang.Var")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.pprint$choice_conditional" (class "clojure.lang.Var"))))
                                      (25 (ldc 3))        ;;STRING:: "clojure.core"
                                      (27 (ldc 4))        ;;STRING:: "nth"
                                      (29 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (32 (checkcast (class "clojure.lang.Var")))
                                      (35 (putstatic (fieldCP "const__2" "clojure.pprint$choice_conditional" (class "clojure.lang.Var"))))
                                      (38 (lconst_0))
                                      (39 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (42 (putstatic (fieldCP "const__3" "clojure.pprint$choice_conditional" (class "java.lang.Object"))))
                                      (45 (lconst_1))
                                      (46 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (49 (putstatic (fieldCP "const__4" "clojure.pprint$choice_conditional" (class "java.lang.Object"))))
                                      (52 (aconst_null))
                                      (53 (ldc 5))        ;;STRING:: "clauses"
                                      (55 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (58 (checkcast (class "clojure.lang.Keyword")))
                                      (61 (putstatic (fieldCP "const__5" "clojure.pprint$choice_conditional" (class "clojure.lang.Keyword"))))
                                      (64 (ldc 3))        ;;STRING:: "clojure.core"
                                      (66 (ldc 6))        ;;STRING:: "neg?"
                                      (68 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (71 (checkcast (class "clojure.lang.Var")))
                                      (74 (putstatic (fieldCP "const__6" "clojure.pprint$choice_conditional" (class "clojure.lang.Var"))))
                                      (77 (ldc 3))        ;;STRING:: "clojure.core"
                                      (79 (ldc 7))        ;;STRING:: ">="
                                      (81 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (84 (checkcast (class "clojure.lang.Var")))
                                      (87 (putstatic (fieldCP "const__7" "clojure.pprint$choice_conditional" (class "clojure.lang.Var"))))
                                      (90 (ldc 3))        ;;STRING:: "clojure.core"
                                      (92 (ldc 8))        ;;STRING:: "count"
                                      (94 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (97 (checkcast (class "clojure.lang.Var")))
                                      (100 (putstatic (fieldCP "const__8" "clojure.pprint$choice_conditional" (class "clojure.lang.Var"))))
                                      (103 (ldc 3))       ;;STRING:: "clojure.core"
                                      (105 (ldc 9))       ;;STRING:: "first"
                                      (107 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (110 (checkcast (class "clojure.lang.Var")))
                                      (113 (putstatic (fieldCP "const__9" "clojure.pprint$choice_conditional" (class "clojure.lang.Var"))))
                                      (116 (aconst_null))
                                      (117 (ldc 10))      ;;STRING:: "else"
                                      (119 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (122 (checkcast (class "clojure.lang.Keyword")))
                                      (125 (putstatic (fieldCP "const__10" "clojure.pprint$choice_conditional" (class "clojure.lang.Keyword"))))
                                      (128 (ldc 1))       ;;STRING:: "clojure.pprint"
                                      (130 (ldc 11))      ;;STRING:: "execute-sub-format"
                                      (132 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (135 (checkcast (class "clojure.lang.Var")))
                                      (138 (putstatic (fieldCP "const__11" "clojure.pprint$choice_conditional" (class "clojure.lang.Var"))))
                                      (141 (aconst_null))
                                      (142 (ldc 12))      ;;STRING:: "base-args"
                                      (144 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (147 (checkcast (class "clojure.lang.Keyword")))
                                      (150 (putstatic (fieldCP "const__12" "clojure.pprint$choice_conditional" (class "clojure.lang.Keyword"))))
                                      (153 (new (class "clojure.lang.KeywordLookupSite")))
                                      (156 (dup))
                                      (157 (aconst_null))
                                      (158 (ldc 0))       ;;STRING:: "selector"
                                      (160 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (163 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (166 (dup))
                                      (167 (putstatic (fieldCP "__site__0__" "clojure.pprint$choice_conditional" (class "clojure.lang.KeywordLookupSite"))))
                                      (170 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$choice_conditional" (class "clojure.lang.ILookupThunk"))))
                                      (173 (new (class "clojure.lang.KeywordLookupSite")))
                                      (176 (dup))
                                      (177 (aconst_null))
                                      (178 (ldc 5))       ;;STRING:: "clauses"
                                      (180 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (183 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (186 (dup))
                                      (187 (putstatic (fieldCP "__site__1__" "clojure.pprint$choice_conditional" (class "clojure.lang.KeywordLookupSite"))))
                                      (190 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$choice_conditional" (class "clojure.lang.ILookupThunk"))))
                                      (193 (new (class "clojure.lang.KeywordLookupSite")))
                                      (196 (dup))
                                      (197 (aconst_null))
                                      (198 (ldc 10))      ;;STRING:: "else"
                                      (200 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (203 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (206 (dup))
                                      (207 (putstatic (fieldCP "__site__2__" "clojure.pprint$choice_conditional" (class "clojure.lang.KeywordLookupSite"))))
                                      (210 (putstatic (fieldCP "__thunk__2__" "clojure.pprint$choice_conditional" (class "clojure.lang.ILookupThunk"))))
                                      (213 (new (class "clojure.lang.KeywordLookupSite")))
                                      (216 (dup))
                                      (217 (aconst_null))
                                      (218 (ldc 12))      ;;STRING:: "base-args"
                                      (220 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (223 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (226 (dup))
                                      (227 (putstatic (fieldCP "__site__3__" "clojure.pprint$choice_conditional" (class "clojure.lang.KeywordLookupSite"))))
                                      (230 (putstatic (fieldCP "__thunk__3__" "clojure.pprint$choice_conditional" (class "clojure.lang.ILookupThunk"))))
                                      (233 (return))
                                      (endofcode 234))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 10) (code_length . 370)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "__thunk__0__" "clojure.pprint$choice_conditional" (class "clojure.lang.ILookupThunk")))) 
                                      (3 (dup)) 
                                      (4 (aload_1)) 
                                      (5 (dup_x2)) 
                                      (6 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (11 (dup_x2)) 
                                      (12 (if_acmpeq 19)) ;;to TAG_0
                                      (15 (pop)) 
                                      (16 (goto 41)) ;;to TAG_1
                                      (19 (swap)) ;;at TAG_0
                                      (20 (pop)) 
                                      (21 (dup)) 
                                      (22 (getstatic (fieldCP "__site__0__" "clojure.pprint$choice_conditional" (class "clojure.lang.KeywordLookupSite")))) 
                                      (25 (swap)) 
                                      (26 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (31 (dup)) 
                                      (32 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$choice_conditional" (class "clojure.lang.ILookupThunk")))) 
                                      (35 (swap)) 
                                      (36 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (41 (astore 4)) ;;at TAG_1
                                      (43 (aload 4)) 
                                      (45 (dup)) 
                                      (46 (ifnull 79)) ;;to TAG_2
                                      (49 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (52 (if_acmpeq 80)) ;;to TAG_3
                                      (55 (iconst_2)) 
                                      (56 (anewarray (class "java.lang.Object"))) 
                                      (59 (dup)) 
                                      (60 (iconst_0)) 
                                      (61 (aload 4)) 
                                      (63 (aconst_null)) 
                                      (64 (astore 4)) 
                                      (66 (aastore)) 
                                      (67 (dup)) 
                                      (68 (iconst_1)) 
                                      (69 (aload_2)) 
                                      (70 (aconst_null)) 
                                      (71 (astore_2)) 
                                      (72 (aastore)) 
                                      (73 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (76 (goto 97)) ;;to TAG_4
                                      (79 (pop)) ;;at TAG_2
                                      (80 (getstatic (fieldCP "const__1" "clojure.pprint$choice_conditional" (class "clojure.lang.Var")))) ;;at TAG_3
                                      (83 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (86 (checkcast (class "clojure.lang.IFn"))) 
                                      (89 (aload_2)) 
                                      (90 (aconst_null)) 
                                      (91 (astore_2)) 
                                      (92 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (97 (astore 5)) ;;at TAG_4
                                      (99 (aload 5)) 
                                      (101 (lconst_0)) 
                                      (102 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (105 (aconst_null)) 
                                      (106 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (109 (astore 6)) 
                                      (111 (aload 5)) 
                                      (113 (aconst_null)) 
                                      (114 (astore 5)) 
                                      (116 (lconst_1)) 
                                      (117 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (120 (aconst_null)) 
                                      (121 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (124 (astore 7)) 
                                      (126 (getstatic (fieldCP "__thunk__1__" "clojure.pprint$choice_conditional" (class "clojure.lang.ILookupThunk")))) 
                                      (129 (dup)) 
                                      (130 (aload_1)) 
                                      (131 (dup_x2)) 
                                      (132 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (137 (dup_x2)) 
                                      (138 (if_acmpeq 145)) ;;to TAG_5
                                      (141 (pop)) 
                                      (142 (goto 167)) ;;to TAG_6
                                      (145 (swap)) ;;at TAG_5
                                      (146 (pop)) 
                                      (147 (dup)) 
                                      (148 (getstatic (fieldCP "__site__1__" "clojure.pprint$choice_conditional" (class "clojure.lang.KeywordLookupSite")))) 
                                      (151 (swap)) 
                                      (152 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (157 (dup)) 
                                      (158 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$choice_conditional" (class "clojure.lang.ILookupThunk")))) 
                                      (161 (swap)) 
                                      (162 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (167 (astore 8)) ;;at TAG_6
                                      (169 (aload 6)) 
                                      (171 (invokestatic (methodCP "isNeg" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (174 (istore 9)) 
                                      (176 (iload 9)) 
                                      (178 (ifeq 187)) ;;to TAG_7
                                      (181 (iload 9)) 
                                      (183 (goto 198)) ;;to TAG_8
                                      (186 (pop)) 
                                      (187 (aload 6)) ;;at TAG_7
                                      (189 (aload 8)) 
                                      (191 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (194 (i2l)) 
                                      (195 (invokestatic (methodCP "gte" "clojure.lang.Numbers" ((class "java.lang.Object") long) boolean))) 
                                      (198 (ifeq 260)) ;;to TAG_9;;at TAG_8
                                      (201 (getstatic (fieldCP "const__9" "clojure.pprint$choice_conditional" (class "clojure.lang.Var")))) 
                                      (204 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (207 (checkcast (class "clojure.lang.IFn"))) 
                                      (210 (getstatic (fieldCP "__thunk__2__" "clojure.pprint$choice_conditional" (class "clojure.lang.ILookupThunk")))) 
                                      (213 (dup)) 
                                      (214 (aload_1)) 
                                      (215 (dup_x2)) 
                                      (216 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (221 (dup_x2)) 
                                      (222 (if_acmpeq 229)) ;;to TAG_10
                                      (225 (pop)) 
                                      (226 (goto 251)) ;;to TAG_11
                                      (229 (swap)) ;;at TAG_10
                                      (230 (pop)) 
                                      (231 (dup)) 
                                      (232 (getstatic (fieldCP "__site__2__" "clojure.pprint$choice_conditional" (class "clojure.lang.KeywordLookupSite")))) 
                                      (235 (swap)) 
                                      (236 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (241 (dup)) 
                                      (242 (putstatic (fieldCP "__thunk__2__" "clojure.pprint$choice_conditional" (class "clojure.lang.ILookupThunk")))) 
                                      (245 (swap)) 
                                      (246 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (251 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_11
                                      (256 (goto 279)) ;;to TAG_12
                                      (259 (pop)) 
                                      (260 (aload 8)) ;;at TAG_9
                                      (262 (aconst_null)) 
                                      (263 (astore 8)) 
                                      (265 (aload 6)) 
                                      (267 (aconst_null)) 
                                      (268 (astore 6)) 
                                      (270 (checkcast (class "java.lang.Number"))) 
                                      (273 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (276 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (279 (astore 9)) ;;at TAG_12
                                      (281 (aload 9)) 
                                      (283 (dup)) 
                                      (284 (ifnull 363))  ;;to TAG_13
                                      (287 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (290 (if_acmpeq 364)) ;;to TAG_14
                                      (293 (getstatic (fieldCP "const__11" "clojure.pprint$choice_conditional" (class "clojure.lang.Var")))) 
                                      (296 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (299 (checkcast (class "clojure.lang.IFn"))) 
                                      (302 (aload 9)) 
                                      (304 (aconst_null)) 
                                      (305 (astore 9)) 
                                      (307 (aload 7)) 
                                      (309 (aconst_null)) 
                                      (310 (astore 7)) 
                                      (312 (getstatic (fieldCP "__thunk__3__" "clojure.pprint$choice_conditional" (class "clojure.lang.ILookupThunk")))) 
                                      (315 (dup)) 
                                      (316 (aload_1)) 
                                      (317 (aconst_null)) 
                                      (318 (astore_1)) 
                                      (319 (dup_x2)) 
                                      (320 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (325 (dup_x2)) 
                                      (326 (if_acmpeq 333)) ;;to TAG_15
                                      (329 (pop)) 
                                      (330 (goto 355)) ;;to TAG_16
                                      (333 (swap)) ;;at TAG_15
                                      (334 (pop)) 
                                      (335 (dup)) 
                                      (336 (getstatic (fieldCP "__site__3__" "clojure.pprint$choice_conditional" (class "clojure.lang.KeywordLookupSite")))) 
                                      (339 (swap)) 
                                      (340 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (345 (dup)) 
                                      (346 (putstatic (fieldCP "__thunk__3__" "clojure.pprint$choice_conditional" (class "clojure.lang.ILookupThunk")))) 
                                      (349 (swap)) 
                                      (350 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (355 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) ;;at TAG_16
                                      (360 (goto 369)) ;;to TAG_17
                                      (363 (pop)) ;;at TAG_13
                                      (364 (aload 7)) ;;at TAG_14
                                      (366 (aconst_null)) 
                                      (367 (astore 7)) 
                                      (369 (areturn)) ;;at TAG_17
                                      (endofcode 370))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 61)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 60 (0 . 3) (32 39 46 53))))  ;;to TAG_2;;to TAG_3;;to TAG_4;;to TAG_0;;to TAG_1
                                      (32 (aload_2)) ;;at TAG_1
                                      (33 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$choice_conditional" (class "clojure.lang.ILookupThunk")))) 
                                      (36 (goto 60)) ;;to TAG_0
                                      (39 (aload_2)) ;;at TAG_2
                                      (40 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$choice_conditional" (class "clojure.lang.ILookupThunk")))) 
                                      (43 (goto 60)) ;;to TAG_0
                                      (46 (aload_2)) ;;at TAG_3
                                      (47 (putstatic (fieldCP "__thunk__2__" "clojure.pprint$choice_conditional" (class "clojure.lang.ILookupThunk")))) 
                                      (50 (goto 60)) ;;to TAG_0
                                      (53 (aload_2)) ;;at TAG_4
                                      (54 (putstatic (fieldCP "__thunk__3__" "clojure.pprint$choice_conditional" (class "clojure.lang.ILookupThunk")))) 
                                      (57 (goto 60)) ;;to TAG_0
                                      (60 (return)) ;;at TAG_0
                                      (endofcode 61))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$choice_conditional-class-table*
  (make-static-class-decls 
   *clojure.pprint$choice_conditional*))

(defconst *package-name-map* 
  ("clojure.pprint$choice_conditional" . "clojure"))

