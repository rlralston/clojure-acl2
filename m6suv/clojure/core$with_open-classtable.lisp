; core$with_open-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:46 CDT 2014.
;

(defconst *clojure.core$with_open*
 (make-class-def
      '(class "clojure.core$with_open"
            "clojure.lang.RestFn"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "vector?")
                        (STRING  "str")
                        (STRING  "first")
                        (STRING  "*ns*")
                        (STRING  "line")
                        (STRING  "meta")
                        (STRING  "even?")
                        (STRING  "count")
                        (STRING  "=")
                        (STRING  "seq")
                        (STRING  "concat")
                        (STRING  "list")
                        (STRING  "do")
                        (STRING  "symbol?")
                        (STRING  "let")
                        (STRING  "subvec")
                        (LONG 2)
                        (STRING  "try")
                        (STRING  "with-open")
                        (STRING  "finally")
                        (STRING  ".")
                        (STRING  "close")
                        (STRING  "else")
                        (STRING  " requires ")
                        (STRING  "a vector for its binding")
                        (STRING  " in ")
                        (STRING  ":")
                        (STRING  "an even number of forms in binding vector")
                        (STRING  "with-open only allows Symbols in bindings"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__19" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__20" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__21" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__22" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__23" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__1__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__1__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 337)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "vector?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$with_open" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "str"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$with_open" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "first"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$with_open" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "*ns*"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.core$with_open" (class "clojure.lang.Var"))))
                                      (52 (aconst_null))
                                      (53 (ldc 5))        ;;STRING:: "line"
                                      (55 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (58 (checkcast (class "clojure.lang.Keyword")))
                                      (61 (putstatic (fieldCP "const__4" "clojure.core$with_open" (class "clojure.lang.Keyword"))))
                                      (64 (ldc 0))        ;;STRING:: "clojure.core"
                                      (66 (ldc 6))        ;;STRING:: "meta"
                                      (68 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (71 (checkcast (class "clojure.lang.Var")))
                                      (74 (putstatic (fieldCP "const__5" "clojure.core$with_open" (class "clojure.lang.Var"))))
                                      (77 (ldc 0))        ;;STRING:: "clojure.core"
                                      (79 (ldc 7))        ;;STRING:: "even?"
                                      (81 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (84 (checkcast (class "clojure.lang.Var")))
                                      (87 (putstatic (fieldCP "const__6" "clojure.core$with_open" (class "clojure.lang.Var"))))
                                      (90 (ldc 0))        ;;STRING:: "clojure.core"
                                      (92 (ldc 8))        ;;STRING:: "count"
                                      (94 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (97 (checkcast (class "clojure.lang.Var")))
                                      (100 (putstatic (fieldCP "const__7" "clojure.core$with_open" (class "clojure.lang.Var"))))
                                      (103 (ldc 0))       ;;STRING:: "clojure.core"
                                      (105 (ldc 9))       ;;STRING:: "="
                                      (107 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (110 (checkcast (class "clojure.lang.Var")))
                                      (113 (putstatic (fieldCP "const__8" "clojure.core$with_open" (class "clojure.lang.Var"))))
                                      (116 (lconst_0))
                                      (117 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (120 (putstatic (fieldCP "const__9" "clojure.core$with_open" (class "java.lang.Object"))))
                                      (123 (ldc 0))       ;;STRING:: "clojure.core"
                                      (125 (ldc 10))      ;;STRING:: "seq"
                                      (127 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (130 (checkcast (class "clojure.lang.Var")))
                                      (133 (putstatic (fieldCP "const__10" "clojure.core$with_open" (class "clojure.lang.Var"))))
                                      (136 (ldc 0))       ;;STRING:: "clojure.core"
                                      (138 (ldc 11))      ;;STRING:: "concat"
                                      (140 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (143 (checkcast (class "clojure.lang.Var")))
                                      (146 (putstatic (fieldCP "const__11" "clojure.core$with_open" (class "clojure.lang.Var"))))
                                      (149 (ldc 0))       ;;STRING:: "clojure.core"
                                      (151 (ldc 12))      ;;STRING:: "list"
                                      (153 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (156 (checkcast (class "clojure.lang.Var")))
                                      (159 (putstatic (fieldCP "const__12" "clojure.core$with_open" (class "clojure.lang.Var"))))
                                      (162 (aconst_null))
                                      (163 (ldc 13))      ;;STRING:: "do"
                                      (165 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (168 (checkcast (class "clojure.lang.AFn")))
                                      (171 (putstatic (fieldCP "const__13" "clojure.core$with_open" (class "clojure.lang.AFn"))))
                                      (174 (ldc 0))       ;;STRING:: "clojure.core"
                                      (176 (ldc 14))      ;;STRING:: "symbol?"
                                      (178 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (181 (checkcast (class "clojure.lang.Var")))
                                      (184 (putstatic (fieldCP "const__14" "clojure.core$with_open" (class "clojure.lang.Var"))))
                                      (187 (ldc 0))       ;;STRING:: "clojure.core"
                                      (189 (ldc 15))      ;;STRING:: "let"
                                      (191 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (194 (checkcast (class "clojure.lang.AFn")))
                                      (197 (putstatic (fieldCP "const__15" "clojure.core$with_open" (class "clojure.lang.AFn"))))
                                      (200 (ldc 0))       ;;STRING:: "clojure.core"
                                      (202 (ldc 16))      ;;STRING:: "subvec"
                                      (204 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (207 (checkcast (class "clojure.lang.Var")))
                                      (210 (putstatic (fieldCP "const__16" "clojure.core$with_open" (class "clojure.lang.Var"))))
                                      (213 (ldc2_w 17))   ;; LONG:: "2"
                                      (216 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (219 (putstatic (fieldCP "const__17" "clojure.core$with_open" (class "java.lang.Object"))))
                                      (222 (aconst_null))
                                      (223 (ldc 18))      ;;STRING:: "try"
                                      (225 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (228 (checkcast (class "clojure.lang.AFn")))
                                      (231 (putstatic (fieldCP "const__18" "clojure.core$with_open" (class "clojure.lang.AFn"))))
                                      (234 (ldc 0))       ;;STRING:: "clojure.core"
                                      (236 (ldc 19))      ;;STRING:: "with-open"
                                      (238 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (241 (checkcast (class "clojure.lang.AFn")))
                                      (244 (putstatic (fieldCP "const__19" "clojure.core$with_open" (class "clojure.lang.AFn"))))
                                      (247 (aconst_null))
                                      (248 (ldc 20))      ;;STRING:: "finally"
                                      (250 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (253 (checkcast (class "clojure.lang.AFn")))
                                      (256 (putstatic (fieldCP "const__20" "clojure.core$with_open" (class "clojure.lang.AFn"))))
                                      (259 (aconst_null))
                                      (260 (ldc 21))      ;;STRING:: "."
                                      (262 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (265 (checkcast (class "clojure.lang.AFn")))
                                      (268 (putstatic (fieldCP "const__21" "clojure.core$with_open" (class "clojure.lang.AFn"))))
                                      (271 (ldc 0))       ;;STRING:: "clojure.core"
                                      (273 (ldc 22))      ;;STRING:: "close"
                                      (275 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (278 (checkcast (class "clojure.lang.AFn")))
                                      (281 (putstatic (fieldCP "const__22" "clojure.core$with_open" (class "clojure.lang.AFn"))))
                                      (284 (aconst_null))
                                      (285 (ldc 23))      ;;STRING:: "else"
                                      (287 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (290 (checkcast (class "clojure.lang.Keyword")))
                                      (293 (putstatic (fieldCP "const__23" "clojure.core$with_open" (class "clojure.lang.Keyword"))))
                                      (296 (new (class "clojure.lang.KeywordLookupSite")))
                                      (299 (dup))
                                      (300 (aconst_null))
                                      (301 (ldc 5))       ;;STRING:: "line"
                                      (303 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (306 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (309 (dup))
                                      (310 (putstatic (fieldCP "__site__0__" "clojure.core$with_open" (class "clojure.lang.KeywordLookupSite"))))
                                      (313 (putstatic (fieldCP "__thunk__0__" "clojure.core$with_open" (class "clojure.lang.ILookupThunk"))))
                                      (316 (new (class "clojure.lang.KeywordLookupSite")))
                                      (319 (dup))
                                      (320 (aconst_null))
                                      (321 (ldc 5))       ;;STRING:: "line"
                                      (323 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (326 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (329 (dup))
                                      (330 (putstatic (fieldCP "__site__1__" "clojure.core$with_open" (class "clojure.lang.KeywordLookupSite"))))
                                      (333 (putstatic (fieldCP "__thunk__1__" "clojure.core$with_open" (class "clojure.lang.ILookupThunk"))))
                                      (336 (return))
                                      (endofcode 337))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.RestFn" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doInvoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 20) (max_locals . 5) (code_length . 833)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_3)) 
                                      (10 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (15 (dup)) 
                                      (16 (ifnull 30)) ;;to TAG_0
                                      (19 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (22 (if_acmpeq 31))  ;;to TAG_1
                                      (25 (aconst_null)) 
                                      (26 (pop)) 
                                      (27 (goto 143)) ;;to TAG_2
                                      (30 (pop)) ;;at TAG_0
                                      (31 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_1
                                      (34 (dup)) 
                                      (35 (getstatic (fieldCP "const__1" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (38 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (41 (checkcast (class "clojure.lang.IFn"))) 
                                      (44 (getstatic (fieldCP "const__2" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (47 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (50 (checkcast (class "clojure.lang.IFn"))) 
                                      (53 (aload_1)) 
                                      (54 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (59 (ldc 24)) ;;STRING:: " requires "
                                      (61 (ldc 25)) ;;STRING:: "a vector for its binding"
                                      (63 (ldc 26)) ;;STRING:: " in "
                                      (65 (getstatic (fieldCP "const__3" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (68 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (71 (ldc 27)) ;;STRING:: ":"
                                      (73 (getstatic (fieldCP "__thunk__0__" "clojure.core$with_open" (class "clojure.lang.ILookupThunk")))) 
                                      (76 (dup)) 
                                      (77 (getstatic (fieldCP "const__5" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (80 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (83 (checkcast (class "clojure.lang.IFn"))) 
                                      (86 (aload_1)) 
                                      (87 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (92 (dup_x2)) 
                                      (93 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (98 (dup_x2)) 
                                      (99 (if_acmpeq 106)) ;;to TAG_3
                                      (102 (pop)) 
                                      (103 (goto 128)) ;;to TAG_4
                                      (106 (swap)) ;;at TAG_3
                                      (107 (pop)) 
                                      (108 (dup)) 
                                      (109 (getstatic (fieldCP "__site__0__" "clojure.core$with_open" (class "clojure.lang.KeywordLookupSite")))) 
                                      (112 (swap)) 
                                      (113 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (118 (dup)) 
                                      (119 (putstatic (fieldCP "__thunk__0__" "clojure.core$with_open" (class "clojure.lang.ILookupThunk")))) 
                                      (122 (swap)) 
                                      (123 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (128 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 8)) ;;at TAG_4
                                      (133 (checkcast (class "java.lang.String"))) 
                                      (136 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (139 (checkcast (class "java.lang.Throwable"))) 
                                      (142 (athrow)) 
                                      (143 (getstatic (fieldCP "const__6" "clojure.core$with_open" (class "clojure.lang.Var")))) ;;at TAG_2
                                      (146 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (149 (checkcast (class "clojure.lang.IFn"))) 
                                      (152 (aload_3)) 
                                      (153 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (156 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (159 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (164 (dup)) 
                                      (165 (ifnull 179)) ;;to TAG_5
                                      (168 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (171 (if_acmpeq 180)) ;;to TAG_6
                                      (174 (aconst_null)) 
                                      (175 (pop)) 
                                      (176 (goto 294)) ;;to TAG_7
                                      (179 (pop)) ;;at TAG_5
                                      (180 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_6
                                      (183 (dup)) 
                                      (184 (getstatic (fieldCP "const__1" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (187 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (190 (checkcast (class "clojure.lang.IFn"))) 
                                      (193 (getstatic (fieldCP "const__2" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (196 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (199 (checkcast (class "clojure.lang.IFn"))) 
                                      (202 (aload_1)) 
                                      (203 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (208 (ldc 24)) ;;STRING:: " requires "
                                      (210 (ldc 28)) ;;STRING:: "an even number of forms in binding vector"
                                      (212 (ldc 26)) ;;STRING:: " in "
                                      (214 (getstatic (fieldCP "const__3" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (217 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (220 (ldc 27)) ;;STRING:: ":"
                                      (222 (getstatic (fieldCP "__thunk__1__" "clojure.core$with_open" (class "clojure.lang.ILookupThunk")))) 
                                      (225 (dup)) 
                                      (226 (getstatic (fieldCP "const__5" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (229 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (232 (checkcast (class "clojure.lang.IFn"))) 
                                      (235 (aload_1)) 
                                      (236 (aconst_null)) 
                                      (237 (astore_1)) 
                                      (238 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (243 (dup_x2)) 
                                      (244 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (249 (dup_x2)) 
                                      (250 (if_acmpeq 257)) ;;to TAG_8
                                      (253 (pop)) 
                                      (254 (goto 279)) ;;to TAG_9
                                      (257 (swap)) ;;at TAG_8
                                      (258 (pop)) 
                                      (259 (dup)) 
                                      (260 (getstatic (fieldCP "__site__1__" "clojure.core$with_open" (class "clojure.lang.KeywordLookupSite")))) 
                                      (263 (swap)) 
                                      (264 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (269 (dup)) 
                                      (270 (putstatic (fieldCP "__thunk__1__" "clojure.core$with_open" (class "clojure.lang.ILookupThunk")))) 
                                      (273 (swap)) 
                                      (274 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (279 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 8)) ;;at TAG_9
                                      (284 (checkcast (class "java.lang.String"))) 
                                      (287 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (290 (checkcast (class "java.lang.Throwable"))) 
                                      (293 (athrow)) 
                                      (294 (aconst_null)) ;;at TAG_7
                                      (295 (pop)) 
                                      (296 (aload_3)) 
                                      (297 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (300 (i2l)) 
                                      (301 (lconst_0)) 
                                      (302 (lcmp)) 
                                      (303 (ifne 360)) ;;to TAG_10
                                      (306 (getstatic (fieldCP "const__10" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (309 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (312 (checkcast (class "clojure.lang.IFn"))) 
                                      (315 (getstatic (fieldCP "const__11" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (318 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (321 (checkcast (class "clojure.lang.IFn"))) 
                                      (324 (getstatic (fieldCP "const__12" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (327 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (330 (checkcast (class "clojure.lang.IFn"))) 
                                      (333 (getstatic (fieldCP "const__13" "clojure.core$with_open" (class "clojure.lang.AFn")))) 
                                      (336 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (341 (aload 4)) 
                                      (343 (aconst_null)) 
                                      (344 (astore 4)) 
                                      (346 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (351 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (356 (goto 832)) ;;to TAG_11
                                      (359 (pop)) 
                                      (360 (getstatic (fieldCP "const__14" "clojure.core$with_open" (class "clojure.lang.Var")))) ;;at TAG_10
                                      (363 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (366 (checkcast (class "clojure.lang.IFn"))) 
                                      (369 (aload_3)) 
                                      (370 (checkcast (class "clojure.lang.IFn"))) 
                                      (373 (getstatic (fieldCP "const__9" "clojure.core$with_open" (class "java.lang.Object")))) 
                                      (376 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (381 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (386 (dup)) 
                                      (387 (ifnull 797)) ;;to TAG_12
                                      (390 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (393 (if_acmpeq 798)) ;;to TAG_13
                                      (396 (getstatic (fieldCP "const__10" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (399 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (402 (checkcast (class "clojure.lang.IFn"))) 
                                      (405 (getstatic (fieldCP "const__11" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (408 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (411 (checkcast (class "clojure.lang.IFn"))) 
                                      (414 (getstatic (fieldCP "const__12" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (417 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (420 (checkcast (class "clojure.lang.IFn"))) 
                                      (423 (getstatic (fieldCP "const__15" "clojure.core$with_open" (class "clojure.lang.AFn")))) 
                                      (426 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (431 (getstatic (fieldCP "const__12" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (434 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (437 (checkcast (class "clojure.lang.IFn"))) 
                                      (440 (getstatic (fieldCP "const__16" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (443 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (446 (checkcast (class "clojure.lang.IFn"))) 
                                      (449 (aload_3)) 
                                      (450 (getstatic (fieldCP "const__9" "clojure.core$with_open" (class "java.lang.Object")))) 
                                      (453 (getstatic (fieldCP "const__17" "clojure.core$with_open" (class "java.lang.Object")))) 
                                      (456 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (461 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (466 (getstatic (fieldCP "const__12" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (469 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (472 (checkcast (class "clojure.lang.IFn"))) 
                                      (475 (getstatic (fieldCP "const__10" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (478 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (481 (checkcast (class "clojure.lang.IFn"))) 
                                      (484 (getstatic (fieldCP "const__11" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (487 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (490 (checkcast (class "clojure.lang.IFn"))) 
                                      (493 (getstatic (fieldCP "const__12" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (496 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (499 (checkcast (class "clojure.lang.IFn"))) 
                                      (502 (getstatic (fieldCP "const__18" "clojure.core$with_open" (class "clojure.lang.AFn")))) 
                                      (505 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (510 (getstatic (fieldCP "const__12" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (513 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (516 (checkcast (class "clojure.lang.IFn"))) 
                                      (519 (getstatic (fieldCP "const__10" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (522 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (525 (checkcast (class "clojure.lang.IFn"))) 
                                      (528 (getstatic (fieldCP "const__11" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (531 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (534 (checkcast (class "clojure.lang.IFn"))) 
                                      (537 (getstatic (fieldCP "const__12" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (540 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (543 (checkcast (class "clojure.lang.IFn"))) 
                                      (546 (getstatic (fieldCP "const__19" "clojure.core$with_open" (class "clojure.lang.AFn")))) 
                                      (549 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (554 (getstatic (fieldCP "const__12" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (557 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (560 (checkcast (class "clojure.lang.IFn"))) 
                                      (563 (getstatic (fieldCP "const__16" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (566 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (569 (checkcast (class "clojure.lang.IFn"))) 
                                      (572 (aload_3)) 
                                      (573 (getstatic (fieldCP "const__17" "clojure.core$with_open" (class "java.lang.Object")))) 
                                      (576 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (581 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (586 (aload 4)) 
                                      (588 (aconst_null)) 
                                      (589 (astore 4)) 
                                      (591 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (596 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (601 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (606 (getstatic (fieldCP "const__12" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (609 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (612 (checkcast (class "clojure.lang.IFn"))) 
                                      (615 (getstatic (fieldCP "const__10" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (618 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (621 (checkcast (class "clojure.lang.IFn"))) 
                                      (624 (getstatic (fieldCP "const__11" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (627 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (630 (checkcast (class "clojure.lang.IFn"))) 
                                      (633 (getstatic (fieldCP "const__12" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (636 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (639 (checkcast (class "clojure.lang.IFn"))) 
                                      (642 (getstatic (fieldCP "const__20" "clojure.core$with_open" (class "clojure.lang.AFn")))) 
                                      (645 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (650 (getstatic (fieldCP "const__12" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (653 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (656 (checkcast (class "clojure.lang.IFn"))) 
                                      (659 (getstatic (fieldCP "const__10" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (662 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (665 (checkcast (class "clojure.lang.IFn"))) 
                                      (668 (getstatic (fieldCP "const__11" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (671 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (674 (checkcast (class "clojure.lang.IFn"))) 
                                      (677 (getstatic (fieldCP "const__12" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (680 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (683 (checkcast (class "clojure.lang.IFn"))) 
                                      (686 (getstatic (fieldCP "const__21" "clojure.core$with_open" (class "clojure.lang.AFn")))) 
                                      (689 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (694 (getstatic (fieldCP "const__12" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (697 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (700 (checkcast (class "clojure.lang.IFn"))) 
                                      (703 (aload_3)) 
                                      (704 (aconst_null)) 
                                      (705 (astore_3)) 
                                      (706 (checkcast (class "clojure.lang.IFn"))) 
                                      (709 (getstatic (fieldCP "const__9" "clojure.core$with_open" (class "java.lang.Object")))) 
                                      (712 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (717 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (722 (getstatic (fieldCP "const__12" "clojure.core$with_open" (class "clojure.lang.Var")))) 
                                      (725 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (728 (checkcast (class "clojure.lang.IFn"))) 
                                      (731 (getstatic (fieldCP "const__22" "clojure.core$with_open" (class "clojure.lang.AFn")))) 
                                      (734 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (739 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (744 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (749 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (754 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (759 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (764 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (769 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (774 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (779 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (784 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (789 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (794 (goto 832)) ;;to TAG_11
                                      (797 (pop)) ;;at TAG_12
                                      (798 (getstatic (fieldCP "const__23" "clojure.core$with_open" (class "clojure.lang.Keyword")))) ;;at TAG_13
                                      (801 (dup)) 
                                      (802 (ifnull 830)) ;;to TAG_14
                                      (805 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (808 (if_acmpeq 831)) ;;to TAG_15
                                      (811 (new (class "java.lang.IllegalArgumentException"))) 
                                      (814 (dup)) 
                                      (815 (ldc 29)) ;;STRING:: "with-open only allows Symbols in bindings"
                                      (817 (checkcast (class "java.lang.String"))) 
                                      (820 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (823 (checkcast (class "java.lang.Throwable"))) 
                                      (826 (athrow)) 
                                      (827 (goto 832)) ;;to TAG_11
                                      (830 (pop)) ;;at TAG_14
                                      (831 (aconst_null)) ;;at TAG_15
                                      (832 (areturn)) ;;at TAG_11
                                      (endofcode 833))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getRequiredArity"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iconst_3))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 39)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 38 (0 . 1) (24 31))))  ;;to TAG_2;;to TAG_0;;to TAG_1
                                      (24 (aload_2)) ;;at TAG_1
                                      (25 (putstatic (fieldCP "__thunk__0__" "clojure.core$with_open" (class "clojure.lang.ILookupThunk")))) 
                                      (28 (goto 38)) ;;to TAG_0
                                      (31 (aload_2)) ;;at TAG_2
                                      (32 (putstatic (fieldCP "__thunk__1__" "clojure.core$with_open" (class "clojure.lang.ILookupThunk")))) 
                                      (35 (goto 38)) ;;to TAG_0
                                      (38 (return)) ;;at TAG_0
                                      (endofcode 39))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$with_open-class-table*
  (make-static-class-decls 
   *clojure.core$with_open*))

(defconst *package-name-map* 
  ("clojure.core$with_open" . "clojure"))

