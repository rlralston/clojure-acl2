; zip$down-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:59 CDT 2014.
;

(defconst *clojure.zip$down*
 (make-class-def
      '(class "clojure.zip$down"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.zip")
                        (STRING  "branch?")
                        (STRING  "clojure.core")
                        (STRING  "nth")
                        (STRING  "children")
                        (STRING  "nthnext")
                        (STRING  "with-meta")
                        (STRING  "l")
                        (STRING  "pnodes")
                        (STRING  "conj")
                        (STRING  "ppath")
                        (STRING  "r")
                        (STRING  "meta"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 174)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.zip"
                                      (2 (ldc 1))         ;;STRING:: "branch?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.zip$down" (class "clojure.lang.Var"))))
                                      (13 (ldc 2))        ;;STRING:: "clojure.core"
                                      (15 (ldc 3))        ;;STRING:: "nth"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.zip$down" (class "clojure.lang.Var"))))
                                      (26 (lconst_0))
                                      (27 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (30 (putstatic (fieldCP "const__2" "clojure.zip$down" (class "java.lang.Object"))))
                                      (33 (lconst_1))
                                      (34 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (37 (putstatic (fieldCP "const__3" "clojure.zip$down" (class "java.lang.Object"))))
                                      (40 (ldc 0))        ;;STRING:: "clojure.zip"
                                      (42 (ldc 4))        ;;STRING:: "children"
                                      (44 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (47 (checkcast (class "clojure.lang.Var")))
                                      (50 (putstatic (fieldCP "const__4" "clojure.zip$down" (class "clojure.lang.Var"))))
                                      (53 (ldc 2))        ;;STRING:: "clojure.core"
                                      (55 (ldc 5))        ;;STRING:: "nthnext"
                                      (57 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (60 (checkcast (class "clojure.lang.Var")))
                                      (63 (putstatic (fieldCP "const__5" "clojure.zip$down" (class "clojure.lang.Var"))))
                                      (66 (ldc 2))        ;;STRING:: "clojure.core"
                                      (68 (ldc 6))        ;;STRING:: "with-meta"
                                      (70 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (73 (checkcast (class "clojure.lang.Var")))
                                      (76 (putstatic (fieldCP "const__6" "clojure.zip$down" (class "clojure.lang.Var"))))
                                      (79 (aconst_null))
                                      (80 (ldc 7))        ;;STRING:: "l"
                                      (82 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (85 (checkcast (class "clojure.lang.Keyword")))
                                      (88 (putstatic (fieldCP "const__7" "clojure.zip$down" (class "clojure.lang.Keyword"))))
                                      (91 (aconst_null))
                                      (92 (ldc 8))        ;;STRING:: "pnodes"
                                      (94 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (97 (checkcast (class "clojure.lang.Keyword")))
                                      (100 (putstatic (fieldCP "const__8" "clojure.zip$down" (class "clojure.lang.Keyword"))))
                                      (103 (ldc 2))       ;;STRING:: "clojure.core"
                                      (105 (ldc 9))       ;;STRING:: "conj"
                                      (107 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (110 (checkcast (class "clojure.lang.Var")))
                                      (113 (putstatic (fieldCP "const__9" "clojure.zip$down" (class "clojure.lang.Var"))))
                                      (116 (aconst_null))
                                      (117 (ldc 10))      ;;STRING:: "ppath"
                                      (119 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (122 (checkcast (class "clojure.lang.Keyword")))
                                      (125 (putstatic (fieldCP "const__10" "clojure.zip$down" (class "clojure.lang.Keyword"))))
                                      (128 (aconst_null))
                                      (129 (ldc 11))      ;;STRING:: "r"
                                      (131 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (134 (checkcast (class "clojure.lang.Keyword")))
                                      (137 (putstatic (fieldCP "const__11" "clojure.zip$down" (class "clojure.lang.Keyword"))))
                                      (140 (ldc 2))       ;;STRING:: "clojure.core"
                                      (142 (ldc 12))      ;;STRING:: "meta"
                                      (144 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (147 (checkcast (class "clojure.lang.Var")))
                                      (150 (putstatic (fieldCP "const__12" "clojure.zip$down" (class "clojure.lang.Var"))))
                                      (153 (new (class "clojure.lang.KeywordLookupSite")))
                                      (156 (dup))
                                      (157 (aconst_null))
                                      (158 (ldc 8))       ;;STRING:: "pnodes"
                                      (160 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (163 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (166 (dup))
                                      (167 (putstatic (fieldCP "__site__0__" "clojure.zip$down" (class "clojure.lang.KeywordLookupSite"))))
                                      (170 (putstatic (fieldCP "__thunk__0__" "clojure.zip$down" (class "clojure.lang.ILookupThunk"))))
                                      (173 (return))
                                      (endofcode 174))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 12) (max_locals . 9) (code_length . 329)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.zip$down" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_1)) 
                                      (10 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (15 (dup)) 
                                      (16 (ifnull 326)) ;;to TAG_0
                                      (19 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (22 (if_acmpeq 327))  ;;to TAG_1
                                      (25 (aload_1)) 
                                      (26 (astore_2)) 
                                      (27 (aload_2)) 
                                      (28 (lconst_0)) 
                                      (29 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (32 (aconst_null)) 
                                      (33 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (36 (astore_3)) 
                                      (37 (aload_2)) 
                                      (38 (aconst_null)) 
                                      (39 (astore_2)) 
                                      (40 (lconst_1)) 
                                      (41 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (44 (aconst_null)) 
                                      (45 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (48 (astore 4)) 
                                      (50 (getstatic (fieldCP "const__4" "clojure.zip$down" (class "clojure.lang.Var")))) 
                                      (53 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (56 (checkcast (class "clojure.lang.IFn"))) 
                                      (59 (aload_1)) 
                                      (60 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (65 (astore 5)) 
                                      (67 (aload 5)) 
                                      (69 (lconst_0)) 
                                      (70 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (73 (aconst_null)) 
                                      (74 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (77 (astore 6)) 
                                      (79 (getstatic (fieldCP "const__5" "clojure.zip$down" (class "clojure.lang.Var")))) 
                                      (82 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (85 (checkcast (class "clojure.lang.IFn"))) 
                                      (88 (aload 5)) 
                                      (90 (getstatic (fieldCP "const__3" "clojure.zip$down" (class "java.lang.Object")))) 
                                      (93 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (98 (astore 7)) 
                                      (100 (aload 5)) 
                                      (102 (aconst_null)) 
                                      (103 (astore 5)) 
                                      (105 (astore 8)) 
                                      (107 (aload 8)) 
                                      (109 (aconst_null)) 
                                      (110 (astore 8)) 
                                      (112 (dup)) 
                                      (113 (ifnull 321)) ;;to TAG_2
                                      (116 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (119 (if_acmpeq 322)) ;;to TAG_3
                                      (122 (getstatic (fieldCP "const__6" "clojure.zip$down" (class "clojure.lang.Var")))) 
                                      (125 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (128 (checkcast (class "clojure.lang.IFn"))) 
                                      (131 (iconst_2)) 
                                      (132 (anewarray (class "java.lang.Object"))) 
                                      (135 (dup)) 
                                      (136 (iconst_0)) 
                                      (137 (aload 6)) 
                                      (139 (aconst_null)) 
                                      (140 (astore 6)) 
                                      (142 (aastore)) 
                                      (143 (dup)) 
                                      (144 (iconst_1)) 
                                      (145 (bipush 8)) 
                                      (147 (anewarray (class "java.lang.Object"))) 
                                      (150 (dup)) 
                                      (151 (iconst_0)) 
                                      (152 (getstatic (fieldCP "const__7" "clojure.zip$down" (class "clojure.lang.Keyword")))) 
                                      (155 (aastore)) 
                                      (156 (dup)) 
                                      (157 (iconst_1)) 
                                      (158 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) 
                                      (161 (aastore)) 
                                      (162 (dup)) 
                                      (163 (iconst_2)) 
                                      (164 (getstatic (fieldCP "const__8" "clojure.zip$down" (class "clojure.lang.Keyword")))) 
                                      (167 (aastore)) 
                                      (168 (dup)) 
                                      (169 (iconst_3)) 
                                      (170 (aload 4)) 
                                      (172 (dup)) 
                                      (173 (ifnull 244)) ;;to TAG_4
                                      (176 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (179 (if_acmpeq 245)) ;;to TAG_5
                                      (182 (getstatic (fieldCP "const__9" "clojure.zip$down" (class "clojure.lang.Var")))) 
                                      (185 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (188 (checkcast (class "clojure.lang.IFn"))) 
                                      (191 (getstatic (fieldCP "__thunk__0__" "clojure.zip$down" (class "clojure.lang.ILookupThunk")))) 
                                      (194 (dup)) 
                                      (195 (aload 4)) 
                                      (197 (dup_x2)) 
                                      (198 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (203 (dup_x2)) 
                                      (204 (if_acmpeq 211)) ;;to TAG_6
                                      (207 (pop)) 
                                      (208 (goto 233)) ;;to TAG_7
                                      (211 (swap)) ;;at TAG_6
                                      (212 (pop)) 
                                      (213 (dup)) 
                                      (214 (getstatic (fieldCP "__site__0__" "clojure.zip$down" (class "clojure.lang.KeywordLookupSite")))) 
                                      (217 (swap)) 
                                      (218 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (223 (dup)) 
                                      (224 (putstatic (fieldCP "__thunk__0__" "clojure.zip$down" (class "clojure.lang.ILookupThunk")))) 
                                      (227 (swap)) 
                                      (228 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (233 (aload_3)) ;;at TAG_7
                                      (234 (aconst_null)) 
                                      (235 (astore_3)) 
                                      (236 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (241 (goto 258)) ;;to TAG_8
                                      (244 (pop)) ;;at TAG_4
                                      (245 (iconst_1)) ;;at TAG_5
                                      (246 (anewarray (class "java.lang.Object"))) 
                                      (249 (dup)) 
                                      (250 (iconst_0)) 
                                      (251 (aload_3)) 
                                      (252 (aconst_null)) 
                                      (253 (astore_3)) 
                                      (254 (aastore)) 
                                      (255 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (258 (aastore)) ;;at TAG_8
                                      (259 (dup)) 
                                      (260 (iconst_4)) 
                                      (261 (getstatic (fieldCP "const__10" "clojure.zip$down" (class "clojure.lang.Keyword")))) 
                                      (264 (aastore)) 
                                      (265 (dup)) 
                                      (266 (iconst_5)) 
                                      (267 (aload 4)) 
                                      (269 (aconst_null)) 
                                      (270 (astore 4)) 
                                      (272 (aastore)) 
                                      (273 (dup)) 
                                      (274 (bipush 6)) 
                                      (276 (getstatic (fieldCP "const__11" "clojure.zip$down" (class "clojure.lang.Keyword")))) 
                                      (279 (aastore)) 
                                      (280 (dup)) 
                                      (281 (bipush 7)) 
                                      (283 (aload 7)) 
                                      (285 (aconst_null)) 
                                      (286 (astore 7)) 
                                      (288 (aastore)) 
                                      (289 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (292 (aastore)) 
                                      (293 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (296 (getstatic (fieldCP "const__12" "clojure.zip$down" (class "clojure.lang.Var")))) 
                                      (299 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (302 (checkcast (class "clojure.lang.IFn"))) 
                                      (305 (aload_1)) 
                                      (306 (aconst_null)) 
                                      (307 (astore_1)) 
                                      (308 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (313 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (318 (goto 323)) ;;to TAG_9
                                      (321 (pop)) ;;at TAG_2
                                      (322 (aconst_null)) ;;at TAG_3
                                      (323 (goto 328)) ;;to TAG_10;;at TAG_9
                                      (326 (pop)) ;;at TAG_0
                                      (327 (aconst_null)) ;;at TAG_1
                                      (328 (areturn)) ;;at TAG_10
                                      (endofcode 329))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 28)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 27 (0 . 0) (20))))  ;;to TAG_0;;to TAG_1
                                      (20 (aload_2)) ;;at TAG_1
                                      (21 (putstatic (fieldCP "__thunk__0__" "clojure.zip$down" (class "clojure.lang.ILookupThunk")))) 
                                      (24 (goto 27))  ;;to TAG_0
                                      (27 (return)) ;;at TAG_0
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *zip$down-class-table*
  (make-static-class-decls 
   *clojure.zip$down*))

(defconst *package-name-map* 
  ("clojure.zip$down" . "clojure"))

