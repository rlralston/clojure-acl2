; test$successful_QMARK_-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:59 CDT 2014.
;

(defconst *clojure.test$successful_QMARK_*
 (make-class-def
      '(class "clojure.test$successful_QMARK_"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "zero?")
                        (STRING  "fail")
                        (STRING  "error"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 45)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "zero?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.test$successful_QMARK_" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "fail"
                                      (16 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (19 (checkcast (class "clojure.lang.Keyword")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.test$successful_QMARK_" (class "clojure.lang.Keyword"))))
                                      (25 (lconst_0))
                                      (26 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (29 (putstatic (fieldCP "const__2" "clojure.test$successful_QMARK_" (class "java.lang.Object"))))
                                      (32 (aconst_null))
                                      (33 (ldc 3))        ;;STRING:: "error"
                                      (35 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (38 (checkcast (class "clojure.lang.Keyword")))
                                      (41 (putstatic (fieldCP "const__3" "clojure.test$successful_QMARK_" (class "clojure.lang.Keyword"))))
                                      (44 (return))
                                      (endofcode 45))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 73)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__1" "clojure.test$successful_QMARK_" (class "clojure.lang.Keyword")))) 
                                      (3 (checkcast (class "clojure.lang.IFn"))) 
                                      (6 (aload_1)) 
                                      (7 (getstatic (fieldCP "const__2" "clojure.test$successful_QMARK_" (class "java.lang.Object")))) 
                                      (10 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (15 (invokestatic (methodCP "isZero" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (18 (istore_2)) 
                                      (19 (iload_2)) 
                                      (20 (ifeq 59)) ;;to TAG_0
                                      (23 (getstatic (fieldCP "const__3" "clojure.test$successful_QMARK_" (class "clojure.lang.Keyword")))) 
                                      (26 (checkcast (class "clojure.lang.IFn"))) 
                                      (29 (aload_1)) 
                                      (30 (aconst_null)) 
                                      (31 (astore_1)) 
                                      (32 (getstatic (fieldCP "const__2" "clojure.test$successful_QMARK_" (class "java.lang.Object")))) 
                                      (35 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (40 (invokestatic (methodCP "isZero" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (43 (ifeq 52)) ;;to TAG_1
                                      (46 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (49 (goto 55))  ;;to TAG_2
                                      (52 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_1
                                      (55 (goto 72)) ;;to TAG_3;;at TAG_2
                                      (58 (pop)) 
                                      (59 (iload_2)) ;;at TAG_0
                                      (60 (ifeq 69)) ;;to TAG_4
                                      (63 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (66 (goto 72)) ;;to TAG_3
                                      (69 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_4
                                      (72 (areturn)) ;;at TAG_3
                                      (endofcode 73))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *test$successful_QMARK_-class-table*
  (make-static-class-decls 
   *clojure.test$successful_QMARK_*))

(defconst *package-name-map* 
  ("clojure.test$successful_QMARK_" . "clojure"))

