; pprint$print_length_loop-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:57 CDT 2014.
;

(defconst *clojure.pprint$print_length_loop*
 (make-class-def
      '(class "clojure.pprint$print_length_loop"
            "clojure.lang.RestFn"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "gensym")
                        (STRING  "clojure.pprint")
                        (STRING  "pll-mod-body")
                        (STRING  "seq")
                        (STRING  "concat")
                        (STRING  "list")
                        (STRING  "loop")
                        (STRING  "apply")
                        (STRING  "vector")
                        (STRING  "if")
                        (STRING  "or")
                        (STRING  "not")
                        (STRING  "*print-length*")
                        (STRING  "<")
                        (STRING  "do")
                        (STRING  ".write")
                        (STRING  "with-meta")
                        (STRING  "*out*")
                        (STRING  "hash-map")
                        (STRING  "tag")
                        (STRING  "java.io.Writer")
                        (STRING  "length-count")
                        (STRING  "..."))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__19" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__20" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__21" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 276)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "gensym"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (13 (ldc 2))        ;;STRING:: "clojure.pprint"
                                      (15 (ldc 3))        ;;STRING:: "pll-mod-body"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 4))        ;;STRING:: "seq"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 5))        ;;STRING:: "concat"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (52 (ldc 0))        ;;STRING:: "clojure.core"
                                      (54 (ldc 6))        ;;STRING:: "list"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (65 (ldc 0))        ;;STRING:: "clojure.core"
                                      (67 (ldc 7))        ;;STRING:: "loop"
                                      (69 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (72 (checkcast (class "clojure.lang.AFn")))
                                      (75 (putstatic (fieldCP "const__5" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (78 (ldc 0))        ;;STRING:: "clojure.core"
                                      (80 (ldc 8))        ;;STRING:: "apply"
                                      (82 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (85 (checkcast (class "clojure.lang.Var")))
                                      (88 (putstatic (fieldCP "const__6" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (91 (ldc 0))        ;;STRING:: "clojure.core"
                                      (93 (ldc 9))        ;;STRING:: "vector"
                                      (95 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (98 (checkcast (class "clojure.lang.Var")))
                                      (101 (putstatic (fieldCP "const__7" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (104 (lconst_0))
                                      (105 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (108 (putstatic (fieldCP "const__8" "clojure.pprint$print_length_loop" (class "java.lang.Object"))))
                                      (111 (aconst_null))
                                      (112 (ldc 10))      ;;STRING:: "if"
                                      (114 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (117 (checkcast (class "clojure.lang.AFn")))
                                      (120 (putstatic (fieldCP "const__9" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (123 (ldc 0))       ;;STRING:: "clojure.core"
                                      (125 (ldc 11))      ;;STRING:: "or"
                                      (127 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (130 (checkcast (class "clojure.lang.AFn")))
                                      (133 (putstatic (fieldCP "const__10" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (136 (ldc 0))       ;;STRING:: "clojure.core"
                                      (138 (ldc 12))      ;;STRING:: "not"
                                      (140 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (143 (checkcast (class "clojure.lang.AFn")))
                                      (146 (putstatic (fieldCP "const__11" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (149 (ldc 0))       ;;STRING:: "clojure.core"
                                      (151 (ldc 13))      ;;STRING:: "*print-length*"
                                      (153 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (156 (checkcast (class "clojure.lang.AFn")))
                                      (159 (putstatic (fieldCP "const__12" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (162 (ldc 0))       ;;STRING:: "clojure.core"
                                      (164 (ldc 14))      ;;STRING:: "<"
                                      (166 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (169 (checkcast (class "clojure.lang.AFn")))
                                      (172 (putstatic (fieldCP "const__13" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (175 (ldc 0))       ;;STRING:: "clojure.core"
                                      (177 (ldc 13))      ;;STRING:: "*print-length*"
                                      (179 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (182 (checkcast (class "clojure.lang.AFn")))
                                      (185 (putstatic (fieldCP "const__14" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (188 (aconst_null))
                                      (189 (ldc 15))      ;;STRING:: "do"
                                      (191 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (194 (checkcast (class "clojure.lang.AFn")))
                                      (197 (putstatic (fieldCP "const__15" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (200 (aconst_null))
                                      (201 (ldc 16))      ;;STRING:: ".write"
                                      (203 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (206 (checkcast (class "clojure.lang.AFn")))
                                      (209 (putstatic (fieldCP "const__16" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (212 (ldc 0))       ;;STRING:: "clojure.core"
                                      (214 (ldc 17))      ;;STRING:: "with-meta"
                                      (216 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (219 (checkcast (class "clojure.lang.Var")))
                                      (222 (putstatic (fieldCP "const__17" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (225 (ldc 0))       ;;STRING:: "clojure.core"
                                      (227 (ldc 18))      ;;STRING:: "*out*"
                                      (229 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (232 (checkcast (class "clojure.lang.AFn")))
                                      (235 (putstatic (fieldCP "const__18" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (238 (ldc 0))       ;;STRING:: "clojure.core"
                                      (240 (ldc 19))      ;;STRING:: "hash-map"
                                      (242 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (245 (checkcast (class "clojure.lang.Var")))
                                      (248 (putstatic (fieldCP "const__19" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (251 (aconst_null))
                                      (252 (ldc 20))      ;;STRING:: "tag"
                                      (254 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (257 (checkcast (class "clojure.lang.Keyword")))
                                      (260 (putstatic (fieldCP "const__20" "clojure.pprint$print_length_loop" (class "clojure.lang.Keyword"))))
                                      (263 (aconst_null))
                                      (264 (ldc 21))      ;;STRING:: "java.io.Writer"
                                      (266 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (269 (checkcast (class "clojure.lang.AFn")))
                                      (272 (putstatic (fieldCP "const__21" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (275 (return))
                                      (endofcode 276))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.RestFn" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doInvoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 24) (max_locals . 7) (code_length . 670)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (checkcast (class "clojure.lang.IFn")))
                                      (9 (ldc 22))        ;;STRING:: "length-count"
                                      (11 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (16 (astore 5))
                                      (18 (getstatic (fieldCP "const__1" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (21 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (24 (checkcast (class "clojure.lang.IFn")))
                                      (27 (aload 5))
                                      (29 (aload 4))
                                      (31 (aconst_null))
                                      (32 (astore 4))
                                      (34 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (39 (astore 6))
                                      (41 (getstatic (fieldCP "const__2" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (44 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (47 (checkcast (class "clojure.lang.IFn")))
                                      (50 (getstatic (fieldCP "const__3" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (53 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (56 (checkcast (class "clojure.lang.IFn")))
                                      (59 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (62 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (65 (checkcast (class "clojure.lang.IFn")))
                                      (68 (getstatic (fieldCP "const__5" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (71 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (76 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (79 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (82 (checkcast (class "clojure.lang.IFn")))
                                      (85 (getstatic (fieldCP "const__6" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (88 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (91 (checkcast (class "clojure.lang.IFn")))
                                      (94 (getstatic (fieldCP "const__7" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (97 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (100 (aload 5))
                                      (102 (getstatic (fieldCP "const__8" "clojure.pprint$print_length_loop" (class "java.lang.Object"))))
                                      (105 (aload_3))
                                      (106 (aconst_null))
                                      (107 (astore_3))
                                      (108 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5))
                                      (113 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (118 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (121 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (124 (checkcast (class "clojure.lang.IFn")))
                                      (127 (getstatic (fieldCP "const__2" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (130 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (133 (checkcast (class "clojure.lang.IFn")))
                                      (136 (getstatic (fieldCP "const__3" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (139 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (142 (checkcast (class "clojure.lang.IFn")))
                                      (145 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (148 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (151 (checkcast (class "clojure.lang.IFn")))
                                      (154 (getstatic (fieldCP "const__9" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (157 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (162 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (165 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (168 (checkcast (class "clojure.lang.IFn")))
                                      (171 (getstatic (fieldCP "const__2" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (174 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (177 (checkcast (class "clojure.lang.IFn")))
                                      (180 (getstatic (fieldCP "const__3" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (183 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (186 (checkcast (class "clojure.lang.IFn")))
                                      (189 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (192 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (195 (checkcast (class "clojure.lang.IFn")))
                                      (198 (getstatic (fieldCP "const__10" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (201 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (206 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (209 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (212 (checkcast (class "clojure.lang.IFn")))
                                      (215 (getstatic (fieldCP "const__2" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (218 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (221 (checkcast (class "clojure.lang.IFn")))
                                      (224 (getstatic (fieldCP "const__3" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (227 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (230 (checkcast (class "clojure.lang.IFn")))
                                      (233 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (236 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (239 (checkcast (class "clojure.lang.IFn")))
                                      (242 (getstatic (fieldCP "const__11" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (245 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (250 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (253 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (256 (checkcast (class "clojure.lang.IFn")))
                                      (259 (getstatic (fieldCP "const__12" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (262 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (267 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (272 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (277 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (282 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (285 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (288 (checkcast (class "clojure.lang.IFn")))
                                      (291 (getstatic (fieldCP "const__2" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (294 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (297 (checkcast (class "clojure.lang.IFn")))
                                      (300 (getstatic (fieldCP "const__3" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (303 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (306 (checkcast (class "clojure.lang.IFn")))
                                      (309 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (312 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (315 (checkcast (class "clojure.lang.IFn")))
                                      (318 (getstatic (fieldCP "const__13" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (321 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (326 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (329 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (332 (checkcast (class "clojure.lang.IFn")))
                                      (335 (aload 5))
                                      (337 (aconst_null))
                                      (338 (astore 5))
                                      (340 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (345 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (348 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (351 (checkcast (class "clojure.lang.IFn")))
                                      (354 (getstatic (fieldCP "const__14" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (357 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (362 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4))
                                      (367 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (372 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (377 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4))
                                      (382 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (387 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (392 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (395 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (398 (checkcast (class "clojure.lang.IFn")))
                                      (401 (getstatic (fieldCP "const__2" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (404 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (407 (checkcast (class "clojure.lang.IFn")))
                                      (410 (getstatic (fieldCP "const__3" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (413 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (416 (checkcast (class "clojure.lang.IFn")))
                                      (419 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (422 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (425 (checkcast (class "clojure.lang.IFn")))
                                      (428 (getstatic (fieldCP "const__15" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (431 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (436 (aload 6))
                                      (438 (aconst_null))
                                      (439 (astore 6))
                                      (441 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (446 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (451 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (456 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (459 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (462 (checkcast (class "clojure.lang.IFn")))
                                      (465 (getstatic (fieldCP "const__2" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (468 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (471 (checkcast (class "clojure.lang.IFn")))
                                      (474 (getstatic (fieldCP "const__3" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (477 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (480 (checkcast (class "clojure.lang.IFn")))
                                      (483 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (486 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (489 (checkcast (class "clojure.lang.IFn")))
                                      (492 (getstatic (fieldCP "const__16" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (495 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (500 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (503 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (506 (checkcast (class "clojure.lang.IFn")))
                                      (509 (getstatic (fieldCP "const__17" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (512 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (515 (checkcast (class "clojure.lang.IFn")))
                                      (518 (getstatic (fieldCP "const__18" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (521 (getstatic (fieldCP "const__6" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (524 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (527 (checkcast (class "clojure.lang.IFn")))
                                      (530 (getstatic (fieldCP "const__19" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (533 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (536 (getstatic (fieldCP "const__2" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (539 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (542 (checkcast (class "clojure.lang.IFn")))
                                      (545 (getstatic (fieldCP "const__3" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (548 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (551 (checkcast (class "clojure.lang.IFn")))
                                      (554 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (557 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (560 (checkcast (class "clojure.lang.IFn")))
                                      (563 (getstatic (fieldCP "const__20" "clojure.pprint$print_length_loop" (class "clojure.lang.Keyword"))))
                                      (566 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (571 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (574 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (577 (checkcast (class "clojure.lang.IFn")))
                                      (580 (getstatic (fieldCP "const__21" "clojure.pprint$print_length_loop" (class "clojure.lang.AFn"))))
                                      (583 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (588 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (593 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (598 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (603 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (608 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (613 (getstatic (fieldCP "const__4" "clojure.pprint$print_length_loop" (class "clojure.lang.Var"))))
                                      (616 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (619 (checkcast (class "clojure.lang.IFn")))
                                      (622 (ldc 23))      ;;STRING:: "..."
                                      (624 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (629 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4))
                                      (634 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (639 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (644 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5))
                                      (649 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (654 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (659 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4))
                                      (664 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (669 (areturn))
                                      (endofcode 670))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getRequiredArity"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iconst_3))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$print_length_loop-class-table*
  (make-static-class-decls 
   *clojure.pprint$print_length_loop*))

(defconst *package-name-map* 
  ("clojure.pprint$print_length_loop" . "clojure"))

