; pprint$fresh_line-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:56 CDT 2014.
;

(defconst *clojure.pprint$fresh_line*
 (make-class-def
      '(class "clojure.pprint$fresh_line"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "instance?")
                        (STRING  "*out*")
                        (STRING  "not")
                        (STRING  "=")
                        (STRING  "clojure.pprint")
                        (STRING  "get-column")
                        (STRING  "base")
                        (STRING  "deref")
                        (STRING  "prn"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 131)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "instance?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$fresh_line" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "*out*"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$fresh_line" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "not"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.pprint$fresh_line" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "="
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.pprint$fresh_line" (class "clojure.lang.Var"))))
                                      (52 (lconst_0))
                                      (53 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (56 (putstatic (fieldCP "const__4" "clojure.pprint$fresh_line" (class "java.lang.Object"))))
                                      (59 (ldc 5))        ;;STRING:: "clojure.pprint"
                                      (61 (ldc 6))        ;;STRING:: "get-column"
                                      (63 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (66 (checkcast (class "clojure.lang.Var")))
                                      (69 (putstatic (fieldCP "const__5" "clojure.pprint$fresh_line" (class "clojure.lang.Var"))))
                                      (72 (aconst_null))
                                      (73 (ldc 7))        ;;STRING:: "base"
                                      (75 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (78 (checkcast (class "clojure.lang.Keyword")))
                                      (81 (putstatic (fieldCP "const__6" "clojure.pprint$fresh_line" (class "clojure.lang.Keyword"))))
                                      (84 (ldc 0))        ;;STRING:: "clojure.core"
                                      (86 (ldc 8))        ;;STRING:: "deref"
                                      (88 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (91 (checkcast (class "clojure.lang.Var")))
                                      (94 (putstatic (fieldCP "const__7" "clojure.pprint$fresh_line" (class "clojure.lang.Var"))))
                                      (97 (ldc 0))        ;;STRING:: "clojure.core"
                                      (99 (ldc 9))        ;;STRING:: "prn"
                                      (101 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (104 (checkcast (class "clojure.lang.Var")))
                                      (107 (putstatic (fieldCP "const__8" "clojure.pprint$fresh_line" (class "clojure.lang.Var"))))
                                      (110 (new (class "clojure.lang.KeywordLookupSite")))
                                      (113 (dup))
                                      (114 (aconst_null))
                                      (115 (ldc 7))       ;;STRING:: "base"
                                      (117 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (120 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (123 (dup))
                                      (124 (putstatic (fieldCP "__site__0__" "clojure.pprint$fresh_line" (class "clojure.lang.KeywordLookupSite"))))
                                      (127 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$fresh_line" (class "clojure.lang.ILookupThunk"))))
                                      (130 (return))
                                      (endofcode 131))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 9) (max_locals . 1) (code_length . 178)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__1" "clojure.pprint$fresh_line" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (instanceof (class "clojure.lang.IDeref"))) 
                                      (9 (ifeq 163)) ;;to TAG_0
                                      (12 (getstatic (fieldCP "const__2" "clojure.pprint$fresh_line" (class "clojure.lang.Var")))) 
                                      (15 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (18 (checkcast (class "clojure.lang.IFn"))) 
                                      (21 (lconst_0)) 
                                      (22 (getstatic (fieldCP "const__5" "clojure.pprint$fresh_line" (class "clojure.lang.Var")))) 
                                      (25 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (28 (checkcast (class "clojure.lang.IFn"))) 
                                      (31 (getstatic (fieldCP "__thunk__0__" "clojure.pprint$fresh_line" (class "clojure.lang.ILookupThunk")))) 
                                      (34 (dup)) 
                                      (35 (getstatic (fieldCP "const__7" "clojure.pprint$fresh_line" (class "clojure.lang.Var")))) 
                                      (38 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (41 (checkcast (class "clojure.lang.IFn"))) 
                                      (44 (getstatic (fieldCP "const__7" "clojure.pprint$fresh_line" (class "clojure.lang.Var")))) 
                                      (47 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (50 (checkcast (class "clojure.lang.IFn"))) 
                                      (53 (getstatic (fieldCP "const__1" "clojure.pprint$fresh_line" (class "clojure.lang.Var")))) 
                                      (56 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (59 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (64 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (69 (dup_x2)) 
                                      (70 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (75 (dup_x2)) 
                                      (76 (if_acmpeq 83))  ;;to TAG_1
                                      (79 (pop)) 
                                      (80 (goto 105)) ;;to TAG_2
                                      (83 (swap)) ;;at TAG_1
                                      (84 (pop)) 
                                      (85 (dup)) 
                                      (86 (getstatic (fieldCP "__site__0__" "clojure.pprint$fresh_line" (class "clojure.lang.KeywordLookupSite")))) 
                                      (89 (swap)) 
                                      (90 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (95 (dup)) 
                                      (96 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$fresh_line" (class "clojure.lang.ILookupThunk")))) 
                                      (99 (swap)) 
                                      (100 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (105 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_2
                                      (110 (invokestatic (methodCP "equiv" "clojure.lang.Util" (long (class "java.lang.Object")) boolean))) 
                                      (113 (ifeq 122)) ;;to TAG_3
                                      (116 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (119 (goto 125)) ;;to TAG_4
                                      (122 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_3
                                      (125 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_4
                                      (130 (dup)) 
                                      (131 (ifnull 157)) ;;to TAG_5
                                      (134 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (137 (if_acmpeq 158)) ;;to TAG_6
                                      (140 (getstatic (fieldCP "const__8" "clojure.pprint$fresh_line" (class "clojure.lang.Var")))) 
                                      (143 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (146 (checkcast (class "clojure.lang.IFn"))) 
                                      (149 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (154 (goto 159)) ;;to TAG_7
                                      (157 (pop)) ;;at TAG_5
                                      (158 (aconst_null)) ;;at TAG_6
                                      (159 (goto 177)) ;;to TAG_8;;at TAG_7
                                      (162 (pop)) 
                                      (163 (getstatic (fieldCP "const__8" "clojure.pprint$fresh_line" (class "clojure.lang.Var")))) ;;at TAG_0
                                      (166 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (169 (checkcast (class "clojure.lang.IFn"))) 
                                      (172 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (177 (areturn)) ;;at TAG_8
                                      (endofcode 178))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 28)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 27 (0 . 0) (20))))  ;;to TAG_0;;to TAG_1
                                      (20 (aload_2)) ;;at TAG_1
                                      (21 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$fresh_line" (class "clojure.lang.ILookupThunk")))) 
                                      (24 (goto 27))  ;;to TAG_0
                                      (27 (return)) ;;at TAG_0
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$fresh_line-class-table*
  (make-static-class-decls 
   *clojure.pprint$fresh_line*))

(defconst *package-name-map* 
  ("clojure.pprint$fresh_line" . "clojure"))

