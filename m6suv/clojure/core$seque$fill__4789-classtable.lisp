; core$seque$fill__4789-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:45 CDT 2014.
;

(defconst *clojure.core$seque$fill__4789*
 (make-class-def
      '(class "clojure.core$seque$fill__4789"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "instance?")
                        (STRING  "seq")
                        (STRING  "nth")
                        (STRING  "nthnext")
                        (STRING  "nil?"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "NIL" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "q" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "log_error" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 80)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "instance?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$seque$fill__4789" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "seq"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$seque$fill__4789" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "nth"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$seque$fill__4789" (class "clojure.lang.Var"))))
                                      (39 (lconst_0))
                                      (40 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (43 (putstatic (fieldCP "const__3" "clojure.core$seque$fill__4789" (class "java.lang.Object"))))
                                      (46 (ldc 0))        ;;STRING:: "clojure.core"
                                      (48 (ldc 4))        ;;STRING:: "nthnext"
                                      (50 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (53 (checkcast (class "clojure.lang.Var")))
                                      (56 (putstatic (fieldCP "const__4" "clojure.core$seque$fill__4789" (class "clojure.lang.Var"))))
                                      (59 (lconst_1))
                                      (60 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (63 (putstatic (fieldCP "const__5" "clojure.core$seque$fill__4789" (class "java.lang.Object"))))
                                      (66 (ldc 0))        ;;STRING:: "clojure.core"
                                      (68 (ldc 5))        ;;STRING:: "nil?"
                                      (70 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (73 (checkcast (class "clojure.lang.Var")))
                                      (76 (putstatic (fieldCP "const__6" "clojure.core$seque$fill__4789" (class "clojure.lang.Var"))))
                                      (79 (return))
                                      (endofcode 80))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 20)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "NIL" "clojure.core$seque$fill__4789" (class "java.lang.Object"))))
                                      (9 (aload_0))
                                      (10 (aload_2))
                                      (11 (putfield (fieldCP "q" "clojure.core$seque$fill__4789" (class "java.lang.Object"))))
                                      (14 (aload_0))
                                      (15 (aload_3))
                                      (16 (putfield (fieldCP "log_error" "clojure.core$seque$fill__4789" (class "java.lang.Object"))))
                                      (19 (return))
                                      (endofcode 20))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 13) (code_length . 283)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (dup)) 
                                      (2 (ifnull 280)) ;;to TAG_0
                                      (5 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (8 (if_acmpeq 281))  ;;to TAG_1
                                      (11 (aload_1)) 
                                      (12 (instanceof (class "java.lang.Exception"))) 
                                      (15 (ifeq 41)) ;;to TAG_2
                                      (18 (aload_0)) 
                                      (19 (getfield (fieldCP "log_error" "clojure.core$seque$fill__4789" (class "java.lang.Object")))) 
                                      (22 (checkcast (class "clojure.lang.IFn"))) 
                                      (25 (aload_0)) 
                                      (26 (getfield (fieldCP "q" "clojure.core$seque$fill__4789" (class "java.lang.Object")))) 
                                      (29 (aload_1)) 
                                      (30 (aconst_null)) 
                                      (31 (astore_1)) 
                                      (32 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (37 (goto 277)) ;;to TAG_3
                                      (40 (pop)) 
                                      (41 (getstatic (fieldCP "const__1" "clojure.core$seque$fill__4789" (class "clojure.lang.Var")))) ;;at TAG_2
                                      (44 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (47 (checkcast (class "clojure.lang.IFn"))) 
                                      (50 (aload_1)) 
                                      (51 (aconst_null)) 
                                      (52 (astore_1)) 
                                      (53 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (58 (astore_2)) 
                                      (59 (aload_2)) 
                                      (60 (astore_3)) 
                                      (61 (aload_3)) 
                                      (62 (lconst_0)) 
                                      (63 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (66 (aconst_null)) 
                                      (67 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (70 (astore 4)) 
                                      (72 (getstatic (fieldCP "const__4" "clojure.core$seque$fill__4789" (class "clojure.lang.Var")))) 
                                      (75 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (78 (checkcast (class "clojure.lang.IFn"))) 
                                      (81 (aload_3)) 
                                      (82 (getstatic (fieldCP "const__5" "clojure.core$seque$fill__4789" (class "java.lang.Object")))) 
                                      (85 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (90 (astore 5)) 
                                      (92 (aload_3)) 
                                      (93 (aconst_null)) 
                                      (94 (astore_3)) 
                                      (95 (astore 6)) 
                                      (97 (aload_2)) 
                                      (98 (aconst_null)) 
                                      (99 (astore_2)) 
                                      (100 (astore 7)) 
                                      (102 (aload 7)) ;;at TAG_9
                                      (104 (astore 8)) 
                                      (106 (aload 8)) 
                                      (108 (lconst_0)) 
                                      (109 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (112 (aconst_null)) 
                                      (113 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (116 (astore 9)) 
                                      (118 (getstatic (fieldCP "const__4" "clojure.core$seque$fill__4789" (class "clojure.lang.Var")))) 
                                      (121 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (124 (checkcast (class "clojure.lang.IFn"))) 
                                      (127 (aload 8)) 
                                      (129 (getstatic (fieldCP "const__5" "clojure.core$seque$fill__4789" (class "java.lang.Object")))) 
                                      (132 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (137 (astore 10)) 
                                      (139 (aload 8)) 
                                      (141 (aconst_null)) 
                                      (142 (astore 8)) 
                                      (144 (astore 11)) 
                                      (146 (aload 11)) 
                                      (148 (dup)) 
                                      (149 (ifnull 217)) ;;to TAG_4
                                      (152 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (155 (if_acmpeq 218)) ;;to TAG_5
                                      (158 (aload_0)) 
                                      (159 (getfield (fieldCP "q" "clojure.core$seque$fill__4789" (class "java.lang.Object")))) 
                                      (162 (checkcast (class "java.util.concurrent.BlockingQueue"))) 
                                      (165 (aload 9)) 
                                      (167 (aconst_null)) 
                                      (168 (invokestatic (methodCP "identical" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (171 (ifeq 182)) ;;to TAG_6
                                      (174 (aload_0)) 
                                      (175 (getfield (fieldCP "NIL" "clojure.core$seque$fill__4789" (class "java.lang.Object")))) 
                                      (178 (goto 187)) ;;to TAG_7
                                      (181 (pop)) 
                                      (182 (aload 9)) ;;at TAG_6
                                      (184 (aconst_null)) 
                                      (185 (astore 9)) 
                                      (187 (invokeinterface (methodCP "offer" "java.util.concurrent.BlockingQueue" ((class "java.lang.Object")) boolean) 2)) ;;at TAG_7
                                      (192 (ifeq 209)) ;;to TAG_8
                                      (195 (aload 10)) 
                                      (197 (aconst_null)) 
                                      (198 (astore 10)) 
                                      (200 (astore 7)) 
                                      (202 (goto 102)) ;;to TAG_9
                                      (205 (goto 214)) ;;to TAG_10
                                      (208 (pop)) 
                                      (209 (aload 11)) ;;at TAG_8
                                      (211 (aconst_null)) 
                                      (212 (astore 11)) 
                                      (214 (goto 245)) ;;to TAG_11;;at TAG_10
                                      (217 (pop)) ;;at TAG_4
                                      (218 (aload_0)) ;;at TAG_5
                                      (219 (getfield (fieldCP "q" "clojure.core$seque$fill__4789" (class "java.lang.Object")))) 
                                      (222 (checkcast (class "java.util.concurrent.BlockingQueue"))) 
                                      (225 (aload_0)) 
                                      (226 (getfield (fieldCP "q" "clojure.core$seque$fill__4789" (class "java.lang.Object")))) 
                                      (229 (invokeinterface (methodCP "offer" "java.util.concurrent.BlockingQueue" ((class "java.lang.Object")) boolean) 2)) 
                                      (234 (ifeq 242)) ;;to TAG_12
                                      (237 (aconst_null)) 
                                      (238 (goto 245)) ;;to TAG_11
                                      (241 (pop)) 
                                      (242 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentList" (class "clojure.lang.PersistentList$EmptyList")))) ;;at TAG_12
                                      (245 (astore 12)) ;;at TAG_11
                                      (247 (goto 275)) ;;to TAG_13;;at TAG_15
                                      (250 (astore_2)) ;;at TAG_16
                                      (251 (aload_0)) 
                                      (252 (getfield (fieldCP "log_error" "clojure.core$seque$fill__4789" (class "java.lang.Object")))) 
                                      (255 (checkcast (class "clojure.lang.IFn"))) 
                                      (258 (aload_0)) 
                                      (259 (getfield (fieldCP "q" "clojure.core$seque$fill__4789" (class "java.lang.Object")))) 
                                      (262 (aload_2)) 
                                      (263 (aconst_null)) 
                                      (264 (astore_2)) 
                                      (265 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (270 (astore 12)) 
                                      (272 (goto 275)) ;;to TAG_13
                                      (275 (aload 12)) ;;at TAG_13
                                      (277 (goto 282)) ;;to TAG_14;;at TAG_3
                                      (280 (pop)) ;;at TAG_0
                                      (281 (aconst_null)) ;;at TAG_1
                                      (282 (areturn)) ;;at TAG_14
                                      (endofcode 283))
                                   (Exceptions 
                                     (handler 41 247  250 (class "java.lang.Exception")))
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$seque$fill__4789-class-table*
  (make-static-class-decls 
   *clojure.core$seque$fill__4789*))

(defconst *package-name-map* 
  ("clojure.core$seque$fill__4789" . "clojure"))

