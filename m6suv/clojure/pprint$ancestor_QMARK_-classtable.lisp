; pprint$ancestor_QMARK_-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:55 CDT 2014.
;

(defconst *clojure.pprint$ancestor_QMARK_*
 (make-class-def
      '(class "clojure.pprint$ancestor_QMARK_"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "parent")
                        (STRING  "clojure.core")
                        (STRING  "nil?")
                        (STRING  "identical?")
                        (STRING  "else"))
            (fields
                        (field "const__0" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__1__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__1__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 91)
                                   (parsedcode
                                      (0 (aconst_null))
                                      (1 (ldc 0))         ;;STRING:: "parent"
                                      (3 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (6 (checkcast (class "clojure.lang.Keyword")))
                                      (9 (putstatic (fieldCP "const__0" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.Keyword"))))
                                      (12 (ldc 1))        ;;STRING:: "clojure.core"
                                      (14 (ldc 2))        ;;STRING:: "nil?"
                                      (16 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (19 (checkcast (class "clojure.lang.Var")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.Var"))))
                                      (25 (ldc 1))        ;;STRING:: "clojure.core"
                                      (27 (ldc 3))        ;;STRING:: "identical?"
                                      (29 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (32 (checkcast (class "clojure.lang.Var")))
                                      (35 (putstatic (fieldCP "const__2" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.Var"))))
                                      (38 (aconst_null))
                                      (39 (ldc 4))        ;;STRING:: "else"
                                      (41 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (44 (checkcast (class "clojure.lang.Keyword")))
                                      (47 (putstatic (fieldCP "const__3" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.Keyword"))))
                                      (50 (new (class "clojure.lang.KeywordLookupSite")))
                                      (53 (dup))
                                      (54 (aconst_null))
                                      (55 (ldc 0))        ;;STRING:: "parent"
                                      (57 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (60 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (63 (dup))
                                      (64 (putstatic (fieldCP "__site__0__" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.KeywordLookupSite"))))
                                      (67 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.ILookupThunk"))))
                                      (70 (new (class "clojure.lang.KeywordLookupSite")))
                                      (73 (dup))
                                      (74 (aconst_null))
                                      (75 (ldc 0))        ;;STRING:: "parent"
                                      (77 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (80 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (83 (dup))
                                      (84 (putstatic (fieldCP "__site__1__" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.KeywordLookupSite"))))
                                      (87 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.ILookupThunk"))))
                                      (90 (return))
                                      (endofcode 91))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 138)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "__thunk__0__" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.ILookupThunk")))) 
                                      (3 (dup)) 
                                      (4 (aload_2)) 
                                      (5 (aconst_null)) 
                                      (6 (astore_2)) 
                                      (7 (dup_x2)) 
                                      (8 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (13 (dup_x2)) 
                                      (14 (if_acmpeq 21)) ;;to TAG_0
                                      (17 (pop)) 
                                      (18 (goto 43))  ;;to TAG_1
                                      (21 (swap)) ;;at TAG_0
                                      (22 (pop)) 
                                      (23 (dup)) 
                                      (24 (getstatic (fieldCP "__site__0__" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.KeywordLookupSite")))) 
                                      (27 (swap)) 
                                      (28 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (33 (dup)) 
                                      (34 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.ILookupThunk")))) 
                                      (37 (swap)) 
                                      (38 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (43 (astore_3)) ;;at TAG_1
                                      (44 (aload_3)) ;;at TAG_9
                                      (45 (aconst_null)) 
                                      (46 (invokestatic (methodCP "identical" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (49 (ifeq 59)) ;;to TAG_2
                                      (52 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (55 (goto 137)) ;;to TAG_3
                                      (58 (pop)) 
                                      (59 (aload_1)) ;;at TAG_2
                                      (60 (aload_3)) 
                                      (61 (invokestatic (methodCP "identical" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (64 (ifeq 74)) ;;to TAG_4
                                      (67 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (70 (goto 137)) ;;to TAG_3
                                      (73 (pop)) 
                                      (74 (getstatic (fieldCP "const__3" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.Keyword")))) ;;at TAG_4
                                      (77 (dup)) 
                                      (78 (ifnull 135)) ;;to TAG_5
                                      (81 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (84 (if_acmpeq 136)) ;;to TAG_6
                                      (87 (getstatic (fieldCP "__thunk__1__" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.ILookupThunk")))) 
                                      (90 (dup)) 
                                      (91 (aload_3)) 
                                      (92 (dup_x2)) 
                                      (93 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (98 (dup_x2)) 
                                      (99 (if_acmpeq 106)) ;;to TAG_7
                                      (102 (pop)) 
                                      (103 (goto 128)) ;;to TAG_8
                                      (106 (swap)) ;;at TAG_7
                                      (107 (pop)) 
                                      (108 (dup)) 
                                      (109 (getstatic (fieldCP "__site__1__" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.KeywordLookupSite")))) 
                                      (112 (swap)) 
                                      (113 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (118 (dup)) 
                                      (119 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.ILookupThunk")))) 
                                      (122 (swap)) 
                                      (123 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (128 (astore_3)) ;;at TAG_8
                                      (129 (goto 44)) ;;to TAG_9
                                      (132 (goto 137)) ;;to TAG_3
                                      (135 (pop)) ;;at TAG_5
                                      (136 (aconst_null)) ;;at TAG_6
                                      (137 (areturn)) ;;at TAG_3
                                      (endofcode 138))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 39)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 38 (0 . 1) (24 31))))  ;;to TAG_2;;to TAG_0;;to TAG_1
                                      (24 (aload_2)) ;;at TAG_1
                                      (25 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.ILookupThunk")))) 
                                      (28 (goto 38)) ;;to TAG_0
                                      (31 (aload_2)) ;;at TAG_2
                                      (32 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$ancestor_QMARK_" (class "clojure.lang.ILookupThunk")))) 
                                      (35 (goto 38)) ;;to TAG_0
                                      (38 (return)) ;;at TAG_0
                                      (endofcode 39))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$ancestor_QMARK_-class-table*
  (make-static-class-decls 
   *clojure.pprint$ancestor_QMARK_*))

(defconst *package-name-map* 
  ("clojure.pprint$ancestor_QMARK_" . "clojure"))

