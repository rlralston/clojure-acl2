; core$filter_methods$fn__5502-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:42 CDT 2014.
;

(defconst *clojure.core$filter_methods$fn__5502*
 (make-class-def
      '(class "clojure.core$filter_methods$fn__5502"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "seq")
                        (STRING  "concat")
                        (STRING  "first")
                        (STRING  "method-sig")
                        (STRING  "conj")
                        (STRING  "next")
                        (STRING  "assoc"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "mm" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "invalid_method_QMARK_" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "c" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "considered" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 92)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "seq"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "concat"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "first"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "method-sig"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var"))))
                                      (52 (ldc 0))        ;;STRING:: "clojure.core"
                                      (54 (ldc 5))        ;;STRING:: "conj"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var"))))
                                      (65 (ldc 0))        ;;STRING:: "clojure.core"
                                      (67 (ldc 6))        ;;STRING:: "next"
                                      (69 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (72 (checkcast (class "clojure.lang.Var")))
                                      (75 (putstatic (fieldCP "const__5" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var"))))
                                      (78 (ldc 0))        ;;STRING:: "clojure.core"
                                      (80 (ldc 7))        ;;STRING:: "assoc"
                                      (82 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (85 (checkcast (class "clojure.lang.Var")))
                                      (88 (putstatic (fieldCP "const__6" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var"))))
                                      (91 (return))
                                      (endofcode 92))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 5) (code_length . 26)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "mm" "clojure.core$filter_methods$fn__5502" (class "java.lang.Object"))))
                                      (9 (aload_0))
                                      (10 (aload_2))
                                      (11 (putfield (fieldCP "invalid_method_QMARK_" "clojure.core$filter_methods$fn__5502" (class "java.lang.Object"))))
                                      (14 (aload_0))
                                      (15 (aload_3))
                                      (16 (putfield (fieldCP "c" "clojure.core$filter_methods$fn__5502" (class "java.lang.Object"))))
                                      (19 (aload_0))
                                      (20 (aload 4))
                                      (22 (putfield (fieldCP "considered" "clojure.core$filter_methods$fn__5502" (class "java.lang.Object"))))
                                      (25 (return))
                                      (endofcode 26))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 8) (code_length . 330)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "mm" "clojure.core$filter_methods$fn__5502" (class "java.lang.Object")))) 
                                      (4 (astore_1)) 
                                      (5 (aload_0)) 
                                      (6 (getfield (fieldCP "considered" "clojure.core$filter_methods$fn__5502" (class "java.lang.Object")))) 
                                      (9 (astore_2)) 
                                      (10 (getstatic (fieldCP "const__0" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var")))) 
                                      (13 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (16 (checkcast (class "clojure.lang.IFn"))) 
                                      (19 (getstatic (fieldCP "const__1" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var")))) 
                                      (22 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (25 (checkcast (class "clojure.lang.IFn"))) 
                                      (28 (getstatic (fieldCP "const__0" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var")))) 
                                      (31 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (34 (checkcast (class "clojure.lang.IFn"))) 
                                      (37 (aload_0)) 
                                      (38 (getfield (fieldCP "c" "clojure.core$filter_methods$fn__5502" (class "java.lang.Object")))) 
                                      (41 (checkcast (class "java.lang.Class"))) 
                                      (44 (invokevirtual (methodCP "getDeclaredMethods" "java.lang.Class" () (array (class "java.lang.reflect.Method"))))) 
                                      (47 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (52 (getstatic (fieldCP "const__0" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var")))) 
                                      (55 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (58 (checkcast (class "clojure.lang.IFn"))) 
                                      (61 (aload_0)) 
                                      (62 (getfield (fieldCP "c" "clojure.core$filter_methods$fn__5502" (class "java.lang.Object")))) 
                                      (65 (checkcast (class "java.lang.Class"))) 
                                      (68 (invokevirtual (methodCP "getMethods" "java.lang.Class" () (array (class "java.lang.reflect.Method"))))) 
                                      (71 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (76 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (81 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (86 (astore_3)) 
                                      (87 (aload_3)) ;;at TAG_7
                                      (88 (dup)) 
                                      (89 (ifnull 313)) ;;to TAG_0
                                      (92 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (95 (if_acmpeq 314))  ;;to TAG_1
                                      (98 (getstatic (fieldCP "const__2" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var")))) 
                                      (101 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (104 (checkcast (class "clojure.lang.IFn"))) 
                                      (107 (aload_3)) 
                                      (108 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (113 (astore 4)) 
                                      (115 (aload 4)) 
                                      (117 (checkcast (class "java.lang.reflect.Method"))) 
                                      (120 (invokevirtual (methodCP "getModifiers" "java.lang.reflect.Method" () int))) 
                                      (123 (istore 5)) 
                                      (125 (getstatic (fieldCP "const__3" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var")))) 
                                      (128 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (131 (checkcast (class "clojure.lang.IFn"))) 
                                      (134 (aload 4)) 
                                      (136 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (141 (astore 6)) 
                                      (143 (aload_2)) 
                                      (144 (checkcast (class "clojure.lang.IFn"))) 
                                      (147 (aload 6)) 
                                      (149 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (154 (astore 7)) 
                                      (156 (aload 7)) 
                                      (158 (dup)) 
                                      (159 (ifnull 176)) ;;to TAG_2
                                      (162 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (165 (if_acmpeq 177)) ;;to TAG_3
                                      (168 (aload 7)) 
                                      (170 (aconst_null)) 
                                      (171 (astore 7)) 
                                      (173 (goto 191)) ;;to TAG_4
                                      (176 (pop)) ;;at TAG_2
                                      (177 (aload_0)) ;;at TAG_3
                                      (178 (getfield (fieldCP "invalid_method_QMARK_" "clojure.core$filter_methods$fn__5502" (class "java.lang.Object")))) 
                                      (181 (checkcast (class "clojure.lang.IFn"))) 
                                      (184 (aload 4)) 
                                      (186 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (191 (dup)) ;;at TAG_4
                                      (192 (ifnull 246)) ;;to TAG_5
                                      (195 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (198 (if_acmpeq 247)) ;;to TAG_6
                                      (201 (aload_1)) 
                                      (202 (getstatic (fieldCP "const__4" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var")))) 
                                      (205 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (208 (checkcast (class "clojure.lang.IFn"))) 
                                      (211 (aload_2)) 
                                      (212 (aload 6)) 
                                      (214 (aconst_null)) 
                                      (215 (astore 6)) 
                                      (217 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (222 (getstatic (fieldCP "const__5" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var")))) 
                                      (225 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (228 (checkcast (class "clojure.lang.IFn"))) 
                                      (231 (aload_3)) 
                                      (232 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (237 (astore_3)) 
                                      (238 (astore_2)) 
                                      (239 (astore_1)) 
                                      (240 (goto 87)) ;;to TAG_7
                                      (243 (goto 310)) ;;to TAG_8
                                      (246 (pop)) ;;at TAG_5
                                      (247 (getstatic (fieldCP "const__6" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var")))) ;;at TAG_6
                                      (250 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (253 (checkcast (class "clojure.lang.IFn"))) 
                                      (256 (aload_1)) 
                                      (257 (aload 6)) 
                                      (259 (aload 4)) 
                                      (261 (aconst_null)) 
                                      (262 (astore 4)) 
                                      (264 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (269 (getstatic (fieldCP "const__4" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var")))) 
                                      (272 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (275 (checkcast (class "clojure.lang.IFn"))) 
                                      (278 (aload_2)) 
                                      (279 (aload 6)) 
                                      (281 (aconst_null)) 
                                      (282 (astore 6)) 
                                      (284 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (289 (getstatic (fieldCP "const__5" "clojure.core$filter_methods$fn__5502" (class "clojure.lang.Var")))) 
                                      (292 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (295 (checkcast (class "clojure.lang.IFn"))) 
                                      (298 (aload_3)) 
                                      (299 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (304 (astore_3)) 
                                      (305 (astore_2)) 
                                      (306 (astore_1)) 
                                      (307 (goto 87)) ;;to TAG_7
                                      (310 (goto 329)) ;;to TAG_9;;at TAG_8
                                      (313 (pop)) ;;at TAG_0
                                      (314 (iconst_2)) ;;at TAG_1
                                      (315 (anewarray (class "java.lang.Object"))) 
                                      (318 (dup)) 
                                      (319 (iconst_0)) 
                                      (320 (aload_1)) 
                                      (321 (aastore)) 
                                      (322 (dup)) 
                                      (323 (iconst_1)) 
                                      (324 (aload_2)) 
                                      (325 (aastore)) 
                                      (326 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (329 (areturn)) ;;at TAG_9
                                      (endofcode 330))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$filter_methods$fn__5502-class-table*
  (make-static-class-decls 
   *clojure.core$filter_methods$fn__5502*))

(defconst *package-name-map* 
  ("clojure.core$filter_methods$fn__5502" . "clojure"))

