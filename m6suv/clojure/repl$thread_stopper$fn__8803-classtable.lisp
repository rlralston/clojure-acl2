; repl$thread_stopper$fn__8803-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:58 CDT 2014.
;

(defconst *clojure.repl$thread_stopper$fn__8803*
 (make-class-def
      '(class "clojure.repl$thread_stopper$fn__8803"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "stop")
                        (STRING  "java.lang.Error"))
            (fields
                        (field "thread" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 0) (max_locals . 0) (code_length . 1)
                                   (parsedcode
                                      (0 (return))
                                      (endofcode 1))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "thread" "clojure.repl$thread_stopper$fn__8803" (class "java.lang.Object"))))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 11) (max_locals . 2) (code_length . 35)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "thread" "clojure.repl$thread_stopper$fn__8803" (class "java.lang.Object"))))
                                      (4 (ldc 0))         ;;STRING:: "stop"
                                      (6 (iconst_1))
                                      (7 (anewarray (class "java.lang.Object")))
                                      (10 (dup))
                                      (11 (iconst_0))
                                      (12 (ldc 1))        ;;STRING:: "java.lang.Error"
                                      (14 (invokestatic
					(methodCP "forName" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.Class"))))
                                      (17 (iconst_1))
                                      (18 (anewarray (class "java.lang.Object")))
                                      (21 (dup))
                                      (22 (iconst_0))
                                      (23 (aload_1))
                                      (24 (aconst_null))
                                      (25 (astore_1))
                                      (26 (aastore))
                                      (27 (invokestatic
					(methodCP "invokeConstructor" "clojure.lang.Reflector" ((class "java.lang.Class") (array (class "java.lang.Object"))) (class "java.lang.Object"))))
                                      (30 (aastore))
                                      (31 (invokestatic
					(methodCP "invokeInstanceMethod" "clojure.lang.Reflector" ((class "java.lang.Object") (class "java.lang.String") (array (class "java.lang.Object"))) (class "java.lang.Object"))))
                                      (34 (areturn))
                                      (endofcode 35))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *repl$thread_stopper$fn__8803-class-table*
  (make-static-class-decls 
   *clojure.repl$thread_stopper$fn__8803*))

(defconst *package-name-map* 
  ("clojure.repl$thread_stopper$fn__8803" . "clojure"))

