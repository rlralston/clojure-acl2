; pprint$extract_param-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:55 CDT 2014.
;

(defconst *clojure.pprint$extract_param*
 (make-class-def
      '(class "clojure.pprint$extract_param"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "nth")
                        (LONG 2)
                        (STRING  "re-matcher")
                        (STRING  "clojure.pprint")
                        (STRING  "param-pattern")
                        (STRING  "re-find")
                        (STRING  "first")
                        (STRING  "re-groups")
                        (STRING  "subs")
                        (STRING  "+")
                        (STRING  "not")
                        (STRING  "=")
                        (STRING  "inc")
                        (STRING  "format-error")
                        (STRING  "Badly formed parameters in format directive"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 188)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "nth"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$extract_param" (class "clojure.lang.Var"))))
                                      (13 (lconst_0))
                                      (14 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (17 (putstatic (fieldCP "const__1" "clojure.pprint$extract_param" (class "java.lang.Object"))))
                                      (20 (lconst_1))
                                      (21 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (24 (putstatic (fieldCP "const__2" "clojure.pprint$extract_param" (class "java.lang.Object"))))
                                      (27 (ldc2_w 2))     ;; LONG:: "2"
                                      (30 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (33 (putstatic (fieldCP "const__3" "clojure.pprint$extract_param" (class "java.lang.Object"))))
                                      (36 (ldc 0))        ;;STRING:: "clojure.core"
                                      (38 (ldc 3))        ;;STRING:: "re-matcher"
                                      (40 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (43 (checkcast (class "clojure.lang.Var")))
                                      (46 (putstatic (fieldCP "const__4" "clojure.pprint$extract_param" (class "clojure.lang.Var"))))
                                      (49 (ldc 4))        ;;STRING:: "clojure.pprint"
                                      (51 (ldc 5))        ;;STRING:: "param-pattern"
                                      (53 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (56 (checkcast (class "clojure.lang.Var")))
                                      (59 (putstatic (fieldCP "const__5" "clojure.pprint$extract_param" (class "clojure.lang.Var"))))
                                      (62 (ldc 0))        ;;STRING:: "clojure.core"
                                      (64 (ldc 6))        ;;STRING:: "re-find"
                                      (66 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (69 (checkcast (class "clojure.lang.Var")))
                                      (72 (putstatic (fieldCP "const__6" "clojure.pprint$extract_param" (class "clojure.lang.Var"))))
                                      (75 (ldc 0))        ;;STRING:: "clojure.core"
                                      (77 (ldc 7))        ;;STRING:: "first"
                                      (79 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (82 (checkcast (class "clojure.lang.Var")))
                                      (85 (putstatic (fieldCP "const__7" "clojure.pprint$extract_param" (class "clojure.lang.Var"))))
                                      (88 (ldc 0))        ;;STRING:: "clojure.core"
                                      (90 (ldc 8))        ;;STRING:: "re-groups"
                                      (92 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (95 (checkcast (class "clojure.lang.Var")))
                                      (98 (putstatic (fieldCP "const__8" "clojure.pprint$extract_param" (class "clojure.lang.Var"))))
                                      (101 (ldc 0))       ;;STRING:: "clojure.core"
                                      (103 (ldc 9))       ;;STRING:: "subs"
                                      (105 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (108 (checkcast (class "clojure.lang.Var")))
                                      (111 (putstatic (fieldCP "const__9" "clojure.pprint$extract_param" (class "clojure.lang.Var"))))
                                      (114 (ldc 0))       ;;STRING:: "clojure.core"
                                      (116 (ldc 10))      ;;STRING:: "+"
                                      (118 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (121 (checkcast (class "clojure.lang.Var")))
                                      (124 (putstatic (fieldCP "const__10" "clojure.pprint$extract_param" (class "clojure.lang.Var"))))
                                      (127 (ldc 0))       ;;STRING:: "clojure.core"
                                      (129 (ldc 11))      ;;STRING:: "not"
                                      (131 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (134 (checkcast (class "clojure.lang.Var")))
                                      (137 (putstatic (fieldCP "const__11" "clojure.pprint$extract_param" (class "clojure.lang.Var"))))
                                      (140 (ldc 0))       ;;STRING:: "clojure.core"
                                      (142 (ldc 12))      ;;STRING:: "="
                                      (144 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (147 (checkcast (class "clojure.lang.Var")))
                                      (150 (putstatic (fieldCP "const__12" "clojure.pprint$extract_param" (class "clojure.lang.Var"))))
                                      (153 (bipush 44))
                                      (155 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (158 (putstatic (fieldCP "const__13" "clojure.pprint$extract_param" (class "java.lang.Object"))))
                                      (161 (ldc 0))       ;;STRING:: "clojure.core"
                                      (163 (ldc 13))      ;;STRING:: "inc"
                                      (165 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (168 (checkcast (class "clojure.lang.Var")))
                                      (171 (putstatic (fieldCP "const__14" "clojure.pprint$extract_param" (class "clojure.lang.Var"))))
                                      (174 (ldc 4))       ;;STRING:: "clojure.pprint"
                                      (176 (ldc 14))      ;;STRING:: "format-error"
                                      (178 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (181 (checkcast (class "clojure.lang.Var")))
                                      (184 (putstatic (fieldCP "const__15" "clojure.pprint$extract_param" (class "clojure.lang.Var"))))
                                      (187 (return))
                                      (endofcode 188))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 9) (max_locals . 11) (code_length . 462)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (aconst_null)) 
                                      (2 (astore_1)) 
                                      (3 (astore_2)) 
                                      (4 (aload_2)) 
                                      (5 (lconst_0)) 
                                      (6 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (9 (aconst_null)) 
                                      (10 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (13 (astore_3)) 
                                      (14 (aload_2)) 
                                      (15 (lconst_1)) 
                                      (16 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (19 (aconst_null)) 
                                      (20 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (23 (astore 4)) 
                                      (25 (aload_2)) 
                                      (26 (aconst_null)) 
                                      (27 (astore_2)) 
                                      (28 (ldc2_w 2)) ;; LONG:: "2"
                                      (31 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (34 (aconst_null)) 
                                      (35 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (38 (astore 5)) 
                                      (40 (getstatic (fieldCP "const__4" "clojure.pprint$extract_param" (class "clojure.lang.Var")))) 
                                      (43 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (46 (checkcast (class "clojure.lang.IFn"))) 
                                      (49 (getstatic (fieldCP "const__5" "clojure.pprint$extract_param" (class "clojure.lang.Var")))) 
                                      (52 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (55 (aload_3)) 
                                      (56 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (61 (astore 6)) 
                                      (63 (getstatic (fieldCP "const__6" "clojure.pprint$extract_param" (class "clojure.lang.Var")))) 
                                      (66 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (69 (checkcast (class "clojure.lang.IFn"))) 
                                      (72 (aload 6)) 
                                      (74 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (79 (astore 7)) 
                                      (81 (aload 7)) 
                                      (83 (aconst_null)) 
                                      (84 (astore 7)) 
                                      (86 (dup)) 
                                      (87 (ifnull 385)) ;;to TAG_0
                                      (90 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (93 (if_acmpeq 386))  ;;to TAG_1
                                      (96 (getstatic (fieldCP "const__7" "clojure.pprint$extract_param" (class "clojure.lang.Var")))) 
                                      (99 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (102 (checkcast (class "clojure.lang.IFn"))) 
                                      (105 (getstatic (fieldCP "const__8" "clojure.pprint$extract_param" (class "clojure.lang.Var")))) 
                                      (108 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (111 (checkcast (class "clojure.lang.IFn"))) 
                                      (114 (aload 6)) 
                                      (116 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (121 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (126 (astore 8)) 
                                      (128 (getstatic (fieldCP "const__9" "clojure.pprint$extract_param" (class "clojure.lang.Var")))) 
                                      (131 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (134 (checkcast (class "clojure.lang.IFn"))) 
                                      (137 (aload_3)) 
                                      (138 (aconst_null)) 
                                      (139 (astore_3)) 
                                      (140 (aload 6)) 
                                      (142 (checkcast (class "java.util.regex.Matcher"))) 
                                      (145 (invokevirtual (methodCP "end" "java.util.regex.Matcher" () int))) 
                                      (148 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (151 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (156 (astore 9)) 
                                      (158 (aload 4)) 
                                      (160 (aload 6)) 
                                      (162 (aconst_null)) 
                                      (163 (astore 6)) 
                                      (165 (checkcast (class "java.util.regex.Matcher"))) 
                                      (168 (invokevirtual (methodCP "end" "java.util.regex.Matcher" () int))) 
                                      (171 (i2l)) 
                                      (172 (invokestatic (methodCP "add" "clojure.lang.Numbers" ((class "java.lang.Object") long) (class "java.lang.Number")))) 
                                      (175 (astore 10)) 
                                      (177 (getstatic (fieldCP "const__11" "clojure.pprint$extract_param" (class "clojure.lang.Var")))) 
                                      (180 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (183 (checkcast (class "clojure.lang.IFn"))) 
                                      (186 (getstatic (fieldCP "const__13" "clojure.pprint$extract_param" (class "java.lang.Object")))) 
                                      (189 (aload 9)) 
                                      (191 (lconst_0)) 
                                      (192 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (195 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (198 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (201 (ifeq 210)) ;;to TAG_2
                                      (204 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (207 (goto 213)) ;;to TAG_3
                                      (210 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_2
                                      (213 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_3
                                      (218 (dup)) 
                                      (219 (ifnull 296)) ;;to TAG_4
                                      (222 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (225 (if_acmpeq 297)) ;;to TAG_5
                                      (228 (iconst_2)) 
                                      (229 (anewarray (class "java.lang.Object"))) 
                                      (232 (dup)) 
                                      (233 (iconst_0)) 
                                      (234 (iconst_2)) 
                                      (235 (anewarray (class "java.lang.Object"))) 
                                      (238 (dup)) 
                                      (239 (iconst_0)) 
                                      (240 (aload 8)) 
                                      (242 (aconst_null)) 
                                      (243 (astore 8)) 
                                      (245 (aastore)) 
                                      (246 (dup)) 
                                      (247 (iconst_1)) 
                                      (248 (aload 4)) 
                                      (250 (aconst_null)) 
                                      (251 (astore 4)) 
                                      (253 (aastore)) 
                                      (254 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (257 (aastore)) 
                                      (258 (dup)) 
                                      (259 (iconst_1)) 
                                      (260 (iconst_3)) 
                                      (261 (anewarray (class "java.lang.Object"))) 
                                      (264 (dup)) 
                                      (265 (iconst_0)) 
                                      (266 (aload 9)) 
                                      (268 (aconst_null)) 
                                      (269 (astore 9)) 
                                      (271 (aastore)) 
                                      (272 (dup)) 
                                      (273 (iconst_1)) 
                                      (274 (aload 10)) 
                                      (276 (aconst_null)) 
                                      (277 (astore 10)) 
                                      (279 (aastore)) 
                                      (280 (dup)) 
                                      (281 (iconst_2)) 
                                      (282 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (285 (aastore)) 
                                      (286 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (289 (aastore)) 
                                      (290 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (293 (goto 382)) ;;to TAG_6
                                      (296 (pop)) ;;at TAG_4
                                      (297 (iconst_2)) ;;at TAG_5
                                      (298 (anewarray (class "java.lang.Object"))) 
                                      (301 (dup)) 
                                      (302 (iconst_0)) 
                                      (303 (iconst_2)) 
                                      (304 (anewarray (class "java.lang.Object"))) 
                                      (307 (dup)) 
                                      (308 (iconst_0)) 
                                      (309 (aload 8)) 
                                      (311 (aconst_null)) 
                                      (312 (astore 8)) 
                                      (314 (aastore)) 
                                      (315 (dup)) 
                                      (316 (iconst_1)) 
                                      (317 (aload 4)) 
                                      (319 (aconst_null)) 
                                      (320 (astore 4)) 
                                      (322 (aastore)) 
                                      (323 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (326 (aastore)) 
                                      (327 (dup)) 
                                      (328 (iconst_1)) 
                                      (329 (iconst_3)) 
                                      (330 (anewarray (class "java.lang.Object"))) 
                                      (333 (dup)) 
                                      (334 (iconst_0)) 
                                      (335 (getstatic (fieldCP "const__9" "clojure.pprint$extract_param" (class "clojure.lang.Var")))) 
                                      (338 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (341 (checkcast (class "clojure.lang.IFn"))) 
                                      (344 (aload 9)) 
                                      (346 (aconst_null)) 
                                      (347 (astore 9)) 
                                      (349 (getstatic (fieldCP "const__2" "clojure.pprint$extract_param" (class "java.lang.Object")))) 
                                      (352 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (357 (aastore)) 
                                      (358 (dup)) 
                                      (359 (iconst_1)) 
                                      (360 (aload 10)) 
                                      (362 (aconst_null)) 
                                      (363 (astore 10)) 
                                      (365 (invokestatic (methodCP "inc" "clojure.lang.Numbers" ((class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (368 (aastore)) 
                                      (369 (dup)) 
                                      (370 (iconst_2)) 
                                      (371 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (374 (aastore)) 
                                      (375 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (378 (aastore)) 
                                      (379 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (382 (goto 461)) ;;to TAG_7;;at TAG_6
                                      (385 (pop)) ;;at TAG_0
                                      (386 (aload 5)) ;;at TAG_1
                                      (388 (aconst_null)) 
                                      (389 (astore 5)) 
                                      (391 (dup)) 
                                      (392 (ifnull 425)) ;;to TAG_8
                                      (395 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (398 (if_acmpeq 426)) ;;to TAG_9
                                      (401 (getstatic (fieldCP "const__15" "clojure.pprint$extract_param" (class "clojure.lang.Var")))) 
                                      (404 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (407 (checkcast (class "clojure.lang.IFn"))) 
                                      (410 (ldc 15)) ;;STRING:: "Badly formed parameters in format directive"
                                      (412 (aload 4)) 
                                      (414 (aconst_null)) 
                                      (415 (astore 4)) 
                                      (417 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (422 (goto 461)) ;;to TAG_7
                                      (425 (pop)) ;;at TAG_8
                                      (426 (iconst_2)) ;;at TAG_9
                                      (427 (anewarray (class "java.lang.Object"))) 
                                      (430 (dup)) 
                                      (431 (iconst_0)) 
                                      (432 (aconst_null)) 
                                      (433 (aastore)) 
                                      (434 (dup)) 
                                      (435 (iconst_1)) 
                                      (436 (iconst_2)) 
                                      (437 (anewarray (class "java.lang.Object"))) 
                                      (440 (dup)) 
                                      (441 (iconst_0)) 
                                      (442 (aload_3)) 
                                      (443 (aconst_null)) 
                                      (444 (astore_3)) 
                                      (445 (aastore)) 
                                      (446 (dup)) 
                                      (447 (iconst_1)) 
                                      (448 (aload 4)) 
                                      (450 (aconst_null)) 
                                      (451 (astore 4)) 
                                      (453 (aastore)) 
                                      (454 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (457 (aastore)) 
                                      (458 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (461 (areturn)) ;;at TAG_7
                                      (endofcode 462))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$extract_param-class-table*
  (make-static-class-decls 
   *clojure.pprint$extract_param*))

(defconst *package-name-map* 
  ("clojure.pprint$extract_param" . "clojure"))

