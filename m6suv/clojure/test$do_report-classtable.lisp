; test$do_report-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:58 CDT 2014.
;

(defconst *clojure.test$do_report*
 (make-class-def
      '(class "clojure.test$do_report"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.test")
                        (STRING  "report")
                        (STRING  "type")
                        (STRING  "error")
                        (STRING  "clojure.core")
                        (STRING  "merge")
                        (STRING  "file-and-line")
                        (STRING  "actual")
                        (STRING  "fail"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__1__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__1__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 142)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.test"
                                      (2 (ldc 1))         ;;STRING:: "report"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.test$do_report" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "type"
                                      (16 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (19 (checkcast (class "clojure.lang.Keyword")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.test$do_report" (class "clojure.lang.Keyword"))))
                                      (25 (aconst_null))
                                      (26 (ldc 3))        ;;STRING:: "error"
                                      (28 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (31 (checkcast (class "clojure.lang.Keyword")))
                                      (34 (putstatic (fieldCP "const__2" "clojure.test$do_report" (class "clojure.lang.Keyword"))))
                                      (37 (ldc 4))        ;;STRING:: "clojure.core"
                                      (39 (ldc 5))        ;;STRING:: "merge"
                                      (41 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (44 (checkcast (class "clojure.lang.Var")))
                                      (47 (putstatic (fieldCP "const__3" "clojure.test$do_report" (class "clojure.lang.Var"))))
                                      (50 (ldc 0))        ;;STRING:: "clojure.test"
                                      (52 (ldc 6))        ;;STRING:: "file-and-line"
                                      (54 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (57 (checkcast (class "clojure.lang.Var")))
                                      (60 (putstatic (fieldCP "const__4" "clojure.test$do_report" (class "clojure.lang.Var"))))
                                      (63 (aconst_null))
                                      (64 (ldc 7))        ;;STRING:: "actual"
                                      (66 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (69 (checkcast (class "clojure.lang.Keyword")))
                                      (72 (putstatic (fieldCP "const__5" "clojure.test$do_report" (class "clojure.lang.Keyword"))))
                                      (75 (lconst_0))
                                      (76 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (79 (putstatic (fieldCP "const__6" "clojure.test$do_report" (class "java.lang.Object"))))
                                      (82 (aconst_null))
                                      (83 (ldc 8))        ;;STRING:: "fail"
                                      (85 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (88 (checkcast (class "clojure.lang.Keyword")))
                                      (91 (putstatic (fieldCP "const__7" "clojure.test$do_report" (class "clojure.lang.Keyword"))))
                                      (94 (lconst_1))
                                      (95 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (98 (putstatic (fieldCP "const__8" "clojure.test$do_report" (class "java.lang.Object"))))
                                      (101 (new (class "clojure.lang.KeywordLookupSite")))
                                      (104 (dup))
                                      (105 (aconst_null))
                                      (106 (ldc 2))       ;;STRING:: "type"
                                      (108 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (111 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (114 (dup))
                                      (115 (putstatic (fieldCP "__site__0__" "clojure.test$do_report" (class "clojure.lang.KeywordLookupSite"))))
                                      (118 (putstatic (fieldCP "__thunk__0__" "clojure.test$do_report" (class "clojure.lang.ILookupThunk"))))
                                      (121 (new (class "clojure.lang.KeywordLookupSite")))
                                      (124 (dup))
                                      (125 (aconst_null))
                                      (126 (ldc 7))       ;;STRING:: "actual"
                                      (128 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (131 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (134 (dup))
                                      (135 (putstatic (fieldCP "__site__1__" "clojure.test$do_report" (class "clojure.lang.KeywordLookupSite"))))
                                      (138 (putstatic (fieldCP "__thunk__1__" "clojure.test$do_report" (class "clojure.lang.ILookupThunk"))))
                                      (141 (return))
                                      (endofcode 142))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 3) (code_length . 225)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.test$do_report" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (getstatic (fieldCP "__thunk__0__" "clojure.test$do_report" (class "clojure.lang.ILookupThunk")))) 
                                      (12 (dup)) 
                                      (13 (aload_1)) 
                                      (14 (dup_x2)) 
                                      (15 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (20 (dup_x2)) 
                                      (21 (if_acmpeq 28)) ;;to TAG_0
                                      (24 (pop)) 
                                      (25 (goto 50)) ;;to TAG_1
                                      (28 (swap)) ;;at TAG_0
                                      (29 (pop)) 
                                      (30 (dup)) 
                                      (31 (getstatic (fieldCP "__site__0__" "clojure.test$do_report" (class "clojure.lang.KeywordLookupSite")))) 
                                      (34 (swap)) 
                                      (35 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (40 (dup)) 
                                      (41 (putstatic (fieldCP "__thunk__0__" "clojure.test$do_report" (class "clojure.lang.ILookupThunk")))) 
                                      (44 (swap)) 
                                      (45 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (50 (astore_2)) ;;at TAG_1
                                      (51 (aload_2)) 
                                      (52 (invokestatic (methodCP "hash" "clojure.lang.Util" ((class "java.lang.Object")) int))) 
                                      (55 (iconst_0)) 
                                      (56 (ishr)) 
                                      (57 (iconst_1)) 
                                      (58 (iand)) 
                                      (59 (tableswitch (tableswitchinfo 216 (0 . 1) (80 165))))  ;;to TAG_2;;to TAG_3;;to TAG_4
                                      (80 (aload_2)) ;;at TAG_3
                                      (81 (getstatic (fieldCP "const__2" "clojure.test$do_report" (class "clojure.lang.Keyword")))) 
                                      (84 (if_acmpne 216))  ;;to TAG_2
                                      (87 (getstatic (fieldCP "const__3" "clojure.test$do_report" (class "clojure.lang.Var")))) 
                                      (90 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (93 (checkcast (class "clojure.lang.IFn"))) 
                                      (96 (getstatic (fieldCP "const__4" "clojure.test$do_report" (class "clojure.lang.Var")))) 
                                      (99 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (102 (checkcast (class "clojure.lang.IFn"))) 
                                      (105 (getstatic (fieldCP "__thunk__1__" "clojure.test$do_report" (class "clojure.lang.ILookupThunk")))) 
                                      (108 (dup)) 
                                      (109 (aload_1)) 
                                      (110 (dup_x2)) 
                                      (111 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (116 (dup_x2)) 
                                      (117 (if_acmpeq 124)) ;;to TAG_5
                                      (120 (pop)) 
                                      (121 (goto 146)) ;;to TAG_6
                                      (124 (swap)) ;;at TAG_5
                                      (125 (pop)) 
                                      (126 (dup)) 
                                      (127 (getstatic (fieldCP "__site__1__" "clojure.test$do_report" (class "clojure.lang.KeywordLookupSite")))) 
                                      (130 (swap)) 
                                      (131 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (136 (dup)) 
                                      (137 (putstatic (fieldCP "__thunk__1__" "clojure.test$do_report" (class "clojure.lang.ILookupThunk")))) 
                                      (140 (swap)) 
                                      (141 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (146 (getstatic (fieldCP "const__6" "clojure.test$do_report" (class "java.lang.Object")))) ;;at TAG_6
                                      (149 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (154 (aload_1)) 
                                      (155 (aconst_null)) 
                                      (156 (astore_1)) 
                                      (157 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (162 (goto 219)) ;;to TAG_7
                                      (165 (aload_2)) ;;at TAG_4
                                      (166 (getstatic (fieldCP "const__7" "clojure.test$do_report" (class "clojure.lang.Keyword")))) 
                                      (169 (if_acmpne 216))  ;;to TAG_2
                                      (172 (getstatic (fieldCP "const__3" "clojure.test$do_report" (class "clojure.lang.Var")))) 
                                      (175 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (178 (checkcast (class "clojure.lang.IFn"))) 
                                      (181 (getstatic (fieldCP "const__4" "clojure.test$do_report" (class "clojure.lang.Var")))) 
                                      (184 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (187 (checkcast (class "clojure.lang.IFn"))) 
                                      (190 (new (class "java.lang.Throwable"))) 
                                      (193 (dup)) 
                                      (194 (invokespecial (methodCP "<init>" "java.lang.Throwable" () void))) 
                                      (197 (getstatic (fieldCP "const__8" "clojure.test$do_report" (class "java.lang.Object")))) 
                                      (200 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (205 (aload_1)) 
                                      (206 (aconst_null)) 
                                      (207 (astore_1)) 
                                      (208 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (213 (goto 219)) ;;to TAG_7
                                      (216 (aload_1)) ;;at TAG_2
                                      (217 (aconst_null)) 
                                      (218 (astore_1)) 
                                      (219 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_7
                                      (224 (areturn)) 
                                      (endofcode 225))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 39)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 38 (0 . 1) (24 31))))  ;;to TAG_2;;to TAG_0;;to TAG_1
                                      (24 (aload_2)) ;;at TAG_1
                                      (25 (putstatic (fieldCP "__thunk__0__" "clojure.test$do_report" (class "clojure.lang.ILookupThunk")))) 
                                      (28 (goto 38)) ;;to TAG_0
                                      (31 (aload_2)) ;;at TAG_2
                                      (32 (putstatic (fieldCP "__thunk__1__" "clojure.test$do_report" (class "clojure.lang.ILookupThunk")))) 
                                      (35 (goto 38)) ;;to TAG_0
                                      (38 (return)) ;;at TAG_0
                                      (endofcode 39))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *test$do_report-class-table*
  (make-static-class-decls 
   *clojure.test$do_report*))

(defconst *package-name-map* 
  ("clojure.test$do_report" . "clojure"))

