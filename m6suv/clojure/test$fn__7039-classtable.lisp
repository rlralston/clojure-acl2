; test$fn__7039-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:58 CDT 2014.
;

(defconst *clojure.test$fn__7039*
 (make-class-def
      '(class "clojure.test$fn__7039"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.test")
                        (STRING  "*load-tests*")
                        (STRING  "file")
                        (STRING  "column")
                        (STRING  "line")
                        (STRING  "dynamic")
                        (STRING  "added")
                        (STRING  "doc")
                        (STRING  "1.1")
                        (STRING  "True by default.  If set to false, no test functions will\n   be created by deftest, set-test, or with-test.  Use this to omit\n   tests when compiling or loading production code.")
                        (STRING  "clojure/test.clj"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 0) (code_length . 324)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.test"
                                      (2 (ldc 1))         ;;STRING:: "*load-tests*"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.test$fn__7039" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "file"
                                      (16 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (19 (checkcast (class "clojure.lang.Keyword")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.test$fn__7039" (class "clojure.lang.Keyword"))))
                                      (25 (aconst_null))
                                      (26 (ldc 3))        ;;STRING:: "column"
                                      (28 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (31 (checkcast (class "clojure.lang.Keyword")))
                                      (34 (putstatic (fieldCP "const__2" "clojure.test$fn__7039" (class "clojure.lang.Keyword"))))
                                      (37 (iconst_1))
                                      (38 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (41 (putstatic (fieldCP "const__3" "clojure.test$fn__7039" (class "java.lang.Object"))))
                                      (44 (aconst_null))
                                      (45 (ldc 4))        ;;STRING:: "line"
                                      (47 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (50 (checkcast (class "clojure.lang.Keyword")))
                                      (53 (putstatic (fieldCP "const__4" "clojure.test$fn__7039" (class "clojure.lang.Keyword"))))
                                      (56 (sipush 244))
                                      (59 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (62 (putstatic (fieldCP "const__5" "clojure.test$fn__7039" (class "java.lang.Object"))))
                                      (65 (aconst_null))
                                      (66 (ldc 5))        ;;STRING:: "dynamic"
                                      (68 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (71 (checkcast (class "clojure.lang.Keyword")))
                                      (74 (putstatic (fieldCP "const__6" "clojure.test$fn__7039" (class "clojure.lang.Keyword"))))
                                      (77 (aconst_null))
                                      (78 (ldc 6))        ;;STRING:: "added"
                                      (80 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (83 (checkcast (class "clojure.lang.Keyword")))
                                      (86 (putstatic (fieldCP "const__7" "clojure.test$fn__7039" (class "clojure.lang.Keyword"))))
                                      (89 (aconst_null))
                                      (90 (ldc 7))        ;;STRING:: "doc"
                                      (92 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (95 (checkcast (class "clojure.lang.Keyword")))
                                      (98 (putstatic (fieldCP "const__8" "clojure.test$fn__7039" (class "clojure.lang.Keyword"))))
                                      (101 (bipush 12))
                                      (103 (anewarray (class "java.lang.Object")))
                                      (106 (dup))
                                      (107 (iconst_0))
                                      (108 (aconst_null))
                                      (109 (ldc 5))       ;;STRING:: "dynamic"
                                      (111 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (114 (aastore))
                                      (115 (dup))
                                      (116 (iconst_1))
                                      (117 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (120 (aastore))
                                      (121 (dup))
                                      (122 (iconst_2))
                                      (123 (aconst_null))
                                      (124 (ldc 3))       ;;STRING:: "column"
                                      (126 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (129 (aastore))
                                      (130 (dup))
                                      (131 (iconst_3))
                                      (132 (iconst_1))
                                      (133 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (136 (aastore))
                                      (137 (dup))
                                      (138 (iconst_4))
                                      (139 (aconst_null))
                                      (140 (ldc 6))       ;;STRING:: "added"
                                      (142 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (145 (aastore))
                                      (146 (dup))
                                      (147 (iconst_5))
                                      (148 (ldc 8))       ;;STRING:: "1.1"
                                      (150 (aastore))
                                      (151 (dup))
                                      (152 (bipush 6))
                                      (154 (aconst_null))
                                      (155 (ldc 7))       ;;STRING:: "doc"
                                      (157 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (160 (aastore))
                                      (161 (dup))
                                      (162 (bipush 7))
                                      (164 (ldc 9))       ;;STRING:: "True by default.  If set to false, no test functions will\n   be created by deftest, set-test, or with-test.  Use this to omit\n   tests when compiling or loading production code."
                                      (166 (aastore))
                                      (167 (dup))
                                      (168 (bipush 8))
                                      (170 (aconst_null))
                                      (171 (ldc 4))       ;;STRING:: "line"
                                      (173 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (176 (aastore))
                                      (177 (dup))
                                      (178 (bipush 9))
                                      (180 (sipush 244))
                                      (183 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (186 (aastore))
                                      (187 (dup))
                                      (188 (bipush 10))
                                      (190 (aconst_null))
                                      (191 (ldc 2))       ;;STRING:: "file"
                                      (193 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (196 (aastore))
                                      (197 (dup))
                                      (198 (bipush 11))
                                      (200 (ldc 10))      ;;STRING:: "clojure/test.clj"
                                      (202 (aastore))
                                      (203 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (206 (checkcast (class "clojure.lang.AFn")))
                                      (209 (putstatic (fieldCP "const__9" "clojure.test$fn__7039" (class "clojure.lang.AFn"))))
                                      (212 (bipush 12))
                                      (214 (anewarray (class "java.lang.Object")))
                                      (217 (dup))
                                      (218 (iconst_0))
                                      (219 (aconst_null))
                                      (220 (ldc 5))       ;;STRING:: "dynamic"
                                      (222 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (225 (aastore))
                                      (226 (dup))
                                      (227 (iconst_1))
                                      (228 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (231 (aastore))
                                      (232 (dup))
                                      (233 (iconst_2))
                                      (234 (aconst_null))
                                      (235 (ldc 3))       ;;STRING:: "column"
                                      (237 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (240 (aastore))
                                      (241 (dup))
                                      (242 (iconst_3))
                                      (243 (iconst_1))
                                      (244 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (247 (aastore))
                                      (248 (dup))
                                      (249 (iconst_4))
                                      (250 (aconst_null))
                                      (251 (ldc 6))       ;;STRING:: "added"
                                      (253 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (256 (aastore))
                                      (257 (dup))
                                      (258 (iconst_5))
                                      (259 (ldc 8))       ;;STRING:: "1.1"
                                      (261 (aastore))
                                      (262 (dup))
                                      (263 (bipush 6))
                                      (265 (aconst_null))
                                      (266 (ldc 7))       ;;STRING:: "doc"
                                      (268 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (271 (aastore))
                                      (272 (dup))
                                      (273 (bipush 7))
                                      (275 (ldc 9))       ;;STRING:: "True by default.  If set to false, no test functions will\n   be created by deftest, set-test, or with-test.  Use this to omit\n   tests when compiling or loading production code."
                                      (277 (aastore))
                                      (278 (dup))
                                      (279 (bipush 8))
                                      (281 (aconst_null))
                                      (282 (ldc 4))       ;;STRING:: "line"
                                      (284 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (287 (aastore))
                                      (288 (dup))
                                      (289 (bipush 9))
                                      (291 (sipush 244))
                                      (294 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (297 (aastore))
                                      (298 (dup))
                                      (299 (bipush 10))
                                      (301 (aconst_null))
                                      (302 (ldc 2))       ;;STRING:: "file"
                                      (304 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (307 (aastore))
                                      (308 (dup))
                                      (309 (bipush 11))
                                      (311 (ldc 10))      ;;STRING:: "clojure/test.clj"
                                      (313 (aastore))
                                      (314 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (317 (checkcast (class "clojure.lang.AFn")))
                                      (320 (putstatic (fieldCP "const__10" "clojure.test$fn__7039" (class "clojure.lang.AFn"))))
                                      (323 (return))
                                      (endofcode 324))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 60)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.test$fn__7039" (class "clojure.lang.Var")))) 
                                      (3 (iconst_1)) 
                                      (4 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" (boolean) (class "clojure.lang.Var")))) 
                                      (7 (dup)) 
                                      (8 (getstatic (fieldCP "const__9" "clojure.test$fn__7039" (class "clojure.lang.AFn")))) 
                                      (11 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (14 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (17 (astore_1)) 
                                      (18 (aload_1)) 
                                      (19 (aconst_null)) 
                                      (20 (astore_1)) 
                                      (21 (checkcast (class "clojure.lang.Var"))) 
                                      (24 (invokevirtual (methodCP "hasRoot" "clojure.lang.Var" () boolean))) 
                                      (27 (ifeq 35))  ;;to TAG_0
                                      (30 (aconst_null)) 
                                      (31 (goto 59)) ;;to TAG_1
                                      (34 (pop)) 
                                      (35 (getstatic (fieldCP "const__0" "clojure.test$fn__7039" (class "clojure.lang.Var")))) ;;at TAG_0
                                      (38 (iconst_1)) 
                                      (39 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" (boolean) (class "clojure.lang.Var")))) 
                                      (42 (dup)) 
                                      (43 (getstatic (fieldCP "const__10" "clojure.test$fn__7039" (class "clojure.lang.AFn")))) 
                                      (46 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (49 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (52 (dup)) 
                                      (53 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (56 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (59 (areturn)) ;;at TAG_1
                                      (endofcode 60))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *test$fn__7039-class-table*
  (make-static-class-decls 
   *clojure.test$fn__7039*))

(defconst *package-name-map* 
  ("clojure.test$fn__7039" . "clojure"))

