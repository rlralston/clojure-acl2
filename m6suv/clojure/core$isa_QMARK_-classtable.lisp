; core$isa_QMARK_-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:44 CDT 2014.
;

(defconst *clojure.core$isa_QMARK_*
 (make-class-def
      '(class "clojure.core$isa_QMARK_"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "isa?")
                        (STRING  "global-hierarchy")
                        (STRING  "=")
                        (STRING  "class?")
                        (STRING  "contains?")
                        (STRING  "ancestors")
                        (STRING  "some")
                        (STRING  "supers")
                        (STRING  "vector?")
                        (STRING  "count")
                        (STRING  "not")
                        (STRING  "inc"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 183)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "isa?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$isa_QMARK_" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "global-hierarchy"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$isa_QMARK_" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "="
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$isa_QMARK_" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "class?"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.core$isa_QMARK_" (class "clojure.lang.Var"))))
                                      (52 (ldc 0))        ;;STRING:: "clojure.core"
                                      (54 (ldc 5))        ;;STRING:: "contains?"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.core$isa_QMARK_" (class "clojure.lang.Var"))))
                                      (65 (aconst_null))
                                      (66 (ldc 6))        ;;STRING:: "ancestors"
                                      (68 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (71 (checkcast (class "clojure.lang.Keyword")))
                                      (74 (putstatic (fieldCP "const__5" "clojure.core$isa_QMARK_" (class "clojure.lang.Keyword"))))
                                      (77 (ldc 0))        ;;STRING:: "clojure.core"
                                      (79 (ldc 7))        ;;STRING:: "some"
                                      (81 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (84 (checkcast (class "clojure.lang.Var")))
                                      (87 (putstatic (fieldCP "const__6" "clojure.core$isa_QMARK_" (class "clojure.lang.Var"))))
                                      (90 (ldc 0))        ;;STRING:: "clojure.core"
                                      (92 (ldc 8))        ;;STRING:: "supers"
                                      (94 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (97 (checkcast (class "clojure.lang.Var")))
                                      (100 (putstatic (fieldCP "const__7" "clojure.core$isa_QMARK_" (class "clojure.lang.Var"))))
                                      (103 (ldc 0))       ;;STRING:: "clojure.core"
                                      (105 (ldc 9))       ;;STRING:: "vector?"
                                      (107 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (110 (checkcast (class "clojure.lang.Var")))
                                      (113 (putstatic (fieldCP "const__8" "clojure.core$isa_QMARK_" (class "clojure.lang.Var"))))
                                      (116 (ldc 0))       ;;STRING:: "clojure.core"
                                      (118 (ldc 10))      ;;STRING:: "count"
                                      (120 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (123 (checkcast (class "clojure.lang.Var")))
                                      (126 (putstatic (fieldCP "const__9" "clojure.core$isa_QMARK_" (class "clojure.lang.Var"))))
                                      (129 (lconst_0))
                                      (130 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (133 (putstatic (fieldCP "const__10" "clojure.core$isa_QMARK_" (class "java.lang.Object"))))
                                      (136 (ldc 0))       ;;STRING:: "clojure.core"
                                      (138 (ldc 11))      ;;STRING:: "not"
                                      (140 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (143 (checkcast (class "clojure.lang.Var")))
                                      (146 (putstatic (fieldCP "const__11" "clojure.core$isa_QMARK_" (class "clojure.lang.Var"))))
                                      (149 (ldc 0))       ;;STRING:: "clojure.core"
                                      (151 (ldc 12))      ;;STRING:: "inc"
                                      (153 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (156 (checkcast (class "clojure.lang.Var")))
                                      (159 (putstatic (fieldCP "const__12" "clojure.core$isa_QMARK_" (class "clojure.lang.Var"))))
                                      (162 (new (class "clojure.lang.KeywordLookupSite")))
                                      (165 (dup))
                                      (166 (aconst_null))
                                      (167 (ldc 6))       ;;STRING:: "ancestors"
                                      (169 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (172 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (175 (dup))
                                      (176 (putstatic (fieldCP "__site__0__" "clojure.core$isa_QMARK_" (class "clojure.lang.KeywordLookupSite"))))
                                      (179 (putstatic (fieldCP "__thunk__0__" "clojure.core$isa_QMARK_" (class "clojure.lang.ILookupThunk"))))
                                      (182 (return))
                                      (endofcode 183))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 15) (code_length . 594)
                                   (parsedcode
                                      (0 (aload_2)) 
                                      (1 (aload_3)) 
                                      (2 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (5 (istore 4)) 
                                      (7 (iload 4)) 
                                      (9 (ifeq 30))  ;;to TAG_0
                                      (12 (iload 4)) 
                                      (14 (ifeq 23)) ;;to TAG_1
                                      (17 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (20 (goto 26)) ;;to TAG_2
                                      (23 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_1
                                      (26 (goto 593)) ;;to TAG_3;;at TAG_2
                                      (29 (pop)) 
                                      (30 (getstatic (fieldCP "const__3" "clojure.core$isa_QMARK_" (class "clojure.lang.Var")))) ;;at TAG_0
                                      (33 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (36 (checkcast (class "clojure.lang.IFn"))) 
                                      (39 (aload_3)) 
                                      (40 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (45 (astore 5)) 
                                      (47 (aload 5)) 
                                      (49 (dup)) 
                                      (50 (ifnull 123)) ;;to TAG_4
                                      (53 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (56 (if_acmpeq 124)) ;;to TAG_5
                                      (59 (getstatic (fieldCP "const__3" "clojure.core$isa_QMARK_" (class "clojure.lang.Var")))) 
                                      (62 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (65 (checkcast (class "clojure.lang.IFn"))) 
                                      (68 (aload_2)) 
                                      (69 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (74 (astore 6)) 
                                      (76 (aload 6)) 
                                      (78 (dup)) 
                                      (79 (ifnull 114)) ;;to TAG_6
                                      (82 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (85 (if_acmpeq 115)) ;;to TAG_7
                                      (88 (aload_3)) 
                                      (89 (checkcast (class "java.lang.Class"))) 
                                      (92 (aload_2)) 
                                      (93 (checkcast (class "java.lang.Class"))) 
                                      (96 (invokevirtual (methodCP "isAssignableFrom" "java.lang.Class" ((class "java.lang.Class")) boolean))) 
                                      (99 (ifeq 108)) ;;to TAG_8
                                      (102 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (105 (goto 111)) ;;to TAG_9
                                      (108 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_8
                                      (111 (goto 120)) ;;to TAG_10;;at TAG_9
                                      (114 (pop)) ;;at TAG_6
                                      (115 (aload 6)) ;;at TAG_7
                                      (117 (aconst_null)) 
                                      (118 (astore 6)) 
                                      (120 (goto 129)) ;;to TAG_11;;at TAG_10
                                      (123 (pop)) ;;at TAG_4
                                      (124 (aload 5)) ;;at TAG_5
                                      (126 (aconst_null)) 
                                      (127 (astore 5)) 
                                      (129 (astore 5)) ;;at TAG_11
                                      (131 (aload 5)) 
                                      (133 (dup)) 
                                      (134 (ifnull 151)) ;;to TAG_12
                                      (137 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (140 (if_acmpeq 152)) ;;to TAG_13
                                      (143 (aload 5)) 
                                      (145 (aconst_null)) 
                                      (146 (astore 5)) 
                                      (148 (goto 593)) ;;to TAG_3
                                      (151 (pop)) ;;at TAG_12
                                      (152 (getstatic (fieldCP "const__4" "clojure.core$isa_QMARK_" (class "clojure.lang.Var")))) ;;at TAG_13
                                      (155 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (158 (checkcast (class "clojure.lang.IFn"))) 
                                      (161 (getstatic (fieldCP "__thunk__0__" "clojure.core$isa_QMARK_" (class "clojure.lang.ILookupThunk")))) 
                                      (164 (dup)) 
                                      (165 (aload_1)) 
                                      (166 (dup_x2)) 
                                      (167 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (172 (dup_x2)) 
                                      (173 (if_acmpeq 180)) ;;to TAG_14
                                      (176 (pop)) 
                                      (177 (goto 202)) ;;to TAG_15
                                      (180 (swap)) ;;at TAG_14
                                      (181 (pop)) 
                                      (182 (dup)) 
                                      (183 (getstatic (fieldCP "__site__0__" "clojure.core$isa_QMARK_" (class "clojure.lang.KeywordLookupSite")))) 
                                      (186 (swap)) 
                                      (187 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (192 (dup)) 
                                      (193 (putstatic (fieldCP "__thunk__0__" "clojure.core$isa_QMARK_" (class "clojure.lang.ILookupThunk")))) 
                                      (196 (swap)) 
                                      (197 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (202 (checkcast (class "clojure.lang.IFn"))) ;;at TAG_15
                                      (205 (aload_2)) 
                                      (206 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (211 (aload_3)) 
                                      (212 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (217 (astore 6)) 
                                      (219 (aload 6)) 
                                      (221 (dup)) 
                                      (222 (ifnull 239)) ;;to TAG_16
                                      (225 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (228 (if_acmpeq 240)) ;;to TAG_17
                                      (231 (aload 6)) 
                                      (233 (aconst_null)) 
                                      (234 (astore 6)) 
                                      (236 (goto 593)) ;;to TAG_3
                                      (239 (pop)) ;;at TAG_16
                                      (240 (getstatic (fieldCP "const__3" "clojure.core$isa_QMARK_" (class "clojure.lang.Var")))) ;;at TAG_17
                                      (243 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (246 (checkcast (class "clojure.lang.IFn"))) 
                                      (249 (aload_2)) 
                                      (250 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (255 (astore 7)) 
                                      (257 (aload 7)) 
                                      (259 (dup)) 
                                      (260 (ifnull 310)) ;;to TAG_18
                                      (263 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (266 (if_acmpeq 311)) ;;to TAG_19
                                      (269 (getstatic (fieldCP "const__6" "clojure.core$isa_QMARK_" (class "clojure.lang.Var")))) 
                                      (272 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (275 (checkcast (class "clojure.lang.IFn"))) 
                                      (278 (new (class "clojure.core$isa_QMARK_$fn__4849"))) 
                                      (281 (dup)) 
                                      (282 (aload_1)) 
                                      (283 (aload_3)) 
                                      (284 (invokespecial (methodCP "<init>" "clojure.core$isa_QMARK_$fn__4849" ((class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (287 (getstatic (fieldCP "const__7" "clojure.core$isa_QMARK_" (class "clojure.lang.Var")))) 
                                      (290 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (293 (checkcast (class "clojure.lang.IFn"))) 
                                      (296 (aload_2)) 
                                      (297 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (302 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (307 (goto 316)) ;;to TAG_20
                                      (310 (pop)) ;;at TAG_18
                                      (311 (aload 7)) ;;at TAG_19
                                      (313 (aconst_null)) 
                                      (314 (astore 7)) 
                                      (316 (astore 7)) ;;at TAG_20
                                      (318 (aload 7)) 
                                      (320 (dup)) 
                                      (321 (ifnull 338)) ;;to TAG_21
                                      (324 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (327 (if_acmpeq 339)) ;;to TAG_22
                                      (330 (aload 7)) 
                                      (332 (aconst_null)) 
                                      (333 (astore 7)) 
                                      (335 (goto 593)) ;;to TAG_3
                                      (338 (pop)) ;;at TAG_21
                                      (339 (getstatic (fieldCP "const__8" "clojure.core$isa_QMARK_" (class "clojure.lang.Var")))) ;;at TAG_22
                                      (342 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (345 (checkcast (class "clojure.lang.IFn"))) 
                                      (348 (aload_3)) 
                                      (349 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (354 (astore 8)) 
                                      (356 (aload 8)) 
                                      (358 (dup)) 
                                      (359 (ifnull 587)) ;;to TAG_23
                                      (362 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (365 (if_acmpeq 588)) ;;to TAG_24
                                      (368 (getstatic (fieldCP "const__8" "clojure.core$isa_QMARK_" (class "clojure.lang.Var")))) 
                                      (371 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (374 (checkcast (class "clojure.lang.IFn"))) 
                                      (377 (aload_2)) 
                                      (378 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (383 (astore 9)) 
                                      (385 (aload 9)) 
                                      (387 (dup)) 
                                      (388 (ifnull 578)) ;;to TAG_25
                                      (391 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (394 (if_acmpeq 579)) ;;to TAG_26
                                      (397 (aload_3)) 
                                      (398 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (401 (i2l)) 
                                      (402 (aload_2)) 
                                      (403 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (406 (i2l)) 
                                      (407 (invokestatic (methodCP "equiv" "clojure.lang.Util" (long long) boolean))) 
                                      (410 (istore 10)) 
                                      (412 (iload 10)) 
                                      (414 (ifeq 561)) ;;to TAG_27
                                      (417 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (420 (astore 11)) 
                                      (422 (lconst_0)) 
                                      (423 (lstore 12)) 
                                      (425 (getstatic (fieldCP "const__11" "clojure.core$isa_QMARK_" (class "clojure.lang.Var")))) ;;at TAG_35
                                      (428 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (431 (checkcast (class "clojure.lang.IFn"))) 
                                      (434 (aload 11)) 
                                      (436 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (441 (astore 14)) 
                                      (443 (aload 14)) 
                                      (445 (dup)) 
                                      (446 (ifnull 463)) ;;to TAG_28
                                      (449 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (452 (if_acmpeq 464)) ;;to TAG_29
                                      (455 (aload 14)) 
                                      (457 (aconst_null)) 
                                      (458 (astore 14)) 
                                      (460 (goto 486)) ;;to TAG_30
                                      (463 (pop)) ;;at TAG_28
                                      (464 (lload 12)) ;;at TAG_29
                                      (466 (aload_3)) 
                                      (467 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (470 (i2l)) 
                                      (471 (invokestatic (methodCP "equiv" "clojure.lang.Util" (long long) boolean))) 
                                      (474 (ifeq 483)) ;;to TAG_31
                                      (477 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (480 (goto 486)) ;;to TAG_30
                                      (483 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_31
                                      (486 (dup)) ;;at TAG_30
                                      (487 (ifnull 501)) ;;to TAG_32
                                      (490 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (493 (if_acmpeq 502)) ;;to TAG_33
                                      (496 (aload 11)) 
                                      (498 (goto 557)) ;;to TAG_34
                                      (501 (pop)) ;;at TAG_32
                                      (502 (getstatic (fieldCP "const__0" "clojure.core$isa_QMARK_" (class "clojure.lang.Var")))) ;;at TAG_33
                                      (505 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (508 (checkcast (class "clojure.lang.IFn"))) 
                                      (511 (aload_1)) 
                                      (512 (aload_2)) 
                                      (513 (checkcast (class "clojure.lang.IFn"))) 
                                      (516 (lload 12)) 
                                      (518 (invokestatic (methodCP "num" "clojure.lang.Numbers" (long) (class "java.lang.Number")))) 
                                      (521 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (526 (aload_3)) 
                                      (527 (checkcast (class "clojure.lang.IFn"))) 
                                      (530 (lload 12)) 
                                      (532 (invokestatic (methodCP "num" "clojure.lang.Numbers" (long) (class "java.lang.Number")))) 
                                      (535 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (540 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (545 (lload 12)) 
                                      (547 (invokestatic (methodCP "inc" "clojure.lang.Numbers" (long) long))) 
                                      (550 (lstore 12)) 
                                      (552 (astore 11)) 
                                      (554 (goto 425)) ;;to TAG_35
                                      (557 (goto 575)) ;;to TAG_36;;at TAG_34
                                      (560 (pop)) 
                                      (561 (iload 10)) ;;at TAG_27
                                      (563 (ifeq 572)) ;;to TAG_37
                                      (566 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (569 (goto 575)) ;;to TAG_36
                                      (572 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_37
                                      (575 (goto 584)) ;;to TAG_38;;at TAG_36
                                      (578 (pop)) ;;at TAG_25
                                      (579 (aload 9)) ;;at TAG_26
                                      (581 (aconst_null)) 
                                      (582 (astore 9)) 
                                      (584 (goto 593)) ;;to TAG_3;;at TAG_38
                                      (587 (pop)) ;;at TAG_23
                                      (588 (aload 8)) ;;at TAG_24
                                      (590 (aconst_null)) 
                                      (591 (astore 8)) 
                                      (593 (areturn)) ;;at TAG_3
                                      (endofcode 594))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 3) (code_length . 27)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$isa_QMARK_" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (checkcast (class "clojure.lang.IFn")))
                                      (9 (getstatic (fieldCP "const__1" "clojure.core$isa_QMARK_" (class "clojure.lang.Var"))))
                                      (12 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (15 (aload_1))
                                      (16 (aconst_null))
                                      (17 (astore_1))
                                      (18 (aload_2))
                                      (19 (aconst_null))
                                      (20 (astore_2))
                                      (21 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4))
                                      (26 (areturn))
                                      (endofcode 27))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 28)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 27 (0 . 0) (20))))  ;;to TAG_0;;to TAG_1
                                      (20 (aload_2)) ;;at TAG_1
                                      (21 (putstatic (fieldCP "__thunk__0__" "clojure.core$isa_QMARK_" (class "clojure.lang.ILookupThunk")))) 
                                      (24 (goto 27))  ;;to TAG_0
                                      (27 (return)) ;;at TAG_0
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$isa_QMARK_-class-table*
  (make-static-class-decls 
   *clojure.core$isa_QMARK_*))

(defconst *package-name-map* 
  ("clojure.core$isa_QMARK_" . "clojure"))

