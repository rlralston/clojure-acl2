; core$load_data_reader_file$fn__6535-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:44 CDT 2014.
;

(defconst *clojure.core$load_data_reader_file$fn__6535*
 (make-class-def
      '(class "clojure.core$load_data_reader_file$fn__6535"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "nth")
                        (STRING  "not")
                        (STRING  "symbol?")
                        (STRING  "ex-info")
                        (STRING  "str")
                        (STRING  "url")
                        (STRING  "form")
                        (STRING  "data-reader-var")
                        (STRING  "contains?")
                        (STRING  "not=")
                        (STRING  "conflict")
                        (STRING  "mappings")
                        (STRING  "assoc")
                        (STRING  "Invalid form in data-reader file")
                        (STRING  "Conflicting data-reader mapping"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "url" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "mappings" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 180)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "nth"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var"))))
                                      (13 (lconst_0))
                                      (14 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (17 (putstatic (fieldCP "const__1" "clojure.core$load_data_reader_file$fn__6535" (class "java.lang.Object"))))
                                      (20 (lconst_1))
                                      (21 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (24 (putstatic (fieldCP "const__2" "clojure.core$load_data_reader_file$fn__6535" (class "java.lang.Object"))))
                                      (27 (ldc 0))        ;;STRING:: "clojure.core"
                                      (29 (ldc 2))        ;;STRING:: "not"
                                      (31 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (34 (checkcast (class "clojure.lang.Var")))
                                      (37 (putstatic (fieldCP "const__3" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var"))))
                                      (40 (ldc 0))        ;;STRING:: "clojure.core"
                                      (42 (ldc 3))        ;;STRING:: "symbol?"
                                      (44 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (47 (checkcast (class "clojure.lang.Var")))
                                      (50 (putstatic (fieldCP "const__4" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var"))))
                                      (53 (ldc 0))        ;;STRING:: "clojure.core"
                                      (55 (ldc 4))        ;;STRING:: "ex-info"
                                      (57 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (60 (checkcast (class "clojure.lang.Var")))
                                      (63 (putstatic (fieldCP "const__5" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var"))))
                                      (66 (ldc 0))        ;;STRING:: "clojure.core"
                                      (68 (ldc 5))        ;;STRING:: "str"
                                      (70 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (73 (checkcast (class "clojure.lang.Var")))
                                      (76 (putstatic (fieldCP "const__6" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var"))))
                                      (79 (aconst_null))
                                      (80 (ldc 6))        ;;STRING:: "url"
                                      (82 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (85 (checkcast (class "clojure.lang.Keyword")))
                                      (88 (putstatic (fieldCP "const__7" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Keyword"))))
                                      (91 (aconst_null))
                                      (92 (ldc 7))        ;;STRING:: "form"
                                      (94 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (97 (checkcast (class "clojure.lang.Keyword")))
                                      (100 (putstatic (fieldCP "const__8" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Keyword"))))
                                      (103 (ldc 0))       ;;STRING:: "clojure.core"
                                      (105 (ldc 8))       ;;STRING:: "data-reader-var"
                                      (107 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (110 (checkcast (class "clojure.lang.Var")))
                                      (113 (putstatic (fieldCP "const__9" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var"))))
                                      (116 (ldc 0))       ;;STRING:: "clojure.core"
                                      (118 (ldc 9))       ;;STRING:: "contains?"
                                      (120 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (123 (checkcast (class "clojure.lang.Var")))
                                      (126 (putstatic (fieldCP "const__10" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var"))))
                                      (129 (ldc 0))       ;;STRING:: "clojure.core"
                                      (131 (ldc 10))      ;;STRING:: "not="
                                      (133 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (136 (checkcast (class "clojure.lang.Var")))
                                      (139 (putstatic (fieldCP "const__11" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var"))))
                                      (142 (aconst_null))
                                      (143 (ldc 11))      ;;STRING:: "conflict"
                                      (145 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (148 (checkcast (class "clojure.lang.Keyword")))
                                      (151 (putstatic (fieldCP "const__12" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Keyword"))))
                                      (154 (aconst_null))
                                      (155 (ldc 12))      ;;STRING:: "mappings"
                                      (157 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (160 (checkcast (class "clojure.lang.Keyword")))
                                      (163 (putstatic (fieldCP "const__13" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Keyword"))))
                                      (166 (ldc 0))       ;;STRING:: "clojure.core"
                                      (168 (ldc 13))      ;;STRING:: "assoc"
                                      (170 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (173 (checkcast (class "clojure.lang.Var")))
                                      (176 (putstatic (fieldCP "const__14" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var"))))
                                      (179 (return))
                                      (endofcode 180))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "url" "clojure.core$load_data_reader_file$fn__6535" (class "java.lang.Object"))))
                                      (9 (aload_0))
                                      (10 (aload_2))
                                      (11 (putfield (fieldCP "mappings" "clojure.core$load_data_reader_file$fn__6535" (class "java.lang.Object"))))
                                      (14 (return))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 8) (code_length . 339)
                                   (parsedcode
                                      (0 (aload_2)) 
                                      (1 (aconst_null)) 
                                      (2 (astore_2)) 
                                      (3 (astore_3)) 
                                      (4 (aload_3)) 
                                      (5 (lconst_0)) 
                                      (6 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (9 (aconst_null)) 
                                      (10 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (13 (astore 4)) 
                                      (15 (aload_3)) 
                                      (16 (aconst_null)) 
                                      (17 (astore_3)) 
                                      (18 (lconst_1)) 
                                      (19 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (22 (aconst_null)) 
                                      (23 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (26 (astore 5)) 
                                      (28 (getstatic (fieldCP "const__3" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var")))) 
                                      (31 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (34 (checkcast (class "clojure.lang.IFn"))) 
                                      (37 (getstatic (fieldCP "const__4" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var")))) 
                                      (40 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (43 (checkcast (class "clojure.lang.IFn"))) 
                                      (46 (aload 4)) 
                                      (48 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (53 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (58 (dup)) 
                                      (59 (ifnull 136)) ;;to TAG_0
                                      (62 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (65 (if_acmpeq 137))  ;;to TAG_1
                                      (68 (getstatic (fieldCP "const__5" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var")))) 
                                      (71 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (74 (checkcast (class "clojure.lang.IFn"))) 
                                      (77 (getstatic (fieldCP "const__6" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var")))) 
                                      (80 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (83 (checkcast (class "clojure.lang.IFn"))) 
                                      (86 (ldc 14)) ;;STRING:: "Invalid form in data-reader file"
                                      (88 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (93 (iconst_4)) 
                                      (94 (anewarray (class "java.lang.Object"))) 
                                      (97 (dup)) 
                                      (98 (iconst_0)) 
                                      (99 (getstatic (fieldCP "const__7" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Keyword")))) 
                                      (102 (aastore)) 
                                      (103 (dup)) 
                                      (104 (iconst_1)) 
                                      (105 (aload_0)) 
                                      (106 (getfield (fieldCP "url" "clojure.core$load_data_reader_file$fn__6535" (class "java.lang.Object")))) 
                                      (109 (aastore)) 
                                      (110 (dup)) 
                                      (111 (iconst_2)) 
                                      (112 (getstatic (fieldCP "const__8" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Keyword")))) 
                                      (115 (aastore)) 
                                      (116 (dup)) 
                                      (117 (iconst_3)) 
                                      (118 (aload 4)) 
                                      (120 (aastore)) 
                                      (121 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (124 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (129 (checkcast (class "java.lang.Throwable"))) 
                                      (132 (athrow)) 
                                      (133 (goto 139)) ;;to TAG_2
                                      (136 (pop)) ;;at TAG_0
                                      (137 (aconst_null)) ;;at TAG_1
                                      (138 (pop)) 
                                      (139 (getstatic (fieldCP "const__9" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var")))) ;;at TAG_2
                                      (142 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (145 (checkcast (class "clojure.lang.IFn"))) 
                                      (148 (aload 5)) 
                                      (150 (aconst_null)) 
                                      (151 (astore 5)) 
                                      (153 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (158 (astore 6)) 
                                      (160 (getstatic (fieldCP "const__10" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var")))) 
                                      (163 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (166 (checkcast (class "clojure.lang.IFn"))) 
                                      (169 (aload_0)) 
                                      (170 (getfield (fieldCP "mappings" "clojure.core$load_data_reader_file$fn__6535" (class "java.lang.Object")))) 
                                      (173 (aload 4)) 
                                      (175 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (180 (astore 7)) 
                                      (182 (aload 7)) 
                                      (184 (dup)) 
                                      (185 (ifnull 227)) ;;to TAG_3
                                      (188 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (191 (if_acmpeq 228)) ;;to TAG_4
                                      (194 (getstatic (fieldCP "const__11" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var")))) 
                                      (197 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (200 (checkcast (class "clojure.lang.IFn"))) 
                                      (203 (aload_0)) 
                                      (204 (getfield (fieldCP "mappings" "clojure.core$load_data_reader_file$fn__6535" (class "java.lang.Object")))) 
                                      (207 (checkcast (class "clojure.lang.IFn"))) 
                                      (210 (aload 4)) 
                                      (212 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (217 (aload 6)) 
                                      (219 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (224 (goto 233)) ;;to TAG_5
                                      (227 (pop)) ;;at TAG_3
                                      (228 (aload 7)) ;;at TAG_4
                                      (230 (aconst_null)) 
                                      (231 (astore 7)) 
                                      (233 (dup)) ;;at TAG_5
                                      (234 (ifnull 308)) ;;to TAG_6
                                      (237 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (240 (if_acmpeq 309)) ;;to TAG_7
                                      (243 (getstatic (fieldCP "const__5" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var")))) 
                                      (246 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (249 (checkcast (class "clojure.lang.IFn"))) 
                                      (252 (ldc 15)) ;;STRING:: "Conflicting data-reader mapping"
                                      (254 (bipush 6)) 
                                      (256 (anewarray (class "java.lang.Object"))) 
                                      (259 (dup)) 
                                      (260 (iconst_0)) 
                                      (261 (getstatic (fieldCP "const__7" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Keyword")))) 
                                      (264 (aastore)) 
                                      (265 (dup)) 
                                      (266 (iconst_1)) 
                                      (267 (aload_0)) 
                                      (268 (getfield (fieldCP "url" "clojure.core$load_data_reader_file$fn__6535" (class "java.lang.Object")))) 
                                      (271 (aastore)) 
                                      (272 (dup)) 
                                      (273 (iconst_2)) 
                                      (274 (getstatic (fieldCP "const__12" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Keyword")))) 
                                      (277 (aastore)) 
                                      (278 (dup)) 
                                      (279 (iconst_3)) 
                                      (280 (aload 4)) 
                                      (282 (aastore)) 
                                      (283 (dup)) 
                                      (284 (iconst_4)) 
                                      (285 (getstatic (fieldCP "const__13" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Keyword")))) 
                                      (288 (aastore)) 
                                      (289 (dup)) 
                                      (290 (iconst_5)) 
                                      (291 (aload_1)) 
                                      (292 (aastore)) 
                                      (293 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (296 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (301 (checkcast (class "java.lang.Throwable"))) 
                                      (304 (athrow)) 
                                      (305 (goto 311)) ;;to TAG_8
                                      (308 (pop)) ;;at TAG_6
                                      (309 (aconst_null)) ;;at TAG_7
                                      (310 (pop)) 
                                      (311 (getstatic (fieldCP "const__14" "clojure.core$load_data_reader_file$fn__6535" (class "clojure.lang.Var")))) ;;at TAG_8
                                      (314 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (317 (checkcast (class "clojure.lang.IFn"))) 
                                      (320 (aload_1)) 
                                      (321 (aconst_null)) 
                                      (322 (astore_1)) 
                                      (323 (aload 4)) 
                                      (325 (aconst_null)) 
                                      (326 (astore 4)) 
                                      (328 (aload 6)) 
                                      (330 (aconst_null)) 
                                      (331 (astore 6)) 
                                      (333 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (338 (areturn)) 
                                      (endofcode 339))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$load_data_reader_file$fn__6535-class-table*
  (make-static-class-decls 
   *clojure.core$load_data_reader_file$fn__6535*))

(defconst *package-name-map* 
  ("clojure.core$load_data_reader_file$fn__6535" . "clojure"))

