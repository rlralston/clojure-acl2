; core$refer-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:45 CDT 2014.
;

(defconst *clojure.core$refer*
 (make-class-def
      '(class "clojure.core$refer"
            "clojure.lang.RestFn"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "find-ns")
                        (STRING  "str")
                        (STRING  "apply")
                        (STRING  "hash-map")
                        (STRING  "ns-publics")
                        (STRING  "rename")
                        (STRING  "set")
                        (STRING  "exclude")
                        (STRING  "=")
                        (STRING  "all")
                        (STRING  "refer")
                        (STRING  "keys")
                        (STRING  "only")
                        (STRING  "not")
                        (STRING  "instance?")
                        (STRING  "seq")
                        (STRING  "<")
                        (STRING  "get")
                        (STRING  "ns-interns")
                        (STRING  "*ns*")
                        (STRING  "unchecked-inc")
                        (STRING  "chunked-seq?")
                        (STRING  "chunk-first")
                        (STRING  "chunk-rest")
                        (STRING  "int")
                        (STRING  "count")
                        (STRING  "first")
                        (STRING  "next")
                        (STRING  "No namespace: ")
                        (STRING  ":only/:refer value must be a sequential collection of symbols")
                        (STRING  " is not public")
                        (STRING  " does not exist"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__19" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__20" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__21" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__22" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__23" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__24" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__25" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__26" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__27" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__28" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__1__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__1__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__2__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__2__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__3__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__3__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__4__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__4__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 467)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "find-ns"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "str"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "apply"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "hash-map"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (52 (ldc 0))        ;;STRING:: "clojure.core"
                                      (54 (ldc 5))        ;;STRING:: "ns-publics"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (65 (aconst_null))
                                      (66 (ldc 6))        ;;STRING:: "rename"
                                      (68 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (71 (checkcast (class "clojure.lang.Keyword")))
                                      (74 (putstatic (fieldCP "const__5" "clojure.core$refer" (class "clojure.lang.Keyword"))))
                                      (77 (ldc 0))        ;;STRING:: "clojure.core"
                                      (79 (ldc 7))        ;;STRING:: "set"
                                      (81 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (84 (checkcast (class "clojure.lang.Var")))
                                      (87 (putstatic (fieldCP "const__6" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (90 (aconst_null))
                                      (91 (ldc 8))        ;;STRING:: "exclude"
                                      (93 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (96 (checkcast (class "clojure.lang.Keyword")))
                                      (99 (putstatic (fieldCP "const__7" "clojure.core$refer" (class "clojure.lang.Keyword"))))
                                      (102 (ldc 0))       ;;STRING:: "clojure.core"
                                      (104 (ldc 9))       ;;STRING:: "="
                                      (106 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (109 (checkcast (class "clojure.lang.Var")))
                                      (112 (putstatic (fieldCP "const__8" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (115 (aconst_null))
                                      (116 (ldc 10))      ;;STRING:: "all"
                                      (118 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (121 (checkcast (class "clojure.lang.Keyword")))
                                      (124 (putstatic (fieldCP "const__9" "clojure.core$refer" (class "clojure.lang.Keyword"))))
                                      (127 (aconst_null))
                                      (128 (ldc 11))      ;;STRING:: "refer"
                                      (130 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (133 (checkcast (class "clojure.lang.Keyword")))
                                      (136 (putstatic (fieldCP "const__10" "clojure.core$refer" (class "clojure.lang.Keyword"))))
                                      (139 (ldc 0))       ;;STRING:: "clojure.core"
                                      (141 (ldc 12))      ;;STRING:: "keys"
                                      (143 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (146 (checkcast (class "clojure.lang.Var")))
                                      (149 (putstatic (fieldCP "const__11" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (152 (aconst_null))
                                      (153 (ldc 13))      ;;STRING:: "only"
                                      (155 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (158 (checkcast (class "clojure.lang.Keyword")))
                                      (161 (putstatic (fieldCP "const__12" "clojure.core$refer" (class "clojure.lang.Keyword"))))
                                      (164 (ldc 0))       ;;STRING:: "clojure.core"
                                      (166 (ldc 14))      ;;STRING:: "not"
                                      (168 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (171 (checkcast (class "clojure.lang.Var")))
                                      (174 (putstatic (fieldCP "const__13" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (177 (ldc 0))       ;;STRING:: "clojure.core"
                                      (179 (ldc 15))      ;;STRING:: "instance?"
                                      (181 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (184 (checkcast (class "clojure.lang.Var")))
                                      (187 (putstatic (fieldCP "const__14" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (190 (ldc 0))       ;;STRING:: "clojure.core"
                                      (192 (ldc 16))      ;;STRING:: "seq"
                                      (194 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (197 (checkcast (class "clojure.lang.Var")))
                                      (200 (putstatic (fieldCP "const__15" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (203 (lconst_0))
                                      (204 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (207 (putstatic (fieldCP "const__16" "clojure.core$refer" (class "java.lang.Object"))))
                                      (210 (ldc 0))       ;;STRING:: "clojure.core"
                                      (212 (ldc 17))      ;;STRING:: "<"
                                      (214 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (217 (checkcast (class "clojure.lang.Var")))
                                      (220 (putstatic (fieldCP "const__17" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (223 (ldc 0))       ;;STRING:: "clojure.core"
                                      (225 (ldc 18))      ;;STRING:: "get"
                                      (227 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (230 (checkcast (class "clojure.lang.Var")))
                                      (233 (putstatic (fieldCP "const__18" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (236 (ldc 0))       ;;STRING:: "clojure.core"
                                      (238 (ldc 19))      ;;STRING:: "ns-interns"
                                      (240 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (243 (checkcast (class "clojure.lang.Var")))
                                      (246 (putstatic (fieldCP "const__19" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (249 (ldc 0))       ;;STRING:: "clojure.core"
                                      (251 (ldc 20))      ;;STRING:: "*ns*"
                                      (253 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (256 (checkcast (class "clojure.lang.Var")))
                                      (259 (putstatic (fieldCP "const__20" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (262 (ldc 0))       ;;STRING:: "clojure.core"
                                      (264 (ldc 21))      ;;STRING:: "unchecked-inc"
                                      (266 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (269 (checkcast (class "clojure.lang.Var")))
                                      (272 (putstatic (fieldCP "const__21" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (275 (ldc 0))       ;;STRING:: "clojure.core"
                                      (277 (ldc 22))      ;;STRING:: "chunked-seq?"
                                      (279 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (282 (checkcast (class "clojure.lang.Var")))
                                      (285 (putstatic (fieldCP "const__22" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (288 (ldc 0))       ;;STRING:: "clojure.core"
                                      (290 (ldc 23))      ;;STRING:: "chunk-first"
                                      (292 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (295 (checkcast (class "clojure.lang.Var")))
                                      (298 (putstatic (fieldCP "const__23" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (301 (ldc 0))       ;;STRING:: "clojure.core"
                                      (303 (ldc 24))      ;;STRING:: "chunk-rest"
                                      (305 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (308 (checkcast (class "clojure.lang.Var")))
                                      (311 (putstatic (fieldCP "const__24" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (314 (ldc 0))       ;;STRING:: "clojure.core"
                                      (316 (ldc 25))      ;;STRING:: "int"
                                      (318 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (321 (checkcast (class "clojure.lang.Var")))
                                      (324 (putstatic (fieldCP "const__25" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (327 (ldc 0))       ;;STRING:: "clojure.core"
                                      (329 (ldc 26))      ;;STRING:: "count"
                                      (331 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (334 (checkcast (class "clojure.lang.Var")))
                                      (337 (putstatic (fieldCP "const__26" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (340 (ldc 0))       ;;STRING:: "clojure.core"
                                      (342 (ldc 27))      ;;STRING:: "first"
                                      (344 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (347 (checkcast (class "clojure.lang.Var")))
                                      (350 (putstatic (fieldCP "const__27" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (353 (ldc 0))       ;;STRING:: "clojure.core"
                                      (355 (ldc 28))      ;;STRING:: "next"
                                      (357 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (360 (checkcast (class "clojure.lang.Var")))
                                      (363 (putstatic (fieldCP "const__28" "clojure.core$refer" (class "clojure.lang.Var"))))
                                      (366 (new (class "clojure.lang.KeywordLookupSite")))
                                      (369 (dup))
                                      (370 (aconst_null))
                                      (371 (ldc 6))       ;;STRING:: "rename"
                                      (373 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (376 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (379 (dup))
                                      (380 (putstatic (fieldCP "__site__0__" "clojure.core$refer" (class "clojure.lang.KeywordLookupSite"))))
                                      (383 (putstatic (fieldCP "__thunk__0__" "clojure.core$refer" (class "clojure.lang.ILookupThunk"))))
                                      (386 (new (class "clojure.lang.KeywordLookupSite")))
                                      (389 (dup))
                                      (390 (aconst_null))
                                      (391 (ldc 8))       ;;STRING:: "exclude"
                                      (393 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (396 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (399 (dup))
                                      (400 (putstatic (fieldCP "__site__1__" "clojure.core$refer" (class "clojure.lang.KeywordLookupSite"))))
                                      (403 (putstatic (fieldCP "__thunk__1__" "clojure.core$refer" (class "clojure.lang.ILookupThunk"))))
                                      (406 (new (class "clojure.lang.KeywordLookupSite")))
                                      (409 (dup))
                                      (410 (aconst_null))
                                      (411 (ldc 11))      ;;STRING:: "refer"
                                      (413 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (416 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (419 (dup))
                                      (420 (putstatic (fieldCP "__site__2__" "clojure.core$refer" (class "clojure.lang.KeywordLookupSite"))))
                                      (423 (putstatic (fieldCP "__thunk__2__" "clojure.core$refer" (class "clojure.lang.ILookupThunk"))))
                                      (426 (new (class "clojure.lang.KeywordLookupSite")))
                                      (429 (dup))
                                      (430 (aconst_null))
                                      (431 (ldc 11))      ;;STRING:: "refer"
                                      (433 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (436 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (439 (dup))
                                      (440 (putstatic (fieldCP "__site__3__" "clojure.core$refer" (class "clojure.lang.KeywordLookupSite"))))
                                      (443 (putstatic (fieldCP "__thunk__3__" "clojure.core$refer" (class "clojure.lang.ILookupThunk"))))
                                      (446 (new (class "clojure.lang.KeywordLookupSite")))
                                      (449 (dup))
                                      (450 (aconst_null))
                                      (451 (ldc 13))      ;;STRING:: "only"
                                      (453 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (456 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (459 (dup))
                                      (460 (putstatic (fieldCP "__site__4__" "clojure.core$refer" (class "clojure.lang.KeywordLookupSite"))))
                                      (463 (putstatic (fieldCP "__thunk__4__" "clojure.core$refer" (class "clojure.lang.ILookupThunk"))))
                                      (466 (return))
                                      (endofcode 467))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.RestFn" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doInvoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 8) (max_locals . 20) (code_length . 1240)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$refer" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_1)) 
                                      (10 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (15 (astore_3)) 
                                      (16 (aload_3)) 
                                      (17 (dup)) 
                                      (18 (ifnull 33))  ;;to TAG_0
                                      (21 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (24 (if_acmpeq 34)) ;;to TAG_1
                                      (27 (aload_3)) 
                                      (28 (aconst_null)) 
                                      (29 (astore_3)) 
                                      (30 (goto 67)) ;;to TAG_2
                                      (33 (pop)) ;;at TAG_0
                                      (34 (new (class "java.lang.Exception"))) ;;at TAG_1
                                      (37 (dup)) 
                                      (38 (getstatic (fieldCP "const__1" "clojure.core$refer" (class "clojure.lang.Var")))) 
                                      (41 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (44 (checkcast (class "clojure.lang.IFn"))) 
                                      (47 (ldc 29)) ;;STRING:: "No namespace: "
                                      (49 (aload_1)) 
                                      (50 (aconst_null)) 
                                      (51 (astore_1)) 
                                      (52 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (57 (checkcast (class "java.lang.String"))) 
                                      (60 (invokespecial (methodCP "<init>" "java.lang.Exception" ((class "java.lang.String")) void))) 
                                      (63 (checkcast (class "java.lang.Throwable"))) 
                                      (66 (athrow)) 
                                      (67 (astore_3)) ;;at TAG_2
                                      (68 (getstatic (fieldCP "const__2" "clojure.core$refer" (class "clojure.lang.Var")))) 
                                      (71 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (74 (checkcast (class "clojure.lang.IFn"))) 
                                      (77 (getstatic (fieldCP "const__3" "clojure.core$refer" (class "clojure.lang.Var")))) 
                                      (80 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (83 (aload_2)) 
                                      (84 (aconst_null)) 
                                      (85 (astore_2)) 
                                      (86 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (91 (astore 4)) 
                                      (93 (getstatic (fieldCP "const__4" "clojure.core$refer" (class "clojure.lang.Var")))) 
                                      (96 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (99 (checkcast (class "clojure.lang.IFn"))) 
                                      (102 (aload_3)) 
                                      (103 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (108 (astore 5)) 
                                      (110 (getstatic (fieldCP "__thunk__0__" "clojure.core$refer" (class "clojure.lang.ILookupThunk")))) 
                                      (113 (dup)) 
                                      (114 (aload 4)) 
                                      (116 (dup_x2)) 
                                      (117 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (122 (dup_x2)) 
                                      (123 (if_acmpeq 130)) ;;to TAG_3
                                      (126 (pop)) 
                                      (127 (goto 152)) ;;to TAG_4
                                      (130 (swap)) ;;at TAG_3
                                      (131 (pop)) 
                                      (132 (dup)) 
                                      (133 (getstatic (fieldCP "__site__0__" "clojure.core$refer" (class "clojure.lang.KeywordLookupSite")))) 
                                      (136 (swap)) 
                                      (137 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (142 (dup)) 
                                      (143 (putstatic (fieldCP "__thunk__0__" "clojure.core$refer" (class "clojure.lang.ILookupThunk")))) 
                                      (146 (swap)) 
                                      (147 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (152 (astore 6)) ;;at TAG_4
                                      (154 (aload 6)) 
                                      (156 (dup)) 
                                      (157 (ifnull 174)) ;;to TAG_5
                                      (160 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (163 (if_acmpeq 175)) ;;to TAG_6
                                      (166 (aload 6)) 
                                      (168 (aconst_null)) 
                                      (169 (astore 6)) 
                                      (171 (goto 178)) ;;to TAG_7
                                      (174 (pop)) ;;at TAG_5
                                      (175 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentArrayMap" (class "clojure.lang.PersistentArrayMap")))) ;;at TAG_6
                                      (178 (astore 6)) ;;at TAG_7
                                      (180 (getstatic (fieldCP "const__6" "clojure.core$refer" (class "clojure.lang.Var")))) 
                                      (183 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (186 (checkcast (class "clojure.lang.IFn"))) 
                                      (189 (getstatic (fieldCP "__thunk__1__" "clojure.core$refer" (class "clojure.lang.ILookupThunk")))) 
                                      (192 (dup)) 
                                      (193 (aload 4)) 
                                      (195 (dup_x2)) 
                                      (196 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (201 (dup_x2)) 
                                      (202 (if_acmpeq 209)) ;;to TAG_8
                                      (205 (pop)) 
                                      (206 (goto 231)) ;;to TAG_9
                                      (209 (swap)) ;;at TAG_8
                                      (210 (pop)) 
                                      (211 (dup)) 
                                      (212 (getstatic (fieldCP "__site__1__" "clojure.core$refer" (class "clojure.lang.KeywordLookupSite")))) 
                                      (215 (swap)) 
                                      (216 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (221 (dup)) 
                                      (222 (putstatic (fieldCP "__thunk__1__" "clojure.core$refer" (class "clojure.lang.ILookupThunk")))) 
                                      (225 (swap)) 
                                      (226 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (231 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_9
                                      (236 (astore 7)) 
                                      (238 (getstatic (fieldCP "const__9" "clojure.core$refer" (class "clojure.lang.Keyword")))) 
                                      (241 (getstatic (fieldCP "__thunk__2__" "clojure.core$refer" (class "clojure.lang.ILookupThunk")))) 
                                      (244 (dup)) 
                                      (245 (aload 4)) 
                                      (247 (dup_x2)) 
                                      (248 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (253 (dup_x2)) 
                                      (254 (if_acmpeq 261)) ;;to TAG_10
                                      (257 (pop)) 
                                      (258 (goto 283)) ;;to TAG_11
                                      (261 (swap)) ;;at TAG_10
                                      (262 (pop)) 
                                      (263 (dup)) 
                                      (264 (getstatic (fieldCP "__site__2__" "clojure.core$refer" (class "clojure.lang.KeywordLookupSite")))) 
                                      (267 (swap)) 
                                      (268 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (273 (dup)) 
                                      (274 (putstatic (fieldCP "__thunk__2__" "clojure.core$refer" (class "clojure.lang.ILookupThunk")))) 
                                      (277 (swap)) 
                                      (278 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (283 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) ;;at TAG_11
                                      (286 (ifeq 309)) ;;to TAG_12
                                      (289 (getstatic (fieldCP "const__11" "clojure.core$refer" (class "clojure.lang.Var")))) 
                                      (292 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (295 (checkcast (class "clojure.lang.IFn"))) 
                                      (298 (aload 5)) 
                                      (300 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (305 (goto 458)) ;;to TAG_13
                                      (308 (pop)) 
                                      (309 (getstatic (fieldCP "__thunk__3__" "clojure.core$refer" (class "clojure.lang.ILookupThunk")))) ;;at TAG_12
                                      (312 (dup)) 
                                      (313 (aload 4)) 
                                      (315 (dup_x2)) 
                                      (316 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (321 (dup_x2)) 
                                      (322 (if_acmpeq 329)) ;;to TAG_14
                                      (325 (pop)) 
                                      (326 (goto 351)) ;;to TAG_15
                                      (329 (swap)) ;;at TAG_14
                                      (330 (pop)) 
                                      (331 (dup)) 
                                      (332 (getstatic (fieldCP "__site__3__" "clojure.core$refer" (class "clojure.lang.KeywordLookupSite")))) 
                                      (335 (swap)) 
                                      (336 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (341 (dup)) 
                                      (342 (putstatic (fieldCP "__thunk__3__" "clojure.core$refer" (class "clojure.lang.ILookupThunk")))) 
                                      (345 (swap)) 
                                      (346 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (351 (astore 8)) ;;at TAG_15
                                      (353 (aload 8)) 
                                      (355 (dup)) 
                                      (356 (ifnull 373)) ;;to TAG_16
                                      (359 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (362 (if_acmpeq 374)) ;;to TAG_17
                                      (365 (aload 8)) 
                                      (367 (aconst_null)) 
                                      (368 (astore 8)) 
                                      (370 (goto 458)) ;;to TAG_13
                                      (373 (pop)) ;;at TAG_16
                                      (374 (getstatic (fieldCP "__thunk__4__" "clojure.core$refer" (class "clojure.lang.ILookupThunk")))) ;;at TAG_17
                                      (377 (dup)) 
                                      (378 (aload 4)) 
                                      (380 (aconst_null)) 
                                      (381 (astore 4)) 
                                      (383 (dup_x2)) 
                                      (384 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (389 (dup_x2)) 
                                      (390 (if_acmpeq 397)) ;;to TAG_18
                                      (393 (pop)) 
                                      (394 (goto 419)) ;;to TAG_19
                                      (397 (swap)) ;;at TAG_18
                                      (398 (pop)) 
                                      (399 (dup)) 
                                      (400 (getstatic (fieldCP "__site__4__" "clojure.core$refer" (class "clojure.lang.KeywordLookupSite")))) 
                                      (403 (swap)) 
                                      (404 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (409 (dup)) 
                                      (410 (putstatic (fieldCP "__thunk__4__" "clojure.core$refer" (class "clojure.lang.ILookupThunk")))) 
                                      (413 (swap)) 
                                      (414 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (419 (astore 9)) ;;at TAG_19
                                      (421 (aload 9)) 
                                      (423 (dup)) 
                                      (424 (ifnull 441)) ;;to TAG_20
                                      (427 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (430 (if_acmpeq 442)) ;;to TAG_21
                                      (433 (aload 9)) 
                                      (435 (aconst_null)) 
                                      (436 (astore 9)) 
                                      (438 (goto 458)) ;;to TAG_13
                                      (441 (pop)) ;;at TAG_20
                                      (442 (getstatic (fieldCP "const__11" "clojure.core$refer" (class "clojure.lang.Var")))) ;;at TAG_21
                                      (445 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (448 (checkcast (class "clojure.lang.IFn"))) 
                                      (451 (aload 5)) 
                                      (453 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (458 (astore 8)) ;;at TAG_13
                                      (460 (aload 8)) 
                                      (462 (astore 9)) 
                                      (464 (aload 9)) 
                                      (466 (dup)) 
                                      (467 (ifnull 510)) ;;to TAG_22
                                      (470 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (473 (if_acmpeq 511)) ;;to TAG_23
                                      (476 (getstatic (fieldCP "const__13" "clojure.core$refer" (class "clojure.lang.Var")))) 
                                      (479 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (482 (checkcast (class "clojure.lang.IFn"))) 
                                      (485 (aload 8)) 
                                      (487 (instanceof (class "clojure.lang.Sequential"))) 
                                      (490 (ifeq 499)) ;;to TAG_24
                                      (493 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (496 (goto 502)) ;;to TAG_25
                                      (499 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_24
                                      (502 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_25
                                      (507 (goto 516)) ;;to TAG_26
                                      (510 (pop)) ;;at TAG_22
                                      (511 (aload 9)) ;;at TAG_23
                                      (513 (aconst_null)) 
                                      (514 (astore 9)) 
                                      (516 (dup)) ;;at TAG_26
                                      (517 (ifnull 546)) ;;to TAG_27
                                      (520 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (523 (if_acmpeq 547)) ;;to TAG_28
                                      (526 (new (class "java.lang.Exception"))) 
                                      (529 (dup)) 
                                      (530 (ldc_w 30)) ;;STRING:: ":only/:refer value must be a sequential collection of symbols"
                                      (533 (checkcast (class "java.lang.String"))) 
                                      (536 (invokespecial (methodCP "<init>" "java.lang.Exception" ((class "java.lang.String")) void))) 
                                      (539 (checkcast (class "java.lang.Throwable"))) 
                                      (542 (athrow)) 
                                      (543 (goto 549)) ;;to TAG_29
                                      (546 (pop)) ;;at TAG_27
                                      (547 (aconst_null)) ;;at TAG_28
                                      (548 (pop)) 
                                      (549 (getstatic (fieldCP "const__15" "clojure.core$refer" (class "clojure.lang.Var")))) ;;at TAG_29
                                      (552 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (555 (checkcast (class "clojure.lang.IFn"))) 
                                      (558 (aload 8)) 
                                      (560 (aconst_null)) 
                                      (561 (astore 8)) 
                                      (563 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (568 (astore 9)) 
                                      (570 (aconst_null)) 
                                      (571 (astore 10)) 
                                      (573 (lconst_0)) 
                                      (574 (lstore 11)) 
                                      (576 (lconst_0)) 
                                      (577 (lstore 13)) 
                                      (579 (lload 13)) ;;at TAG_43
                                      (581 (lload 11)) 
                                      (583 (lcmp)) 
                                      (584 (ifge 839)) ;;to TAG_30
                                      (587 (aload 10)) 
                                      (589 (checkcast (class "clojure.lang.Indexed"))) 
                                      (592 (lload 13)) 
                                      (594 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (597 (invokeinterface (methodCP "nth" "clojure.lang.Indexed" (int) (class "java.lang.Object")) 2)) 
                                      (602 (astore 15)) 
                                      (604 (aload 7)) 
                                      (606 (checkcast (class "clojure.lang.IFn"))) 
                                      (609 (aload 15)) 
                                      (611 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (616 (dup)) 
                                      (617 (ifnull 631)) ;;to TAG_31
                                      (620 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (623 (if_acmpeq 632)) ;;to TAG_32
                                      (626 (aconst_null)) 
                                      (627 (pop)) 
                                      (628 (goto 814)) ;;to TAG_33
                                      (631 (pop)) ;;at TAG_31
                                      (632 (aload 5)) ;;at TAG_32
                                      (634 (checkcast (class "clojure.lang.IFn"))) 
                                      (637 (aload 15)) 
                                      (639 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (644 (astore 16)) 
                                      (646 (aload 16)) 
                                      (648 (dup)) 
                                      (649 (ifnull 663)) ;;to TAG_34
                                      (652 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (655 (if_acmpeq 664)) ;;to TAG_35
                                      (658 (aconst_null)) 
                                      (659 (pop)) 
                                      (660 (goto 750)) ;;to TAG_36
                                      (663 (pop)) ;;at TAG_34
                                      (664 (new (class "java.lang.IllegalAccessError"))) ;;at TAG_35
                                      (667 (dup)) 
                                      (668 (getstatic (fieldCP "const__19" "clojure.core$refer" (class "clojure.lang.Var")))) 
                                      (671 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (674 (checkcast (class "clojure.lang.IFn"))) 
                                      (677 (aload_3)) 
                                      (678 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (683 (aload 15)) 
                                      (685 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (688 (dup)) 
                                      (689 (ifnull 720)) ;;to TAG_37
                                      (692 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (695 (if_acmpeq 721)) ;;to TAG_38
                                      (698 (getstatic (fieldCP "const__1" "clojure.core$refer" (class "clojure.lang.Var")))) 
                                      (701 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (704 (checkcast (class "clojure.lang.IFn"))) 
                                      (707 (aload 15)) 
                                      (709 (ldc_w 31)) ;;STRING:: " is not public"
                                      (712 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (717 (goto 740)) ;;to TAG_39
                                      (720 (pop)) ;;at TAG_37
                                      (721 (getstatic (fieldCP "const__1" "clojure.core$refer" (class "clojure.lang.Var")))) ;;at TAG_38
                                      (724 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (727 (checkcast (class "clojure.lang.IFn"))) 
                                      (730 (aload 15)) 
                                      (732 (ldc_w 32)) ;;STRING:: " does not exist"
                                      (735 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (740 (checkcast (class "java.lang.String"))) ;;at TAG_39
                                      (743 (invokespecial (methodCP "<init>" "java.lang.IllegalAccessError" ((class "java.lang.String")) void))) 
                                      (746 (checkcast (class "java.lang.Throwable"))) 
                                      (749 (athrow)) 
                                      (750 (getstatic (fieldCP "const__20" "clojure.core$refer" (class "clojure.lang.Var")))) ;;at TAG_36
                                      (753 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (756 (checkcast (class "clojure.lang.Namespace"))) 
                                      (759 (aload 6)) 
                                      (761 (checkcast (class "clojure.lang.IFn"))) 
                                      (764 (aload 15)) 
                                      (766 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (771 (astore 17)) 
                                      (773 (aload 17)) 
                                      (775 (dup)) 
                                      (776 (ifnull 793)) ;;to TAG_40
                                      (779 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (782 (if_acmpeq 794)) ;;to TAG_41
                                      (785 (aload 17)) 
                                      (787 (aconst_null)) 
                                      (788 (astore 17)) 
                                      (790 (goto 799)) ;;to TAG_42
                                      (793 (pop)) ;;at TAG_40
                                      (794 (aload 15)) ;;at TAG_41
                                      (796 (aconst_null)) 
                                      (797 (astore 15)) 
                                      (799 (checkcast (class "clojure.lang.Symbol"))) ;;at TAG_42
                                      (802 (aload 16)) 
                                      (804 (aconst_null)) 
                                      (805 (astore 16)) 
                                      (807 (checkcast (class "clojure.lang.Var"))) 
                                      (810 (invokevirtual (methodCP "refer" "clojure.lang.Namespace" ((class "clojure.lang.Symbol") (class "clojure.lang.Var")) (class "clojure.lang.Var")))) 
                                      (813 (pop)) 
                                      (814 (aload 9)) ;;at TAG_33
                                      (816 (aload 10)) 
                                      (818 (lload 11)) 
                                      (820 (lload 13)) 
                                      (822 (lconst_1)) 
                                      (823 (ladd)) 
                                      (824 (lstore 13)) 
                                      (826 (lstore 11)) 
                                      (828 (astore 10)) 
                                      (830 (astore 9)) 
                                      (832 (goto 579)) ;;to TAG_43
                                      (835 (goto 1239)) ;;to TAG_44
                                      (838 (pop)) 
                                      (839 (getstatic (fieldCP "const__15" "clojure.core$refer" (class "clojure.lang.Var")))) ;;at TAG_30
                                      (842 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (845 (checkcast (class "clojure.lang.IFn"))) 
                                      (848 (aload 9)) 
                                      (850 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (855 (astore 15)) 
                                      (857 (aload 15)) 
                                      (859 (dup)) 
                                      (860 (ifnull 1237)) ;;to TAG_45
                                      (863 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (866 (if_acmpeq 1238)) ;;to TAG_46
                                      (869 (aload 15)) 
                                      (871 (aconst_null)) 
                                      (872 (astore 15)) 
                                      (874 (astore 16)) 
                                      (876 (getstatic (fieldCP "const__22" "clojure.core$refer" (class "clojure.lang.Var")))) 
                                      (879 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (882 (checkcast (class "clojure.lang.IFn"))) 
                                      (885 (aload 16)) 
                                      (887 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (892 (dup)) 
                                      (893 (ifnull 972)) ;;to TAG_47
                                      (896 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (899 (if_acmpeq 973)) ;;to TAG_48
                                      (902 (getstatic (fieldCP "const__23" "clojure.core$refer" (class "clojure.lang.Var")))) 
                                      (905 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (908 (checkcast (class "clojure.lang.IFn"))) 
                                      (911 (aload 16)) 
                                      (913 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (918 (astore 17)) 
                                      (920 (getstatic (fieldCP "const__24" "clojure.core$refer" (class "clojure.lang.Var")))) 
                                      (923 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (926 (checkcast (class "clojure.lang.IFn"))) 
                                      (929 (aload 16)) 
                                      (931 (aconst_null)) 
                                      (932 (astore 16)) 
                                      (934 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (939 (aload 17)) 
                                      (941 (aload 17)) 
                                      (943 (aconst_null)) 
                                      (944 (astore 17)) 
                                      (946 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (949 (invokestatic (methodCP "intCast" "clojure.lang.RT" (int) int))) 
                                      (952 (i2l)) 
                                      (953 (lconst_0)) 
                                      (954 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (957 (i2l)) 
                                      (958 (lstore 13)) 
                                      (960 (lstore 11)) 
                                      (962 (astore 10)) 
                                      (964 (astore 9)) 
                                      (966 (goto 579)) ;;to TAG_43
                                      (969 (goto 1234)) ;;to TAG_49
                                      (972 (pop)) ;;at TAG_47
                                      (973 (getstatic (fieldCP "const__27" "clojure.core$refer" (class "clojure.lang.Var")))) ;;at TAG_48
                                      (976 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (979 (checkcast (class "clojure.lang.IFn"))) 
                                      (982 (aload 16)) 
                                      (984 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (989 (astore 17)) 
                                      (991 (aload 7)) 
                                      (993 (checkcast (class "clojure.lang.IFn"))) 
                                      (996 (aload 17)) 
                                      (998 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1003 (dup)) 
                                      (1004 (ifnull 1018)) ;;to TAG_50
                                      (1007 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (1010 (if_acmpeq 1019)) ;;to TAG_51
                                      (1013 (aconst_null)) 
                                      (1014 (pop)) 
                                      (1015 (goto 1201)) ;;to TAG_52
                                      (1018 (pop)) ;;at TAG_50
                                      (1019 (aload 5)) ;;at TAG_51
                                      (1021 (checkcast (class "clojure.lang.IFn"))) 
                                      (1024 (aload 17)) 
                                      (1026 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1031 (astore 18)) 
                                      (1033 (aload 18)) 
                                      (1035 (dup)) 
                                      (1036 (ifnull 1050)) ;;to TAG_53
                                      (1039 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (1042 (if_acmpeq 1051)) ;;to TAG_54
                                      (1045 (aconst_null)) 
                                      (1046 (pop)) 
                                      (1047 (goto 1137)) ;;to TAG_55
                                      (1050 (pop)) ;;at TAG_53
                                      (1051 (new (class "java.lang.IllegalAccessError"))) ;;at TAG_54
                                      (1054 (dup)) 
                                      (1055 (getstatic (fieldCP "const__19" "clojure.core$refer" (class "clojure.lang.Var")))) 
                                      (1058 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1061 (checkcast (class "clojure.lang.IFn"))) 
                                      (1064 (aload_3)) 
                                      (1065 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1070 (aload 17)) 
                                      (1072 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (1075 (dup)) 
                                      (1076 (ifnull 1107)) ;;to TAG_56
                                      (1079 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (1082 (if_acmpeq 1108)) ;;to TAG_57
                                      (1085 (getstatic (fieldCP "const__1" "clojure.core$refer" (class "clojure.lang.Var")))) 
                                      (1088 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1091 (checkcast (class "clojure.lang.IFn"))) 
                                      (1094 (aload 17)) 
                                      (1096 (ldc_w 31)) ;;STRING:: " is not public"
                                      (1099 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (1104 (goto 1127)) ;;to TAG_58
                                      (1107 (pop)) ;;at TAG_56
                                      (1108 (getstatic (fieldCP "const__1" "clojure.core$refer" (class "clojure.lang.Var")))) ;;at TAG_57
                                      (1111 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1114 (checkcast (class "clojure.lang.IFn"))) 
                                      (1117 (aload 17)) 
                                      (1119 (ldc_w 32)) ;;STRING:: " does not exist"
                                      (1122 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (1127 (checkcast (class "java.lang.String"))) ;;at TAG_58
                                      (1130 (invokespecial (methodCP "<init>" "java.lang.IllegalAccessError" ((class "java.lang.String")) void))) 
                                      (1133 (checkcast (class "java.lang.Throwable"))) 
                                      (1136 (athrow)) 
                                      (1137 (getstatic (fieldCP "const__20" "clojure.core$refer" (class "clojure.lang.Var")))) ;;at TAG_55
                                      (1140 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1143 (checkcast (class "clojure.lang.Namespace"))) 
                                      (1146 (aload 6)) 
                                      (1148 (checkcast (class "clojure.lang.IFn"))) 
                                      (1151 (aload 17)) 
                                      (1153 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1158 (astore 19)) 
                                      (1160 (aload 19)) 
                                      (1162 (dup)) 
                                      (1163 (ifnull 1180)) ;;to TAG_59
                                      (1166 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (1169 (if_acmpeq 1181)) ;;to TAG_60
                                      (1172 (aload 19)) 
                                      (1174 (aconst_null)) 
                                      (1175 (astore 19)) 
                                      (1177 (goto 1186)) ;;to TAG_61
                                      (1180 (pop)) ;;at TAG_59
                                      (1181 (aload 17)) ;;at TAG_60
                                      (1183 (aconst_null)) 
                                      (1184 (astore 17)) 
                                      (1186 (checkcast (class "clojure.lang.Symbol"))) ;;at TAG_61
                                      (1189 (aload 18)) 
                                      (1191 (aconst_null)) 
                                      (1192 (astore 18)) 
                                      (1194 (checkcast (class "clojure.lang.Var"))) 
                                      (1197 (invokevirtual (methodCP "refer" "clojure.lang.Namespace" ((class "clojure.lang.Symbol") (class "clojure.lang.Var")) (class "clojure.lang.Var")))) 
                                      (1200 (pop)) 
                                      (1201 (getstatic (fieldCP "const__28" "clojure.core$refer" (class "clojure.lang.Var")))) ;;at TAG_52
                                      (1204 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1207 (checkcast (class "clojure.lang.IFn"))) 
                                      (1210 (aload 16)) 
                                      (1212 (aconst_null)) 
                                      (1213 (astore 16)) 
                                      (1215 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1220 (aconst_null)) 
                                      (1221 (lconst_0)) 
                                      (1222 (lconst_0)) 
                                      (1223 (lstore 13)) 
                                      (1225 (lstore 11)) 
                                      (1227 (astore 10)) 
                                      (1229 (astore 9)) 
                                      (1231 (goto 579)) ;;to TAG_43
                                      (1234 (goto 1239)) ;;to TAG_44;;at TAG_49
                                      (1237 (pop)) ;;at TAG_45
                                      (1238 (aconst_null)) ;;at TAG_46
                                      (1239 (areturn)) ;;at TAG_44
                                      (endofcode 1240))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getRequiredArity"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iconst_1))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 72)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 71 (0 . 4) (36 43 50 57 64))))  ;;to TAG_2;;to TAG_3;;to TAG_4;;to TAG_5;;to TAG_0;;to TAG_1
                                      (36 (aload_2)) ;;at TAG_1
                                      (37 (putstatic (fieldCP "__thunk__0__" "clojure.core$refer" (class "clojure.lang.ILookupThunk")))) 
                                      (40 (goto 71)) ;;to TAG_0
                                      (43 (aload_2)) ;;at TAG_2
                                      (44 (putstatic (fieldCP "__thunk__1__" "clojure.core$refer" (class "clojure.lang.ILookupThunk")))) 
                                      (47 (goto 71)) ;;to TAG_0
                                      (50 (aload_2)) ;;at TAG_3
                                      (51 (putstatic (fieldCP "__thunk__2__" "clojure.core$refer" (class "clojure.lang.ILookupThunk")))) 
                                      (54 (goto 71)) ;;to TAG_0
                                      (57 (aload_2)) ;;at TAG_4
                                      (58 (putstatic (fieldCP "__thunk__3__" "clojure.core$refer" (class "clojure.lang.ILookupThunk")))) 
                                      (61 (goto 71)) ;;to TAG_0
                                      (64 (aload_2)) ;;at TAG_5
                                      (65 (putstatic (fieldCP "__thunk__4__" "clojure.core$refer" (class "clojure.lang.ILookupThunk")))) 
                                      (68 (goto 71)) ;;to TAG_0
                                      (71 (return)) ;;at TAG_0
                                      (endofcode 72))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$refer-class-table*
  (make-static-class-decls 
   *clojure.core$refer*))

(defconst *package-name-map* 
  ("clojure.core$refer" . "clojure"))

