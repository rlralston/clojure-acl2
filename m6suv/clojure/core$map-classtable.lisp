; core$map-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:44 CDT 2014.
;

(defconst *clojure.core$map*
 (make-class-def
      '(class "clojure.core$map"
            "clojure.lang.RestFn"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "map")
                        (STRING  "conj"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 27)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "map"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$map" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "conj"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$map" (class "clojure.lang.Var"))))
                                      (26 (return))
                                      (endofcode 27))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.RestFn" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doInvoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 9) (max_locals . 7) (code_length . 77)
                                   (parsedcode
                                      (0 (new (class "clojure.core$map$step__4218")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "clojure.core$map$step__4218" () void)))
                                      (7 (astore 6))
                                      (9 (getstatic (fieldCP "const__0" "clojure.core$map" (class "clojure.lang.Var"))))
                                      (12 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (15 (checkcast (class "clojure.lang.IFn")))
                                      (18 (new (class "clojure.core$map$fn__4222")))
                                      (21 (dup))
                                      (22 (aload_1))
                                      (23 (aconst_null))
                                      (24 (astore_1))
                                      (25 (invokespecial
					(methodCP "<init>" "clojure.core$map$fn__4222" ((class "java.lang.Object")) void)))
                                      (28 (aload 6))
                                      (30 (aconst_null))
                                      (31 (astore 6))
                                      (33 (checkcast (class "clojure.lang.IFn")))
                                      (36 (getstatic (fieldCP "const__1" "clojure.core$map" (class "clojure.lang.Var"))))
                                      (39 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (42 (checkcast (class "clojure.lang.IFn")))
                                      (45 (aload 5))
                                      (47 (aconst_null))
                                      (48 (astore 5))
                                      (50 (aload 4))
                                      (52 (aconst_null))
                                      (53 (astore 4))
                                      (55 (aload_3))
                                      (56 (aconst_null))
                                      (57 (astore_3))
                                      (58 (aload_2))
                                      (59 (aconst_null))
                                      (60 (astore_2))
                                      (61 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5))
                                      (66 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (71 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (76 (areturn))
                                      (endofcode 77))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 9) (max_locals . 5) (code_length . 32)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.LazySeq")))
                                      (3 (dup))
                                      (4 (new (class "clojure.core$map$fn__4214")))
                                      (7 (dup))
                                      (8 (aload_1))
                                      (9 (aconst_null))
                                      (10 (astore_1))
                                      (11 (aload 4))
                                      (13 (aconst_null))
                                      (14 (astore 4))
                                      (16 (aload_2))
                                      (17 (aconst_null))
                                      (18 (astore_2))
                                      (19 (aload_3))
                                      (20 (aconst_null))
                                      (21 (astore_3))
                                      (22 (invokespecial
					(methodCP "<init>" "clojure.core$map$fn__4214" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) void)))
                                      (25 (checkcast (class "clojure.lang.IFn")))
                                      (28 (invokespecial
					(methodCP "<init>" "clojure.lang.LazySeq" ((class "clojure.lang.IFn")) void)))
                                      (31 (areturn))
                                      (endofcode 32))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 8) (max_locals . 4) (code_length . 27)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.LazySeq")))
                                      (3 (dup))
                                      (4 (new (class "clojure.core$map$fn__4211")))
                                      (7 (dup))
                                      (8 (aload_1))
                                      (9 (aconst_null))
                                      (10 (astore_1))
                                      (11 (aload_3))
                                      (12 (aconst_null))
                                      (13 (astore_3))
                                      (14 (aload_2))
                                      (15 (aconst_null))
                                      (16 (astore_2))
                                      (17 (invokespecial
					(methodCP "<init>" "clojure.core$map$fn__4211" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) void)))
                                      (20 (checkcast (class "clojure.lang.IFn")))
                                      (23 (invokespecial
					(methodCP "<init>" "clojure.lang.LazySeq" ((class "clojure.lang.IFn")) void)))
                                      (26 (areturn))
                                      (endofcode 27))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 3) (code_length . 24)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.LazySeq")))
                                      (3 (dup))
                                      (4 (new (class "clojure.core$map$fn__4207")))
                                      (7 (dup))
                                      (8 (aload_2))
                                      (9 (aconst_null))
                                      (10 (astore_2))
                                      (11 (aload_1))
                                      (12 (aconst_null))
                                      (13 (astore_1))
                                      (14 (invokespecial
					(methodCP "<init>" "clojure.core$map$fn__4207" ((class "java.lang.Object") (class "java.lang.Object")) void)))
                                      (17 (checkcast (class "clojure.lang.IFn")))
                                      (20 (invokespecial
					(methodCP "<init>" "clojure.lang.LazySeq" ((class "clojure.lang.IFn")) void)))
                                      (23 (areturn))
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getRequiredArity"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iconst_4))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$map-class-table*
  (make-static-class-decls 
   *clojure.core$map*))

(defconst *package-name-map* 
  ("clojure.core$map" . "clojure"))

