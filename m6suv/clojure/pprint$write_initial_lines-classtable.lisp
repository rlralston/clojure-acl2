; pprint$write_initial_lines-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:57 CDT 2014.
;

(defconst *clojure.pprint$write_initial_lines*
 (make-class-def
      '(class "clojure.pprint$write_initial_lines"
            "clojure.lang.AFunction"
            (constant_pool
                        (LONG -1)
                        (STRING  "clojure.core")
                        (STRING  "=")
                        (STRING  "count")
                        (STRING  "\n"))
            (fields
                        (field "const__0" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 43)
                                   (parsedcode
                                      (0 (ldc2_w 0))      ;; LONG:: "-1"
                                      (3 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (6 (putstatic (fieldCP "const__0" "clojure.pprint$write_initial_lines" (class "java.lang.Object"))))
                                      (9 (ldc 1))         ;;STRING:: "clojure.core"
                                      (11 (ldc 2))        ;;STRING:: "="
                                      (13 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (16 (checkcast (class "clojure.lang.Var")))
                                      (19 (putstatic (fieldCP "const__1" "clojure.pprint$write_initial_lines" (class "clojure.lang.Var"))))
                                      (22 (ldc 1))        ;;STRING:: "clojure.core"
                                      (24 (ldc 3))        ;;STRING:: "count"
                                      (26 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (29 (checkcast (class "clojure.lang.Var")))
                                      (32 (putstatic (fieldCP "const__2" "clojure.pprint$write_initial_lines" (class "clojure.lang.Var"))))
                                      (35 (lconst_1))
                                      (36 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (39 (putstatic (fieldCP "const__3" "clojure.pprint$write_initial_lines" (class "java.lang.Object"))))
                                      (42 (return))
                                      (endofcode 43))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 4) (code_length . 56)
                                   (parsedcode
                                      (0 (aload_2)) 
                                      (1 (checkcast (class "java.lang.String"))) 
                                      (4 (ldc 4)) ;;STRING:: "\n"
                                      (6 (checkcast (class "java.lang.String"))) 
                                      (9 (ldc2_w 0)) ;; LONG:: "-1"
                                      (12 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (15 (invokevirtual (methodCP "split" "java.lang.String" ((class "java.lang.String") int) (array (class "java.lang.String"))))) 
                                      (18 (astore_3)) 
                                      (19 (aload_3)) 
                                      (20 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (23 (i2l)) 
                                      (24 (lconst_1)) 
                                      (25 (lcmp)) 
                                      (26 (ifne 36))  ;;to TAG_0
                                      (29 (aload_2)) 
                                      (30 (aconst_null)) 
                                      (31 (astore_2)) 
                                      (32 (goto 55)) ;;to TAG_1
                                      (35 (pop)) 
                                      (36 (new (class "clojure.pprint$write_initial_lines$fn__7505"))) ;;at TAG_0
                                      (39 (dup)) 
                                      (40 (aload_1)) 
                                      (41 (aconst_null)) 
                                      (42 (astore_1)) 
                                      (43 (aload_3)) 
                                      (44 (aconst_null)) 
                                      (45 (astore_3)) 
                                      (46 (invokespecial (methodCP "<init>" "clojure.pprint$write_initial_lines$fn__7505" ((class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (49 (checkcast (class "java.util.concurrent.Callable"))) 
                                      (52 (invokestatic (methodCP "runInTransaction" "clojure.lang.LockingTransaction" ((class "java.util.concurrent.Callable")) (class "java.lang.Object")))) 
                                      (55 (areturn)) ;;at TAG_1
                                      (endofcode 56))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$write_initial_lines-class-table*
  (make-static-class-decls 
   *clojure.pprint$write_initial_lines*))

(defconst *package-name-map* 
  ("clojure.pprint$write_initial_lines" . "clojure"))

