; pprint$render_clauses$fn__7793-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:57 CDT 2014.
;

(defconst *clojure.pprint$render_clauses$fn__7793*
 (make-class-def
      '(class "clojure.pprint$render_clauses$fn__7793"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.pprint")
                        (STRING  "execute-sub-format")
                        (STRING  "clojure.core")
                        (STRING  "*out*")
                        (STRING  "pop-thread-bindings"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "base_navigator" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "navigator" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "clause" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 40)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.pprint"
                                      (2 (ldc 1))         ;;STRING:: "execute-sub-format"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$render_clauses$fn__7793" (class "clojure.lang.Var"))))
                                      (13 (ldc 2))        ;;STRING:: "clojure.core"
                                      (15 (ldc 3))        ;;STRING:: "*out*"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$render_clauses$fn__7793" (class "clojure.lang.Var"))))
                                      (26 (ldc 2))        ;;STRING:: "clojure.core"
                                      (28 (ldc 4))        ;;STRING:: "pop-thread-bindings"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.pprint$render_clauses$fn__7793" (class "clojure.lang.Var"))))
                                      (39 (return))
                                      (endofcode 40))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 20)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "base_navigator" "clojure.pprint$render_clauses$fn__7793" (class "java.lang.Object"))))
                                      (9 (aload_0))
                                      (10 (aload_2))
                                      (11 (putfield (fieldCP "navigator" "clojure.pprint$render_clauses$fn__7793" (class "java.lang.Object"))))
                                      (14 (aload_0))
                                      (15 (aload_3))
                                      (16 (putfield (fieldCP "clause" "clojure.pprint$render_clauses$fn__7793" (class "java.lang.Object"))))
                                      (19 (return))
                                      (endofcode 20))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 3) (code_length . 87)
                                   (parsedcode
                                      (0 (iconst_2)) ;;at TAG_1
                                      (1 (anewarray (class "java.lang.Object"))) 
                                      (4 (dup)) 
                                      (5 (iconst_0)) 
                                      (6 (getstatic (fieldCP "const__0" "clojure.pprint$render_clauses$fn__7793" (class "clojure.lang.Var")))) 
                                      (9 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (12 (checkcast (class "clojure.lang.IFn"))) 
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "clause" "clojure.pprint$render_clauses$fn__7793" (class "java.lang.Object")))) 
                                      (19 (aload_0)) 
                                      (20 (getfield (fieldCP "navigator" "clojure.pprint$render_clauses$fn__7793" (class "java.lang.Object")))) 
                                      (23 (aload_0)) 
                                      (24 (getfield (fieldCP "base_navigator" "clojure.pprint$render_clauses$fn__7793" (class "java.lang.Object")))) 
                                      (27 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (32 (aastore)) 
                                      (33 (dup)) 
                                      (34 (iconst_1)) 
                                      (35 (getstatic (fieldCP "const__1" "clojure.pprint$render_clauses$fn__7793" (class "clojure.lang.Var")))) 
                                      (38 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (41 (invokevirtual (methodCP "toString" "java.lang.Object" () (class "java.lang.String")))) 
                                      (44 (aastore)) 
                                      (45 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (48 (astore_1)) 
                                      (49 (getstatic (fieldCP "const__2" "clojure.pprint$render_clauses$fn__7793" (class "clojure.lang.Var")))) ;;at TAG_2
                                      (52 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (55 (checkcast (class "clojure.lang.IFn"))) 
                                      (58 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (63 (pop)) 
                                      (64 (goto 85)) ;;to TAG_0
                                      (67 (astore_2)) ;;at TAG_3
                                      (68 (getstatic (fieldCP "const__2" "clojure.pprint$render_clauses$fn__7793" (class "clojure.lang.Var")))) 
                                      (71 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (74 (checkcast (class "clojure.lang.IFn"))) 
                                      (77 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (82 (pop)) 
                                      (83 (aload_2)) 
                                      (84 (athrow)) 
                                      (85 (aload_1)) ;;at TAG_0
                                      (86 (areturn)) 
                                      (endofcode 87))
                                   (Exceptions 
                                     (handler 0 49  67 (class "java.lang.Throwable")))
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$render_clauses$fn__7793-class-table*
  (make-static-class-decls 
   *clojure.pprint$render_clauses$fn__7793*))

(defconst *package-name-map* 
  ("clojure.pprint$render_clauses$fn__7793" . "clojure"))

