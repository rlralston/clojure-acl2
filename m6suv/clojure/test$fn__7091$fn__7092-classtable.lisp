; test$fn__7091$fn__7092-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:59 CDT 2014.
;

(defconst *clojure.test$fn__7091$fn__7092*
 (make-class-def
      '(class "clojure.test$fn__7091$fn__7092"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "nil?")
                        (STRING  "always-fail")
                        (STRING  "seq?")
                        (STRING  "first")
                        (STRING  "else")
                        (STRING  "default"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 76)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "nil?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.test$fn__7091$fn__7092" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "always-fail"
                                      (16 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (19 (checkcast (class "clojure.lang.Keyword")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.test$fn__7091$fn__7092" (class "clojure.lang.Keyword"))))
                                      (25 (ldc 0))        ;;STRING:: "clojure.core"
                                      (27 (ldc 3))        ;;STRING:: "seq?"
                                      (29 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (32 (checkcast (class "clojure.lang.Var")))
                                      (35 (putstatic (fieldCP "const__2" "clojure.test$fn__7091$fn__7092" (class "clojure.lang.Var"))))
                                      (38 (ldc 0))        ;;STRING:: "clojure.core"
                                      (40 (ldc 4))        ;;STRING:: "first"
                                      (42 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (45 (checkcast (class "clojure.lang.Var")))
                                      (48 (putstatic (fieldCP "const__3" "clojure.test$fn__7091$fn__7092" (class "clojure.lang.Var"))))
                                      (51 (aconst_null))
                                      (52 (ldc 5))        ;;STRING:: "else"
                                      (54 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (57 (checkcast (class "clojure.lang.Keyword")))
                                      (60 (putstatic (fieldCP "const__4" "clojure.test$fn__7091$fn__7092" (class "clojure.lang.Keyword"))))
                                      (63 (aconst_null))
                                      (64 (ldc 6))        ;;STRING:: "default"
                                      (66 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (69 (checkcast (class "clojure.lang.Keyword")))
                                      (72 (putstatic (fieldCP "const__5" "clojure.test$fn__7091$fn__7092" (class "clojure.lang.Keyword"))))
                                      (75 (return))
                                      (endofcode 76))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 83)
                                   (parsedcode
                                      (0 (aload_2)) 
                                      (1 (aconst_null)) 
                                      (2 (invokestatic (methodCP "identical" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (5 (ifeq 15)) ;;to TAG_0
                                      (8 (getstatic (fieldCP "const__1" "clojure.test$fn__7091$fn__7092" (class "clojure.lang.Keyword")))) 
                                      (11 (goto 82)) ;;to TAG_1
                                      (14 (pop)) 
                                      (15 (getstatic (fieldCP "const__2" "clojure.test$fn__7091$fn__7092" (class "clojure.lang.Var")))) ;;at TAG_0
                                      (18 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (21 (checkcast (class "clojure.lang.IFn"))) 
                                      (24 (aload_2)) 
                                      (25 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (30 (dup)) 
                                      (31 (ifnull 60))  ;;to TAG_2
                                      (34 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (37 (if_acmpeq 61)) ;;to TAG_3
                                      (40 (getstatic (fieldCP "const__3" "clojure.test$fn__7091$fn__7092" (class "clojure.lang.Var")))) 
                                      (43 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (46 (checkcast (class "clojure.lang.IFn"))) 
                                      (49 (aload_2)) 
                                      (50 (aconst_null)) 
                                      (51 (astore_2)) 
                                      (52 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (57 (goto 82)) ;;to TAG_1
                                      (60 (pop)) ;;at TAG_2
                                      (61 (getstatic (fieldCP "const__4" "clojure.test$fn__7091$fn__7092" (class "clojure.lang.Keyword")))) ;;at TAG_3
                                      (64 (dup)) 
                                      (65 (ifnull 80)) ;;to TAG_4
                                      (68 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (71 (if_acmpeq 81)) ;;to TAG_5
                                      (74 (getstatic (fieldCP "const__5" "clojure.test$fn__7091$fn__7092" (class "clojure.lang.Keyword")))) 
                                      (77 (goto 82)) ;;to TAG_1
                                      (80 (pop)) ;;at TAG_4
                                      (81 (aconst_null)) ;;at TAG_5
                                      (82 (areturn)) ;;at TAG_1
                                      (endofcode 83))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *test$fn__7091$fn__7092-class-table*
  (make-static-class-decls 
   *clojure.test$fn__7091$fn__7092*))

(defconst *package-name-map* 
  ("clojure.test$fn__7091$fn__7092" . "clojure"))

