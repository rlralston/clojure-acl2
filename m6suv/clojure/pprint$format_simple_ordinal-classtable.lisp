; pprint$format_simple_ordinal-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:56 CDT 2014.
;

(defconst *clojure.pprint$format_simple_ordinal*
 (make-class-def
      '(class "clojure.pprint$format_simple_ordinal"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "quot")
                        (LONG 100)
                        (STRING  "rem")
                        (STRING  "str")
                        (STRING  "pos?")
                        (STRING  "nth")
                        (STRING  "clojure.pprint")
                        (STRING  "english-cardinal-units")
                        (STRING  "<")
                        (LONG 20)
                        (STRING  "english-ordinal-units")
                        (LONG 10)
                        (STRING  "not")
                        (STRING  "english-ordinal-tens")
                        (STRING  "english-cardinal-tens")
                        (STRING  " hundred")
                        (STRING  " ")
                        (STRING  "-")
                        (STRING  "th"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 171)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "quot"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var"))))
                                      (13 (ldc2_w 2))     ;; LONG:: "100"
                                      (16 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (19 (putstatic (fieldCP "const__1" "clojure.pprint$format_simple_ordinal" (class "java.lang.Object"))))
                                      (22 (ldc 0))        ;;STRING:: "clojure.core"
                                      (24 (ldc 3))        ;;STRING:: "rem"
                                      (26 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (29 (checkcast (class "clojure.lang.Var")))
                                      (32 (putstatic (fieldCP "const__2" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var"))))
                                      (35 (ldc 0))        ;;STRING:: "clojure.core"
                                      (37 (ldc 4))        ;;STRING:: "str"
                                      (39 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (42 (checkcast (class "clojure.lang.Var")))
                                      (45 (putstatic (fieldCP "const__3" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var"))))
                                      (48 (ldc 0))        ;;STRING:: "clojure.core"
                                      (50 (ldc 5))        ;;STRING:: "pos?"
                                      (52 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (55 (checkcast (class "clojure.lang.Var")))
                                      (58 (putstatic (fieldCP "const__4" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var"))))
                                      (61 (ldc 0))        ;;STRING:: "clojure.core"
                                      (63 (ldc 6))        ;;STRING:: "nth"
                                      (65 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (68 (checkcast (class "clojure.lang.Var")))
                                      (71 (putstatic (fieldCP "const__5" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var"))))
                                      (74 (ldc 7))        ;;STRING:: "clojure.pprint"
                                      (76 (ldc 8))        ;;STRING:: "english-cardinal-units"
                                      (78 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (81 (checkcast (class "clojure.lang.Var")))
                                      (84 (putstatic (fieldCP "const__6" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var"))))
                                      (87 (ldc 0))        ;;STRING:: "clojure.core"
                                      (89 (ldc 9))        ;;STRING:: "<"
                                      (91 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (94 (checkcast (class "clojure.lang.Var")))
                                      (97 (putstatic (fieldCP "const__7" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var"))))
                                      (100 (ldc2_w 10))   ;; LONG:: "20"
                                      (103 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (106 (putstatic (fieldCP "const__8" "clojure.pprint$format_simple_ordinal" (class "java.lang.Object"))))
                                      (109 (ldc 7))       ;;STRING:: "clojure.pprint"
                                      (111 (ldc 11))      ;;STRING:: "english-ordinal-units"
                                      (113 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (116 (checkcast (class "clojure.lang.Var")))
                                      (119 (putstatic (fieldCP "const__9" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var"))))
                                      (122 (ldc2_w 12))   ;; LONG:: "10"
                                      (125 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (128 (putstatic (fieldCP "const__10" "clojure.pprint$format_simple_ordinal" (class "java.lang.Object"))))
                                      (131 (ldc 0))       ;;STRING:: "clojure.core"
                                      (133 (ldc 13))      ;;STRING:: "not"
                                      (135 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (138 (checkcast (class "clojure.lang.Var")))
                                      (141 (putstatic (fieldCP "const__11" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var"))))
                                      (144 (ldc 7))       ;;STRING:: "clojure.pprint"
                                      (146 (ldc 14))      ;;STRING:: "english-ordinal-tens"
                                      (148 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (151 (checkcast (class "clojure.lang.Var")))
                                      (154 (putstatic (fieldCP "const__12" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var"))))
                                      (157 (ldc 7))       ;;STRING:: "clojure.pprint"
                                      (159 (ldc 15))      ;;STRING:: "english-cardinal-tens"
                                      (161 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (164 (checkcast (class "clojure.lang.Var")))
                                      (167 (putstatic (fieldCP "const__13" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var"))))
                                      (170 (return))
                                      (endofcode 171))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 9) (max_locals . 7) (code_length . 395)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (ldc2_w 2)) ;; LONG:: "100"
                                      (4 (invokestatic (methodCP "quotient" "clojure.lang.Numbers" ((class "java.lang.Object") long) (class "java.lang.Number")))) 
                                      (7 (astore_2)) 
                                      (8 (aload_1)) 
                                      (9 (aconst_null)) 
                                      (10 (astore_1)) 
                                      (11 (ldc2_w 2)) ;; LONG:: "100"
                                      (14 (invokestatic (methodCP "remainder" "clojure.lang.Numbers" ((class "java.lang.Object") long) (class "java.lang.Number")))) 
                                      (17 (astore_3)) 
                                      (18 (getstatic (fieldCP "const__3" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var")))) 
                                      (21 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (24 (checkcast (class "clojure.lang.IFn"))) 
                                      (27 (aload_2)) 
                                      (28 (invokestatic (methodCP "isPos" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (31 (ifeq 70)) ;;to TAG_0
                                      (34 (getstatic (fieldCP "const__3" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var")))) 
                                      (37 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (40 (checkcast (class "clojure.lang.IFn"))) 
                                      (43 (getstatic (fieldCP "const__6" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var")))) 
                                      (46 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (49 (aload_2)) 
                                      (50 (checkcast (class "java.lang.Number"))) 
                                      (53 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (56 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (59 (ldc 16)) ;;STRING:: " hundred"
                                      (61 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (66 (goto 71)) ;;to TAG_1
                                      (69 (pop)) 
                                      (70 (aconst_null)) ;;at TAG_0
                                      (71 (aload_2)) ;;at TAG_1
                                      (72 (invokestatic (methodCP "isPos" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (75 (istore 4)) 
                                      (77 (iload 4)) 
                                      (79 (ifeq 90)) ;;to TAG_2
                                      (82 (aload_3)) 
                                      (83 (invokestatic (methodCP "isPos" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (86 (goto 92)) ;;to TAG_3
                                      (89 (pop)) 
                                      (90 (iload 4)) ;;at TAG_2
                                      (92 (ifeq 101)) ;;to TAG_4;;at TAG_3
                                      (95 (ldc 17)) ;;STRING:: " "
                                      (97 (goto 102)) ;;to TAG_5
                                      (100 (pop)) 
                                      (101 (aconst_null)) ;;at TAG_4
                                      (102 (aload_3)) ;;at TAG_5
                                      (103 (invokestatic (methodCP "isPos" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (106 (ifeq 373)) ;;to TAG_6
                                      (109 (aload_3)) 
                                      (110 (ldc2_w 10)) ;; LONG:: "20"
                                      (113 (invokestatic (methodCP "lt" "clojure.lang.Numbers" ((class "java.lang.Object") long) boolean))) 
                                      (116 (ifeq 141)) ;;to TAG_7
                                      (119 (getstatic (fieldCP "const__9" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var")))) 
                                      (122 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (125 (aload_3)) 
                                      (126 (aconst_null)) 
                                      (127 (astore_3)) 
                                      (128 (checkcast (class "java.lang.Number"))) 
                                      (131 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (134 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (137 (goto 369)) ;;to TAG_8
                                      (140 (pop)) 
                                      (141 (aload_3)) ;;at TAG_7
                                      (142 (ldc2_w 12)) ;; LONG:: "10"
                                      (145 (invokestatic (methodCP "quotient" "clojure.lang.Numbers" ((class "java.lang.Object") long) (class "java.lang.Number")))) 
                                      (148 (astore 4)) 
                                      (150 (aload_3)) 
                                      (151 (aconst_null)) 
                                      (152 (astore_3)) 
                                      (153 (ldc2_w 12)) ;; LONG:: "10"
                                      (156 (invokestatic (methodCP "remainder" "clojure.lang.Numbers" ((class "java.lang.Object") long) (class "java.lang.Number")))) 
                                      (159 (astore 5)) 
                                      (161 (aload 4)) 
                                      (163 (invokestatic (methodCP "isPos" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (166 (istore 6)) 
                                      (168 (iload 6)) 
                                      (170 (ifeq 208)) ;;to TAG_9
                                      (173 (getstatic (fieldCP "const__11" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var")))) 
                                      (176 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (179 (checkcast (class "clojure.lang.IFn"))) 
                                      (182 (aload 5)) 
                                      (184 (invokestatic (methodCP "isPos" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (187 (ifeq 196)) ;;to TAG_10
                                      (190 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (193 (goto 199)) ;;to TAG_11
                                      (196 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_10
                                      (199 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_11
                                      (204 (goto 222)) ;;to TAG_12
                                      (207 (pop)) 
                                      (208 (iload 6)) ;;at TAG_9
                                      (210 (ifeq 219))  ;;to TAG_13
                                      (213 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (216 (goto 222)) ;;to TAG_12
                                      (219 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_13
                                      (222 (dup)) ;;at TAG_12
                                      (223 (ifnull 255)) ;;to TAG_14
                                      (226 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (229 (if_acmpeq 256)) ;;to TAG_15
                                      (232 (getstatic (fieldCP "const__12" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var")))) 
                                      (235 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (238 (aload 4)) 
                                      (240 (aconst_null)) 
                                      (241 (astore 4)) 
                                      (243 (checkcast (class "java.lang.Number"))) 
                                      (246 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (249 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (252 (goto 369)) ;;to TAG_8
                                      (255 (pop)) ;;at TAG_14
                                      (256 (getstatic (fieldCP "const__3" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var")))) ;;at TAG_15
                                      (259 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (262 (checkcast (class "clojure.lang.IFn"))) 
                                      (265 (aload 4)) 
                                      (267 (invokestatic (methodCP "isPos" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (270 (ifeq 294)) ;;to TAG_16
                                      (273 (getstatic (fieldCP "const__13" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var")))) 
                                      (276 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (279 (aload 4)) 
                                      (281 (checkcast (class "java.lang.Number"))) 
                                      (284 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (287 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (290 (goto 295)) ;;to TAG_17
                                      (293 (pop)) 
                                      (294 (aconst_null)) ;;at TAG_16
                                      (295 (aload 4)) ;;at TAG_17
                                      (297 (aconst_null)) 
                                      (298 (astore 4)) 
                                      (300 (invokestatic (methodCP "isPos" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (303 (istore 6)) 
                                      (305 (iload 6)) 
                                      (307 (ifeq 319)) ;;to TAG_18
                                      (310 (aload 5)) 
                                      (312 (invokestatic (methodCP "isPos" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (315 (goto 321)) ;;to TAG_19
                                      (318 (pop)) 
                                      (319 (iload 6)) ;;at TAG_18
                                      (321 (ifeq 330)) ;;to TAG_20;;at TAG_19
                                      (324 (ldc 18)) ;;STRING:: "-"
                                      (326 (goto 331)) ;;to TAG_21
                                      (329 (pop)) 
                                      (330 (aconst_null)) ;;at TAG_20
                                      (331 (aload 5)) ;;at TAG_21
                                      (333 (invokestatic (methodCP "isPos" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (336 (ifeq 363)) ;;to TAG_22
                                      (339 (getstatic (fieldCP "const__9" "clojure.pprint$format_simple_ordinal" (class "clojure.lang.Var")))) 
                                      (342 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (345 (aload 5)) 
                                      (347 (aconst_null)) 
                                      (348 (astore 5)) 
                                      (350 (checkcast (class "java.lang.Number"))) 
                                      (353 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (356 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (359 (goto 364)) ;;to TAG_23
                                      (362 (pop)) 
                                      (363 (aconst_null)) ;;at TAG_22
                                      (364 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) ;;at TAG_23
                                      (369 (goto 389)) ;;to TAG_24;;at TAG_8
                                      (372 (pop)) 
                                      (373 (aload_2)) ;;at TAG_6
                                      (374 (aconst_null)) 
                                      (375 (astore_2)) 
                                      (376 (invokestatic (methodCP "isPos" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (379 (ifeq 388)) ;;to TAG_25
                                      (382 (ldc 19)) ;;STRING:: "th"
                                      (384 (goto 389)) ;;to TAG_24
                                      (387 (pop)) 
                                      (388 (aconst_null)) ;;at TAG_25
                                      (389 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) ;;at TAG_24
                                      (394 (areturn)) 
                                      (endofcode 395))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$format_simple_ordinal-class-table*
  (make-static-class-decls 
   *clojure.pprint$format_simple_ordinal*))

(defconst *package-name-map* 
  ("clojure.pprint$format_simple_ordinal" . "clojure"))

