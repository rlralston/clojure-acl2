; pprint$conditional_newline-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:55 CDT 2014.
;

(defconst *clojure.pprint$conditional_newline*
 (make-class-def
      '(class "clojure.pprint$conditional_newline"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "colon")
                        (STRING  "at")
                        (STRING  "mandatory")
                        (STRING  "fill")
                        (STRING  "miser")
                        (STRING  "linear")
                        (STRING  "clojure.pprint")
                        (STRING  "pprint-newline"))
            (fields
                        (field "const__0" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__1__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__1__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__2__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__2__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 146)
                                   (parsedcode
                                      (0 (aconst_null))
                                      (1 (ldc 0))         ;;STRING:: "colon"
                                      (3 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (6 (checkcast (class "clojure.lang.Keyword")))
                                      (9 (putstatic (fieldCP "const__0" "clojure.pprint$conditional_newline" (class "clojure.lang.Keyword"))))
                                      (12 (aconst_null))
                                      (13 (ldc 1))        ;;STRING:: "at"
                                      (15 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (18 (checkcast (class "clojure.lang.Keyword")))
                                      (21 (putstatic (fieldCP "const__1" "clojure.pprint$conditional_newline" (class "clojure.lang.Keyword"))))
                                      (24 (aconst_null))
                                      (25 (ldc 2))        ;;STRING:: "mandatory"
                                      (27 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (30 (checkcast (class "clojure.lang.Keyword")))
                                      (33 (putstatic (fieldCP "const__2" "clojure.pprint$conditional_newline" (class "clojure.lang.Keyword"))))
                                      (36 (aconst_null))
                                      (37 (ldc 3))        ;;STRING:: "fill"
                                      (39 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (42 (checkcast (class "clojure.lang.Keyword")))
                                      (45 (putstatic (fieldCP "const__3" "clojure.pprint$conditional_newline" (class "clojure.lang.Keyword"))))
                                      (48 (aconst_null))
                                      (49 (ldc 4))        ;;STRING:: "miser"
                                      (51 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (54 (checkcast (class "clojure.lang.Keyword")))
                                      (57 (putstatic (fieldCP "const__4" "clojure.pprint$conditional_newline" (class "clojure.lang.Keyword"))))
                                      (60 (aconst_null))
                                      (61 (ldc 5))        ;;STRING:: "linear"
                                      (63 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (66 (checkcast (class "clojure.lang.Keyword")))
                                      (69 (putstatic (fieldCP "const__5" "clojure.pprint$conditional_newline" (class "clojure.lang.Keyword"))))
                                      (72 (ldc 6))        ;;STRING:: "clojure.pprint"
                                      (74 (ldc 7))        ;;STRING:: "pprint-newline"
                                      (76 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (79 (checkcast (class "clojure.lang.Var")))
                                      (82 (putstatic (fieldCP "const__6" "clojure.pprint$conditional_newline" (class "clojure.lang.Var"))))
                                      (85 (new (class "clojure.lang.KeywordLookupSite")))
                                      (88 (dup))
                                      (89 (aconst_null))
                                      (90 (ldc 0))        ;;STRING:: "colon"
                                      (92 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (95 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (98 (dup))
                                      (99 (putstatic (fieldCP "__site__0__" "clojure.pprint$conditional_newline" (class "clojure.lang.KeywordLookupSite"))))
                                      (102 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$conditional_newline" (class "clojure.lang.ILookupThunk"))))
                                      (105 (new (class "clojure.lang.KeywordLookupSite")))
                                      (108 (dup))
                                      (109 (aconst_null))
                                      (110 (ldc 1))       ;;STRING:: "at"
                                      (112 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (115 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (118 (dup))
                                      (119 (putstatic (fieldCP "__site__1__" "clojure.pprint$conditional_newline" (class "clojure.lang.KeywordLookupSite"))))
                                      (122 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$conditional_newline" (class "clojure.lang.ILookupThunk"))))
                                      (125 (new (class "clojure.lang.KeywordLookupSite")))
                                      (128 (dup))
                                      (129 (aconst_null))
                                      (130 (ldc 1))       ;;STRING:: "at"
                                      (132 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (135 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (138 (dup))
                                      (139 (putstatic (fieldCP "__site__2__" "clojure.pprint$conditional_newline" (class "clojure.lang.KeywordLookupSite"))))
                                      (142 (putstatic (fieldCP "__thunk__2__" "clojure.pprint$conditional_newline" (class "clojure.lang.ILookupThunk"))))
                                      (145 (return))
                                      (endofcode 146))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 5) (code_length . 207)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "__thunk__0__" "clojure.pprint$conditional_newline" (class "clojure.lang.ILookupThunk")))) 
                                      (3 (dup)) 
                                      (4 (aload_1)) 
                                      (5 (dup_x2)) 
                                      (6 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (11 (dup_x2)) 
                                      (12 (if_acmpeq 19)) ;;to TAG_0
                                      (15 (pop)) 
                                      (16 (goto 41))  ;;to TAG_1
                                      (19 (swap)) ;;at TAG_0
                                      (20 (pop)) 
                                      (21 (dup)) 
                                      (22 (getstatic (fieldCP "__site__0__" "clojure.pprint$conditional_newline" (class "clojure.lang.KeywordLookupSite")))) 
                                      (25 (swap)) 
                                      (26 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (31 (dup)) 
                                      (32 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$conditional_newline" (class "clojure.lang.ILookupThunk")))) 
                                      (35 (swap)) 
                                      (36 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (41 (dup)) ;;at TAG_1
                                      (42 (ifnull 117)) ;;to TAG_2
                                      (45 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (48 (if_acmpeq 118)) ;;to TAG_3
                                      (51 (getstatic (fieldCP "__thunk__1__" "clojure.pprint$conditional_newline" (class "clojure.lang.ILookupThunk")))) 
                                      (54 (dup)) 
                                      (55 (aload_1)) 
                                      (56 (aconst_null)) 
                                      (57 (astore_1)) 
                                      (58 (dup_x2)) 
                                      (59 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (64 (dup_x2)) 
                                      (65 (if_acmpeq 72)) ;;to TAG_4
                                      (68 (pop)) 
                                      (69 (goto 94)) ;;to TAG_5
                                      (72 (swap)) ;;at TAG_4
                                      (73 (pop)) 
                                      (74 (dup)) 
                                      (75 (getstatic (fieldCP "__site__1__" "clojure.pprint$conditional_newline" (class "clojure.lang.KeywordLookupSite")))) 
                                      (78 (swap)) 
                                      (79 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (84 (dup)) 
                                      (85 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$conditional_newline" (class "clojure.lang.ILookupThunk")))) 
                                      (88 (swap)) 
                                      (89 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (94 (dup)) ;;at TAG_5
                                      (95 (ifnull 110)) ;;to TAG_6
                                      (98 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (101 (if_acmpeq 111)) ;;to TAG_7
                                      (104 (getstatic (fieldCP "const__2" "clojure.pprint$conditional_newline" (class "clojure.lang.Keyword")))) 
                                      (107 (goto 114)) ;;to TAG_8
                                      (110 (pop)) ;;at TAG_6
                                      (111 (getstatic (fieldCP "const__3" "clojure.pprint$conditional_newline" (class "clojure.lang.Keyword")))) ;;at TAG_7
                                      (114 (goto 181)) ;;to TAG_9;;at TAG_8
                                      (117 (pop)) ;;at TAG_2
                                      (118 (getstatic (fieldCP "__thunk__2__" "clojure.pprint$conditional_newline" (class "clojure.lang.ILookupThunk")))) ;;at TAG_3
                                      (121 (dup)) 
                                      (122 (aload_1)) 
                                      (123 (aconst_null)) 
                                      (124 (astore_1)) 
                                      (125 (dup_x2)) 
                                      (126 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (131 (dup_x2)) 
                                      (132 (if_acmpeq 139)) ;;to TAG_10
                                      (135 (pop)) 
                                      (136 (goto 161)) ;;to TAG_11
                                      (139 (swap)) ;;at TAG_10
                                      (140 (pop)) 
                                      (141 (dup)) 
                                      (142 (getstatic (fieldCP "__site__2__" "clojure.pprint$conditional_newline" (class "clojure.lang.KeywordLookupSite")))) 
                                      (145 (swap)) 
                                      (146 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (151 (dup)) 
                                      (152 (putstatic (fieldCP "__thunk__2__" "clojure.pprint$conditional_newline" (class "clojure.lang.ILookupThunk")))) 
                                      (155 (swap)) 
                                      (156 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (161 (dup)) ;;at TAG_11
                                      (162 (ifnull 177)) ;;to TAG_12
                                      (165 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (168 (if_acmpeq 178)) ;;to TAG_13
                                      (171 (getstatic (fieldCP "const__4" "clojure.pprint$conditional_newline" (class "clojure.lang.Keyword")))) 
                                      (174 (goto 181)) ;;to TAG_9
                                      (177 (pop)) ;;at TAG_12
                                      (178 (getstatic (fieldCP "const__5" "clojure.pprint$conditional_newline" (class "clojure.lang.Keyword")))) ;;at TAG_13
                                      (181 (astore 4)) ;;at TAG_9
                                      (183 (getstatic (fieldCP "const__6" "clojure.pprint$conditional_newline" (class "clojure.lang.Var")))) 
                                      (186 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (189 (checkcast (class "clojure.lang.IFn"))) 
                                      (192 (aload 4)) 
                                      (194 (aconst_null)) 
                                      (195 (astore 4)) 
                                      (197 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (202 (pop)) 
                                      (203 (aload_2)) 
                                      (204 (aconst_null)) 
                                      (205 (astore_2)) 
                                      (206 (areturn)) 
                                      (endofcode 207))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 50)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 49 (0 . 2) (28 35 42))))  ;;to TAG_2;;to TAG_3;;to TAG_0;;to TAG_1
                                      (28 (aload_2)) ;;at TAG_1
                                      (29 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$conditional_newline" (class "clojure.lang.ILookupThunk")))) 
                                      (32 (goto 49)) ;;to TAG_0
                                      (35 (aload_2)) ;;at TAG_2
                                      (36 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$conditional_newline" (class "clojure.lang.ILookupThunk")))) 
                                      (39 (goto 49)) ;;to TAG_0
                                      (42 (aload_2)) ;;at TAG_3
                                      (43 (putstatic (fieldCP "__thunk__2__" "clojure.pprint$conditional_newline" (class "clojure.lang.ILookupThunk")))) 
                                      (46 (goto 49)) ;;to TAG_0
                                      (49 (return)) ;;at TAG_0
                                      (endofcode 50))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$conditional_newline-class-table*
  (make-static-class-decls 
   *clojure.pprint$conditional_newline*))

(defconst *package-name-map* 
  ("clojure.pprint$conditional_newline" . "clojure"))

