; string$blank_QMARK_-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:58 CDT 2014.
;

(defconst *clojure.string$blank_QMARK_*
 (make-class-def
      '(class "clojure.string$blank_QMARK_"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "int")
                        (STRING  "=")
                        (STRING  "inc"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 47)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "int"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.string$blank_QMARK_" (class "clojure.lang.Var"))))
                                      (13 (lconst_0))
                                      (14 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (17 (putstatic (fieldCP "const__1" "clojure.string$blank_QMARK_" (class "java.lang.Object"))))
                                      (20 (ldc 0))        ;;STRING:: "clojure.core"
                                      (22 (ldc 2))        ;;STRING:: "="
                                      (24 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (27 (checkcast (class "clojure.lang.Var")))
                                      (30 (putstatic (fieldCP "const__2" "clojure.string$blank_QMARK_" (class "clojure.lang.Var"))))
                                      (33 (ldc 0))        ;;STRING:: "clojure.core"
                                      (35 (ldc 3))        ;;STRING:: "inc"
                                      (37 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (40 (checkcast (class "clojure.lang.Var")))
                                      (43 (putstatic (fieldCP "const__3" "clojure.string$blank_QMARK_" (class "clojure.lang.Var"))))
                                      (46 (return))
                                      (endofcode 47))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 81)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (dup)) 
                                      (2 (ifnull 76)) ;;to TAG_0
                                      (5 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (8 (if_acmpeq 77)) ;;to TAG_1
                                      (11 (lconst_0)) 
                                      (12 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (15 (i2l)) 
                                      (16 (lstore_2)) 
                                      (17 (aload_1)) ;;at TAG_5
                                      (18 (checkcast (class "java.lang.CharSequence"))) 
                                      (21 (invokeinterface (methodCP "length" "java.lang.CharSequence" () int) 1)) 
                                      (26 (i2l)) 
                                      (27 (lload_2)) 
                                      (28 (lcmp)) 
                                      (29 (ifne 39))  ;;to TAG_2
                                      (32 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (35 (goto 73)) ;;to TAG_3
                                      (38 (pop)) 
                                      (39 (aload_1)) ;;at TAG_2
                                      (40 (checkcast (class "java.lang.CharSequence"))) 
                                      (43 (lload_2)) 
                                      (44 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (47 (invokeinterface (methodCP "charAt" "java.lang.CharSequence" (int) char) 2)) 
                                      (52 (invokestatic (methodCP "isWhitespace" "java.lang.Character" (char) boolean))) 
                                      (55 (ifeq 70)) ;;to TAG_4
                                      (58 (lload_2)) 
                                      (59 (invokestatic (methodCP "inc" "clojure.lang.Numbers" (long) long))) 
                                      (62 (lstore_2)) 
                                      (63 (goto 17)) ;;to TAG_5
                                      (66 (goto 73)) ;;to TAG_3
                                      (69 (pop)) 
                                      (70 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_4
                                      (73 (goto 80)) ;;to TAG_6;;at TAG_3
                                      (76 (pop)) ;;at TAG_0
                                      (77 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_1
                                      (80 (areturn)) ;;at TAG_6
                                      (endofcode 81))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *string$blank_QMARK_-class-table*
  (make-static-class-decls 
   *clojure.string$blank_QMARK_*))

(defconst *package-name-map* 
  ("clojure.string$blank_QMARK_" . "clojure"))

