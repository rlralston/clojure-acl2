; core$fn__5420-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:42 CDT 2014.
;

(defconst *clojure.core$fn__5420*
 (make-class-def
      '(class "clojure.core$fn__5420"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "*print-dup*")
                        (STRING  "*print-readably*")
                        (STRING  "long")
                        (STRING  "count")
                        (STRING  "<")
                        (STRING  "char-escape-string")
                        (STRING  "unchecked-inc"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 107)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "*print-dup*"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$fn__5420" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "*print-readably*"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$fn__5420" (class "clojure.lang.Var"))))
                                      (26 (bipush 34))
                                      (28 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (31 (putstatic (fieldCP "const__2" "clojure.core$fn__5420" (class "java.lang.Object"))))
                                      (34 (ldc 0))        ;;STRING:: "clojure.core"
                                      (36 (ldc 3))        ;;STRING:: "long"
                                      (38 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (41 (checkcast (class "clojure.lang.Var")))
                                      (44 (putstatic (fieldCP "const__3" "clojure.core$fn__5420" (class "clojure.lang.Var"))))
                                      (47 (ldc 0))        ;;STRING:: "clojure.core"
                                      (49 (ldc 4))        ;;STRING:: "count"
                                      (51 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (54 (checkcast (class "clojure.lang.Var")))
                                      (57 (putstatic (fieldCP "const__4" "clojure.core$fn__5420" (class "clojure.lang.Var"))))
                                      (60 (lconst_0))
                                      (61 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (64 (putstatic (fieldCP "const__5" "clojure.core$fn__5420" (class "java.lang.Object"))))
                                      (67 (ldc 0))        ;;STRING:: "clojure.core"
                                      (69 (ldc 5))        ;;STRING:: "<"
                                      (71 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (74 (checkcast (class "clojure.lang.Var")))
                                      (77 (putstatic (fieldCP "const__6" "clojure.core$fn__5420" (class "clojure.lang.Var"))))
                                      (80 (ldc 0))        ;;STRING:: "clojure.core"
                                      (82 (ldc 6))        ;;STRING:: "char-escape-string"
                                      (84 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (87 (checkcast (class "clojure.lang.Var")))
                                      (90 (putstatic (fieldCP "const__7" "clojure.core$fn__5420" (class "clojure.lang.Var"))))
                                      (93 (ldc 0))        ;;STRING:: "clojure.core"
                                      (95 (ldc 7))        ;;STRING:: "unchecked-inc"
                                      (97 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (100 (checkcast (class "clojure.lang.Var")))
                                      (103 (putstatic (fieldCP "const__8" "clojure.core$fn__5420" (class "clojure.lang.Var"))))
                                      (106 (return))
                                      (endofcode 107))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 10) (code_length . 211)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$fn__5420" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (astore_3)) 
                                      (7 (aload_3)) 
                                      (8 (dup)) 
                                      (9 (ifnull 24)) ;;to TAG_0
                                      (12 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (15 (if_acmpeq 25))  ;;to TAG_1
                                      (18 (aload_3)) 
                                      (19 (aconst_null)) 
                                      (20 (astore_3)) 
                                      (21 (goto 31)) ;;to TAG_2
                                      (24 (pop)) ;;at TAG_0
                                      (25 (getstatic (fieldCP "const__1" "clojure.core$fn__5420" (class "clojure.lang.Var")))) ;;at TAG_1
                                      (28 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (31 (dup)) ;;at TAG_2
                                      (32 (ifnull 191)) ;;to TAG_3
                                      (35 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (38 (if_acmpeq 192)) ;;to TAG_4
                                      (41 (aload_2)) 
                                      (42 (checkcast (class "java.io.Writer"))) 
                                      (45 (getstatic (fieldCP "const__2" "clojure.core$fn__5420" (class "java.lang.Object")))) 
                                      (48 (checkcast (class "java.lang.Character"))) 
                                      (51 (invokevirtual (methodCP "charValue" "java.lang.Character" () char))) 
                                      (54 (invokevirtual (methodCP "append" "java.io.Writer" (char) (class "java.io.Writer")))) 
                                      (57 (pop)) 
                                      (58 (aload_1)) 
                                      (59 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (62 (i2l)) 
                                      (63 (lstore 4)) 
                                      (65 (lconst_0)) 
                                      (66 (lstore 6)) 
                                      (68 (lload 6)) ;;at TAG_9
                                      (70 (lload 4)) 
                                      (72 (lcmp)) 
                                      (73 (ifge 167)) ;;to TAG_5
                                      (76 (aload_1)) 
                                      (77 (checkcast (class "java.lang.String"))) 
                                      (80 (lload 6)) 
                                      (82 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (85 (invokevirtual (methodCP "charAt" "java.lang.String" (int) char))) 
                                      (88 (istore 8)) 
                                      (90 (getstatic (fieldCP "const__7" "clojure.core$fn__5420" (class "clojure.lang.Var")))) 
                                      (93 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (96 (checkcast (class "clojure.lang.IFn"))) 
                                      (99 (iload 8)) 
                                      (101 (invokestatic (methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character")))) 
                                      (104 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (109 (astore 9)) 
                                      (111 (aload 9)) 
                                      (113 (dup)) 
                                      (114 (ifnull 143)) ;;to TAG_6
                                      (117 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (120 (if_acmpeq 144)) ;;to TAG_7
                                      (123 (aload_2)) 
                                      (124 (checkcast (class "java.io.Writer"))) 
                                      (127 (aload 9)) 
                                      (129 (aconst_null)) 
                                      (130 (astore 9)) 
                                      (132 (checkcast (class "java.lang.String"))) 
                                      (135 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (138 (aconst_null)) 
                                      (139 (pop)) 
                                      (140 (goto 154)) ;;to TAG_8
                                      (143 (pop)) ;;at TAG_6
                                      (144 (aload_2)) ;;at TAG_7
                                      (145 (checkcast (class "java.io.Writer"))) 
                                      (148 (iload 8)) 
                                      (150 (invokevirtual (methodCP "append" "java.io.Writer" (char) (class "java.io.Writer")))) 
                                      (153 (pop)) 
                                      (154 (lload 6)) ;;at TAG_8
                                      (156 (lconst_1)) 
                                      (157 (ladd)) 
                                      (158 (lstore 6)) 
                                      (160 (goto 68)) ;;to TAG_9
                                      (163 (goto 169)) ;;to TAG_10
                                      (166 (pop)) 
                                      (167 (aconst_null)) ;;at TAG_5
                                      (168 (pop)) 
                                      (169 (aload_2)) ;;at TAG_10
                                      (170 (aconst_null)) 
                                      (171 (astore_2)) 
                                      (172 (checkcast (class "java.io.Writer"))) 
                                      (175 (getstatic (fieldCP "const__2" "clojure.core$fn__5420" (class "java.lang.Object")))) 
                                      (178 (checkcast (class "java.lang.Character"))) 
                                      (181 (invokevirtual (methodCP "charValue" "java.lang.Character" () char))) 
                                      (184 (invokevirtual (methodCP "append" "java.io.Writer" (char) (class "java.io.Writer")))) 
                                      (187 (pop)) 
                                      (188 (goto 209)) ;;to TAG_11
                                      (191 (pop)) ;;at TAG_3
                                      (192 (aload_2)) ;;at TAG_4
                                      (193 (aconst_null)) 
                                      (194 (astore_2)) 
                                      (195 (checkcast (class "java.io.Writer"))) 
                                      (198 (aload_1)) 
                                      (199 (aconst_null)) 
                                      (200 (astore_1)) 
                                      (201 (checkcast (class "java.lang.String"))) 
                                      (204 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (207 (aconst_null)) 
                                      (208 (pop)) 
                                      (209 (aconst_null)) ;;at TAG_11
                                      (210 (areturn)) 
                                      (endofcode 211))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$fn__5420-class-table*
  (make-static-class-decls 
   *clojure.core$fn__5420*))

(defconst *package-name-map* 
  ("clojure.core$fn__5420" . "clojure"))

