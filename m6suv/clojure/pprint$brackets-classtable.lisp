; pprint$brackets-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:55 CDT 2014.
;

(defconst *clojure.pprint$brackets*
 (make-class-def
      '(class "clojure.pprint$brackets"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "vector?")
                        (STRING  "[")
                        (STRING  "]")
                        (STRING  "(")
                        (STRING  ")"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 60)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "vector?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$brackets" (class "clojure.lang.Var"))))
                                      (13 (iconst_2))
                                      (14 (anewarray (class "java.lang.Object")))
                                      (17 (dup))
                                      (18 (iconst_0))
                                      (19 (ldc 2))        ;;STRING:: "["
                                      (21 (aastore))
                                      (22 (dup))
                                      (23 (iconst_1))
                                      (24 (ldc 3))        ;;STRING:: "]"
                                      (26 (aastore))
                                      (27 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (30 (checkcast (class "clojure.lang.AFn")))
                                      (33 (putstatic (fieldCP "const__1" "clojure.pprint$brackets" (class "clojure.lang.AFn"))))
                                      (36 (iconst_2))
                                      (37 (anewarray (class "java.lang.Object")))
                                      (40 (dup))
                                      (41 (iconst_0))
                                      (42 (ldc 4))        ;;STRING:: "("
                                      (44 (aastore))
                                      (45 (dup))
                                      (46 (iconst_1))
                                      (47 (ldc 5))        ;;STRING:: ")"
                                      (49 (aastore))
                                      (50 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (53 (checkcast (class "clojure.lang.AFn")))
                                      (56 (putstatic (fieldCP "const__2" "clojure.pprint$brackets" (class "clojure.lang.AFn"))))
                                      (59 (return))
                                      (endofcode 60))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 38)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$brackets" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_1)) 
                                      (10 (aconst_null)) 
                                      (11 (astore_1)) 
                                      (12 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (17 (dup)) 
                                      (18 (ifnull 33)) ;;to TAG_0
                                      (21 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (24 (if_acmpeq 34)) ;;to TAG_1
                                      (27 (getstatic (fieldCP "const__1" "clojure.pprint$brackets" (class "clojure.lang.AFn")))) 
                                      (30 (goto 37))  ;;to TAG_2
                                      (33 (pop)) ;;at TAG_0
                                      (34 (getstatic (fieldCP "const__2" "clojure.pprint$brackets" (class "clojure.lang.AFn")))) ;;at TAG_1
                                      (37 (areturn)) ;;at TAG_2
                                      (endofcode 38))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$brackets-class-table*
  (make-static-class-decls 
   *clojure.pprint$brackets*))

(defconst *package-name-map* 
  ("clojure.pprint$brackets" . "clojure"))

