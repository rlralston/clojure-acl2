; pprint$compile_format$fn__8147-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:55 CDT 2014.
;

(defconst *clojure.pprint$compile_format$fn__8147*
 (make-class-def
      '(class "clojure.pprint$compile_format$fn__8147"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "nth")
                        (STRING  "empty?")
                        (STRING  "int")
                        (STRING  "neg?")
                        (STRING  "clojure.pprint")
                        (STRING  "compile-raw-string")
                        (STRING  "+")
                        (STRING  "zero?")
                        (STRING  "compile-directive")
                        (STRING  "subs")
                        (STRING  "inc")
                        (STRING  ""))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 153)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "nth"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var"))))
                                      (13 (lconst_0))
                                      (14 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (17 (putstatic (fieldCP "const__1" "clojure.pprint$compile_format$fn__8147" (class "java.lang.Object"))))
                                      (20 (lconst_1))
                                      (21 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (24 (putstatic (fieldCP "const__2" "clojure.pprint$compile_format$fn__8147" (class "java.lang.Object"))))
                                      (27 (ldc 0))        ;;STRING:: "clojure.core"
                                      (29 (ldc 2))        ;;STRING:: "empty?"
                                      (31 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (34 (checkcast (class "clojure.lang.Var")))
                                      (37 (putstatic (fieldCP "const__3" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var"))))
                                      (40 (ldc 0))        ;;STRING:: "clojure.core"
                                      (42 (ldc 3))        ;;STRING:: "int"
                                      (44 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (47 (checkcast (class "clojure.lang.Var")))
                                      (50 (putstatic (fieldCP "const__4" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var"))))
                                      (53 (bipush 126))
                                      (55 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (58 (putstatic (fieldCP "const__5" "clojure.pprint$compile_format$fn__8147" (class "java.lang.Object"))))
                                      (61 (ldc 0))        ;;STRING:: "clojure.core"
                                      (63 (ldc 4))        ;;STRING:: "neg?"
                                      (65 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (68 (checkcast (class "clojure.lang.Var")))
                                      (71 (putstatic (fieldCP "const__6" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var"))))
                                      (74 (ldc 5))        ;;STRING:: "clojure.pprint"
                                      (76 (ldc 6))        ;;STRING:: "compile-raw-string"
                                      (78 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (81 (checkcast (class "clojure.lang.Var")))
                                      (84 (putstatic (fieldCP "const__7" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var"))))
                                      (87 (ldc 0))        ;;STRING:: "clojure.core"
                                      (89 (ldc 7))        ;;STRING:: "+"
                                      (91 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (94 (checkcast (class "clojure.lang.Var")))
                                      (97 (putstatic (fieldCP "const__8" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var"))))
                                      (100 (ldc 0))       ;;STRING:: "clojure.core"
                                      (102 (ldc 8))       ;;STRING:: "zero?"
                                      (104 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (107 (checkcast (class "clojure.lang.Var")))
                                      (110 (putstatic (fieldCP "const__9" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var"))))
                                      (113 (ldc 5))       ;;STRING:: "clojure.pprint"
                                      (115 (ldc 9))       ;;STRING:: "compile-directive"
                                      (117 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (120 (checkcast (class "clojure.lang.Var")))
                                      (123 (putstatic (fieldCP "const__10" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var"))))
                                      (126 (ldc 0))       ;;STRING:: "clojure.core"
                                      (128 (ldc 10))      ;;STRING:: "subs"
                                      (130 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (133 (checkcast (class "clojure.lang.Var")))
                                      (136 (putstatic (fieldCP "const__11" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var"))))
                                      (139 (ldc 0))       ;;STRING:: "clojure.core"
                                      (141 (ldc 11))      ;;STRING:: "inc"
                                      (143 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (146 (checkcast (class "clojure.lang.Var")))
                                      (149 (putstatic (fieldCP "const__12" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var"))))
                                      (152 (return))
                                      (endofcode 153))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 10) (max_locals . 6) (code_length . 334)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (aconst_null)) 
                                      (2 (astore_1)) 
                                      (3 (astore_2)) 
                                      (4 (aload_2)) 
                                      (5 (lconst_0)) 
                                      (6 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (9 (aconst_null)) 
                                      (10 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (13 (astore_3)) 
                                      (14 (aload_2)) 
                                      (15 (aconst_null)) 
                                      (16 (astore_2)) 
                                      (17 (lconst_1)) 
                                      (18 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (21 (aconst_null)) 
                                      (22 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (25 (astore 4)) 
                                      (27 (getstatic (fieldCP "const__3" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var")))) 
                                      (30 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (33 (checkcast (class "clojure.lang.IFn"))) 
                                      (36 (aload_3)) 
                                      (37 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (42 (dup)) 
                                      (43 (ifnull 72)) ;;to TAG_0
                                      (46 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (49 (if_acmpeq 73)) ;;to TAG_1
                                      (52 (iconst_2)) 
                                      (53 (anewarray (class "java.lang.Object"))) 
                                      (56 (dup)) 
                                      (57 (iconst_0)) 
                                      (58 (aconst_null)) 
                                      (59 (aastore)) 
                                      (60 (dup)) 
                                      (61 (iconst_1)) 
                                      (62 (aload_3)) 
                                      (63 (aconst_null)) 
                                      (64 (astore_3)) 
                                      (65 (aastore)) 
                                      (66 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (69 (goto 333))  ;;to TAG_2
                                      (72 (pop)) ;;at TAG_0
                                      (73 (aload_3)) ;;at TAG_1
                                      (74 (checkcast (class "java.lang.String"))) 
                                      (77 (getstatic (fieldCP "const__5" "clojure.pprint$compile_format$fn__8147" (class "java.lang.Object")))) 
                                      (80 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (83 (invokevirtual (methodCP "indexOf" "java.lang.String" (int) int))) 
                                      (86 (istore 5)) 
                                      (88 (iload 5)) 
                                      (90 (i2l)) 
                                      (91 (lconst_0)) 
                                      (92 (lcmp)) 
                                      (93 (ifge 163)) ;;to TAG_3
                                      (96 (iconst_2)) 
                                      (97 (anewarray (class "java.lang.Object"))) 
                                      (100 (dup)) 
                                      (101 (iconst_0)) 
                                      (102 (getstatic (fieldCP "const__7" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var")))) 
                                      (105 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (108 (checkcast (class "clojure.lang.IFn"))) 
                                      (111 (aload_3)) 
                                      (112 (aload 4)) 
                                      (114 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (119 (aastore)) 
                                      (120 (dup)) 
                                      (121 (iconst_1)) 
                                      (122 (iconst_2)) 
                                      (123 (anewarray (class "java.lang.Object"))) 
                                      (126 (dup)) 
                                      (127 (iconst_0)) 
                                      (128 (ldc 12)) ;;STRING:: ""
                                      (130 (aastore)) 
                                      (131 (dup)) 
                                      (132 (iconst_1)) 
                                      (133 (aload 4)) 
                                      (135 (aconst_null)) 
                                      (136 (astore 4)) 
                                      (138 (aload_3)) 
                                      (139 (aconst_null)) 
                                      (140 (astore_3)) 
                                      (141 (checkcast (class "java.lang.String"))) 
                                      (144 (invokevirtual (methodCP "length" "java.lang.String" () int))) 
                                      (147 (i2l)) 
                                      (148 (invokestatic (methodCP "add" "clojure.lang.Numbers" ((class "java.lang.Object") long) (class "java.lang.Number")))) 
                                      (151 (aastore)) 
                                      (152 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (155 (aastore)) 
                                      (156 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (159 (goto 333))  ;;to TAG_2
                                      (162 (pop)) 
                                      (163 (iload 5)) ;;at TAG_3
                                      (165 (i2l)) 
                                      (166 (lconst_0)) 
                                      (167 (lcmp)) 
                                      (168 (ifne 217)) ;;to TAG_4
                                      (171 (getstatic (fieldCP "const__10" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var")))) 
                                      (174 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (177 (checkcast (class "clojure.lang.IFn"))) 
                                      (180 (getstatic (fieldCP "const__11" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var")))) 
                                      (183 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (186 (checkcast (class "clojure.lang.IFn"))) 
                                      (189 (aload_3)) 
                                      (190 (aconst_null)) 
                                      (191 (astore_3)) 
                                      (192 (getstatic (fieldCP "const__2" "clojure.pprint$compile_format$fn__8147" (class "java.lang.Object")))) 
                                      (195 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (200 (aload 4)) 
                                      (202 (aconst_null)) 
                                      (203 (astore 4)) 
                                      (205 (invokestatic (methodCP "inc" "clojure.lang.Numbers" ((class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (208 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (213 (goto 333))  ;;to TAG_2
                                      (216 (pop)) 
                                      (217 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_4
                                      (220 (dup)) 
                                      (221 (ifnull 331)) ;;to TAG_5
                                      (224 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (227 (if_acmpeq 332)) ;;to TAG_6
                                      (230 (iconst_2)) 
                                      (231 (anewarray (class "java.lang.Object"))) 
                                      (234 (dup)) 
                                      (235 (iconst_0)) 
                                      (236 (getstatic (fieldCP "const__7" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var")))) 
                                      (239 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (242 (checkcast (class "clojure.lang.IFn"))) 
                                      (245 (getstatic (fieldCP "const__11" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var")))) 
                                      (248 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (251 (checkcast (class "clojure.lang.IFn"))) 
                                      (254 (aload_3)) 
                                      (255 (getstatic (fieldCP "const__1" "clojure.pprint$compile_format$fn__8147" (class "java.lang.Object")))) 
                                      (258 (iload 5)) 
                                      (260 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (263 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (268 (aload 4)) 
                                      (270 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (275 (aastore)) 
                                      (276 (dup)) 
                                      (277 (iconst_1)) 
                                      (278 (iconst_2)) 
                                      (279 (anewarray (class "java.lang.Object"))) 
                                      (282 (dup)) 
                                      (283 (iconst_0)) 
                                      (284 (getstatic (fieldCP "const__11" "clojure.pprint$compile_format$fn__8147" (class "clojure.lang.Var")))) 
                                      (287 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (290 (checkcast (class "clojure.lang.IFn"))) 
                                      (293 (aload_3)) 
                                      (294 (aconst_null)) 
                                      (295 (astore_3)) 
                                      (296 (iload 5)) 
                                      (298 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (301 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (306 (aastore)) 
                                      (307 (dup)) 
                                      (308 (iconst_1)) 
                                      (309 (iload 5)) 
                                      (311 (i2l)) 
                                      (312 (aload 4)) 
                                      (314 (aconst_null)) 
                                      (315 (astore 4)) 
                                      (317 (invokestatic (methodCP "add" "clojure.lang.Numbers" (long (class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (320 (aastore)) 
                                      (321 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (324 (aastore)) 
                                      (325 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (328 (goto 333))  ;;to TAG_2
                                      (331 (pop)) ;;at TAG_5
                                      (332 (aconst_null)) ;;at TAG_6
                                      (333 (areturn)) ;;at TAG_2
                                      (endofcode 334))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$compile_format$fn__8147-class-table*
  (make-static-class-decls 
   *clojure.pprint$compile_format$fn__8147*))

(defconst *package-name-map* 
  ("clojure.pprint$compile_format$fn__8147" . "clojure"))

