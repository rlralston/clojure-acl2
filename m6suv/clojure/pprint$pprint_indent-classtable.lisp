; pprint$pprint_indent-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:56 CDT 2014.
;

(defconst *clojure.pprint$pprint_indent*
 (make-class-def
      '(class "clojure.pprint$pprint_indent"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.pprint")
                        (STRING  "check-enumerated-arg")
                        (STRING  "current")
                        (STRING  "block")
                        (STRING  "indent")
                        (STRING  "clojure.core")
                        (STRING  "*out*"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 0) (code_length . 95)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.pprint"
                                      (2 (ldc 1))         ;;STRING:: "check-enumerated-arg"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$pprint_indent" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "current"
                                      (16 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (19 (checkcast (class "clojure.lang.Keyword")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.pprint$pprint_indent" (class "clojure.lang.Keyword"))))
                                      (25 (aconst_null))
                                      (26 (ldc 3))        ;;STRING:: "block"
                                      (28 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (31 (checkcast (class "clojure.lang.Keyword")))
                                      (34 (putstatic (fieldCP "const__2" "clojure.pprint$pprint_indent" (class "clojure.lang.Keyword"))))
                                      (37 (iconst_2))
                                      (38 (anewarray (class "java.lang.Object")))
                                      (41 (dup))
                                      (42 (iconst_0))
                                      (43 (aconst_null))
                                      (44 (ldc 2))        ;;STRING:: "current"
                                      (46 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (49 (aastore))
                                      (50 (dup))
                                      (51 (iconst_1))
                                      (52 (aconst_null))
                                      (53 (ldc 3))        ;;STRING:: "block"
                                      (55 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (58 (aastore))
                                      (59 (invokestatic
					(methodCP "create" "clojure.lang.PersistentHashSet" ((array (class "java.lang.Object"))) (class "clojure.lang.PersistentHashSet"))))
                                      (62 (checkcast (class "clojure.lang.AFn")))
                                      (65 (putstatic (fieldCP "const__3" "clojure.pprint$pprint_indent" (class "clojure.lang.AFn"))))
                                      (68 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (70 (ldc 4))        ;;STRING:: "indent"
                                      (72 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (75 (checkcast (class "clojure.lang.Var")))
                                      (78 (putstatic (fieldCP "const__4" "clojure.pprint$pprint_indent" (class "clojure.lang.Var"))))
                                      (81 (ldc 5))        ;;STRING:: "clojure.core"
                                      (83 (ldc 6))        ;;STRING:: "*out*"
                                      (85 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (88 (checkcast (class "clojure.lang.Var")))
                                      (91 (putstatic (fieldCP "const__5" "clojure.pprint$pprint_indent" (class "clojure.lang.Var"))))
                                      (94 (return))
                                      (endofcode 95))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 3) (code_length . 46)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$pprint_indent" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (checkcast (class "clojure.lang.IFn")))
                                      (9 (aload_1))
                                      (10 (getstatic (fieldCP "const__3" "clojure.pprint$pprint_indent" (class "clojure.lang.AFn"))))
                                      (13 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (18 (pop))
                                      (19 (getstatic (fieldCP "const__4" "clojure.pprint$pprint_indent" (class "clojure.lang.Var"))))
                                      (22 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (25 (checkcast (class "clojure.lang.IFn")))
                                      (28 (getstatic (fieldCP "const__5" "clojure.pprint$pprint_indent" (class "clojure.lang.Var"))))
                                      (31 (invokevirtual
					(methodCP "get" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (34 (aload_1))
                                      (35 (aconst_null))
                                      (36 (astore_1))
                                      (37 (aload_2))
                                      (38 (aconst_null))
                                      (39 (astore_2))
                                      (40 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4))
                                      (45 (areturn))
                                      (endofcode 46))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$pprint_indent-class-table*
  (make-static-class-decls 
   *clojure.pprint$pprint_indent*))

(defconst *package-name-map* 
  ("clojure.pprint$pprint_indent" . "clojure"))

