; main$legacy_repl-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:53 CDT 2014.
;

(defconst *clojure.main$legacy_repl*
 (make-class-def
      '(class "clojure.main$legacy_repl"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "println")
                        (STRING  "split-with")
                        (STRING  "complement")
                        (STRING  "--")
                        (STRING  "nth")
                        (STRING  "nthnext")
                        (STRING  "clojure.main")
                        (STRING  "repl-opt")
                        (STRING  "concat")
                        (STRING  "-r")
                        (STRING  "map")
                        (STRING  "vector")
                        (STRING  "repeat")
                        (STRING  "WARNING: clojure.lang.Repl is deprecated.\nInstead, use clojure.main like this:\njava -cp clojure.jar clojure.main -i init.clj -r args...")
                        (STRING  "-i"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 181)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "println"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "split-with"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "complement"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (39 (iconst_1))
                                      (40 (anewarray (class "java.lang.Object")))
                                      (43 (dup))
                                      (44 (iconst_0))
                                      (45 (ldc 4))        ;;STRING:: "--"
                                      (47 (aastore))
                                      (48 (invokestatic
					(methodCP "create" "clojure.lang.PersistentHashSet" ((array (class "java.lang.Object"))) (class "clojure.lang.PersistentHashSet"))))
                                      (51 (checkcast (class "clojure.lang.AFn")))
                                      (54 (putstatic (fieldCP "const__3" "clojure.main$legacy_repl" (class "clojure.lang.AFn"))))
                                      (57 (ldc 0))        ;;STRING:: "clojure.core"
                                      (59 (ldc 5))        ;;STRING:: "nth"
                                      (61 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (64 (checkcast (class "clojure.lang.Var")))
                                      (67 (putstatic (fieldCP "const__4" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (70 (lconst_0))
                                      (71 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (74 (putstatic (fieldCP "const__5" "clojure.main$legacy_repl" (class "java.lang.Object"))))
                                      (77 (lconst_1))
                                      (78 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (81 (putstatic (fieldCP "const__6" "clojure.main$legacy_repl" (class "java.lang.Object"))))
                                      (84 (ldc 0))        ;;STRING:: "clojure.core"
                                      (86 (ldc 6))        ;;STRING:: "nthnext"
                                      (88 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (91 (checkcast (class "clojure.lang.Var")))
                                      (94 (putstatic (fieldCP "const__7" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (97 (ldc 7))        ;;STRING:: "clojure.main"
                                      (99 (ldc 8))        ;;STRING:: "repl-opt"
                                      (101 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (104 (checkcast (class "clojure.lang.Var")))
                                      (107 (putstatic (fieldCP "const__8" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (110 (ldc 0))       ;;STRING:: "clojure.core"
                                      (112 (ldc 9))       ;;STRING:: "concat"
                                      (114 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (117 (checkcast (class "clojure.lang.Var")))
                                      (120 (putstatic (fieldCP "const__9" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (123 (iconst_1))
                                      (124 (anewarray (class "java.lang.Object")))
                                      (127 (dup))
                                      (128 (iconst_0))
                                      (129 (ldc 10))      ;;STRING:: "-r"
                                      (131 (aastore))
                                      (132 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (135 (checkcast (class "clojure.lang.AFn")))
                                      (138 (putstatic (fieldCP "const__10" "clojure.main$legacy_repl" (class "clojure.lang.AFn"))))
                                      (141 (ldc 0))       ;;STRING:: "clojure.core"
                                      (143 (ldc 11))      ;;STRING:: "map"
                                      (145 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (148 (checkcast (class "clojure.lang.Var")))
                                      (151 (putstatic (fieldCP "const__11" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (154 (ldc 0))       ;;STRING:: "clojure.core"
                                      (156 (ldc 12))      ;;STRING:: "vector"
                                      (158 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (161 (checkcast (class "clojure.lang.Var")))
                                      (164 (putstatic (fieldCP "const__12" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (167 (ldc 0))       ;;STRING:: "clojure.core"
                                      (169 (ldc 13))      ;;STRING:: "repeat"
                                      (171 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (174 (checkcast (class "clojure.lang.Var")))
                                      (177 (putstatic (fieldCP "const__13" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (180 (return))
                                      (endofcode 181))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 7) (code_length . 187)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (checkcast (class "clojure.lang.IFn")))
                                      (9 (ldc 14))        ;;STRING:: "WARNING: clojure.lang.Repl is deprecated.\nInstead, use clojure.main like this:\njava -cp clojure.jar clojure.main -i init.clj -r args..."
                                      (11 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (16 (pop))
                                      (17 (getstatic (fieldCP "const__1" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (20 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (23 (checkcast (class "clojure.lang.IFn")))
                                      (26 (getstatic (fieldCP "const__2" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (29 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (32 (checkcast (class "clojure.lang.IFn")))
                                      (35 (getstatic (fieldCP "const__3" "clojure.main$legacy_repl" (class "clojure.lang.AFn"))))
                                      (38 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (43 (aload_1))
                                      (44 (aconst_null))
                                      (45 (astore_1))
                                      (46 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (51 (astore_2))
                                      (52 (aload_2))
                                      (53 (lconst_0))
                                      (54 (invokestatic
					(methodCP "intCast" "clojure.lang.RT" (long) int)))
                                      (57 (aconst_null))
                                      (58 (invokestatic
					(methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (61 (astore_3))
                                      (62 (aload_2))
                                      (63 (aconst_null))
                                      (64 (astore_2))
                                      (65 (lconst_1))
                                      (66 (invokestatic
					(methodCP "intCast" "clojure.lang.RT" (long) int)))
                                      (69 (aconst_null))
                                      (70 (invokestatic
					(methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (73 (astore 4))
                                      (75 (aload 4))
                                      (77 (lconst_0))
                                      (78 (invokestatic
					(methodCP "intCast" "clojure.lang.RT" (long) int)))
                                      (81 (aconst_null))
                                      (82 (invokestatic
					(methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (85 (astore 5))
                                      (87 (getstatic (fieldCP "const__7" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (90 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (93 (checkcast (class "clojure.lang.IFn")))
                                      (96 (aload 4))
                                      (98 (aconst_null))
                                      (99 (astore 4))
                                      (101 (getstatic (fieldCP "const__6" "clojure.main$legacy_repl" (class "java.lang.Object"))))
                                      (104 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (109 (astore 6))
                                      (111 (getstatic (fieldCP "const__8" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (114 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (117 (checkcast (class "clojure.lang.IFn")))
                                      (120 (getstatic (fieldCP "const__9" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (123 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (126 (checkcast (class "clojure.lang.IFn")))
                                      (129 (getstatic (fieldCP "const__10" "clojure.main$legacy_repl" (class "clojure.lang.AFn"))))
                                      (132 (aload 6))
                                      (134 (aconst_null))
                                      (135 (astore 6))
                                      (137 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (142 (getstatic (fieldCP "const__11" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (145 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (148 (checkcast (class "clojure.lang.IFn")))
                                      (151 (getstatic (fieldCP "const__12" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (154 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (157 (getstatic (fieldCP "const__13" "clojure.main$legacy_repl" (class "clojure.lang.Var"))))
                                      (160 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (163 (checkcast (class "clojure.lang.IFn")))
                                      (166 (ldc 15))      ;;STRING:: "-i"
                                      (168 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (173 (aload_3))
                                      (174 (aconst_null))
                                      (175 (astore_3))
                                      (176 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4))
                                      (181 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (186 (areturn))
                                      (endofcode 187))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *main$legacy_repl-class-table*
  (make-static-class-decls 
   *clojure.main$legacy_repl*))

(defconst *package-name-map* 
  ("clojure.main$legacy_repl" . "clojure"))

