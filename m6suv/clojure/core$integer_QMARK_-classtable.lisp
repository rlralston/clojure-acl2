; core$integer_QMARK_-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:44 CDT 2014.
;

(defconst *clojure.core$integer_QMARK_*
 (make-class-def
      '(class "clojure.core$integer_QMARK_"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "instance?"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 14)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "instance?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$integer_QMARK_" (class "clojure.lang.Var"))))
                                      (13 (return))
                                      (endofcode 14))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 7) (code_length . 158)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (instanceof (class "java.lang.Integer"))) 
                                      (4 (istore_2)) 
                                      (5 (iload_2)) 
                                      (6 (ifeq 26)) ;;to TAG_0
                                      (9 (iload_2)) 
                                      (10 (ifeq 19))  ;;to TAG_1
                                      (13 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (16 (goto 22)) ;;to TAG_2
                                      (19 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_1
                                      (22 (goto 157)) ;;to TAG_3;;at TAG_2
                                      (25 (pop)) 
                                      (26 (aload_1)) ;;at TAG_0
                                      (27 (instanceof (class "java.lang.Long"))) 
                                      (30 (istore_3)) 
                                      (31 (iload_3)) 
                                      (32 (ifeq 52)) ;;to TAG_4
                                      (35 (iload_3)) 
                                      (36 (ifeq 45)) ;;to TAG_5
                                      (39 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (42 (goto 48)) ;;to TAG_6
                                      (45 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_5
                                      (48 (goto 157)) ;;to TAG_3;;at TAG_6
                                      (51 (pop)) 
                                      (52 (aload_1)) ;;at TAG_4
                                      (53 (instanceof (class "clojure.lang.BigInt"))) 
                                      (56 (istore 4)) 
                                      (58 (iload 4)) 
                                      (60 (ifeq 81)) ;;to TAG_7
                                      (63 (iload 4)) 
                                      (65 (ifeq 74)) ;;to TAG_8
                                      (68 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (71 (goto 77)) ;;to TAG_9
                                      (74 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_8
                                      (77 (goto 157)) ;;to TAG_3;;at TAG_9
                                      (80 (pop)) 
                                      (81 (aload_1)) ;;at TAG_7
                                      (82 (instanceof (class "java.math.BigInteger"))) 
                                      (85 (istore 5)) 
                                      (87 (iload 5)) 
                                      (89 (ifeq 110)) ;;to TAG_10
                                      (92 (iload 5)) 
                                      (94 (ifeq 103)) ;;to TAG_11
                                      (97 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (100 (goto 106)) ;;to TAG_12
                                      (103 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_11
                                      (106 (goto 157)) ;;to TAG_3;;at TAG_12
                                      (109 (pop)) 
                                      (110 (aload_1)) ;;at TAG_10
                                      (111 (instanceof (class "java.lang.Short"))) 
                                      (114 (istore 6)) 
                                      (116 (iload 6)) 
                                      (118 (ifeq 139)) ;;to TAG_13
                                      (121 (iload 6)) 
                                      (123 (ifeq 132)) ;;to TAG_14
                                      (126 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (129 (goto 135)) ;;to TAG_15
                                      (132 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_14
                                      (135 (goto 157)) ;;to TAG_3;;at TAG_15
                                      (138 (pop)) 
                                      (139 (aload_1)) ;;at TAG_13
                                      (140 (aconst_null)) 
                                      (141 (astore_1)) 
                                      (142 (instanceof (class "java.lang.Byte"))) 
                                      (145 (ifeq 154)) ;;to TAG_16
                                      (148 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (151 (goto 157)) ;;to TAG_3
                                      (154 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_16
                                      (157 (areturn)) ;;at TAG_3
                                      (endofcode 158))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$integer_QMARK_-class-table*
  (make-static-class-decls 
   *clojure.core$integer_QMARK_*))

(defconst *package-name-map* 
  ("clojure.core$integer_QMARK_" . "clojure"))

