; core$chunk_cons-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:41 CDT 2014.
;

(defconst *clojure.core$chunk_cons*
 (make-class-def
      '(class "clojure.core$chunk_cons"
            "clojure.lang.AFunction"
            (constant_pool)
            (fields)
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 0) (max_locals . 0) (code_length . 1)
                                   (parsedcode
                                      (0 (return))
                                      (endofcode 1))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 3) (code_length . 37)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (4 (i2l)) 
                                      (5 (lconst_0)) 
                                      (6 (lcmp)) 
                                      (7 (ifne 17))  ;;to TAG_0
                                      (10 (aload_2)) 
                                      (11 (aconst_null)) 
                                      (12 (astore_2)) 
                                      (13 (goto 36)) ;;to TAG_1
                                      (16 (pop)) 
                                      (17 (new (class "clojure.lang.ChunkedCons"))) ;;at TAG_0
                                      (20 (dup)) 
                                      (21 (aload_1)) 
                                      (22 (aconst_null)) 
                                      (23 (astore_1)) 
                                      (24 (checkcast (class "clojure.lang.IChunk"))) 
                                      (27 (aload_2)) 
                                      (28 (aconst_null)) 
                                      (29 (astore_2)) 
                                      (30 (checkcast (class "clojure.lang.ISeq"))) 
                                      (33 (invokespecial (methodCP "<init>" "clojure.lang.ChunkedCons" ((class "clojure.lang.IChunk") (class "clojure.lang.ISeq")) void))) 
                                      (36 (areturn)) ;;at TAG_1
                                      (endofcode 37))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$chunk_cons-class-table*
  (make-static-class-decls 
   *clojure.core$chunk_cons*))

(defconst *package-name-map* 
  ("clojure.core$chunk_cons" . "clojure"))

