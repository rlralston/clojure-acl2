; inspector$fn__6938-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:49 CDT 2014.
;

(defconst *clojure.inspector$fn__6938*
 (make-class-def
      '(class "clojure.inspector$fn__6938"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "vec")
                        (STRING  "sort")
                        (STRING  "map")
                        (STRING  "nrows")
                        (STRING  "count")
                        (STRING  "get-value")
                        (STRING  "get-label"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 89)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "vec"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.inspector$fn__6938" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "sort"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.inspector$fn__6938" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "map"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.inspector$fn__6938" (class "clojure.lang.Var"))))
                                      (39 (aconst_null))
                                      (40 (ldc 4))        ;;STRING:: "nrows"
                                      (42 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (45 (checkcast (class "clojure.lang.Keyword")))
                                      (48 (putstatic (fieldCP "const__3" "clojure.inspector$fn__6938" (class "clojure.lang.Keyword"))))
                                      (51 (ldc 0))        ;;STRING:: "clojure.core"
                                      (53 (ldc 5))        ;;STRING:: "count"
                                      (55 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (58 (checkcast (class "clojure.lang.Var")))
                                      (61 (putstatic (fieldCP "const__4" "clojure.inspector$fn__6938" (class "clojure.lang.Var"))))
                                      (64 (aconst_null))
                                      (65 (ldc 6))        ;;STRING:: "get-value"
                                      (67 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (70 (checkcast (class "clojure.lang.Keyword")))
                                      (73 (putstatic (fieldCP "const__5" "clojure.inspector$fn__6938" (class "clojure.lang.Keyword"))))
                                      (76 (aconst_null))
                                      (77 (ldc 7))        ;;STRING:: "get-label"
                                      (79 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (82 (checkcast (class "clojure.lang.Keyword")))
                                      (85 (putstatic (fieldCP "const__6" "clojure.inspector$fn__6938" (class "clojure.lang.Keyword"))))
                                      (88 (return))
                                      (endofcode 89))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 3) (code_length . 114)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.inspector$fn__6938" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (checkcast (class "clojure.lang.IFn")))
                                      (9 (getstatic (fieldCP "const__1" "clojure.inspector$fn__6938" (class "clojure.lang.Var"))))
                                      (12 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (15 (checkcast (class "clojure.lang.IFn")))
                                      (18 (getstatic (fieldCP "const__2" "clojure.inspector$fn__6938" (class "clojure.lang.Var"))))
                                      (21 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (24 (checkcast (class "clojure.lang.IFn")))
                                      (27 (new (class "clojure.inspector$fn__6938$fn__6940")))
                                      (30 (dup))
                                      (31 (invokespecial
					(methodCP "<init>" "clojure.inspector$fn__6938$fn__6940" () void)))
                                      (34 (aload_1))
                                      (35 (aconst_null))
                                      (36 (astore_1))
                                      (37 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (42 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (47 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (52 (astore_2))
                                      (53 (bipush 6))
                                      (55 (anewarray (class "java.lang.Object")))
                                      (58 (dup))
                                      (59 (iconst_0))
                                      (60 (getstatic (fieldCP "const__3" "clojure.inspector$fn__6938" (class "clojure.lang.Keyword"))))
                                      (63 (aastore))
                                      (64 (dup))
                                      (65 (iconst_1))
                                      (66 (aload_2))
                                      (67 (invokestatic
					(methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int)))
                                      (70 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (73 (aastore))
                                      (74 (dup))
                                      (75 (iconst_2))
                                      (76 (getstatic (fieldCP "const__5" "clojure.inspector$fn__6938" (class "clojure.lang.Keyword"))))
                                      (79 (aastore))
                                      (80 (dup))
                                      (81 (iconst_3))
                                      (82 (new (class "clojure.inspector$fn__6938$fn__6943")))
                                      (85 (dup))
                                      (86 (aload_2))
                                      (87 (invokespecial
					(methodCP "<init>" "clojure.inspector$fn__6938$fn__6943" ((class "java.lang.Object")) void)))
                                      (90 (aastore))
                                      (91 (dup))
                                      (92 (iconst_4))
                                      (93 (getstatic (fieldCP "const__6" "clojure.inspector$fn__6938" (class "clojure.lang.Keyword"))))
                                      (96 (aastore))
                                      (97 (dup))
                                      (98 (iconst_5))
                                      (99 (new (class "clojure.inspector$fn__6938$fn__6945")))
                                      (102 (dup))
                                      (103 (aload_2))
                                      (104 (aconst_null))
                                      (105 (astore_2))
                                      (106 (invokespecial
					(methodCP "<init>" "clojure.inspector$fn__6938$fn__6945" ((class "java.lang.Object")) void)))
                                      (109 (aastore))
                                      (110 (invokestatic
					(methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (113 (areturn))
                                      (endofcode 114))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *inspector$fn__6938-class-table*
  (make-static-class-decls 
   *clojure.inspector$fn__6938*))

(defconst *package-name-map* 
  ("clojure.inspector$fn__6938" . "clojure"))

