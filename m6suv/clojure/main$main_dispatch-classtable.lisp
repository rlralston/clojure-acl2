; main$main_dispatch-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:53 CDT 2014.
;

(defconst *clojure.main$main_dispatch*
 (make-class-def
      '(class "clojure.main$main_dispatch"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.main")
                        (STRING  "repl-opt")
                        (STRING  "main-opt")
                        (STRING  "null-opt")
                        (STRING  "help-opt")
                        (STRING  "script-opt")
                        (STRING  "-r")
                        (STRING  "--repl")
                        (STRING  "-m")
                        (STRING  "--main")
                        (STRING  "-h")
                        (STRING  "--help")
                        (STRING  "-?"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 66)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.main"
                                      (2 (ldc 1))         ;;STRING:: "repl-opt"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.main$main_dispatch" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.main"
                                      (15 (ldc 2))        ;;STRING:: "main-opt"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.main$main_dispatch" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.main"
                                      (28 (ldc 3))        ;;STRING:: "null-opt"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.main$main_dispatch" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.main"
                                      (41 (ldc 4))        ;;STRING:: "help-opt"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.main$main_dispatch" (class "clojure.lang.Var"))))
                                      (52 (ldc 0))        ;;STRING:: "clojure.main"
                                      (54 (ldc 5))        ;;STRING:: "script-opt"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.main$main_dispatch" (class "clojure.lang.Var"))))
                                      (65 (return))
                                      (endofcode 66))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 166)
                                   (parsedcode
                                      (0 (bipush 16)) 
                                      (2 (anewarray (class "java.lang.Object"))) 
                                      (5 (dup)) 
                                      (6 (iconst_0)) 
                                      (7 (ldc 6)) ;;STRING:: "-r"
                                      (9 (aastore)) 
                                      (10 (dup)) 
                                      (11 (iconst_1)) 
                                      (12 (getstatic (fieldCP "const__0" "clojure.main$main_dispatch" (class "clojure.lang.Var")))) 
                                      (15 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (18 (aastore)) 
                                      (19 (dup)) 
                                      (20 (iconst_2)) 
                                      (21 (ldc 7)) ;;STRING:: "--repl"
                                      (23 (aastore)) 
                                      (24 (dup)) 
                                      (25 (iconst_3)) 
                                      (26 (getstatic (fieldCP "const__0" "clojure.main$main_dispatch" (class "clojure.lang.Var")))) 
                                      (29 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (32 (aastore)) 
                                      (33 (dup)) 
                                      (34 (iconst_4)) 
                                      (35 (ldc 8)) ;;STRING:: "-m"
                                      (37 (aastore)) 
                                      (38 (dup)) 
                                      (39 (iconst_5)) 
                                      (40 (getstatic (fieldCP "const__1" "clojure.main$main_dispatch" (class "clojure.lang.Var")))) 
                                      (43 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (46 (aastore)) 
                                      (47 (dup)) 
                                      (48 (bipush 6)) 
                                      (50 (ldc 9)) ;;STRING:: "--main"
                                      (52 (aastore)) 
                                      (53 (dup)) 
                                      (54 (bipush 7)) 
                                      (56 (getstatic (fieldCP "const__1" "clojure.main$main_dispatch" (class "clojure.lang.Var")))) 
                                      (59 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (62 (aastore)) 
                                      (63 (dup)) 
                                      (64 (bipush 8)) 
                                      (66 (aconst_null)) 
                                      (67 (aastore)) 
                                      (68 (dup)) 
                                      (69 (bipush 9)) 
                                      (71 (getstatic (fieldCP "const__2" "clojure.main$main_dispatch" (class "clojure.lang.Var")))) 
                                      (74 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (77 (aastore)) 
                                      (78 (dup)) 
                                      (79 (bipush 10)) 
                                      (81 (ldc 10)) ;;STRING:: "-h"
                                      (83 (aastore)) 
                                      (84 (dup)) 
                                      (85 (bipush 11)) 
                                      (87 (getstatic (fieldCP "const__3" "clojure.main$main_dispatch" (class "clojure.lang.Var")))) 
                                      (90 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (93 (aastore)) 
                                      (94 (dup)) 
                                      (95 (bipush 12)) 
                                      (97 (ldc 11)) ;;STRING:: "--help"
                                      (99 (aastore)) 
                                      (100 (dup)) 
                                      (101 (bipush 13)) 
                                      (103 (getstatic (fieldCP "const__3" "clojure.main$main_dispatch" (class "clojure.lang.Var")))) 
                                      (106 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (109 (aastore)) 
                                      (110 (dup)) 
                                      (111 (bipush 14)) 
                                      (113 (ldc 12)) ;;STRING:: "-?"
                                      (115 (aastore)) 
                                      (116 (dup)) 
                                      (117 (bipush 15)) 
                                      (119 (getstatic (fieldCP "const__3" "clojure.main$main_dispatch" (class "clojure.lang.Var")))) 
                                      (122 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (125 (aastore)) 
                                      (126 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (129 (checkcast (class "clojure.lang.IFn"))) 
                                      (132 (aload_1)) 
                                      (133 (aconst_null)) 
                                      (134 (astore_1)) 
                                      (135 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (140 (astore_2)) 
                                      (141 (aload_2)) 
                                      (142 (dup)) 
                                      (143 (ifnull 158)) ;;to TAG_0
                                      (146 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (149 (if_acmpeq 159)) ;;to TAG_1
                                      (152 (aload_2)) 
                                      (153 (aconst_null)) 
                                      (154 (astore_2)) 
                                      (155 (goto 165))  ;;to TAG_2
                                      (158 (pop)) ;;at TAG_0
                                      (159 (getstatic (fieldCP "const__4" "clojure.main$main_dispatch" (class "clojure.lang.Var")))) ;;at TAG_1
                                      (162 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (165 (areturn)) ;;at TAG_2
                                      (endofcode 166))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *main$main_dispatch-class-table*
  (make-static-class-decls 
   *clojure.main$main_dispatch*))

(defconst *package-name-map* 
  ("clojure.main$main_dispatch" . "clojure"))

