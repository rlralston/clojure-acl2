; test__init-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:59 CDT 2014.
;

(defconst *clojure.test__init*
 (make-class-def
      '(class "clojure.test__init"
            "java.lang.Object"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "in-ns")
                        (STRING  "clojure.test")
                        (STRING  "doc")
                        (STRING  "A unit testing framework.\n\n   ASSERTIONS\n\n   The core of the library is the \"is\" macro, which lets you make\n   assertions of any arbitrary expression:\n\n   (is (= 4 (+ 2 2)))\n   (is (instance? Integer 256))\n   (is (.startsWith \"abcde\" \"ab\"))\n\n   You can type an \"is\" expression directly at the REPL, which will\n   print a message if it fails.\n\n       user> (is (= 5 (+ 2 2)))\n\n       FAIL in  (:1)\n       expected: (= 5 (+ 2 2))\n         actual: (not (= 5 4))\n       false\n\n   The \"expected:\" line shows you the original expression, and the\n   \"actual:\" shows you what actually happened.  In this case, it\n   shows that (+ 2 2) returned 4, which is not = to 5.  Finally, the\n   \"false\" on the last line is the value returned from the\n   expression.  The \"is\" macro always returns the result of the\n   inner expression.\n\n   There are two special assertions for testing exceptions.  The\n   \"(is (thrown? c ...))\" form tests if an exception of class c is\n   thrown:\n\n   (is (thrown? ArithmeticException (/ 1 0))) \n\n   \"(is (thrown-with-msg? c re ...))\" does the same thing and also\n   tests that the message on the exception matches the regular\n   expression re:\n\n   (is (thrown-with-msg? ArithmeticException #\"Divide by zero\"\n                         (/ 1 0)))\n\n   DOCUMENTING TESTS\n\n   \"is\" takes an optional second argument, a string describing the\n   assertion.  This message will be included in the error report.\n\n   (is (= 5 (+ 2 2)) \"Crazy arithmetic\")\n\n   In addition, you can document groups of assertions with the\n   \"testing\" macro, which takes a string followed by any number of\n   assertions.  The string will be included in failure reports.\n   Calls to \"testing\" may be nested, and all of the strings will be\n   joined together with spaces in the final report, in a style\n   similar to RSpec <http://rspec.info/>\n\n   (testing \"Arithmetic\"\n     (testing \"with positive integers\"\n       (is (= 4 (+ 2 2)))\n       (is (= 7 (+ 3 4))))\n     (testing \"with negative integers\"\n       (is (= -4 (+ -2 -2)))\n       (is (= -1 (+ 3 -4)))))\n\n   Note that, unlike RSpec, the \"testing\" macro may only be used\n   INSIDE a \"deftest\" or \"with-test\" form (see below).\n\n\n   DEFINING TESTS\n\n   There are two ways to define tests.  The \"with-test\" macro takes\n   a defn or def form as its first argument, followed by any number\n   of assertions.  The tests will be stored as metadata on the\n   definition.\n\n   (with-test\n       (defn my-function [x y]\n         (+ x y))\n     (is (= 4 (my-function 2 2)))\n     (is (= 7 (my-function 3 4))))\n\n   As of Clojure SVN rev. 1221, this does not work with defmacro.\n   See http://code.google.com/p/clojure/issues/detail?id=51\n\n   The other way lets you define tests separately from the rest of\n   your code, even in a different namespace:\n\n   (deftest addition\n     (is (= 4 (+ 2 2)))\n     (is (= 7 (+ 3 4))))\n\n   (deftest subtraction\n     (is (= 1 (- 4 3)))\n     (is (= 3 (- 7 4))))\n\n   This creates functions named \"addition\" and \"subtraction\", which\n   can be called like any other function.  Therefore, tests can be\n   grouped and composed, in a style similar to the test framework in\n   Peter Seibel\ns \"Practical Common Lisp\"\n   <http://www.gigamonkeys.com/book/practical-building-a-unit-test-framework.html>\n\n   (deftest arithmetic\n     (addition)\n     (subtraction))\n\n   The names of the nested tests will be joined in a list, like\n   \"(arithmetic addition)\", in failure reports.  You can use nested\n   tests to set up a context shared by several tests.\n\n\n   RUNNING TESTS\n\n   Run tests with the function \"(run-tests namespaces...)\":\n\n   (run-tests \nyour.namespace \nsome.other.namespace)\n\n   If you don\nt specify any namespaces, the current namespace is\n   used.  To run all tests in all namespaces, use \"(run-all-tests)\".\n\n   By default, these functions will search for all tests defined in\n   a namespace and run them in an undefined order.  However, if you\n   are composing tests, as in the \"arithmetic\" example above, you\n   probably do not want the \"addition\" and \"subtraction\" tests run\n   separately.  In that case, you must define a special function\n   named \"test-ns-hook\" that runs your tests in the correct order:\n\n   (defn test-ns-hook []\n     (arithmetic))\n\n   Note: test-ns-hook prevents execution of fixtures (see below).\n\n\n   OMITTING TESTS FROM PRODUCTION CODE\n\n   You can bind the variable \"*load-tests*\" to false when loading or\n   compiling code in production.  This will prevent any tests from\n   being created by \"with-test\" or \"deftest\".\n\n\n   FIXTURES\n\n   Fixtures allow you to run code before and after tests, to set up\n   the context in which tests should be run.\n\n   A fixture is just a function that calls another function passed as\n   an argument.  It looks like this:\n\n   (defn my-fixture [f]\n      Perform setup, establish bindings, whatever.\n     (f)  Then call the function we were passed.\n      Tear-down / clean-up code here.\n    )\n\n   Fixtures are attached to namespaces in one of two ways.  \"each\"\n   fixtures are run repeatedly, once for each test function created\n   with \"deftest\" or \"with-test\".  \"each\" fixtures are useful for\n   establishing a consistent before/after state for each test, like\n   clearing out database tables.\n\n   \"each\" fixtures can be attached to the current namespace like this:\n   (use-fixtures :each fixture1 fixture2 ...)\n   The fixture1, fixture2 are just functions like the example above.\n   They can also be anonymous functions, like this:\n   (use-fixtures :each (fn [f] setup... (f) cleanup...))\n\n   The other kind of fixture, a \"once\" fixture, is only run once,\n   around ALL the tests in the namespace.  \"once\" fixtures are useful\n   for tasks that only need to be performed once, like establishing\n   database connections, or for time-consuming tasks.\n\n   Attach \"once\" fixtures to the current namespace like this:\n   (use-fixtures :once fixture1 fixture2 ...)\n\n   Note: Fixtures and test-ns-hook are mutually incompatible.  If you\n   are using test-ns-hook, fixture functions will *never* be run.\n\n\n   SAVING TEST OUTPUT TO A FILE\n\n   All the test reporting functions write to the var *test-out*.  By\n   default, this is the same as *out*, but you can rebind it to any\n   PrintWriter.  For example, it could be a file opened with\n   clojure.java.io/writer.\n\n\n   EXTENDING TEST-IS (ADVANCED)\n\n   You can extend the behavior of the \"is\" macro by defining new\n   methods for the \"assert-expr\" multimethod.  These methods are\n   called during expansion of the \"is\" macro, so they should return\n   quoted forms to be evaluated.\n\n   You can plug in your own test-reporting framework by rebinding\n   the \"report\" function: (report event)\n\n   The \nevent\n argument is a map.  It will always have a :type key,\n   whose value will be a keyword signaling the type of event being\n   reported.  Standard events with :type value of :pass, :fail, and\n   :error are called when an assertion passes, fails, and throws an\n   exception, respectively.  In that case, the event will also have\n   the following keys:\n\n     :expected   The form that was expected to be true\n     :actual     A form representing what actually occurred\n     :message    The string message given as an argument to \nis\n\n\n   The \"testing\" strings will be a list in \"*testing-contexts*\", and\n   the vars being tested will be a list in \"*testing-vars*\".\n\n   Your \"report\" function should wrap any printing calls in the\n   \"with-test-out\" macro, which rebinds *out* to the current value\n   of *test-out*.\n\n   For additional event types, see the examples in the code.\n")
                        (STRING  "author")
                        (STRING  "Stuart Sierra, with contributions and suggestions by \n  Chas Emerick, Allen Rohner, and Stuart Halloway")
                        (STRING  "*stack-trace-depth*")
                        (STRING  "file")
                        (STRING  "column")
                        (STRING  "line")
                        (STRING  "dynamic")
                        (STRING  "added")
                        (STRING  "1.1")
                        (STRING  "The maximum depth of stack traces to print when an Exception\n  is thrown during a test.  Defaults to nil, which means print the \n  complete stack trace.")
                        (STRING  "clojure/test.clj")
                        (STRING  "*report-counters*")
                        (STRING  "*initial-report-counters*")
                        (STRING  "test")
                        (STRING  "pass")
                        (STRING  "fail")
                        (STRING  "error")
                        (STRING  "*testing-vars*")
                        (STRING  "list")
                        (STRING  "*testing-contexts*")
                        (STRING  "*test-out*")
                        (STRING  "*out*")
                        (STRING  "with-test-out")
                        (STRING  "arglists")
                        (STRING  "&")
                        (STRING  "body")
                        (STRING  "Runs body with *out* bound to the value of *test-out*.")
                        (STRING  "file-position")
                        (STRING  "n")
                        (STRING  "deprecated")
                        (STRING  "1.2")
                        (STRING  "Returns a vector [filename line-number] for the nth call up the\n  stack.\n\n  Deprecated in 1.2: The information needed for test reporting is\n  now on :file and :line keys in the result map.")
                        (STRING  "testing-vars-str")
                        (STRING  "m")
                        (STRING  "Returns a string representation of the current test.  Renders names\n  in *testing-vars* as a list, then the source file and line of\n  current assertion.")
                        (STRING  "testing-contexts-str")
                        (STRING  "Returns a string representation of the current test context. Joins\n  strings in *testing-contexts* with spaces.")
                        (STRING  "inc-report-counter")
                        (STRING  "name")
                        (STRING  "Increments the named counter in *report-counters*, a ref to a map.\n  Does nothing if *report-counters* is nil.")
                        (STRING  "file-and-line")
                        (STRING  "exception")
                        (STRING  "depth")
                        (STRING  "private")
                        (STRING  "do-report")
                        (STRING  "Add file and line information to a test result and call report.\n   If you are writing a custom assert-expr method, call this function\n   to pass test results to report.")
                        (STRING  "report")
                        (STRING  "default")
                        (STRING  "summary")
                        (STRING  "begin-test-ns")
                        (STRING  "end-test-ns")
                        (STRING  "begin-test-var")
                        (STRING  "end-test-var")
                        (STRING  "get-possibly-unbound-var")
                        (STRING  "v")
                        (STRING  "Like var-get but returns nil if the var is unbound.")
                        (STRING  "function?")
                        (STRING  "x")
                        (STRING  "Returns true if argument is a function or a symbol that resolves to\n  a function (not a macro).")
                        (STRING  "assert-predicate")
                        (STRING  "msg")
                        (STRING  "form")
                        (STRING  "Returns generic assertion code for any functional predicate.  The\n  \nexpected\n argument to \nreport\n will contains the original form, the\n  \nactual\n argument will contain the form with all its sub-forms\n  evaluated.  If the predicate returns false, the \nactual\n form will\n  be wrapped in (not...).")
                        (STRING  "assert-any")
                        (STRING  "Returns generic assertion code for any test, including macros, Java\n  method calls, or isolated symbols.")
                        (STRING  "assert-expr")
                        (STRING  "always-fail")
                        (STRING  "instance?")
                        (STRING  "thrown?")
                        (STRING  "thrown-with-msg?")
                        (STRING  "try-expr")
                        (STRING  "Used by the \nis\n macro to catch unexpected exceptions.\n  You don\nt call this.")
                        (STRING  "is")
                        (STRING  "Generic assertion macro.  \nform\n is any predicate test.\n  \nmsg\n is an optional message to attach to the assertion.\n  \n  Example: (is (= 4 (+ 2 2)) \"Two plus two should be 4\")\n\n  Special forms:\n\n  (is (thrown? c body)) checks that an instance of c is thrown from\n  body, fails if not; then returns the thing thrown.\n\n  (is (thrown-with-msg? c re body)) checks that an instance of c is\n  thrown AND that the message on the exception matches (with\n  re-find) the regular expression re.")
                        (STRING  "are")
                        (STRING  "argv")
                        (STRING  "expr")
                        (STRING  "args")
                        (STRING  "Checks multiple assertions with a template expression.\n  See clojure.template/do-template for an explanation of\n  templates.\n\n  Example: (are [x y] (= x y)  \n                2 (+ 1 1)\n                4 (* 2 2))\n  Expands to: \n           (do (is (= 2 (+ 1 1)))\n               (is (= 4 (* 2 2))))\n\n  Note: This breaks some reporting features, such as line numbers.")
                        (STRING  "testing")
                        (STRING  "string")
                        (STRING  "Adds a new string to the list of testing contexts.  May be nested,\n  but must occur inside a test function (deftest).")
                        (STRING  "with-test")
                        (STRING  "definition")
                        (STRING  "Takes any definition form (that returns a Var) as the first argument.\n  Remaining body goes in the :test metadata function for that Var.\n\n  When *load-tests* is false, only evaluates the definition, ignoring\n  the tests.")
                        (STRING  "deftest")
                        (STRING  "Defines a test function with no arguments.  Test functions may call\n  other tests, so tests may be composed.  If you compose tests, you\n  should also define a function named test-ns-hook; run-tests will\n  call test-ns-hook instead of testing all vars.\n\n  Note: Actually, the test body goes in the :test metadata on the var,\n  and the real function (the value of the var) calls test-var on\n  itself.\n\n  When *load-tests* is false, deftest is ignored.")
                        (STRING  "deftest-")
                        (STRING  "Like deftest but creates a private var.")
                        (STRING  "set-test")
                        (STRING  "Experimental.\n  Sets :test metadata of the named var to a fn with the given body.\n  The var must already exist.  Does not modify the value of the var.\n\n  When *load-tests* is false, set-test is ignored.")
                        (STRING  "add-ns-meta")
                        (STRING  "key")
                        (STRING  "coll")
                        (STRING  "Adds elements in coll to the current namespace metadata as the\n  value of key.")
                        (STRING  "use-fixtures")
                        (STRING  "each")
                        (STRING  "once")
                        (STRING  "default-fixture")
                        (STRING  "f")
                        (STRING  "The default, empty, fixture function.  Just calls its argument.")
                        (STRING  "compose-fixtures")
                        (STRING  "f1")
                        (STRING  "f2")
                        (STRING  "Composes two fixture functions, creating a new fixture function\n  that combines their behavior.")
                        (STRING  "join-fixtures")
                        (STRING  "fixtures")
                        (STRING  "Composes a collection of fixtures, in order.  Always returns a valid\n  fixture function, even if the collection is empty.")
                        (STRING  "test-var")
                        (STRING  "If v has a function in its :test metadata, calls that function,\n  with *testing-vars* bound to (conj *testing-vars* v).")
                        (STRING  "test-all-vars")
                        (STRING  "ns")
                        (STRING  "Calls test-var on every var interned in the namespace, with fixtures.")
                        (STRING  "test-ns")
                        (STRING  "If the namespace defines a function named test-ns-hook, calls that.\n  Otherwise, calls test-all-vars on the namespace.  \nns\n is a\n  namespace object or a symbol.\n\n  Internally binds *report-counters* to a ref initialized to\n  *inital-report-counters*.  Returns the final, dereferenced state of\n  *report-counters*.")
                        (STRING  "run-tests")
                        (STRING  "namespaces")
                        (STRING  "Runs all tests in the given namespaces; prints results.\n  Defaults to current namespace if none given.  Returns a map\n  summarizing test results.")
                        (STRING  "run-all-tests")
                        (STRING  "re")
                        (STRING  "Runs all tests in all namespaces; prints results.\n  Optional argument is a regular expression; only namespaces with\n  names matching the regular expression (with re-matches) will be\n  tested.")
                        (STRING  "successful?")
                        (STRING  "Returns true if the given test summary indicates all tests\n  were successful, false otherwise.")
                        (STRING  "clojure.test__init"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__19" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__20" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__21" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__22" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__23" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__24" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__25" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__26" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__27" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__28" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__29" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__30" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__31" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__32" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__33" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__34" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__35" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__36" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__37" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__38" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__39" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__40" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__41" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__42" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__43" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__44" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__45" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__46" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__47" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__48" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__49" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__50" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__51" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__52" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__53" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__54" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__55" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__56" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__57" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__58" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__59" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__60" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__61" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__62" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__63" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__64" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__65" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__66" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__67" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__68" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__69" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__70" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__71" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__72" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__73" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__74" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__75" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__76" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__77" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__78" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__79" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__80" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__81" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__82" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__83" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__84" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__85" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__86" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__87" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__88" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__89" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__90" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__91" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__92" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__93" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__94" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__95" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__96" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__97" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__98" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__99" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__100" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__101" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__102" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__103" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__104" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__105" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__106" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__107" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__108" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__109" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__110" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__111" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__112" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__113" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__114" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__115" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__116" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__117" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__118" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__119" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__120" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__121" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__122" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__123" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__124" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__125" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__126" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__127" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__128" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__129" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__130" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__131" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__132" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__133" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__134" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__135" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__136" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__137" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__138" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__139" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__140" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__141" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__142" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__143" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__144" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__145" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__146" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__147" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__148" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__149" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__150" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__151" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__152" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__153" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__154" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__155" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__156" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__157" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__158" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__159" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__160" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__161" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__162" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__163" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__164" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__165" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__166" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__167" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__168" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__169" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "load"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 79) (max_locals . 0) (code_length . 1510)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (getstatic (fieldCP "const__1" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (12 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (17 (new (class "clojure.test$loading__4910__auto__"))) 
                                      (20 (dup)) 
                                      (21 (invokespecial (methodCP "<init>" "clojure.test$loading__4910__auto__" () void))) 
                                      (24 (checkcast (class "clojure.lang.IFn"))) 
                                      (27 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (32 (getstatic (fieldCP "const__1" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (35 (checkcast (class "clojure.lang.Symbol"))) 
                                      (38 (getstatic (fieldCP "const__2" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (41 (invokevirtual (methodCP "equals" "clojure.lang.Symbol" ((class "java.lang.Object")) boolean))) 
                                      (44 (ifeq 52))  ;;to TAG_0
                                      (47 (aconst_null)) 
                                      (48 (goto 67)) ;;to TAG_1
                                      (51 (pop)) 
                                      (52 (new (class "clojure.test$fn__7037"))) ;;at TAG_0
                                      (55 (dup)) 
                                      (56 (invokespecial (methodCP "<init>" "clojure.test$fn__7037" () void))) 
                                      (59 (checkcast (class "java.util.concurrent.Callable"))) 
                                      (62 (invokestatic (methodCP "runInTransaction" "clojure.lang.LockingTransaction" ((class "java.util.concurrent.Callable")) (class "java.lang.Object")))) 
                                      (65 (pop)) 
                                      (66 (aconst_null)) 
                                      (67 (new (class "clojure.test$fn__7039"))) ;;at TAG_1
                                      (70 (dup)) 
                                      (71 (invokespecial (methodCP "<init>" "clojure.test$fn__7039" () void))) 
                                      (74 (checkcast (class "clojure.lang.IFn"))) 
                                      (77 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (82 (getstatic (fieldCP "const__3" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (85 (iconst_1)) 
                                      (86 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" (boolean) (class "clojure.lang.Var")))) 
                                      (89 (dup)) 
                                      (90 (getstatic (fieldCP "const__12" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (93 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (96 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (99 (dup)) 
                                      (100 (aconst_null)) 
                                      (101 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (104 (getstatic (fieldCP "const__13" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (107 (iconst_1)) 
                                      (108 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" (boolean) (class "clojure.lang.Var")))) 
                                      (111 (dup)) 
                                      (112 (getstatic (fieldCP "const__15" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (115 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (118 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (121 (dup)) 
                                      (122 (aconst_null)) 
                                      (123 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (126 (getstatic (fieldCP "const__16" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (129 (iconst_1)) 
                                      (130 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" (boolean) (class "clojure.lang.Var")))) 
                                      (133 (dup)) 
                                      (134 (getstatic (fieldCP "const__18" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (137 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (140 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (143 (dup)) 
                                      (144 (getstatic (fieldCP "const__24" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (147 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (150 (getstatic (fieldCP "const__25" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (153 (iconst_1)) 
                                      (154 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" (boolean) (class "clojure.lang.Var")))) 
                                      (157 (dup)) 
                                      (158 (getstatic (fieldCP "const__27" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (161 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (164 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (167 (dup)) 
                                      (168 (getstatic (fieldCP "const__28" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (171 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (174 (checkcast (class "clojure.lang.IFn"))) 
                                      (177 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (182 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (185 (getstatic (fieldCP "const__29" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (188 (iconst_1)) 
                                      (189 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" (boolean) (class "clojure.lang.Var")))) 
                                      (192 (dup)) 
                                      (193 (getstatic (fieldCP "const__31" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (196 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (199 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (202 (dup)) 
                                      (203 (getstatic (fieldCP "const__28" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (206 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (209 (checkcast (class "clojure.lang.IFn"))) 
                                      (212 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (217 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (220 (getstatic (fieldCP "const__32" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (223 (iconst_1)) 
                                      (224 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" (boolean) (class "clojure.lang.Var")))) 
                                      (227 (dup)) 
                                      (228 (getstatic (fieldCP "const__34" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (231 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (234 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (237 (dup)) 
                                      (238 (getstatic (fieldCP "const__35" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (241 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (244 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (247 (getstatic (fieldCP "const__36" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (250 (dup)) 
                                      (251 (getstatic (fieldCP "const__40" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (254 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (257 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (260 (dup)) 
                                      (261 (new (class "clojure.test$with_test_out"))) 
                                      (264 (dup)) 
                                      (265 (invokespecial (methodCP "<init>" "clojure.test$with_test_out" () void))) 
                                      (268 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (271 (getstatic (fieldCP "const__36" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (274 (checkcast (class "clojure.lang.Var"))) 
                                      (277 (invokevirtual (methodCP "setMacro" "clojure.lang.Var" () void))) 
                                      (280 (aconst_null)) 
                                      (281 (getstatic (fieldCP "const__36" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (284 (getstatic (fieldCP "const__41" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (287 (dup)) 
                                      (288 (getstatic (fieldCP "const__45" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (291 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (294 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (297 (dup)) 
                                      (298 (new (class "clojure.test$file_position"))) 
                                      (301 (dup)) 
                                      (302 (invokespecial (methodCP "<init>" "clojure.test$file_position" () void))) 
                                      (305 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (308 (getstatic (fieldCP "const__46" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (311 (dup)) 
                                      (312 (getstatic (fieldCP "const__49" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (315 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (318 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (321 (dup)) 
                                      (322 (new (class "clojure.test$testing_vars_str"))) 
                                      (325 (dup)) 
                                      (326 (invokespecial (methodCP "<init>" "clojure.test$testing_vars_str" () void))) 
                                      (329 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (332 (getstatic (fieldCP "const__50" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (335 (dup)) 
                                      (336 (getstatic (fieldCP "const__53" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (339 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (342 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (345 (dup)) 
                                      (346 (new (class "clojure.test$testing_contexts_str"))) 
                                      (349 (dup)) 
                                      (350 (invokespecial (methodCP "<init>" "clojure.test$testing_contexts_str" () void))) 
                                      (353 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (356 (getstatic (fieldCP "const__54" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (359 (dup)) 
                                      (360 (getstatic (fieldCP "const__57" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (363 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (366 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (369 (dup)) 
                                      (370 (new (class "clojure.test$inc_report_counter"))) 
                                      (373 (dup)) 
                                      (374 (invokespecial (methodCP "<init>" "clojure.test$inc_report_counter" () void))) 
                                      (377 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (380 (new (class "clojure.test$fn__7054"))) 
                                      (383 (dup)) 
                                      (384 (invokespecial (methodCP "<init>" "clojure.test$fn__7054" () void))) 
                                      (387 (checkcast (class "clojure.lang.IFn"))) 
                                      (390 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (395 (getstatic (fieldCP "const__58" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (398 (dup)) 
                                      (399 (getstatic (fieldCP "const__62" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (402 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (405 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (408 (dup)) 
                                      (409 (new (class "clojure.test$file_and_line"))) 
                                      (412 (dup)) 
                                      (413 (invokespecial (methodCP "<init>" "clojure.test$file_and_line" () void))) 
                                      (416 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (419 (getstatic (fieldCP "const__63" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (422 (dup)) 
                                      (423 (getstatic (fieldCP "const__66" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (426 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (429 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (432 (dup)) 
                                      (433 (new (class "clojure.test$do_report"))) 
                                      (436 (dup)) 
                                      (437 (invokespecial (methodCP "<init>" "clojure.test$do_report" () void))) 
                                      (440 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (443 (getstatic (fieldCP "const__67" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (446 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (449 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (452 (getstatic (fieldCP "const__68" "clojure.test__init" (class "clojure.lang.Keyword")))) 
                                      (455 (new (class "clojure.test$fn__7061"))) 
                                      (458 (dup)) 
                                      (459 (invokespecial (methodCP "<init>" "clojure.test$fn__7061" () void))) 
                                      (462 (checkcast (class "clojure.lang.IFn"))) 
                                      (465 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (468 (getstatic (fieldCP "const__67" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (471 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (474 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (477 (getstatic (fieldCP "const__21" "clojure.test__init" (class "clojure.lang.Keyword")))) 
                                      (480 (new (class "clojure.test$fn__7063"))) 
                                      (483 (dup)) 
                                      (484 (invokespecial (methodCP "<init>" "clojure.test$fn__7063" () void))) 
                                      (487 (checkcast (class "clojure.lang.IFn"))) 
                                      (490 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (493 (getstatic (fieldCP "const__67" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (496 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (499 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (502 (getstatic (fieldCP "const__22" "clojure.test__init" (class "clojure.lang.Keyword")))) 
                                      (505 (new (class "clojure.test$fn__7065"))) 
                                      (508 (dup)) 
                                      (509 (invokespecial (methodCP "<init>" "clojure.test$fn__7065" () void))) 
                                      (512 (checkcast (class "clojure.lang.IFn"))) 
                                      (515 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (518 (getstatic (fieldCP "const__67" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (521 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (524 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (527 (getstatic (fieldCP "const__23" "clojure.test__init" (class "clojure.lang.Keyword")))) 
                                      (530 (new (class "clojure.test$fn__7068"))) 
                                      (533 (dup)) 
                                      (534 (invokespecial (methodCP "<init>" "clojure.test$fn__7068" () void))) 
                                      (537 (checkcast (class "clojure.lang.IFn"))) 
                                      (540 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (543 (getstatic (fieldCP "const__67" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (546 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (549 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (552 (getstatic (fieldCP "const__69" "clojure.test__init" (class "clojure.lang.Keyword")))) 
                                      (555 (new (class "clojure.test$fn__7071"))) 
                                      (558 (dup)) 
                                      (559 (invokespecial (methodCP "<init>" "clojure.test$fn__7071" () void))) 
                                      (562 (checkcast (class "clojure.lang.IFn"))) 
                                      (565 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (568 (getstatic (fieldCP "const__67" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (571 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (574 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (577 (getstatic (fieldCP "const__70" "clojure.test__init" (class "clojure.lang.Keyword")))) 
                                      (580 (new (class "clojure.test$fn__7073"))) 
                                      (583 (dup)) 
                                      (584 (invokespecial (methodCP "<init>" "clojure.test$fn__7073" () void))) 
                                      (587 (checkcast (class "clojure.lang.IFn"))) 
                                      (590 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (593 (getstatic (fieldCP "const__67" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (596 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (599 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (602 (getstatic (fieldCP "const__71" "clojure.test__init" (class "clojure.lang.Keyword")))) 
                                      (605 (new (class "clojure.test$fn__7075"))) 
                                      (608 (dup)) 
                                      (609 (invokespecial (methodCP "<init>" "clojure.test$fn__7075" () void))) 
                                      (612 (checkcast (class "clojure.lang.IFn"))) 
                                      (615 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (618 (getstatic (fieldCP "const__67" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (621 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (624 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (627 (getstatic (fieldCP "const__72" "clojure.test__init" (class "clojure.lang.Keyword")))) 
                                      (630 (new (class "clojure.test$fn__7077"))) 
                                      (633 (dup)) 
                                      (634 (invokespecial (methodCP "<init>" "clojure.test$fn__7077" () void))) 
                                      (637 (checkcast (class "clojure.lang.IFn"))) 
                                      (640 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (643 (getstatic (fieldCP "const__67" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (646 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (649 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (652 (getstatic (fieldCP "const__73" "clojure.test__init" (class "clojure.lang.Keyword")))) 
                                      (655 (new (class "clojure.test$fn__7079"))) 
                                      (658 (dup)) 
                                      (659 (invokespecial (methodCP "<init>" "clojure.test$fn__7079" () void))) 
                                      (662 (checkcast (class "clojure.lang.IFn"))) 
                                      (665 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (668 (getstatic (fieldCP "const__74" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (671 (dup)) 
                                      (672 (getstatic (fieldCP "const__77" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (675 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (678 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (681 (dup)) 
                                      (682 (new (class "clojure.test$get_possibly_unbound_var"))) 
                                      (685 (dup)) 
                                      (686 (invokespecial (methodCP "<init>" "clojure.test$get_possibly_unbound_var" () void))) 
                                      (689 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (692 (getstatic (fieldCP "const__78" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (695 (dup)) 
                                      (696 (getstatic (fieldCP "const__81" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (699 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (702 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (705 (dup)) 
                                      (706 (new (class "clojure.test$function_QMARK_"))) 
                                      (709 (dup)) 
                                      (710 (invokespecial (methodCP "<init>" "clojure.test$function_QMARK_" () void))) 
                                      (713 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (716 (getstatic (fieldCP "const__82" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (719 (dup)) 
                                      (720 (getstatic (fieldCP "const__85" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (723 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (726 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (729 (dup)) 
                                      (730 (new (class "clojure.test$assert_predicate"))) 
                                      (733 (dup)) 
                                      (734 (invokespecial (methodCP "<init>" "clojure.test$assert_predicate" () void))) 
                                      (737 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (740 (getstatic (fieldCP "const__86" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (743 (dup)) 
                                      (744 (getstatic (fieldCP "const__89" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (747 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (750 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (753 (dup)) 
                                      (754 (new (class "clojure.test$assert_any"))) 
                                      (757 (dup)) 
                                      (758 (invokespecial (methodCP "<init>" "clojure.test$assert_any" () void))) 
                                      (761 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (764 (new (class "clojure.test$fn__7091"))) 
                                      (767 (dup)) 
                                      (768 (invokespecial (methodCP "<init>" "clojure.test$fn__7091" () void))) 
                                      (771 (checkcast (class "clojure.lang.IFn"))) 
                                      (774 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (779 (getstatic (fieldCP "const__90" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (782 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (785 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (788 (getstatic (fieldCP "const__91" "clojure.test__init" (class "clojure.lang.Keyword")))) 
                                      (791 (new (class "clojure.test$fn__7097"))) 
                                      (794 (dup)) 
                                      (795 (invokespecial (methodCP "<init>" "clojure.test$fn__7097" () void))) 
                                      (798 (checkcast (class "clojure.lang.IFn"))) 
                                      (801 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (804 (getstatic (fieldCP "const__90" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (807 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (810 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (813 (getstatic (fieldCP "const__68" "clojure.test__init" (class "clojure.lang.Keyword")))) 
                                      (816 (new (class "clojure.test$fn__7099"))) 
                                      (819 (dup)) 
                                      (820 (invokespecial (methodCP "<init>" "clojure.test$fn__7099" () void))) 
                                      (823 (checkcast (class "clojure.lang.IFn"))) 
                                      (826 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (829 (getstatic (fieldCP "const__90" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (832 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (835 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (838 (getstatic (fieldCP "const__92" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (841 (new (class "clojure.test$fn__7105"))) 
                                      (844 (dup)) 
                                      (845 (invokespecial (methodCP "<init>" "clojure.test$fn__7105" () void))) 
                                      (848 (checkcast (class "clojure.lang.IFn"))) 
                                      (851 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (854 (getstatic (fieldCP "const__90" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (857 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (860 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (863 (getstatic (fieldCP "const__93" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (866 (new (class "clojure.test$fn__7108"))) 
                                      (869 (dup)) 
                                      (870 (invokespecial (methodCP "<init>" "clojure.test$fn__7108" () void))) 
                                      (873 (checkcast (class "clojure.lang.IFn"))) 
                                      (876 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (879 (getstatic (fieldCP "const__90" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (882 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (885 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (888 (getstatic (fieldCP "const__94" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (891 (new (class "clojure.test$fn__7112"))) 
                                      (894 (dup)) 
                                      (895 (invokespecial (methodCP "<init>" "clojure.test$fn__7112" () void))) 
                                      (898 (checkcast (class "clojure.lang.IFn"))) 
                                      (901 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (904 (getstatic (fieldCP "const__95" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (907 (dup)) 
                                      (908 (getstatic (fieldCP "const__98" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (911 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (914 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (917 (dup)) 
                                      (918 (new (class "clojure.test$try_expr"))) 
                                      (921 (dup)) 
                                      (922 (invokespecial (methodCP "<init>" "clojure.test$try_expr" () void))) 
                                      (925 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (928 (getstatic (fieldCP "const__95" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (931 (checkcast (class "clojure.lang.Var"))) 
                                      (934 (invokevirtual (methodCP "setMacro" "clojure.lang.Var" () void))) 
                                      (937 (aconst_null)) 
                                      (938 (getstatic (fieldCP "const__95" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (941 (getstatic (fieldCP "const__99" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (944 (dup)) 
                                      (945 (getstatic (fieldCP "const__102" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (948 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (951 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (954 (dup)) 
                                      (955 (new (class "clojure.test$is"))) 
                                      (958 (dup)) 
                                      (959 (invokespecial (methodCP "<init>" "clojure.test$is" () void))) 
                                      (962 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (965 (getstatic (fieldCP "const__99" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (968 (checkcast (class "clojure.lang.Var"))) 
                                      (971 (invokevirtual (methodCP "setMacro" "clojure.lang.Var" () void))) 
                                      (974 (aconst_null)) 
                                      (975 (getstatic (fieldCP "const__99" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (978 (getstatic (fieldCP "const__103" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (981 (dup)) 
                                      (982 (getstatic (fieldCP "const__106" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (985 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (988 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (991 (dup)) 
                                      (992 (new (class "clojure.test$are"))) 
                                      (995 (dup)) 
                                      (996 (invokespecial (methodCP "<init>" "clojure.test$are" () void))) 
                                      (999 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (1002 (getstatic (fieldCP "const__103" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1005 (checkcast (class "clojure.lang.Var"))) 
                                      (1008 (invokevirtual (methodCP "setMacro" "clojure.lang.Var" () void))) 
                                      (1011 (aconst_null)) 
                                      (1012 (getstatic (fieldCP "const__103" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1015 (getstatic (fieldCP "const__107" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1018 (dup)) 
                                      (1019 (getstatic (fieldCP "const__110" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (1022 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (1025 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (1028 (dup)) 
                                      (1029 (new (class "clojure.test$testing"))) 
                                      (1032 (dup)) 
                                      (1033 (invokespecial (methodCP "<init>" "clojure.test$testing" () void))) 
                                      (1036 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (1039 (getstatic (fieldCP "const__107" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1042 (checkcast (class "clojure.lang.Var"))) 
                                      (1045 (invokevirtual (methodCP "setMacro" "clojure.lang.Var" () void))) 
                                      (1048 (aconst_null)) 
                                      (1049 (getstatic (fieldCP "const__107" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1052 (getstatic (fieldCP "const__111" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1055 (dup)) 
                                      (1056 (getstatic (fieldCP "const__114" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (1059 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (1062 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (1065 (dup)) 
                                      (1066 (new (class "clojure.test$with_test"))) 
                                      (1069 (dup)) 
                                      (1070 (invokespecial (methodCP "<init>" "clojure.test$with_test" () void))) 
                                      (1073 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (1076 (getstatic (fieldCP "const__111" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1079 (checkcast (class "clojure.lang.Var"))) 
                                      (1082 (invokevirtual (methodCP "setMacro" "clojure.lang.Var" () void))) 
                                      (1085 (aconst_null)) 
                                      (1086 (getstatic (fieldCP "const__111" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1089 (getstatic (fieldCP "const__115" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1092 (dup)) 
                                      (1093 (getstatic (fieldCP "const__118" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (1096 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (1099 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (1102 (dup)) 
                                      (1103 (new (class "clojure.test$deftest"))) 
                                      (1106 (dup)) 
                                      (1107 (invokespecial (methodCP "<init>" "clojure.test$deftest" () void))) 
                                      (1110 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (1113 (getstatic (fieldCP "const__115" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1116 (checkcast (class "clojure.lang.Var"))) 
                                      (1119 (invokevirtual (methodCP "setMacro" "clojure.lang.Var" () void))) 
                                      (1122 (aconst_null)) 
                                      (1123 (getstatic (fieldCP "const__115" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1126 (getstatic (fieldCP "const__119" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1129 (dup)) 
                                      (1130 (getstatic (fieldCP "const__122" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (1133 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (1136 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (1139 (dup)) 
                                      (1140 (new (class "clojure.test$deftest_"))) 
                                      (1143 (dup)) 
                                      (1144 (invokespecial (methodCP "<init>" "clojure.test$deftest_" () void))) 
                                      (1147 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (1150 (getstatic (fieldCP "const__119" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1153 (checkcast (class "clojure.lang.Var"))) 
                                      (1156 (invokevirtual (methodCP "setMacro" "clojure.lang.Var" () void))) 
                                      (1159 (aconst_null)) 
                                      (1160 (getstatic (fieldCP "const__119" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1163 (getstatic (fieldCP "const__123" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1166 (dup)) 
                                      (1167 (getstatic (fieldCP "const__126" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (1170 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (1173 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (1176 (dup)) 
                                      (1177 (new (class "clojure.test$set_test"))) 
                                      (1180 (dup)) 
                                      (1181 (invokespecial (methodCP "<init>" "clojure.test$set_test" () void))) 
                                      (1184 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (1187 (getstatic (fieldCP "const__123" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1190 (checkcast (class "clojure.lang.Var"))) 
                                      (1193 (invokevirtual (methodCP "setMacro" "clojure.lang.Var" () void))) 
                                      (1196 (aconst_null)) 
                                      (1197 (getstatic (fieldCP "const__123" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1200 (getstatic (fieldCP "const__127" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1203 (dup)) 
                                      (1204 (getstatic (fieldCP "const__130" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (1207 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (1210 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (1213 (dup)) 
                                      (1214 (new (class "clojure.test$add_ns_meta"))) 
                                      (1217 (dup)) 
                                      (1218 (invokespecial (methodCP "<init>" "clojure.test$add_ns_meta" () void))) 
                                      (1221 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (1224 (new (class "clojure.test$fn__7128"))) 
                                      (1227 (dup)) 
                                      (1228 (invokespecial (methodCP "<init>" "clojure.test$fn__7128" () void))) 
                                      (1231 (checkcast (class "clojure.lang.IFn"))) 
                                      (1234 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (1239 (getstatic (fieldCP "const__131" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1242 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1245 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (1248 (getstatic (fieldCP "const__132" "clojure.test__init" (class "clojure.lang.Keyword")))) 
                                      (1251 (new (class "clojure.test$fn__7134"))) 
                                      (1254 (dup)) 
                                      (1255 (invokespecial (methodCP "<init>" "clojure.test$fn__7134" () void))) 
                                      (1258 (checkcast (class "clojure.lang.IFn"))) 
                                      (1261 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (1264 (getstatic (fieldCP "const__131" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1267 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1270 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (1273 (getstatic (fieldCP "const__133" "clojure.test__init" (class "clojure.lang.Keyword")))) 
                                      (1276 (new (class "clojure.test$fn__7136"))) 
                                      (1279 (dup)) 
                                      (1280 (invokespecial (methodCP "<init>" "clojure.test$fn__7136" () void))) 
                                      (1283 (checkcast (class "clojure.lang.IFn"))) 
                                      (1286 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (1289 (getstatic (fieldCP "const__134" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1292 (dup)) 
                                      (1293 (getstatic (fieldCP "const__137" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (1296 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (1299 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (1302 (dup)) 
                                      (1303 (new (class "clojure.test$default_fixture"))) 
                                      (1306 (dup)) 
                                      (1307 (invokespecial (methodCP "<init>" "clojure.test$default_fixture" () void))) 
                                      (1310 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (1313 (getstatic (fieldCP "const__138" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1316 (dup)) 
                                      (1317 (getstatic (fieldCP "const__141" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (1320 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (1323 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (1326 (dup)) 
                                      (1327 (new (class "clojure.test$compose_fixtures"))) 
                                      (1330 (dup)) 
                                      (1331 (invokespecial (methodCP "<init>" "clojure.test$compose_fixtures" () void))) 
                                      (1334 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (1337 (getstatic (fieldCP "const__142" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1340 (dup)) 
                                      (1341 (getstatic (fieldCP "const__145" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (1344 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (1347 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (1350 (dup)) 
                                      (1351 (new (class "clojure.test$join_fixtures"))) 
                                      (1354 (dup)) 
                                      (1355 (invokespecial (methodCP "<init>" "clojure.test$join_fixtures" () void))) 
                                      (1358 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (1361 (getstatic (fieldCP "const__146" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1364 (iconst_1)) 
                                      (1365 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" (boolean) (class "clojure.lang.Var")))) 
                                      (1368 (dup)) 
                                      (1369 (getstatic (fieldCP "const__149" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (1372 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (1375 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (1378 (dup)) 
                                      (1379 (new (class "clojure.test$test_var"))) 
                                      (1382 (dup)) 
                                      (1383 (invokespecial (methodCP "<init>" "clojure.test$test_var" () void))) 
                                      (1386 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (1389 (getstatic (fieldCP "const__150" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1392 (dup)) 
                                      (1393 (getstatic (fieldCP "const__153" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (1396 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (1399 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (1402 (dup)) 
                                      (1403 (new (class "clojure.test$test_all_vars"))) 
                                      (1406 (dup)) 
                                      (1407 (invokespecial (methodCP "<init>" "clojure.test$test_all_vars" () void))) 
                                      (1410 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (1413 (getstatic (fieldCP "const__154" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1416 (dup)) 
                                      (1417 (getstatic (fieldCP "const__157" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (1420 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (1423 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (1426 (dup)) 
                                      (1427 (new (class "clojure.test$test_ns"))) 
                                      (1430 (dup)) 
                                      (1431 (invokespecial (methodCP "<init>" "clojure.test$test_ns" () void))) 
                                      (1434 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (1437 (getstatic (fieldCP "const__158" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1440 (dup)) 
                                      (1441 (getstatic (fieldCP "const__161" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (1444 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (1447 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (1450 (dup)) 
                                      (1451 (new (class "clojure.test$run_tests"))) 
                                      (1454 (dup)) 
                                      (1455 (invokespecial (methodCP "<init>" "clojure.test$run_tests" () void))) 
                                      (1458 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (1461 (getstatic (fieldCP "const__162" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1464 (dup)) 
                                      (1465 (getstatic (fieldCP "const__165" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (1468 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (1471 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (1474 (dup)) 
                                      (1475 (new (class "clojure.test$run_all_tests"))) 
                                      (1478 (dup)) 
                                      (1479 (invokespecial (methodCP "<init>" "clojure.test$run_all_tests" () void))) 
                                      (1482 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (1485 (getstatic (fieldCP "const__166" "clojure.test__init" (class "clojure.lang.Var")))) 
                                      (1488 (dup)) 
                                      (1489 (getstatic (fieldCP "const__169" "clojure.test__init" (class "clojure.lang.AFn")))) 
                                      (1492 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (1495 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (1498 (dup)) 
                                      (1499 (new (class "clojure.test$successful_QMARK_"))) 
                                      (1502 (dup)) 
                                      (1503 (invokespecial (methodCP "<init>" "clojure.test$successful_QMARK_" () void))) 
                                      (1506 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (1509 (return)) 
                                      (endofcode 1510))
                                   (Exceptions )
                                   (StackMap )))
                        (method "__init0"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 11) (max_locals . 0) (code_length . 3776)
                                   (parsedcode
                                      (0 (ldc_w 0))       ;;STRING:: "clojure.core"
                                      (3 (ldc_w 1))       ;;STRING:: "in-ns"
                                      (6 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (9 (checkcast (class "clojure.lang.Var")))
                                      (12 (putstatic (fieldCP "const__0" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (15 (aconst_null))
                                      (16 (ldc_w 2))      ;;STRING:: "clojure.test"
                                      (19 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (22 (checkcast (class "clojure.lang.IObj")))
                                      (25 (iconst_4))
                                      (26 (anewarray (class "java.lang.Object")))
                                      (29 (dup))
                                      (30 (iconst_0))
                                      (31 (aconst_null))
                                      (32 (ldc_w 3))      ;;STRING:: "doc"
                                      (35 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (38 (aastore))
                                      (39 (dup))
                                      (40 (iconst_1))
                                      (41 (ldc_w 4))      ;;STRING:: "A unit testing framework.\n\n   ASSERTIONS\n\n   The core of the library is the \"is\" macro, which lets you make\n   assertions of any arbitrary expression:\n\n   (is (= 4 (+ 2 2)))\n   (is (instance? Integer 256))\n   (is (.startsWith \"abcde\" \"ab\"))\n\n   You can type an \"is\" expression directly at the REPL, which will\n   print a message if it fails.\n\n       user> (is (= 5 (+ 2 2)))\n\n       FAIL in  (:1)\n       expected: (= 5 (+ 2 2))\n         actual: (not (= 5 4))\n       false\n\n   The \"expected:\" line shows you the original expression, and the\n   \"actual:\" shows you what actually happened.  In this case, it\n   shows that (+ 2 2) returned 4, which is not = to 5.  Finally, the\n   \"false\" on the last line is the value returned from the\n   expression.  The \"is\" macro always returns the result of the\n   inner expression.\n\n   There are two special assertions for testing exceptions.  The\n   \"(is (thrown? c ...))\" form tests if an exception of class c is\n   thrown:\n\n   (is (thrown? ArithmeticException (/ 1 0))) \n\n   \"(is (thrown-with-msg? c re ...))\" does the same thing and also\n   tests that the message on the exception matches the regular\n   expression re:\n\n   (is (thrown-with-msg? ArithmeticException #\"Divide by zero\"\n                         (/ 1 0)))\n\n   DOCUMENTING TESTS\n\n   \"is\" takes an optional second argument, a string describing the\n   assertion.  This message will be included in the error report.\n\n   (is (= 5 (+ 2 2)) \"Crazy arithmetic\")\n\n   In addition, you can document groups of assertions with the\n   \"testing\" macro, which takes a string followed by any number of\n   assertions.  The string will be included in failure reports.\n   Calls to \"testing\" may be nested, and all of the strings will be\n   joined together with spaces in the final report, in a style\n   similar to RSpec <http://rspec.info/>\n\n   (testing \"Arithmetic\"\n     (testing \"with positive integers\"\n       (is (= 4 (+ 2 2)))\n       (is (= 7 (+ 3 4))))\n     (testing \"with negative integers\"\n       (is (= -4 (+ -2 -2)))\n       (is (= -1 (+ 3 -4)))))\n\n   Note that, unlike RSpec, the \"testing\" macro may only be used\n   INSIDE a \"deftest\" or \"with-test\" form (see below).\n\n\n   DEFINING TESTS\n\n   There are two ways to define tests.  The \"with-test\" macro takes\n   a defn or def form as its first argument, followed by any number\n   of assertions.  The tests will be stored as metadata on the\n   definition.\n\n   (with-test\n       (defn my-function [x y]\n         (+ x y))\n     (is (= 4 (my-function 2 2)))\n     (is (= 7 (my-function 3 4))))\n\n   As of Clojure SVN rev. 1221, this does not work with defmacro.\n   See http://code.google.com/p/clojure/issues/detail?id=51\n\n   The other way lets you define tests separately from the rest of\n   your code, even in a different namespace:\n\n   (deftest addition\n     (is (= 4 (+ 2 2)))\n     (is (= 7 (+ 3 4))))\n\n   (deftest subtraction\n     (is (= 1 (- 4 3)))\n     (is (= 3 (- 7 4))))\n\n   This creates functions named \"addition\" and \"subtraction\", which\n   can be called like any other function.  Therefore, tests can be\n   grouped and composed, in a style similar to the test framework in\n   Peter Seibel\ns \"Practical Common Lisp\"\n   <http://www.gigamonkeys.com/book/practical-building-a-unit-test-framework.html>\n\n   (deftest arithmetic\n     (addition)\n     (subtraction))\n\n   The names of the nested tests will be joined in a list, like\n   \"(arithmetic addition)\", in failure reports.  You can use nested\n   tests to set up a context shared by several tests.\n\n\n   RUNNING TESTS\n\n   Run tests with the function \"(run-tests namespaces...)\":\n\n   (run-tests \nyour.namespace \nsome.other.namespace)\n\n   If you don\nt specify any namespaces, the current namespace is\n   used.  To run all tests in all namespaces, use \"(run-all-tests)\".\n\n   By default, these functions will search for all tests defined in\n   a namespace and run them in an undefined order.  However, if you\n   are composing tests, as in the \"arithmetic\" example above, you\n   probably do not want the \"addition\" and \"subtraction\" tests run\n   separately.  In that case, you must define a special function\n   named \"test-ns-hook\" that runs your tests in the correct order:\n\n   (defn test-ns-hook []\n     (arithmetic))\n\n   Note: test-ns-hook prevents execution of fixtures (see below).\n\n\n   OMITTING TESTS FROM PRODUCTION CODE\n\n   You can bind the variable \"*load-tests*\" to false when loading or\n   compiling code in production.  This will prevent any tests from\n   being created by \"with-test\" or \"deftest\".\n\n\n   FIXTURES\n\n   Fixtures allow you to run code before and after tests, to set up\n   the context in which tests should be run.\n\n   A fixture is just a function that calls another function passed as\n   an argument.  It looks like this:\n\n   (defn my-fixture [f]\n      Perform setup, establish bindings, whatever.\n     (f)  Then call the function we were passed.\n      Tear-down / clean-up code here.\n    )\n\n   Fixtures are attached to namespaces in one of two ways.  \"each\"\n   fixtures are run repeatedly, once for each test function created\n   with \"deftest\" or \"with-test\".  \"each\" fixtures are useful for\n   establishing a consistent before/after state for each test, like\n   clearing out database tables.\n\n   \"each\" fixtures can be attached to the current namespace like this:\n   (use-fixtures :each fixture1 fixture2 ...)\n   The fixture1, fixture2 are just functions like the example above.\n   They can also be anonymous functions, like this:\n   (use-fixtures :each (fn [f] setup... (f) cleanup...))\n\n   The other kind of fixture, a \"once\" fixture, is only run once,\n   around ALL the tests in the namespace.  \"once\" fixtures are useful\n   for tasks that only need to be performed once, like establishing\n   database connections, or for time-consuming tasks.\n\n   Attach \"once\" fixtures to the current namespace like this:\n   (use-fixtures :once fixture1 fixture2 ...)\n\n   Note: Fixtures and test-ns-hook are mutually incompatible.  If you\n   are using test-ns-hook, fixture functions will *never* be run.\n\n\n   SAVING TEST OUTPUT TO A FILE\n\n   All the test reporting functions write to the var *test-out*.  By\n   default, this is the same as *out*, but you can rebind it to any\n   PrintWriter.  For example, it could be a file opened with\n   clojure.java.io/writer.\n\n\n   EXTENDING TEST-IS (ADVANCED)\n\n   You can extend the behavior of the \"is\" macro by defining new\n   methods for the \"assert-expr\" multimethod.  These methods are\n   called during expansion of the \"is\" macro, so they should return\n   quoted forms to be evaluated.\n\n   You can plug in your own test-reporting framework by rebinding\n   the \"report\" function: (report event)\n\n   The \nevent\n argument is a map.  It will always have a :type key,\n   whose value will be a keyword signaling the type of event being\n   reported.  Standard events with :type value of :pass, :fail, and\n   :error are called when an assertion passes, fails, and throws an\n   exception, respectively.  In that case, the event will also have\n   the following keys:\n\n     :expected   The form that was expected to be true\n     :actual     A form representing what actually occurred\n     :message    The string message given as an argument to \nis\n\n\n   The \"testing\" strings will be a list in \"*testing-contexts*\", and\n   the vars being tested will be a list in \"*testing-vars*\".\n\n   Your \"report\" function should wrap any printing calls in the\n   \"with-test-out\" macro, which rebinds *out* to the current value\n   of *test-out*.\n\n   For additional event types, see the examples in the code.\n"
                                      (44 (aastore))
                                      (45 (dup))
                                      (46 (iconst_2))
                                      (47 (aconst_null))
                                      (48 (ldc_w 5))      ;;STRING:: "author"
                                      (51 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (54 (aastore))
                                      (55 (dup))
                                      (56 (iconst_3))
                                      (57 (ldc_w 6))      ;;STRING:: "Stuart Sierra, with contributions and suggestions by \n  Chas Emerick, Allen Rohner, and Stuart Halloway"
                                      (60 (aastore))
                                      (61 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (64 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (67 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (72 (checkcast (class "clojure.lang.AFn")))
                                      (75 (putstatic (fieldCP "const__1" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (78 (aconst_null))
                                      (79 (ldc_w 0))      ;;STRING:: "clojure.core"
                                      (82 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (85 (checkcast (class "clojure.lang.AFn")))
                                      (88 (putstatic (fieldCP "const__2" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (91 (ldc_w 2))      ;;STRING:: "clojure.test"
                                      (94 (ldc_w 7))      ;;STRING:: "*stack-trace-depth*"
                                      (97 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (100 (checkcast (class "clojure.lang.Var")))
                                      (103 (putstatic (fieldCP "const__3" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (106 (aconst_null))
                                      (107 (ldc_w 8))     ;;STRING:: "file"
                                      (110 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (113 (checkcast (class "clojure.lang.Keyword")))
                                      (116 (putstatic (fieldCP "const__4" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (119 (aconst_null))
                                      (120 (ldc_w 9))     ;;STRING:: "column"
                                      (123 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (126 (checkcast (class "clojure.lang.Keyword")))
                                      (129 (putstatic (fieldCP "const__5" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (132 (iconst_1))
                                      (133 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (136 (putstatic (fieldCP "const__6" "clojure.test__init" (class "java.lang.Object"))))
                                      (139 (aconst_null))
                                      (140 (ldc_w 10))    ;;STRING:: "line"
                                      (143 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (146 (checkcast (class "clojure.lang.Keyword")))
                                      (149 (putstatic (fieldCP "const__7" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (152 (sipush 251))
                                      (155 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (158 (putstatic (fieldCP "const__8" "clojure.test__init" (class "java.lang.Object"))))
                                      (161 (aconst_null))
                                      (162 (ldc_w 11))    ;;STRING:: "dynamic"
                                      (165 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (168 (checkcast (class "clojure.lang.Keyword")))
                                      (171 (putstatic (fieldCP "const__9" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (174 (aconst_null))
                                      (175 (ldc_w 12))    ;;STRING:: "added"
                                      (178 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (181 (checkcast (class "clojure.lang.Keyword")))
                                      (184 (putstatic (fieldCP "const__10" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (187 (aconst_null))
                                      (188 (ldc_w 3))     ;;STRING:: "doc"
                                      (191 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (194 (checkcast (class "clojure.lang.Keyword")))
                                      (197 (putstatic (fieldCP "const__11" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (200 (bipush 12))
                                      (202 (anewarray (class "java.lang.Object")))
                                      (205 (dup))
                                      (206 (iconst_0))
                                      (207 (aconst_null))
                                      (208 (ldc_w 11))    ;;STRING:: "dynamic"
                                      (211 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (214 (aastore))
                                      (215 (dup))
                                      (216 (iconst_1))
                                      (217 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (220 (aastore))
                                      (221 (dup))
                                      (222 (iconst_2))
                                      (223 (aconst_null))
                                      (224 (ldc_w 9))     ;;STRING:: "column"
                                      (227 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (230 (aastore))
                                      (231 (dup))
                                      (232 (iconst_3))
                                      (233 (iconst_1))
                                      (234 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (237 (aastore))
                                      (238 (dup))
                                      (239 (iconst_4))
                                      (240 (aconst_null))
                                      (241 (ldc_w 12))    ;;STRING:: "added"
                                      (244 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (247 (aastore))
                                      (248 (dup))
                                      (249 (iconst_5))
                                      (250 (ldc_w 13))    ;;STRING:: "1.1"
                                      (253 (aastore))
                                      (254 (dup))
                                      (255 (bipush 6))
                                      (257 (aconst_null))
                                      (258 (ldc_w 3))     ;;STRING:: "doc"
                                      (261 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (264 (aastore))
                                      (265 (dup))
                                      (266 (bipush 7))
                                      (268 (ldc_w 14))    ;;STRING:: "The maximum depth of stack traces to print when an Exception\n  is thrown during a test.  Defaults to nil, which means print the \n  complete stack trace."
                                      (271 (aastore))
                                      (272 (dup))
                                      (273 (bipush 8))
                                      (275 (aconst_null))
                                      (276 (ldc_w 10))    ;;STRING:: "line"
                                      (279 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (282 (aastore))
                                      (283 (dup))
                                      (284 (bipush 9))
                                      (286 (sipush 251))
                                      (289 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (292 (aastore))
                                      (293 (dup))
                                      (294 (bipush 10))
                                      (296 (aconst_null))
                                      (297 (ldc_w 8))     ;;STRING:: "file"
                                      (300 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (303 (aastore))
                                      (304 (dup))
                                      (305 (bipush 11))
                                      (307 (ldc_w 15))    ;;STRING:: "clojure/test.clj"
                                      (310 (aastore))
                                      (311 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (314 (checkcast (class "clojure.lang.AFn")))
                                      (317 (putstatic (fieldCP "const__12" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (320 (ldc_w 2))     ;;STRING:: "clojure.test"
                                      (323 (ldc_w 16))    ;;STRING:: "*report-counters*"
                                      (326 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (329 (checkcast (class "clojure.lang.Var")))
                                      (332 (putstatic (fieldCP "const__13" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (335 (sipush 261))
                                      (338 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (341 (putstatic (fieldCP "const__14" "clojure.test__init" (class "java.lang.Object"))))
                                      (344 (bipush 8))
                                      (346 (anewarray (class "java.lang.Object")))
                                      (349 (dup))
                                      (350 (iconst_0))
                                      (351 (aconst_null))
                                      (352 (ldc_w 11))    ;;STRING:: "dynamic"
                                      (355 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (358 (aastore))
                                      (359 (dup))
                                      (360 (iconst_1))
                                      (361 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (364 (aastore))
                                      (365 (dup))
                                      (366 (iconst_2))
                                      (367 (aconst_null))
                                      (368 (ldc_w 9))     ;;STRING:: "column"
                                      (371 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (374 (aastore))
                                      (375 (dup))
                                      (376 (iconst_3))
                                      (377 (iconst_1))
                                      (378 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (381 (aastore))
                                      (382 (dup))
                                      (383 (iconst_4))
                                      (384 (aconst_null))
                                      (385 (ldc_w 10))    ;;STRING:: "line"
                                      (388 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (391 (aastore))
                                      (392 (dup))
                                      (393 (iconst_5))
                                      (394 (sipush 261))
                                      (397 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (400 (aastore))
                                      (401 (dup))
                                      (402 (bipush 6))
                                      (404 (aconst_null))
                                      (405 (ldc_w 8))     ;;STRING:: "file"
                                      (408 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (411 (aastore))
                                      (412 (dup))
                                      (413 (bipush 7))
                                      (415 (ldc_w 15))    ;;STRING:: "clojure/test.clj"
                                      (418 (aastore))
                                      (419 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (422 (checkcast (class "clojure.lang.AFn")))
                                      (425 (putstatic (fieldCP "const__15" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (428 (ldc_w 2))     ;;STRING:: "clojure.test"
                                      (431 (ldc_w 17))    ;;STRING:: "*initial-report-counters*"
                                      (434 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (437 (checkcast (class "clojure.lang.Var")))
                                      (440 (putstatic (fieldCP "const__16" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (443 (sipush 263))
                                      (446 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (449 (putstatic (fieldCP "const__17" "clojure.test__init" (class "java.lang.Object"))))
                                      (452 (bipush 8))
                                      (454 (anewarray (class "java.lang.Object")))
                                      (457 (dup))
                                      (458 (iconst_0))
                                      (459 (aconst_null))
                                      (460 (ldc_w 11))    ;;STRING:: "dynamic"
                                      (463 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (466 (aastore))
                                      (467 (dup))
                                      (468 (iconst_1))
                                      (469 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (472 (aastore))
                                      (473 (dup))
                                      (474 (iconst_2))
                                      (475 (aconst_null))
                                      (476 (ldc_w 9))     ;;STRING:: "column"
                                      (479 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (482 (aastore))
                                      (483 (dup))
                                      (484 (iconst_3))
                                      (485 (iconst_1))
                                      (486 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (489 (aastore))
                                      (490 (dup))
                                      (491 (iconst_4))
                                      (492 (aconst_null))
                                      (493 (ldc_w 10))    ;;STRING:: "line"
                                      (496 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (499 (aastore))
                                      (500 (dup))
                                      (501 (iconst_5))
                                      (502 (sipush 263))
                                      (505 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (508 (aastore))
                                      (509 (dup))
                                      (510 (bipush 6))
                                      (512 (aconst_null))
                                      (513 (ldc_w 8))     ;;STRING:: "file"
                                      (516 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (519 (aastore))
                                      (520 (dup))
                                      (521 (bipush 7))
                                      (523 (ldc_w 15))    ;;STRING:: "clojure/test.clj"
                                      (526 (aastore))
                                      (527 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (530 (checkcast (class "clojure.lang.AFn")))
                                      (533 (putstatic (fieldCP "const__18" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (536 (aconst_null))
                                      (537 (ldc_w 18))    ;;STRING:: "test"
                                      (540 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (543 (checkcast (class "clojure.lang.Keyword")))
                                      (546 (putstatic (fieldCP "const__19" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (549 (lconst_0))
                                      (550 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (553 (putstatic (fieldCP "const__20" "clojure.test__init" (class "java.lang.Object"))))
                                      (556 (aconst_null))
                                      (557 (ldc_w 19))    ;;STRING:: "pass"
                                      (560 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (563 (checkcast (class "clojure.lang.Keyword")))
                                      (566 (putstatic (fieldCP "const__21" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (569 (aconst_null))
                                      (570 (ldc_w 20))    ;;STRING:: "fail"
                                      (573 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (576 (checkcast (class "clojure.lang.Keyword")))
                                      (579 (putstatic (fieldCP "const__22" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (582 (aconst_null))
                                      (583 (ldc_w 21))    ;;STRING:: "error"
                                      (586 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (589 (checkcast (class "clojure.lang.Keyword")))
                                      (592 (putstatic (fieldCP "const__23" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (595 (bipush 8))
                                      (597 (anewarray (class "java.lang.Object")))
                                      (600 (dup))
                                      (601 (iconst_0))
                                      (602 (aconst_null))
                                      (603 (ldc_w 19))    ;;STRING:: "pass"
                                      (606 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (609 (aastore))
                                      (610 (dup))
                                      (611 (iconst_1))
                                      (612 (lconst_0))
                                      (613 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (616 (aastore))
                                      (617 (dup))
                                      (618 (iconst_2))
                                      (619 (aconst_null))
                                      (620 (ldc_w 18))    ;;STRING:: "test"
                                      (623 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (626 (aastore))
                                      (627 (dup))
                                      (628 (iconst_3))
                                      (629 (lconst_0))
                                      (630 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (633 (aastore))
                                      (634 (dup))
                                      (635 (iconst_4))
                                      (636 (aconst_null))
                                      (637 (ldc_w 21))    ;;STRING:: "error"
                                      (640 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (643 (aastore))
                                      (644 (dup))
                                      (645 (iconst_5))
                                      (646 (lconst_0))
                                      (647 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (650 (aastore))
                                      (651 (dup))
                                      (652 (bipush 6))
                                      (654 (aconst_null))
                                      (655 (ldc_w 20))    ;;STRING:: "fail"
                                      (658 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (661 (aastore))
                                      (662 (dup))
                                      (663 (bipush 7))
                                      (665 (lconst_0))
                                      (666 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (669 (aastore))
                                      (670 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (673 (checkcast (class "clojure.lang.AFn")))
                                      (676 (putstatic (fieldCP "const__24" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (679 (ldc_w 2))     ;;STRING:: "clojure.test"
                                      (682 (ldc_w 22))    ;;STRING:: "*testing-vars*"
                                      (685 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (688 (checkcast (class "clojure.lang.Var")))
                                      (691 (putstatic (fieldCP "const__25" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (694 (sipush 266))
                                      (697 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (700 (putstatic (fieldCP "const__26" "clojure.test__init" (class "java.lang.Object"))))
                                      (703 (bipush 8))
                                      (705 (anewarray (class "java.lang.Object")))
                                      (708 (dup))
                                      (709 (iconst_0))
                                      (710 (aconst_null))
                                      (711 (ldc_w 11))    ;;STRING:: "dynamic"
                                      (714 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (717 (aastore))
                                      (718 (dup))
                                      (719 (iconst_1))
                                      (720 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (723 (aastore))
                                      (724 (dup))
                                      (725 (iconst_2))
                                      (726 (aconst_null))
                                      (727 (ldc_w 9))     ;;STRING:: "column"
                                      (730 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (733 (aastore))
                                      (734 (dup))
                                      (735 (iconst_3))
                                      (736 (iconst_1))
                                      (737 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (740 (aastore))
                                      (741 (dup))
                                      (742 (iconst_4))
                                      (743 (aconst_null))
                                      (744 (ldc_w 10))    ;;STRING:: "line"
                                      (747 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (750 (aastore))
                                      (751 (dup))
                                      (752 (iconst_5))
                                      (753 (sipush 266))
                                      (756 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (759 (aastore))
                                      (760 (dup))
                                      (761 (bipush 6))
                                      (763 (aconst_null))
                                      (764 (ldc_w 8))     ;;STRING:: "file"
                                      (767 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (770 (aastore))
                                      (771 (dup))
                                      (772 (bipush 7))
                                      (774 (ldc_w 15))    ;;STRING:: "clojure/test.clj"
                                      (777 (aastore))
                                      (778 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (781 (checkcast (class "clojure.lang.AFn")))
                                      (784 (putstatic (fieldCP "const__27" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (787 (ldc_w 0))     ;;STRING:: "clojure.core"
                                      (790 (ldc_w 23))    ;;STRING:: "list"
                                      (793 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (796 (checkcast (class "clojure.lang.Var")))
                                      (799 (putstatic (fieldCP "const__28" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (802 (ldc_w 2))     ;;STRING:: "clojure.test"
                                      (805 (ldc_w 24))    ;;STRING:: "*testing-contexts*"
                                      (808 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (811 (checkcast (class "clojure.lang.Var")))
                                      (814 (putstatic (fieldCP "const__29" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (817 (sipush 268))
                                      (820 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (823 (putstatic (fieldCP "const__30" "clojure.test__init" (class "java.lang.Object"))))
                                      (826 (bipush 8))
                                      (828 (anewarray (class "java.lang.Object")))
                                      (831 (dup))
                                      (832 (iconst_0))
                                      (833 (aconst_null))
                                      (834 (ldc_w 11))    ;;STRING:: "dynamic"
                                      (837 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (840 (aastore))
                                      (841 (dup))
                                      (842 (iconst_1))
                                      (843 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (846 (aastore))
                                      (847 (dup))
                                      (848 (iconst_2))
                                      (849 (aconst_null))
                                      (850 (ldc_w 9))     ;;STRING:: "column"
                                      (853 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (856 (aastore))
                                      (857 (dup))
                                      (858 (iconst_3))
                                      (859 (iconst_1))
                                      (860 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (863 (aastore))
                                      (864 (dup))
                                      (865 (iconst_4))
                                      (866 (aconst_null))
                                      (867 (ldc_w 10))    ;;STRING:: "line"
                                      (870 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (873 (aastore))
                                      (874 (dup))
                                      (875 (iconst_5))
                                      (876 (sipush 268))
                                      (879 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (882 (aastore))
                                      (883 (dup))
                                      (884 (bipush 6))
                                      (886 (aconst_null))
                                      (887 (ldc_w 8))     ;;STRING:: "file"
                                      (890 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (893 (aastore))
                                      (894 (dup))
                                      (895 (bipush 7))
                                      (897 (ldc_w 15))    ;;STRING:: "clojure/test.clj"
                                      (900 (aastore))
                                      (901 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (904 (checkcast (class "clojure.lang.AFn")))
                                      (907 (putstatic (fieldCP "const__31" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (910 (ldc_w 2))     ;;STRING:: "clojure.test"
                                      (913 (ldc_w 25))    ;;STRING:: "*test-out*"
                                      (916 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (919 (checkcast (class "clojure.lang.Var")))
                                      (922 (putstatic (fieldCP "const__32" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (925 (sipush 270))
                                      (928 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (931 (putstatic (fieldCP "const__33" "clojure.test__init" (class "java.lang.Object"))))
                                      (934 (bipush 8))
                                      (936 (anewarray (class "java.lang.Object")))
                                      (939 (dup))
                                      (940 (iconst_0))
                                      (941 (aconst_null))
                                      (942 (ldc_w 11))    ;;STRING:: "dynamic"
                                      (945 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (948 (aastore))
                                      (949 (dup))
                                      (950 (iconst_1))
                                      (951 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (954 (aastore))
                                      (955 (dup))
                                      (956 (iconst_2))
                                      (957 (aconst_null))
                                      (958 (ldc_w 9))     ;;STRING:: "column"
                                      (961 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (964 (aastore))
                                      (965 (dup))
                                      (966 (iconst_3))
                                      (967 (iconst_1))
                                      (968 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (971 (aastore))
                                      (972 (dup))
                                      (973 (iconst_4))
                                      (974 (aconst_null))
                                      (975 (ldc_w 10))    ;;STRING:: "line"
                                      (978 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (981 (aastore))
                                      (982 (dup))
                                      (983 (iconst_5))
                                      (984 (sipush 270))
                                      (987 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (990 (aastore))
                                      (991 (dup))
                                      (992 (bipush 6))
                                      (994 (aconst_null))
                                      (995 (ldc_w 8))     ;;STRING:: "file"
                                      (998 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1001 (aastore))
                                      (1002 (dup))
                                      (1003 (bipush 7))
                                      (1005 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (1008 (aastore))
                                      (1009 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1012 (checkcast (class "clojure.lang.AFn")))
                                      (1015 (putstatic (fieldCP "const__34" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (1018 (ldc_w 0))    ;;STRING:: "clojure.core"
                                      (1021 (ldc_w 26))   ;;STRING:: "*out*"
                                      (1024 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (1027 (checkcast (class "clojure.lang.Var")))
                                      (1030 (putstatic (fieldCP "const__35" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (1033 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (1036 (ldc_w 27))   ;;STRING:: "with-test-out"
                                      (1039 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (1042 (checkcast (class "clojure.lang.Var")))
                                      (1045 (putstatic (fieldCP "const__36" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (1048 (sipush 272))
                                      (1051 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1054 (putstatic (fieldCP "const__37" "clojure.test__init" (class "java.lang.Object"))))
                                      (1057 (aconst_null))
                                      (1058 (ldc_w 28))   ;;STRING:: "arglists"
                                      (1061 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1064 (checkcast (class "clojure.lang.Keyword")))
                                      (1067 (putstatic (fieldCP "const__38" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (1070 (iconst_1))
                                      (1071 (anewarray (class "java.lang.Object")))
                                      (1074 (dup))
                                      (1075 (iconst_0))
                                      (1076 (iconst_2))
                                      (1077 (anewarray (class "java.lang.Object")))
                                      (1080 (dup))
                                      (1081 (iconst_0))
                                      (1082 (aconst_null))
                                      (1083 (ldc_w 29))   ;;STRING:: "&"
                                      (1086 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1089 (aastore))
                                      (1090 (dup))
                                      (1091 (iconst_1))
                                      (1092 (aconst_null))
                                      (1093 (ldc_w 30))   ;;STRING:: "body"
                                      (1096 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1099 (aastore))
                                      (1100 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1103 (aastore))
                                      (1104 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1107 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1110 (putstatic (fieldCP "const__39" "clojure.test__init" (class "java.lang.Object"))))
                                      (1113 (bipush 12))
                                      (1115 (anewarray (class "java.lang.Object")))
                                      (1118 (dup))
                                      (1119 (iconst_0))
                                      (1120 (aconst_null))
                                      (1121 (ldc_w 28))   ;;STRING:: "arglists"
                                      (1124 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1127 (aastore))
                                      (1128 (dup))
                                      (1129 (iconst_1))
                                      (1130 (iconst_1))
                                      (1131 (anewarray (class "java.lang.Object")))
                                      (1134 (dup))
                                      (1135 (iconst_0))
                                      (1136 (iconst_2))
                                      (1137 (anewarray (class "java.lang.Object")))
                                      (1140 (dup))
                                      (1141 (iconst_0))
                                      (1142 (aconst_null))
                                      (1143 (ldc_w 29))   ;;STRING:: "&"
                                      (1146 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1149 (aastore))
                                      (1150 (dup))
                                      (1151 (iconst_1))
                                      (1152 (aconst_null))
                                      (1153 (ldc_w 30))   ;;STRING:: "body"
                                      (1156 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1159 (aastore))
                                      (1160 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1163 (aastore))
                                      (1164 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1167 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1170 (aastore))
                                      (1171 (dup))
                                      (1172 (iconst_2))
                                      (1173 (aconst_null))
                                      (1174 (ldc_w 9))    ;;STRING:: "column"
                                      (1177 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1180 (aastore))
                                      (1181 (dup))
                                      (1182 (iconst_3))
                                      (1183 (iconst_1))
                                      (1184 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1187 (aastore))
                                      (1188 (dup))
                                      (1189 (iconst_4))
                                      (1190 (aconst_null))
                                      (1191 (ldc_w 12))   ;;STRING:: "added"
                                      (1194 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1197 (aastore))
                                      (1198 (dup))
                                      (1199 (iconst_5))
                                      (1200 (ldc_w 13))   ;;STRING:: "1.1"
                                      (1203 (aastore))
                                      (1204 (dup))
                                      (1205 (bipush 6))
                                      (1207 (aconst_null))
                                      (1208 (ldc_w 3))    ;;STRING:: "doc"
                                      (1211 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1214 (aastore))
                                      (1215 (dup))
                                      (1216 (bipush 7))
                                      (1218 (ldc_w 31))   ;;STRING:: "Runs body with *out* bound to the value of *test-out*."
                                      (1221 (aastore))
                                      (1222 (dup))
                                      (1223 (bipush 8))
                                      (1225 (aconst_null))
                                      (1226 (ldc_w 10))   ;;STRING:: "line"
                                      (1229 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1232 (aastore))
                                      (1233 (dup))
                                      (1234 (bipush 9))
                                      (1236 (sipush 272))
                                      (1239 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1242 (aastore))
                                      (1243 (dup))
                                      (1244 (bipush 10))
                                      (1246 (aconst_null))
                                      (1247 (ldc_w 8))    ;;STRING:: "file"
                                      (1250 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1253 (aastore))
                                      (1254 (dup))
                                      (1255 (bipush 11))
                                      (1257 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (1260 (aastore))
                                      (1261 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1264 (checkcast (class "clojure.lang.AFn")))
                                      (1267 (putstatic (fieldCP "const__40" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (1270 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (1273 (ldc_w 32))   ;;STRING:: "file-position"
                                      (1276 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (1279 (checkcast (class "clojure.lang.Var")))
                                      (1282 (putstatic (fieldCP "const__41" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (1285 (sipush 281))
                                      (1288 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1291 (putstatic (fieldCP "const__42" "clojure.test__init" (class "java.lang.Object"))))
                                      (1294 (iconst_1))
                                      (1295 (anewarray (class "java.lang.Object")))
                                      (1298 (dup))
                                      (1299 (iconst_0))
                                      (1300 (iconst_1))
                                      (1301 (anewarray (class "java.lang.Object")))
                                      (1304 (dup))
                                      (1305 (iconst_0))
                                      (1306 (aconst_null))
                                      (1307 (ldc_w 33))   ;;STRING:: "n"
                                      (1310 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1313 (aastore))
                                      (1314 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1317 (aastore))
                                      (1318 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1321 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1324 (putstatic (fieldCP "const__43" "clojure.test__init" (class "java.lang.Object"))))
                                      (1327 (aconst_null))
                                      (1328 (ldc_w 34))   ;;STRING:: "deprecated"
                                      (1331 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1334 (checkcast (class "clojure.lang.Keyword")))
                                      (1337 (putstatic (fieldCP "const__44" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (1340 (bipush 14))
                                      (1342 (anewarray (class "java.lang.Object")))
                                      (1345 (dup))
                                      (1346 (iconst_0))
                                      (1347 (aconst_null))
                                      (1348 (ldc_w 28))   ;;STRING:: "arglists"
                                      (1351 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1354 (aastore))
                                      (1355 (dup))
                                      (1356 (iconst_1))
                                      (1357 (iconst_1))
                                      (1358 (anewarray (class "java.lang.Object")))
                                      (1361 (dup))
                                      (1362 (iconst_0))
                                      (1363 (iconst_1))
                                      (1364 (anewarray (class "java.lang.Object")))
                                      (1367 (dup))
                                      (1368 (iconst_0))
                                      (1369 (aconst_null))
                                      (1370 (ldc_w 33))   ;;STRING:: "n"
                                      (1373 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1376 (aastore))
                                      (1377 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1380 (aastore))
                                      (1381 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1384 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1387 (aastore))
                                      (1388 (dup))
                                      (1389 (iconst_2))
                                      (1390 (aconst_null))
                                      (1391 (ldc_w 34))   ;;STRING:: "deprecated"
                                      (1394 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1397 (aastore))
                                      (1398 (dup))
                                      (1399 (iconst_3))
                                      (1400 (ldc_w 35))   ;;STRING:: "1.2"
                                      (1403 (aastore))
                                      (1404 (dup))
                                      (1405 (iconst_4))
                                      (1406 (aconst_null))
                                      (1407 (ldc_w 9))    ;;STRING:: "column"
                                      (1410 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1413 (aastore))
                                      (1414 (dup))
                                      (1415 (iconst_5))
                                      (1416 (iconst_1))
                                      (1417 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1420 (aastore))
                                      (1421 (dup))
                                      (1422 (bipush 6))
                                      (1424 (aconst_null))
                                      (1425 (ldc_w 12))   ;;STRING:: "added"
                                      (1428 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1431 (aastore))
                                      (1432 (dup))
                                      (1433 (bipush 7))
                                      (1435 (ldc_w 13))   ;;STRING:: "1.1"
                                      (1438 (aastore))
                                      (1439 (dup))
                                      (1440 (bipush 8))
                                      (1442 (aconst_null))
                                      (1443 (ldc_w 3))    ;;STRING:: "doc"
                                      (1446 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1449 (aastore))
                                      (1450 (dup))
                                      (1451 (bipush 9))
                                      (1453 (ldc_w 36))   ;;STRING:: "Returns a vector [filename line-number] for the nth call up the\n  stack.\n\n  Deprecated in 1.2: The information needed for test reporting is\n  now on :file and :line keys in the result map."
                                      (1456 (aastore))
                                      (1457 (dup))
                                      (1458 (bipush 10))
                                      (1460 (aconst_null))
                                      (1461 (ldc_w 10))   ;;STRING:: "line"
                                      (1464 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1467 (aastore))
                                      (1468 (dup))
                                      (1469 (bipush 11))
                                      (1471 (sipush 281))
                                      (1474 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1477 (aastore))
                                      (1478 (dup))
                                      (1479 (bipush 12))
                                      (1481 (aconst_null))
                                      (1482 (ldc_w 8))    ;;STRING:: "file"
                                      (1485 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1488 (aastore))
                                      (1489 (dup))
                                      (1490 (bipush 13))
                                      (1492 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (1495 (aastore))
                                      (1496 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1499 (checkcast (class "clojure.lang.AFn")))
                                      (1502 (putstatic (fieldCP "const__45" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (1505 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (1508 (ldc_w 37))   ;;STRING:: "testing-vars-str"
                                      (1511 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (1514 (checkcast (class "clojure.lang.Var")))
                                      (1517 (putstatic (fieldCP "const__46" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (1520 (sipush 293))
                                      (1523 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1526 (putstatic (fieldCP "const__47" "clojure.test__init" (class "java.lang.Object"))))
                                      (1529 (iconst_1))
                                      (1530 (anewarray (class "java.lang.Object")))
                                      (1533 (dup))
                                      (1534 (iconst_0))
                                      (1535 (iconst_1))
                                      (1536 (anewarray (class "java.lang.Object")))
                                      (1539 (dup))
                                      (1540 (iconst_0))
                                      (1541 (aconst_null))
                                      (1542 (ldc_w 38))   ;;STRING:: "m"
                                      (1545 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1548 (aastore))
                                      (1549 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1552 (aastore))
                                      (1553 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1556 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1559 (putstatic (fieldCP "const__48" "clojure.test__init" (class "java.lang.Object"))))
                                      (1562 (bipush 12))
                                      (1564 (anewarray (class "java.lang.Object")))
                                      (1567 (dup))
                                      (1568 (iconst_0))
                                      (1569 (aconst_null))
                                      (1570 (ldc_w 28))   ;;STRING:: "arglists"
                                      (1573 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1576 (aastore))
                                      (1577 (dup))
                                      (1578 (iconst_1))
                                      (1579 (iconst_1))
                                      (1580 (anewarray (class "java.lang.Object")))
                                      (1583 (dup))
                                      (1584 (iconst_0))
                                      (1585 (iconst_1))
                                      (1586 (anewarray (class "java.lang.Object")))
                                      (1589 (dup))
                                      (1590 (iconst_0))
                                      (1591 (aconst_null))
                                      (1592 (ldc_w 38))   ;;STRING:: "m"
                                      (1595 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1598 (aastore))
                                      (1599 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1602 (aastore))
                                      (1603 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1606 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1609 (aastore))
                                      (1610 (dup))
                                      (1611 (iconst_2))
                                      (1612 (aconst_null))
                                      (1613 (ldc_w 9))    ;;STRING:: "column"
                                      (1616 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1619 (aastore))
                                      (1620 (dup))
                                      (1621 (iconst_3))
                                      (1622 (iconst_1))
                                      (1623 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1626 (aastore))
                                      (1627 (dup))
                                      (1628 (iconst_4))
                                      (1629 (aconst_null))
                                      (1630 (ldc_w 12))   ;;STRING:: "added"
                                      (1633 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1636 (aastore))
                                      (1637 (dup))
                                      (1638 (iconst_5))
                                      (1639 (ldc_w 13))   ;;STRING:: "1.1"
                                      (1642 (aastore))
                                      (1643 (dup))
                                      (1644 (bipush 6))
                                      (1646 (aconst_null))
                                      (1647 (ldc_w 3))    ;;STRING:: "doc"
                                      (1650 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1653 (aastore))
                                      (1654 (dup))
                                      (1655 (bipush 7))
                                      (1657 (ldc_w 39))   ;;STRING:: "Returns a string representation of the current test.  Renders names\n  in *testing-vars* as a list, then the source file and line of\n  current assertion."
                                      (1660 (aastore))
                                      (1661 (dup))
                                      (1662 (bipush 8))
                                      (1664 (aconst_null))
                                      (1665 (ldc_w 10))   ;;STRING:: "line"
                                      (1668 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1671 (aastore))
                                      (1672 (dup))
                                      (1673 (bipush 9))
                                      (1675 (sipush 293))
                                      (1678 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1681 (aastore))
                                      (1682 (dup))
                                      (1683 (bipush 10))
                                      (1685 (aconst_null))
                                      (1686 (ldc_w 8))    ;;STRING:: "file"
                                      (1689 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1692 (aastore))
                                      (1693 (dup))
                                      (1694 (bipush 11))
                                      (1696 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (1699 (aastore))
                                      (1700 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1703 (checkcast (class "clojure.lang.AFn")))
                                      (1706 (putstatic (fieldCP "const__49" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (1709 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (1712 (ldc_w 40))   ;;STRING:: "testing-contexts-str"
                                      (1715 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (1718 (checkcast (class "clojure.lang.Var")))
                                      (1721 (putstatic (fieldCP "const__50" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (1724 (sipush 306))
                                      (1727 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1730 (putstatic (fieldCP "const__51" "clojure.test__init" (class "java.lang.Object"))))
                                      (1733 (iconst_1))
                                      (1734 (anewarray (class "java.lang.Object")))
                                      (1737 (dup))
                                      (1738 (iconst_0))
                                      (1739 (iconst_0))
                                      (1740 (anewarray (class "java.lang.Object")))
                                      (1743 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1746 (aastore))
                                      (1747 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1750 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1753 (putstatic (fieldCP "const__52" "clojure.test__init" (class "java.lang.Object"))))
                                      (1756 (bipush 12))
                                      (1758 (anewarray (class "java.lang.Object")))
                                      (1761 (dup))
                                      (1762 (iconst_0))
                                      (1763 (aconst_null))
                                      (1764 (ldc_w 28))   ;;STRING:: "arglists"
                                      (1767 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1770 (aastore))
                                      (1771 (dup))
                                      (1772 (iconst_1))
                                      (1773 (iconst_1))
                                      (1774 (anewarray (class "java.lang.Object")))
                                      (1777 (dup))
                                      (1778 (iconst_0))
                                      (1779 (iconst_0))
                                      (1780 (anewarray (class "java.lang.Object")))
                                      (1783 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1786 (aastore))
                                      (1787 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1790 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1793 (aastore))
                                      (1794 (dup))
                                      (1795 (iconst_2))
                                      (1796 (aconst_null))
                                      (1797 (ldc_w 9))    ;;STRING:: "column"
                                      (1800 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1803 (aastore))
                                      (1804 (dup))
                                      (1805 (iconst_3))
                                      (1806 (iconst_1))
                                      (1807 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1810 (aastore))
                                      (1811 (dup))
                                      (1812 (iconst_4))
                                      (1813 (aconst_null))
                                      (1814 (ldc_w 12))   ;;STRING:: "added"
                                      (1817 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1820 (aastore))
                                      (1821 (dup))
                                      (1822 (iconst_5))
                                      (1823 (ldc_w 13))   ;;STRING:: "1.1"
                                      (1826 (aastore))
                                      (1827 (dup))
                                      (1828 (bipush 6))
                                      (1830 (aconst_null))
                                      (1831 (ldc_w 3))    ;;STRING:: "doc"
                                      (1834 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1837 (aastore))
                                      (1838 (dup))
                                      (1839 (bipush 7))
                                      (1841 (ldc_w 41))   ;;STRING:: "Returns a string representation of the current test context. Joins\n  strings in *testing-contexts* with spaces."
                                      (1844 (aastore))
                                      (1845 (dup))
                                      (1846 (bipush 8))
                                      (1848 (aconst_null))
                                      (1849 (ldc_w 10))   ;;STRING:: "line"
                                      (1852 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1855 (aastore))
                                      (1856 (dup))
                                      (1857 (bipush 9))
                                      (1859 (sipush 306))
                                      (1862 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1865 (aastore))
                                      (1866 (dup))
                                      (1867 (bipush 10))
                                      (1869 (aconst_null))
                                      (1870 (ldc_w 8))    ;;STRING:: "file"
                                      (1873 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1876 (aastore))
                                      (1877 (dup))
                                      (1878 (bipush 11))
                                      (1880 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (1883 (aastore))
                                      (1884 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1887 (checkcast (class "clojure.lang.AFn")))
                                      (1890 (putstatic (fieldCP "const__53" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (1893 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (1896 (ldc_w 42))   ;;STRING:: "inc-report-counter"
                                      (1899 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (1902 (checkcast (class "clojure.lang.Var")))
                                      (1905 (putstatic (fieldCP "const__54" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (1908 (sipush 313))
                                      (1911 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1914 (putstatic (fieldCP "const__55" "clojure.test__init" (class "java.lang.Object"))))
                                      (1917 (iconst_1))
                                      (1918 (anewarray (class "java.lang.Object")))
                                      (1921 (dup))
                                      (1922 (iconst_0))
                                      (1923 (iconst_1))
                                      (1924 (anewarray (class "java.lang.Object")))
                                      (1927 (dup))
                                      (1928 (iconst_0))
                                      (1929 (aconst_null))
                                      (1930 (ldc_w 43))   ;;STRING:: "name"
                                      (1933 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1936 (aastore))
                                      (1937 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1940 (aastore))
                                      (1941 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1944 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1947 (putstatic (fieldCP "const__56" "clojure.test__init" (class "java.lang.Object"))))
                                      (1950 (bipush 12))
                                      (1952 (anewarray (class "java.lang.Object")))
                                      (1955 (dup))
                                      (1956 (iconst_0))
                                      (1957 (aconst_null))
                                      (1958 (ldc_w 28))   ;;STRING:: "arglists"
                                      (1961 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1964 (aastore))
                                      (1965 (dup))
                                      (1966 (iconst_1))
                                      (1967 (iconst_1))
                                      (1968 (anewarray (class "java.lang.Object")))
                                      (1971 (dup))
                                      (1972 (iconst_0))
                                      (1973 (iconst_1))
                                      (1974 (anewarray (class "java.lang.Object")))
                                      (1977 (dup))
                                      (1978 (iconst_0))
                                      (1979 (aconst_null))
                                      (1980 (ldc_w 43))   ;;STRING:: "name"
                                      (1983 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1986 (aastore))
                                      (1987 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1990 (aastore))
                                      (1991 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1994 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1997 (aastore))
                                      (1998 (dup))
                                      (1999 (iconst_2))
                                      (2000 (aconst_null))
                                      (2001 (ldc_w 9))    ;;STRING:: "column"
                                      (2004 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2007 (aastore))
                                      (2008 (dup))
                                      (2009 (iconst_3))
                                      (2010 (iconst_1))
                                      (2011 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2014 (aastore))
                                      (2015 (dup))
                                      (2016 (iconst_4))
                                      (2017 (aconst_null))
                                      (2018 (ldc_w 12))   ;;STRING:: "added"
                                      (2021 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2024 (aastore))
                                      (2025 (dup))
                                      (2026 (iconst_5))
                                      (2027 (ldc_w 13))   ;;STRING:: "1.1"
                                      (2030 (aastore))
                                      (2031 (dup))
                                      (2032 (bipush 6))
                                      (2034 (aconst_null))
                                      (2035 (ldc_w 3))    ;;STRING:: "doc"
                                      (2038 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2041 (aastore))
                                      (2042 (dup))
                                      (2043 (bipush 7))
                                      (2045 (ldc_w 44))   ;;STRING:: "Increments the named counter in *report-counters*, a ref to a map.\n  Does nothing if *report-counters* is nil."
                                      (2048 (aastore))
                                      (2049 (dup))
                                      (2050 (bipush 8))
                                      (2052 (aconst_null))
                                      (2053 (ldc_w 10))   ;;STRING:: "line"
                                      (2056 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2059 (aastore))
                                      (2060 (dup))
                                      (2061 (bipush 9))
                                      (2063 (sipush 313))
                                      (2066 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2069 (aastore))
                                      (2070 (dup))
                                      (2071 (bipush 10))
                                      (2073 (aconst_null))
                                      (2074 (ldc_w 8))    ;;STRING:: "file"
                                      (2077 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2080 (aastore))
                                      (2081 (dup))
                                      (2082 (bipush 11))
                                      (2084 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (2087 (aastore))
                                      (2088 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (2091 (checkcast (class "clojure.lang.AFn")))
                                      (2094 (putstatic (fieldCP "const__57" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (2097 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (2100 (ldc_w 45))   ;;STRING:: "file-and-line"
                                      (2103 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (2106 (checkcast (class "clojure.lang.Var")))
                                      (2109 (putstatic (fieldCP "const__58" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (2112 (sipush 335))
                                      (2115 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2118 (putstatic (fieldCP "const__59" "clojure.test__init" (class "java.lang.Object"))))
                                      (2121 (iconst_1))
                                      (2122 (anewarray (class "java.lang.Object")))
                                      (2125 (dup))
                                      (2126 (iconst_0))
                                      (2127 (iconst_2))
                                      (2128 (anewarray (class "java.lang.Object")))
                                      (2131 (dup))
                                      (2132 (iconst_0))
                                      (2133 (aconst_null))
                                      (2134 (ldc_w 46))   ;;STRING:: "exception"
                                      (2137 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2140 (aastore))
                                      (2141 (dup))
                                      (2142 (iconst_1))
                                      (2143 (aconst_null))
                                      (2144 (ldc_w 47))   ;;STRING:: "depth"
                                      (2147 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2150 (aastore))
                                      (2151 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2154 (aastore))
                                      (2155 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2158 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2161 (putstatic (fieldCP "const__60" "clojure.test__init" (class "java.lang.Object"))))
                                      (2164 (aconst_null))
                                      (2165 (ldc_w 48))   ;;STRING:: "private"
                                      (2168 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2171 (checkcast (class "clojure.lang.Keyword")))
                                      (2174 (putstatic (fieldCP "const__61" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (2177 (bipush 10))
                                      (2179 (anewarray (class "java.lang.Object")))
                                      (2182 (dup))
                                      (2183 (iconst_0))
                                      (2184 (aconst_null))
                                      (2185 (ldc_w 28))   ;;STRING:: "arglists"
                                      (2188 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2191 (aastore))
                                      (2192 (dup))
                                      (2193 (iconst_1))
                                      (2194 (iconst_1))
                                      (2195 (anewarray (class "java.lang.Object")))
                                      (2198 (dup))
                                      (2199 (iconst_0))
                                      (2200 (iconst_2))
                                      (2201 (anewarray (class "java.lang.Object")))
                                      (2204 (dup))
                                      (2205 (iconst_0))
                                      (2206 (aconst_null))
                                      (2207 (ldc_w 46))   ;;STRING:: "exception"
                                      (2210 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2213 (aastore))
                                      (2214 (dup))
                                      (2215 (iconst_1))
                                      (2216 (aconst_null))
                                      (2217 (ldc_w 47))   ;;STRING:: "depth"
                                      (2220 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2223 (aastore))
                                      (2224 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2227 (aastore))
                                      (2228 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2231 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2234 (aastore))
                                      (2235 (dup))
                                      (2236 (iconst_2))
                                      (2237 (aconst_null))
                                      (2238 (ldc_w 9))    ;;STRING:: "column"
                                      (2241 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2244 (aastore))
                                      (2245 (dup))
                                      (2246 (iconst_3))
                                      (2247 (iconst_1))
                                      (2248 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2251 (aastore))
                                      (2252 (dup))
                                      (2253 (iconst_4))
                                      (2254 (aconst_null))
                                      (2255 (ldc_w 48))   ;;STRING:: "private"
                                      (2258 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2261 (aastore))
                                      (2262 (dup))
                                      (2263 (iconst_5))
                                      (2264 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (2267 (aastore))
                                      (2268 (dup))
                                      (2269 (bipush 6))
                                      (2271 (aconst_null))
                                      (2272 (ldc_w 10))   ;;STRING:: "line"
                                      (2275 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2278 (aastore))
                                      (2279 (dup))
                                      (2280 (bipush 7))
                                      (2282 (sipush 335))
                                      (2285 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2288 (aastore))
                                      (2289 (dup))
                                      (2290 (bipush 8))
                                      (2292 (aconst_null))
                                      (2293 (ldc_w 8))    ;;STRING:: "file"
                                      (2296 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2299 (aastore))
                                      (2300 (dup))
                                      (2301 (bipush 9))
                                      (2303 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (2306 (aastore))
                                      (2307 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (2310 (checkcast (class "clojure.lang.AFn")))
                                      (2313 (putstatic (fieldCP "const__62" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (2316 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (2319 (ldc_w 49))   ;;STRING:: "do-report"
                                      (2322 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (2325 (checkcast (class "clojure.lang.Var")))
                                      (2328 (putstatic (fieldCP "const__63" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (2331 (sipush 340))
                                      (2334 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2337 (putstatic (fieldCP "const__64" "clojure.test__init" (class "java.lang.Object"))))
                                      (2340 (iconst_1))
                                      (2341 (anewarray (class "java.lang.Object")))
                                      (2344 (dup))
                                      (2345 (iconst_0))
                                      (2346 (iconst_1))
                                      (2347 (anewarray (class "java.lang.Object")))
                                      (2350 (dup))
                                      (2351 (iconst_0))
                                      (2352 (aconst_null))
                                      (2353 (ldc_w 38))   ;;STRING:: "m"
                                      (2356 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2359 (aastore))
                                      (2360 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2363 (aastore))
                                      (2364 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2367 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2370 (putstatic (fieldCP "const__65" "clojure.test__init" (class "java.lang.Object"))))
                                      (2373 (bipush 12))
                                      (2375 (anewarray (class "java.lang.Object")))
                                      (2378 (dup))
                                      (2379 (iconst_0))
                                      (2380 (aconst_null))
                                      (2381 (ldc_w 28))   ;;STRING:: "arglists"
                                      (2384 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2387 (aastore))
                                      (2388 (dup))
                                      (2389 (iconst_1))
                                      (2390 (iconst_1))
                                      (2391 (anewarray (class "java.lang.Object")))
                                      (2394 (dup))
                                      (2395 (iconst_0))
                                      (2396 (iconst_1))
                                      (2397 (anewarray (class "java.lang.Object")))
                                      (2400 (dup))
                                      (2401 (iconst_0))
                                      (2402 (aconst_null))
                                      (2403 (ldc_w 38))   ;;STRING:: "m"
                                      (2406 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2409 (aastore))
                                      (2410 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2413 (aastore))
                                      (2414 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2417 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2420 (aastore))
                                      (2421 (dup))
                                      (2422 (iconst_2))
                                      (2423 (aconst_null))
                                      (2424 (ldc_w 9))    ;;STRING:: "column"
                                      (2427 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2430 (aastore))
                                      (2431 (dup))
                                      (2432 (iconst_3))
                                      (2433 (iconst_1))
                                      (2434 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2437 (aastore))
                                      (2438 (dup))
                                      (2439 (iconst_4))
                                      (2440 (aconst_null))
                                      (2441 (ldc_w 12))   ;;STRING:: "added"
                                      (2444 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2447 (aastore))
                                      (2448 (dup))
                                      (2449 (iconst_5))
                                      (2450 (ldc_w 35))   ;;STRING:: "1.2"
                                      (2453 (aastore))
                                      (2454 (dup))
                                      (2455 (bipush 6))
                                      (2457 (aconst_null))
                                      (2458 (ldc_w 3))    ;;STRING:: "doc"
                                      (2461 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2464 (aastore))
                                      (2465 (dup))
                                      (2466 (bipush 7))
                                      (2468 (ldc_w 50))   ;;STRING:: "Add file and line information to a test result and call report.\n   If you are writing a custom assert-expr method, call this function\n   to pass test results to report."
                                      (2471 (aastore))
                                      (2472 (dup))
                                      (2473 (bipush 8))
                                      (2475 (aconst_null))
                                      (2476 (ldc_w 10))   ;;STRING:: "line"
                                      (2479 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2482 (aastore))
                                      (2483 (dup))
                                      (2484 (bipush 9))
                                      (2486 (sipush 340))
                                      (2489 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2492 (aastore))
                                      (2493 (dup))
                                      (2494 (bipush 10))
                                      (2496 (aconst_null))
                                      (2497 (ldc_w 8))    ;;STRING:: "file"
                                      (2500 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2503 (aastore))
                                      (2504 (dup))
                                      (2505 (bipush 11))
                                      (2507 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (2510 (aastore))
                                      (2511 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (2514 (checkcast (class "clojure.lang.AFn")))
                                      (2517 (putstatic (fieldCP "const__66" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (2520 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (2523 (ldc_w 51))   ;;STRING:: "report"
                                      (2526 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (2529 (checkcast (class "clojure.lang.Var")))
                                      (2532 (putstatic (fieldCP "const__67" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (2535 (aconst_null))
                                      (2536 (ldc_w 52))   ;;STRING:: "default"
                                      (2539 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2542 (checkcast (class "clojure.lang.Keyword")))
                                      (2545 (putstatic (fieldCP "const__68" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (2548 (aconst_null))
                                      (2549 (ldc_w 53))   ;;STRING:: "summary"
                                      (2552 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2555 (checkcast (class "clojure.lang.Keyword")))
                                      (2558 (putstatic (fieldCP "const__69" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (2561 (aconst_null))
                                      (2562 (ldc_w 54))   ;;STRING:: "begin-test-ns"
                                      (2565 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2568 (checkcast (class "clojure.lang.Keyword")))
                                      (2571 (putstatic (fieldCP "const__70" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (2574 (aconst_null))
                                      (2575 (ldc_w 55))   ;;STRING:: "end-test-ns"
                                      (2578 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2581 (checkcast (class "clojure.lang.Keyword")))
                                      (2584 (putstatic (fieldCP "const__71" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (2587 (aconst_null))
                                      (2588 (ldc_w 56))   ;;STRING:: "begin-test-var"
                                      (2591 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2594 (checkcast (class "clojure.lang.Keyword")))
                                      (2597 (putstatic (fieldCP "const__72" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (2600 (aconst_null))
                                      (2601 (ldc_w 57))   ;;STRING:: "end-test-var"
                                      (2604 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2607 (checkcast (class "clojure.lang.Keyword")))
                                      (2610 (putstatic (fieldCP "const__73" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (2613 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (2616 (ldc_w 58))   ;;STRING:: "get-possibly-unbound-var"
                                      (2619 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (2622 (checkcast (class "clojure.lang.Var")))
                                      (2625 (putstatic (fieldCP "const__74" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (2628 (sipush 400))
                                      (2631 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2634 (putstatic (fieldCP "const__75" "clojure.test__init" (class "java.lang.Object"))))
                                      (2637 (iconst_1))
                                      (2638 (anewarray (class "java.lang.Object")))
                                      (2641 (dup))
                                      (2642 (iconst_0))
                                      (2643 (iconst_1))
                                      (2644 (anewarray (class "java.lang.Object")))
                                      (2647 (dup))
                                      (2648 (iconst_0))
                                      (2649 (aconst_null))
                                      (2650 (ldc_w 59))   ;;STRING:: "v"
                                      (2653 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2656 (aastore))
                                      (2657 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2660 (aastore))
                                      (2661 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2664 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2667 (putstatic (fieldCP "const__76" "clojure.test__init" (class "java.lang.Object"))))
                                      (2670 (bipush 12))
                                      (2672 (anewarray (class "java.lang.Object")))
                                      (2675 (dup))
                                      (2676 (iconst_0))
                                      (2677 (aconst_null))
                                      (2678 (ldc_w 28))   ;;STRING:: "arglists"
                                      (2681 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2684 (aastore))
                                      (2685 (dup))
                                      (2686 (iconst_1))
                                      (2687 (iconst_1))
                                      (2688 (anewarray (class "java.lang.Object")))
                                      (2691 (dup))
                                      (2692 (iconst_0))
                                      (2693 (iconst_1))
                                      (2694 (anewarray (class "java.lang.Object")))
                                      (2697 (dup))
                                      (2698 (iconst_0))
                                      (2699 (aconst_null))
                                      (2700 (ldc_w 59))   ;;STRING:: "v"
                                      (2703 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2706 (aastore))
                                      (2707 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2710 (aastore))
                                      (2711 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2714 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2717 (aastore))
                                      (2718 (dup))
                                      (2719 (iconst_2))
                                      (2720 (aconst_null))
                                      (2721 (ldc_w 9))    ;;STRING:: "column"
                                      (2724 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2727 (aastore))
                                      (2728 (dup))
                                      (2729 (iconst_3))
                                      (2730 (iconst_1))
                                      (2731 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2734 (aastore))
                                      (2735 (dup))
                                      (2736 (iconst_4))
                                      (2737 (aconst_null))
                                      (2738 (ldc_w 12))   ;;STRING:: "added"
                                      (2741 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2744 (aastore))
                                      (2745 (dup))
                                      (2746 (iconst_5))
                                      (2747 (ldc_w 13))   ;;STRING:: "1.1"
                                      (2750 (aastore))
                                      (2751 (dup))
                                      (2752 (bipush 6))
                                      (2754 (aconst_null))
                                      (2755 (ldc_w 3))    ;;STRING:: "doc"
                                      (2758 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2761 (aastore))
                                      (2762 (dup))
                                      (2763 (bipush 7))
                                      (2765 (ldc_w 60))   ;;STRING:: "Like var-get but returns nil if the var is unbound."
                                      (2768 (aastore))
                                      (2769 (dup))
                                      (2770 (bipush 8))
                                      (2772 (aconst_null))
                                      (2773 (ldc_w 10))   ;;STRING:: "line"
                                      (2776 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2779 (aastore))
                                      (2780 (dup))
                                      (2781 (bipush 9))
                                      (2783 (sipush 400))
                                      (2786 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2789 (aastore))
                                      (2790 (dup))
                                      (2791 (bipush 10))
                                      (2793 (aconst_null))
                                      (2794 (ldc_w 8))    ;;STRING:: "file"
                                      (2797 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2800 (aastore))
                                      (2801 (dup))
                                      (2802 (bipush 11))
                                      (2804 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (2807 (aastore))
                                      (2808 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (2811 (checkcast (class "clojure.lang.AFn")))
                                      (2814 (putstatic (fieldCP "const__77" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (2817 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (2820 (ldc_w 61))   ;;STRING:: "function?"
                                      (2823 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (2826 (checkcast (class "clojure.lang.Var")))
                                      (2829 (putstatic (fieldCP "const__78" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (2832 (sipush 408))
                                      (2835 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2838 (putstatic (fieldCP "const__79" "clojure.test__init" (class "java.lang.Object"))))
                                      (2841 (iconst_1))
                                      (2842 (anewarray (class "java.lang.Object")))
                                      (2845 (dup))
                                      (2846 (iconst_0))
                                      (2847 (iconst_1))
                                      (2848 (anewarray (class "java.lang.Object")))
                                      (2851 (dup))
                                      (2852 (iconst_0))
                                      (2853 (aconst_null))
                                      (2854 (ldc_w 62))   ;;STRING:: "x"
                                      (2857 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2860 (aastore))
                                      (2861 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2864 (aastore))
                                      (2865 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2868 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2871 (putstatic (fieldCP "const__80" "clojure.test__init" (class "java.lang.Object"))))
                                      (2874 (bipush 12))
                                      (2876 (anewarray (class "java.lang.Object")))
                                      (2879 (dup))
                                      (2880 (iconst_0))
                                      (2881 (aconst_null))
                                      (2882 (ldc_w 28))   ;;STRING:: "arglists"
                                      (2885 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2888 (aastore))
                                      (2889 (dup))
                                      (2890 (iconst_1))
                                      (2891 (iconst_1))
                                      (2892 (anewarray (class "java.lang.Object")))
                                      (2895 (dup))
                                      (2896 (iconst_0))
                                      (2897 (iconst_1))
                                      (2898 (anewarray (class "java.lang.Object")))
                                      (2901 (dup))
                                      (2902 (iconst_0))
                                      (2903 (aconst_null))
                                      (2904 (ldc_w 62))   ;;STRING:: "x"
                                      (2907 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2910 (aastore))
                                      (2911 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2914 (aastore))
                                      (2915 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2918 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2921 (aastore))
                                      (2922 (dup))
                                      (2923 (iconst_2))
                                      (2924 (aconst_null))
                                      (2925 (ldc_w 9))    ;;STRING:: "column"
                                      (2928 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2931 (aastore))
                                      (2932 (dup))
                                      (2933 (iconst_3))
                                      (2934 (iconst_1))
                                      (2935 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2938 (aastore))
                                      (2939 (dup))
                                      (2940 (iconst_4))
                                      (2941 (aconst_null))
                                      (2942 (ldc_w 12))   ;;STRING:: "added"
                                      (2945 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2948 (aastore))
                                      (2949 (dup))
                                      (2950 (iconst_5))
                                      (2951 (ldc_w 13))   ;;STRING:: "1.1"
                                      (2954 (aastore))
                                      (2955 (dup))
                                      (2956 (bipush 6))
                                      (2958 (aconst_null))
                                      (2959 (ldc_w 3))    ;;STRING:: "doc"
                                      (2962 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2965 (aastore))
                                      (2966 (dup))
                                      (2967 (bipush 7))
                                      (2969 (ldc_w 63))   ;;STRING:: "Returns true if argument is a function or a symbol that resolves to\n  a function (not a macro)."
                                      (2972 (aastore))
                                      (2973 (dup))
                                      (2974 (bipush 8))
                                      (2976 (aconst_null))
                                      (2977 (ldc_w 10))   ;;STRING:: "line"
                                      (2980 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2983 (aastore))
                                      (2984 (dup))
                                      (2985 (bipush 9))
                                      (2987 (sipush 408))
                                      (2990 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2993 (aastore))
                                      (2994 (dup))
                                      (2995 (bipush 10))
                                      (2997 (aconst_null))
                                      (2998 (ldc_w 8))    ;;STRING:: "file"
                                      (3001 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3004 (aastore))
                                      (3005 (dup))
                                      (3006 (bipush 11))
                                      (3008 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (3011 (aastore))
                                      (3012 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (3015 (checkcast (class "clojure.lang.AFn")))
                                      (3018 (putstatic (fieldCP "const__81" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (3021 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (3024 (ldc_w 64))   ;;STRING:: "assert-predicate"
                                      (3027 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (3030 (checkcast (class "clojure.lang.Var")))
                                      (3033 (putstatic (fieldCP "const__82" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (3036 (sipush 420))
                                      (3039 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3042 (putstatic (fieldCP "const__83" "clojure.test__init" (class "java.lang.Object"))))
                                      (3045 (iconst_1))
                                      (3046 (anewarray (class "java.lang.Object")))
                                      (3049 (dup))
                                      (3050 (iconst_0))
                                      (3051 (iconst_2))
                                      (3052 (anewarray (class "java.lang.Object")))
                                      (3055 (dup))
                                      (3056 (iconst_0))
                                      (3057 (aconst_null))
                                      (3058 (ldc_w 65))   ;;STRING:: "msg"
                                      (3061 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3064 (aastore))
                                      (3065 (dup))
                                      (3066 (iconst_1))
                                      (3067 (aconst_null))
                                      (3068 (ldc_w 66))   ;;STRING:: "form"
                                      (3071 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3074 (aastore))
                                      (3075 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3078 (aastore))
                                      (3079 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (3082 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (3085 (putstatic (fieldCP "const__84" "clojure.test__init" (class "java.lang.Object"))))
                                      (3088 (bipush 12))
                                      (3090 (anewarray (class "java.lang.Object")))
                                      (3093 (dup))
                                      (3094 (iconst_0))
                                      (3095 (aconst_null))
                                      (3096 (ldc_w 28))   ;;STRING:: "arglists"
                                      (3099 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3102 (aastore))
                                      (3103 (dup))
                                      (3104 (iconst_1))
                                      (3105 (iconst_1))
                                      (3106 (anewarray (class "java.lang.Object")))
                                      (3109 (dup))
                                      (3110 (iconst_0))
                                      (3111 (iconst_2))
                                      (3112 (anewarray (class "java.lang.Object")))
                                      (3115 (dup))
                                      (3116 (iconst_0))
                                      (3117 (aconst_null))
                                      (3118 (ldc_w 65))   ;;STRING:: "msg"
                                      (3121 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3124 (aastore))
                                      (3125 (dup))
                                      (3126 (iconst_1))
                                      (3127 (aconst_null))
                                      (3128 (ldc_w 66))   ;;STRING:: "form"
                                      (3131 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3134 (aastore))
                                      (3135 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3138 (aastore))
                                      (3139 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (3142 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (3145 (aastore))
                                      (3146 (dup))
                                      (3147 (iconst_2))
                                      (3148 (aconst_null))
                                      (3149 (ldc_w 9))    ;;STRING:: "column"
                                      (3152 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3155 (aastore))
                                      (3156 (dup))
                                      (3157 (iconst_3))
                                      (3158 (iconst_1))
                                      (3159 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3162 (aastore))
                                      (3163 (dup))
                                      (3164 (iconst_4))
                                      (3165 (aconst_null))
                                      (3166 (ldc_w 12))   ;;STRING:: "added"
                                      (3169 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3172 (aastore))
                                      (3173 (dup))
                                      (3174 (iconst_5))
                                      (3175 (ldc_w 13))   ;;STRING:: "1.1"
                                      (3178 (aastore))
                                      (3179 (dup))
                                      (3180 (bipush 6))
                                      (3182 (aconst_null))
                                      (3183 (ldc_w 3))    ;;STRING:: "doc"
                                      (3186 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3189 (aastore))
                                      (3190 (dup))
                                      (3191 (bipush 7))
                                      (3193 (ldc_w 67))   ;;STRING:: "Returns generic assertion code for any functional predicate.  The\n  \nexpected\n argument to \nreport\n will contains the original form, the\n  \nactual\n argument will contain the form with all its sub-forms\n  evaluated.  If the predicate returns false, the \nactual\n form will\n  be wrapped in (not...)."
                                      (3196 (aastore))
                                      (3197 (dup))
                                      (3198 (bipush 8))
                                      (3200 (aconst_null))
                                      (3201 (ldc_w 10))   ;;STRING:: "line"
                                      (3204 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3207 (aastore))
                                      (3208 (dup))
                                      (3209 (bipush 9))
                                      (3211 (sipush 420))
                                      (3214 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3217 (aastore))
                                      (3218 (dup))
                                      (3219 (bipush 10))
                                      (3221 (aconst_null))
                                      (3222 (ldc_w 8))    ;;STRING:: "file"
                                      (3225 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3228 (aastore))
                                      (3229 (dup))
                                      (3230 (bipush 11))
                                      (3232 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (3235 (aastore))
                                      (3236 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (3239 (checkcast (class "clojure.lang.AFn")))
                                      (3242 (putstatic (fieldCP "const__85" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (3245 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (3248 (ldc_w 68))   ;;STRING:: "assert-any"
                                      (3251 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (3254 (checkcast (class "clojure.lang.Var")))
                                      (3257 (putstatic (fieldCP "const__86" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (3260 (sipush 439))
                                      (3263 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3266 (putstatic (fieldCP "const__87" "clojure.test__init" (class "java.lang.Object"))))
                                      (3269 (iconst_1))
                                      (3270 (anewarray (class "java.lang.Object")))
                                      (3273 (dup))
                                      (3274 (iconst_0))
                                      (3275 (iconst_2))
                                      (3276 (anewarray (class "java.lang.Object")))
                                      (3279 (dup))
                                      (3280 (iconst_0))
                                      (3281 (aconst_null))
                                      (3282 (ldc_w 65))   ;;STRING:: "msg"
                                      (3285 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3288 (aastore))
                                      (3289 (dup))
                                      (3290 (iconst_1))
                                      (3291 (aconst_null))
                                      (3292 (ldc_w 66))   ;;STRING:: "form"
                                      (3295 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3298 (aastore))
                                      (3299 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3302 (aastore))
                                      (3303 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (3306 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (3309 (putstatic (fieldCP "const__88" "clojure.test__init" (class "java.lang.Object"))))
                                      (3312 (bipush 12))
                                      (3314 (anewarray (class "java.lang.Object")))
                                      (3317 (dup))
                                      (3318 (iconst_0))
                                      (3319 (aconst_null))
                                      (3320 (ldc_w 28))   ;;STRING:: "arglists"
                                      (3323 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3326 (aastore))
                                      (3327 (dup))
                                      (3328 (iconst_1))
                                      (3329 (iconst_1))
                                      (3330 (anewarray (class "java.lang.Object")))
                                      (3333 (dup))
                                      (3334 (iconst_0))
                                      (3335 (iconst_2))
                                      (3336 (anewarray (class "java.lang.Object")))
                                      (3339 (dup))
                                      (3340 (iconst_0))
                                      (3341 (aconst_null))
                                      (3342 (ldc_w 65))   ;;STRING:: "msg"
                                      (3345 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3348 (aastore))
                                      (3349 (dup))
                                      (3350 (iconst_1))
                                      (3351 (aconst_null))
                                      (3352 (ldc_w 66))   ;;STRING:: "form"
                                      (3355 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3358 (aastore))
                                      (3359 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3362 (aastore))
                                      (3363 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (3366 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (3369 (aastore))
                                      (3370 (dup))
                                      (3371 (iconst_2))
                                      (3372 (aconst_null))
                                      (3373 (ldc_w 9))    ;;STRING:: "column"
                                      (3376 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3379 (aastore))
                                      (3380 (dup))
                                      (3381 (iconst_3))
                                      (3382 (iconst_1))
                                      (3383 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3386 (aastore))
                                      (3387 (dup))
                                      (3388 (iconst_4))
                                      (3389 (aconst_null))
                                      (3390 (ldc_w 12))   ;;STRING:: "added"
                                      (3393 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3396 (aastore))
                                      (3397 (dup))
                                      (3398 (iconst_5))
                                      (3399 (ldc_w 13))   ;;STRING:: "1.1"
                                      (3402 (aastore))
                                      (3403 (dup))
                                      (3404 (bipush 6))
                                      (3406 (aconst_null))
                                      (3407 (ldc_w 3))    ;;STRING:: "doc"
                                      (3410 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3413 (aastore))
                                      (3414 (dup))
                                      (3415 (bipush 7))
                                      (3417 (ldc_w 69))   ;;STRING:: "Returns generic assertion code for any test, including macros, Java\n  method calls, or isolated symbols."
                                      (3420 (aastore))
                                      (3421 (dup))
                                      (3422 (bipush 8))
                                      (3424 (aconst_null))
                                      (3425 (ldc_w 10))   ;;STRING:: "line"
                                      (3428 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3431 (aastore))
                                      (3432 (dup))
                                      (3433 (bipush 9))
                                      (3435 (sipush 439))
                                      (3438 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3441 (aastore))
                                      (3442 (dup))
                                      (3443 (bipush 10))
                                      (3445 (aconst_null))
                                      (3446 (ldc_w 8))    ;;STRING:: "file"
                                      (3449 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3452 (aastore))
                                      (3453 (dup))
                                      (3454 (bipush 11))
                                      (3456 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (3459 (aastore))
                                      (3460 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (3463 (checkcast (class "clojure.lang.AFn")))
                                      (3466 (putstatic (fieldCP "const__89" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (3469 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (3472 (ldc_w 70))   ;;STRING:: "assert-expr"
                                      (3475 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (3478 (checkcast (class "clojure.lang.Var")))
                                      (3481 (putstatic (fieldCP "const__90" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (3484 (aconst_null))
                                      (3485 (ldc_w 71))   ;;STRING:: "always-fail"
                                      (3488 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3491 (checkcast (class "clojure.lang.Keyword")))
                                      (3494 (putstatic (fieldCP "const__91" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (3497 (aconst_null))
                                      (3498 (ldc_w 72))   ;;STRING:: "instance?"
                                      (3501 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3504 (checkcast (class "clojure.lang.AFn")))
                                      (3507 (putstatic (fieldCP "const__92" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (3510 (aconst_null))
                                      (3511 (ldc_w 73))   ;;STRING:: "thrown?"
                                      (3514 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3517 (checkcast (class "clojure.lang.AFn")))
                                      (3520 (putstatic (fieldCP "const__93" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (3523 (aconst_null))
                                      (3524 (ldc_w 74))   ;;STRING:: "thrown-with-msg?"
                                      (3527 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3530 (checkcast (class "clojure.lang.AFn")))
                                      (3533 (putstatic (fieldCP "const__94" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (3536 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (3539 (ldc_w 75))   ;;STRING:: "try-expr"
                                      (3542 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (3545 (checkcast (class "clojure.lang.Var")))
                                      (3548 (putstatic (fieldCP "const__95" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (3551 (sipush 522))
                                      (3554 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3557 (putstatic (fieldCP "const__96" "clojure.test__init" (class "java.lang.Object"))))
                                      (3560 (iconst_1))
                                      (3561 (anewarray (class "java.lang.Object")))
                                      (3564 (dup))
                                      (3565 (iconst_0))
                                      (3566 (iconst_2))
                                      (3567 (anewarray (class "java.lang.Object")))
                                      (3570 (dup))
                                      (3571 (iconst_0))
                                      (3572 (aconst_null))
                                      (3573 (ldc_w 65))   ;;STRING:: "msg"
                                      (3576 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3579 (aastore))
                                      (3580 (dup))
                                      (3581 (iconst_1))
                                      (3582 (aconst_null))
                                      (3583 (ldc_w 66))   ;;STRING:: "form"
                                      (3586 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3589 (aastore))
                                      (3590 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3593 (aastore))
                                      (3594 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (3597 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (3600 (putstatic (fieldCP "const__97" "clojure.test__init" (class "java.lang.Object"))))
                                      (3603 (bipush 12))
                                      (3605 (anewarray (class "java.lang.Object")))
                                      (3608 (dup))
                                      (3609 (iconst_0))
                                      (3610 (aconst_null))
                                      (3611 (ldc_w 28))   ;;STRING:: "arglists"
                                      (3614 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3617 (aastore))
                                      (3618 (dup))
                                      (3619 (iconst_1))
                                      (3620 (iconst_1))
                                      (3621 (anewarray (class "java.lang.Object")))
                                      (3624 (dup))
                                      (3625 (iconst_0))
                                      (3626 (iconst_2))
                                      (3627 (anewarray (class "java.lang.Object")))
                                      (3630 (dup))
                                      (3631 (iconst_0))
                                      (3632 (aconst_null))
                                      (3633 (ldc_w 65))   ;;STRING:: "msg"
                                      (3636 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3639 (aastore))
                                      (3640 (dup))
                                      (3641 (iconst_1))
                                      (3642 (aconst_null))
                                      (3643 (ldc_w 66))   ;;STRING:: "form"
                                      (3646 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3649 (aastore))
                                      (3650 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3653 (aastore))
                                      (3654 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (3657 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (3660 (aastore))
                                      (3661 (dup))
                                      (3662 (iconst_2))
                                      (3663 (aconst_null))
                                      (3664 (ldc_w 9))    ;;STRING:: "column"
                                      (3667 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3670 (aastore))
                                      (3671 (dup))
                                      (3672 (iconst_3))
                                      (3673 (iconst_1))
                                      (3674 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3677 (aastore))
                                      (3678 (dup))
                                      (3679 (iconst_4))
                                      (3680 (aconst_null))
                                      (3681 (ldc_w 12))   ;;STRING:: "added"
                                      (3684 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3687 (aastore))
                                      (3688 (dup))
                                      (3689 (iconst_5))
                                      (3690 (ldc_w 13))   ;;STRING:: "1.1"
                                      (3693 (aastore))
                                      (3694 (dup))
                                      (3695 (bipush 6))
                                      (3697 (aconst_null))
                                      (3698 (ldc_w 3))    ;;STRING:: "doc"
                                      (3701 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3704 (aastore))
                                      (3705 (dup))
                                      (3706 (bipush 7))
                                      (3708 (ldc_w 76))   ;;STRING:: "Used by the \nis\n macro to catch unexpected exceptions.\n  You don\nt call this."
                                      (3711 (aastore))
                                      (3712 (dup))
                                      (3713 (bipush 8))
                                      (3715 (aconst_null))
                                      (3716 (ldc_w 10))   ;;STRING:: "line"
                                      (3719 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3722 (aastore))
                                      (3723 (dup))
                                      (3724 (bipush 9))
                                      (3726 (sipush 522))
                                      (3729 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3732 (aastore))
                                      (3733 (dup))
                                      (3734 (bipush 10))
                                      (3736 (aconst_null))
                                      (3737 (ldc_w 8))    ;;STRING:: "file"
                                      (3740 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3743 (aastore))
                                      (3744 (dup))
                                      (3745 (bipush 11))
                                      (3747 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (3750 (aastore))
                                      (3751 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (3754 (checkcast (class "clojure.lang.AFn")))
                                      (3757 (putstatic (fieldCP "const__98" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (3760 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (3763 (ldc_w 77))   ;;STRING:: "is"
                                      (3766 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (3769 (checkcast (class "clojure.lang.Var")))
                                      (3772 (putstatic (fieldCP "const__99" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (3775 (return))
                                      (endofcode 3776))
                                   (Exceptions )
                                   (StackMap )))
                        (method "__init1"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 11) (max_locals . 0) (code_length . 3969)
                                   (parsedcode
                                      (0 (sipush 538))
                                      (3 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (6 (putstatic (fieldCP "const__100" "clojure.test__init" (class "java.lang.Object"))))
                                      (9 (iconst_2))
                                      (10 (anewarray (class "java.lang.Object")))
                                      (13 (dup))
                                      (14 (iconst_0))
                                      (15 (iconst_1))
                                      (16 (anewarray (class "java.lang.Object")))
                                      (19 (dup))
                                      (20 (iconst_0))
                                      (21 (aconst_null))
                                      (22 (ldc_w 66))     ;;STRING:: "form"
                                      (25 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (28 (aastore))
                                      (29 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (32 (aastore))
                                      (33 (dup))
                                      (34 (iconst_1))
                                      (35 (iconst_2))
                                      (36 (anewarray (class "java.lang.Object")))
                                      (39 (dup))
                                      (40 (iconst_0))
                                      (41 (aconst_null))
                                      (42 (ldc_w 66))     ;;STRING:: "form"
                                      (45 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (48 (aastore))
                                      (49 (dup))
                                      (50 (iconst_1))
                                      (51 (aconst_null))
                                      (52 (ldc_w 65))     ;;STRING:: "msg"
                                      (55 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (58 (aastore))
                                      (59 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (62 (aastore))
                                      (63 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (66 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (69 (putstatic (fieldCP "const__101" "clojure.test__init" (class "java.lang.Object"))))
                                      (72 (bipush 12))
                                      (74 (anewarray (class "java.lang.Object")))
                                      (77 (dup))
                                      (78 (iconst_0))
                                      (79 (aconst_null))
                                      (80 (ldc_w 28))     ;;STRING:: "arglists"
                                      (83 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (86 (aastore))
                                      (87 (dup))
                                      (88 (iconst_1))
                                      (89 (iconst_2))
                                      (90 (anewarray (class "java.lang.Object")))
                                      (93 (dup))
                                      (94 (iconst_0))
                                      (95 (iconst_1))
                                      (96 (anewarray (class "java.lang.Object")))
                                      (99 (dup))
                                      (100 (iconst_0))
                                      (101 (aconst_null))
                                      (102 (ldc_w 66))    ;;STRING:: "form"
                                      (105 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (108 (aastore))
                                      (109 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (112 (aastore))
                                      (113 (dup))
                                      (114 (iconst_1))
                                      (115 (iconst_2))
                                      (116 (anewarray (class "java.lang.Object")))
                                      (119 (dup))
                                      (120 (iconst_0))
                                      (121 (aconst_null))
                                      (122 (ldc_w 66))    ;;STRING:: "form"
                                      (125 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (128 (aastore))
                                      (129 (dup))
                                      (130 (iconst_1))
                                      (131 (aconst_null))
                                      (132 (ldc_w 65))    ;;STRING:: "msg"
                                      (135 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (138 (aastore))
                                      (139 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (142 (aastore))
                                      (143 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (146 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (149 (aastore))
                                      (150 (dup))
                                      (151 (iconst_2))
                                      (152 (aconst_null))
                                      (153 (ldc_w 9))     ;;STRING:: "column"
                                      (156 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (159 (aastore))
                                      (160 (dup))
                                      (161 (iconst_3))
                                      (162 (iconst_1))
                                      (163 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (166 (aastore))
                                      (167 (dup))
                                      (168 (iconst_4))
                                      (169 (aconst_null))
                                      (170 (ldc_w 12))    ;;STRING:: "added"
                                      (173 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (176 (aastore))
                                      (177 (dup))
                                      (178 (iconst_5))
                                      (179 (ldc_w 13))    ;;STRING:: "1.1"
                                      (182 (aastore))
                                      (183 (dup))
                                      (184 (bipush 6))
                                      (186 (aconst_null))
                                      (187 (ldc_w 3))     ;;STRING:: "doc"
                                      (190 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (193 (aastore))
                                      (194 (dup))
                                      (195 (bipush 7))
                                      (197 (ldc_w 78))    ;;STRING:: "Generic assertion macro.  \nform\n is any predicate test.\n  \nmsg\n is an optional message to attach to the assertion.\n  \n  Example: (is (= 4 (+ 2 2)) \"Two plus two should be 4\")\n\n  Special forms:\n\n  (is (thrown? c body)) checks that an instance of c is thrown from\n  body, fails if not; then returns the thing thrown.\n\n  (is (thrown-with-msg? c re body)) checks that an instance of c is\n  thrown AND that the message on the exception matches (with\n  re-find) the regular expression re."
                                      (200 (aastore))
                                      (201 (dup))
                                      (202 (bipush 8))
                                      (204 (aconst_null))
                                      (205 (ldc_w 10))    ;;STRING:: "line"
                                      (208 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (211 (aastore))
                                      (212 (dup))
                                      (213 (bipush 9))
                                      (215 (sipush 538))
                                      (218 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (221 (aastore))
                                      (222 (dup))
                                      (223 (bipush 10))
                                      (225 (aconst_null))
                                      (226 (ldc_w 8))     ;;STRING:: "file"
                                      (229 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (232 (aastore))
                                      (233 (dup))
                                      (234 (bipush 11))
                                      (236 (ldc_w 15))    ;;STRING:: "clojure/test.clj"
                                      (239 (aastore))
                                      (240 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (243 (checkcast (class "clojure.lang.AFn")))
                                      (246 (putstatic (fieldCP "const__102" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (249 (ldc_w 2))     ;;STRING:: "clojure.test"
                                      (252 (ldc_w 79))    ;;STRING:: "are"
                                      (255 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (258 (checkcast (class "clojure.lang.Var")))
                                      (261 (putstatic (fieldCP "const__103" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (264 (sipush 556))
                                      (267 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (270 (putstatic (fieldCP "const__104" "clojure.test__init" (class "java.lang.Object"))))
                                      (273 (iconst_1))
                                      (274 (anewarray (class "java.lang.Object")))
                                      (277 (dup))
                                      (278 (iconst_0))
                                      (279 (iconst_4))
                                      (280 (anewarray (class "java.lang.Object")))
                                      (283 (dup))
                                      (284 (iconst_0))
                                      (285 (aconst_null))
                                      (286 (ldc_w 80))    ;;STRING:: "argv"
                                      (289 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (292 (aastore))
                                      (293 (dup))
                                      (294 (iconst_1))
                                      (295 (aconst_null))
                                      (296 (ldc_w 81))    ;;STRING:: "expr"
                                      (299 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (302 (aastore))
                                      (303 (dup))
                                      (304 (iconst_2))
                                      (305 (aconst_null))
                                      (306 (ldc_w 29))    ;;STRING:: "&"
                                      (309 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (312 (aastore))
                                      (313 (dup))
                                      (314 (iconst_3))
                                      (315 (aconst_null))
                                      (316 (ldc_w 82))    ;;STRING:: "args"
                                      (319 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (322 (aastore))
                                      (323 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (326 (aastore))
                                      (327 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (330 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (333 (putstatic (fieldCP "const__105" "clojure.test__init" (class "java.lang.Object"))))
                                      (336 (bipush 12))
                                      (338 (anewarray (class "java.lang.Object")))
                                      (341 (dup))
                                      (342 (iconst_0))
                                      (343 (aconst_null))
                                      (344 (ldc_w 28))    ;;STRING:: "arglists"
                                      (347 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (350 (aastore))
                                      (351 (dup))
                                      (352 (iconst_1))
                                      (353 (iconst_1))
                                      (354 (anewarray (class "java.lang.Object")))
                                      (357 (dup))
                                      (358 (iconst_0))
                                      (359 (iconst_4))
                                      (360 (anewarray (class "java.lang.Object")))
                                      (363 (dup))
                                      (364 (iconst_0))
                                      (365 (aconst_null))
                                      (366 (ldc_w 80))    ;;STRING:: "argv"
                                      (369 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (372 (aastore))
                                      (373 (dup))
                                      (374 (iconst_1))
                                      (375 (aconst_null))
                                      (376 (ldc_w 81))    ;;STRING:: "expr"
                                      (379 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (382 (aastore))
                                      (383 (dup))
                                      (384 (iconst_2))
                                      (385 (aconst_null))
                                      (386 (ldc_w 29))    ;;STRING:: "&"
                                      (389 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (392 (aastore))
                                      (393 (dup))
                                      (394 (iconst_3))
                                      (395 (aconst_null))
                                      (396 (ldc_w 82))    ;;STRING:: "args"
                                      (399 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (402 (aastore))
                                      (403 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (406 (aastore))
                                      (407 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (410 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (413 (aastore))
                                      (414 (dup))
                                      (415 (iconst_2))
                                      (416 (aconst_null))
                                      (417 (ldc_w 9))     ;;STRING:: "column"
                                      (420 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (423 (aastore))
                                      (424 (dup))
                                      (425 (iconst_3))
                                      (426 (iconst_1))
                                      (427 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (430 (aastore))
                                      (431 (dup))
                                      (432 (iconst_4))
                                      (433 (aconst_null))
                                      (434 (ldc_w 12))    ;;STRING:: "added"
                                      (437 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (440 (aastore))
                                      (441 (dup))
                                      (442 (iconst_5))
                                      (443 (ldc_w 13))    ;;STRING:: "1.1"
                                      (446 (aastore))
                                      (447 (dup))
                                      (448 (bipush 6))
                                      (450 (aconst_null))
                                      (451 (ldc_w 3))     ;;STRING:: "doc"
                                      (454 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (457 (aastore))
                                      (458 (dup))
                                      (459 (bipush 7))
                                      (461 (ldc_w 83))    ;;STRING:: "Checks multiple assertions with a template expression.\n  See clojure.template/do-template for an explanation of\n  templates.\n\n  Example: (are [x y] (= x y)  \n                2 (+ 1 1)\n                4 (* 2 2))\n  Expands to: \n           (do (is (= 2 (+ 1 1)))\n               (is (= 4 (* 2 2))))\n\n  Note: This breaks some reporting features, such as line numbers."
                                      (464 (aastore))
                                      (465 (dup))
                                      (466 (bipush 8))
                                      (468 (aconst_null))
                                      (469 (ldc_w 10))    ;;STRING:: "line"
                                      (472 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (475 (aastore))
                                      (476 (dup))
                                      (477 (bipush 9))
                                      (479 (sipush 556))
                                      (482 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (485 (aastore))
                                      (486 (dup))
                                      (487 (bipush 10))
                                      (489 (aconst_null))
                                      (490 (ldc_w 8))     ;;STRING:: "file"
                                      (493 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (496 (aastore))
                                      (497 (dup))
                                      (498 (bipush 11))
                                      (500 (ldc_w 15))    ;;STRING:: "clojure/test.clj"
                                      (503 (aastore))
                                      (504 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (507 (checkcast (class "clojure.lang.AFn")))
                                      (510 (putstatic (fieldCP "const__106" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (513 (ldc_w 2))     ;;STRING:: "clojure.test"
                                      (516 (ldc_w 84))    ;;STRING:: "testing"
                                      (519 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (522 (checkcast (class "clojure.lang.Var")))
                                      (525 (putstatic (fieldCP "const__107" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (528 (sipush 581))
                                      (531 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (534 (putstatic (fieldCP "const__108" "clojure.test__init" (class "java.lang.Object"))))
                                      (537 (iconst_1))
                                      (538 (anewarray (class "java.lang.Object")))
                                      (541 (dup))
                                      (542 (iconst_0))
                                      (543 (iconst_3))
                                      (544 (anewarray (class "java.lang.Object")))
                                      (547 (dup))
                                      (548 (iconst_0))
                                      (549 (aconst_null))
                                      (550 (ldc_w 85))    ;;STRING:: "string"
                                      (553 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (556 (aastore))
                                      (557 (dup))
                                      (558 (iconst_1))
                                      (559 (aconst_null))
                                      (560 (ldc_w 29))    ;;STRING:: "&"
                                      (563 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (566 (aastore))
                                      (567 (dup))
                                      (568 (iconst_2))
                                      (569 (aconst_null))
                                      (570 (ldc_w 30))    ;;STRING:: "body"
                                      (573 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (576 (aastore))
                                      (577 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (580 (aastore))
                                      (581 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (584 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (587 (putstatic (fieldCP "const__109" "clojure.test__init" (class "java.lang.Object"))))
                                      (590 (bipush 12))
                                      (592 (anewarray (class "java.lang.Object")))
                                      (595 (dup))
                                      (596 (iconst_0))
                                      (597 (aconst_null))
                                      (598 (ldc_w 28))    ;;STRING:: "arglists"
                                      (601 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (604 (aastore))
                                      (605 (dup))
                                      (606 (iconst_1))
                                      (607 (iconst_1))
                                      (608 (anewarray (class "java.lang.Object")))
                                      (611 (dup))
                                      (612 (iconst_0))
                                      (613 (iconst_3))
                                      (614 (anewarray (class "java.lang.Object")))
                                      (617 (dup))
                                      (618 (iconst_0))
                                      (619 (aconst_null))
                                      (620 (ldc_w 85))    ;;STRING:: "string"
                                      (623 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (626 (aastore))
                                      (627 (dup))
                                      (628 (iconst_1))
                                      (629 (aconst_null))
                                      (630 (ldc_w 29))    ;;STRING:: "&"
                                      (633 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (636 (aastore))
                                      (637 (dup))
                                      (638 (iconst_2))
                                      (639 (aconst_null))
                                      (640 (ldc_w 30))    ;;STRING:: "body"
                                      (643 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (646 (aastore))
                                      (647 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (650 (aastore))
                                      (651 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (654 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (657 (aastore))
                                      (658 (dup))
                                      (659 (iconst_2))
                                      (660 (aconst_null))
                                      (661 (ldc_w 9))     ;;STRING:: "column"
                                      (664 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (667 (aastore))
                                      (668 (dup))
                                      (669 (iconst_3))
                                      (670 (iconst_1))
                                      (671 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (674 (aastore))
                                      (675 (dup))
                                      (676 (iconst_4))
                                      (677 (aconst_null))
                                      (678 (ldc_w 12))    ;;STRING:: "added"
                                      (681 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (684 (aastore))
                                      (685 (dup))
                                      (686 (iconst_5))
                                      (687 (ldc_w 13))    ;;STRING:: "1.1"
                                      (690 (aastore))
                                      (691 (dup))
                                      (692 (bipush 6))
                                      (694 (aconst_null))
                                      (695 (ldc_w 3))     ;;STRING:: "doc"
                                      (698 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (701 (aastore))
                                      (702 (dup))
                                      (703 (bipush 7))
                                      (705 (ldc_w 86))    ;;STRING:: "Adds a new string to the list of testing contexts.  May be nested,\n  but must occur inside a test function (deftest)."
                                      (708 (aastore))
                                      (709 (dup))
                                      (710 (bipush 8))
                                      (712 (aconst_null))
                                      (713 (ldc_w 10))    ;;STRING:: "line"
                                      (716 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (719 (aastore))
                                      (720 (dup))
                                      (721 (bipush 9))
                                      (723 (sipush 581))
                                      (726 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (729 (aastore))
                                      (730 (dup))
                                      (731 (bipush 10))
                                      (733 (aconst_null))
                                      (734 (ldc_w 8))     ;;STRING:: "file"
                                      (737 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (740 (aastore))
                                      (741 (dup))
                                      (742 (bipush 11))
                                      (744 (ldc_w 15))    ;;STRING:: "clojure/test.clj"
                                      (747 (aastore))
                                      (748 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (751 (checkcast (class "clojure.lang.AFn")))
                                      (754 (putstatic (fieldCP "const__110" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (757 (ldc_w 2))     ;;STRING:: "clojure.test"
                                      (760 (ldc_w 87))    ;;STRING:: "with-test"
                                      (763 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (766 (checkcast (class "clojure.lang.Var")))
                                      (769 (putstatic (fieldCP "const__111" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (772 (sipush 593))
                                      (775 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (778 (putstatic (fieldCP "const__112" "clojure.test__init" (class "java.lang.Object"))))
                                      (781 (iconst_1))
                                      (782 (anewarray (class "java.lang.Object")))
                                      (785 (dup))
                                      (786 (iconst_0))
                                      (787 (iconst_3))
                                      (788 (anewarray (class "java.lang.Object")))
                                      (791 (dup))
                                      (792 (iconst_0))
                                      (793 (aconst_null))
                                      (794 (ldc_w 88))    ;;STRING:: "definition"
                                      (797 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (800 (aastore))
                                      (801 (dup))
                                      (802 (iconst_1))
                                      (803 (aconst_null))
                                      (804 (ldc_w 29))    ;;STRING:: "&"
                                      (807 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (810 (aastore))
                                      (811 (dup))
                                      (812 (iconst_2))
                                      (813 (aconst_null))
                                      (814 (ldc_w 30))    ;;STRING:: "body"
                                      (817 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (820 (aastore))
                                      (821 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (824 (aastore))
                                      (825 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (828 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (831 (putstatic (fieldCP "const__113" "clojure.test__init" (class "java.lang.Object"))))
                                      (834 (bipush 12))
                                      (836 (anewarray (class "java.lang.Object")))
                                      (839 (dup))
                                      (840 (iconst_0))
                                      (841 (aconst_null))
                                      (842 (ldc_w 28))    ;;STRING:: "arglists"
                                      (845 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (848 (aastore))
                                      (849 (dup))
                                      (850 (iconst_1))
                                      (851 (iconst_1))
                                      (852 (anewarray (class "java.lang.Object")))
                                      (855 (dup))
                                      (856 (iconst_0))
                                      (857 (iconst_3))
                                      (858 (anewarray (class "java.lang.Object")))
                                      (861 (dup))
                                      (862 (iconst_0))
                                      (863 (aconst_null))
                                      (864 (ldc_w 88))    ;;STRING:: "definition"
                                      (867 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (870 (aastore))
                                      (871 (dup))
                                      (872 (iconst_1))
                                      (873 (aconst_null))
                                      (874 (ldc_w 29))    ;;STRING:: "&"
                                      (877 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (880 (aastore))
                                      (881 (dup))
                                      (882 (iconst_2))
                                      (883 (aconst_null))
                                      (884 (ldc_w 30))    ;;STRING:: "body"
                                      (887 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (890 (aastore))
                                      (891 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (894 (aastore))
                                      (895 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (898 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (901 (aastore))
                                      (902 (dup))
                                      (903 (iconst_2))
                                      (904 (aconst_null))
                                      (905 (ldc_w 9))     ;;STRING:: "column"
                                      (908 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (911 (aastore))
                                      (912 (dup))
                                      (913 (iconst_3))
                                      (914 (iconst_1))
                                      (915 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (918 (aastore))
                                      (919 (dup))
                                      (920 (iconst_4))
                                      (921 (aconst_null))
                                      (922 (ldc_w 12))    ;;STRING:: "added"
                                      (925 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (928 (aastore))
                                      (929 (dup))
                                      (930 (iconst_5))
                                      (931 (ldc_w 13))    ;;STRING:: "1.1"
                                      (934 (aastore))
                                      (935 (dup))
                                      (936 (bipush 6))
                                      (938 (aconst_null))
                                      (939 (ldc_w 3))     ;;STRING:: "doc"
                                      (942 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (945 (aastore))
                                      (946 (dup))
                                      (947 (bipush 7))
                                      (949 (ldc_w 89))    ;;STRING:: "Takes any definition form (that returns a Var) as the first argument.\n  Remaining body goes in the :test metadata function for that Var.\n\n  When *load-tests* is false, only evaluates the definition, ignoring\n  the tests."
                                      (952 (aastore))
                                      (953 (dup))
                                      (954 (bipush 8))
                                      (956 (aconst_null))
                                      (957 (ldc_w 10))    ;;STRING:: "line"
                                      (960 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (963 (aastore))
                                      (964 (dup))
                                      (965 (bipush 9))
                                      (967 (sipush 593))
                                      (970 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (973 (aastore))
                                      (974 (dup))
                                      (975 (bipush 10))
                                      (977 (aconst_null))
                                      (978 (ldc_w 8))     ;;STRING:: "file"
                                      (981 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (984 (aastore))
                                      (985 (dup))
                                      (986 (bipush 11))
                                      (988 (ldc_w 15))    ;;STRING:: "clojure/test.clj"
                                      (991 (aastore))
                                      (992 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (995 (checkcast (class "clojure.lang.AFn")))
                                      (998 (putstatic (fieldCP "const__114" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (1001 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (1004 (ldc_w 90))   ;;STRING:: "deftest"
                                      (1007 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (1010 (checkcast (class "clojure.lang.Var")))
                                      (1013 (putstatic (fieldCP "const__115" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (1016 (sipush 606))
                                      (1019 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1022 (putstatic (fieldCP "const__116" "clojure.test__init" (class "java.lang.Object"))))
                                      (1025 (iconst_1))
                                      (1026 (anewarray (class "java.lang.Object")))
                                      (1029 (dup))
                                      (1030 (iconst_0))
                                      (1031 (iconst_3))
                                      (1032 (anewarray (class "java.lang.Object")))
                                      (1035 (dup))
                                      (1036 (iconst_0))
                                      (1037 (aconst_null))
                                      (1038 (ldc_w 43))   ;;STRING:: "name"
                                      (1041 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1044 (aastore))
                                      (1045 (dup))
                                      (1046 (iconst_1))
                                      (1047 (aconst_null))
                                      (1048 (ldc_w 29))   ;;STRING:: "&"
                                      (1051 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1054 (aastore))
                                      (1055 (dup))
                                      (1056 (iconst_2))
                                      (1057 (aconst_null))
                                      (1058 (ldc_w 30))   ;;STRING:: "body"
                                      (1061 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1064 (aastore))
                                      (1065 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1068 (aastore))
                                      (1069 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1072 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1075 (putstatic (fieldCP "const__117" "clojure.test__init" (class "java.lang.Object"))))
                                      (1078 (bipush 12))
                                      (1080 (anewarray (class "java.lang.Object")))
                                      (1083 (dup))
                                      (1084 (iconst_0))
                                      (1085 (aconst_null))
                                      (1086 (ldc_w 28))   ;;STRING:: "arglists"
                                      (1089 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1092 (aastore))
                                      (1093 (dup))
                                      (1094 (iconst_1))
                                      (1095 (iconst_1))
                                      (1096 (anewarray (class "java.lang.Object")))
                                      (1099 (dup))
                                      (1100 (iconst_0))
                                      (1101 (iconst_3))
                                      (1102 (anewarray (class "java.lang.Object")))
                                      (1105 (dup))
                                      (1106 (iconst_0))
                                      (1107 (aconst_null))
                                      (1108 (ldc_w 43))   ;;STRING:: "name"
                                      (1111 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1114 (aastore))
                                      (1115 (dup))
                                      (1116 (iconst_1))
                                      (1117 (aconst_null))
                                      (1118 (ldc_w 29))   ;;STRING:: "&"
                                      (1121 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1124 (aastore))
                                      (1125 (dup))
                                      (1126 (iconst_2))
                                      (1127 (aconst_null))
                                      (1128 (ldc_w 30))   ;;STRING:: "body"
                                      (1131 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1134 (aastore))
                                      (1135 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1138 (aastore))
                                      (1139 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1142 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1145 (aastore))
                                      (1146 (dup))
                                      (1147 (iconst_2))
                                      (1148 (aconst_null))
                                      (1149 (ldc_w 9))    ;;STRING:: "column"
                                      (1152 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1155 (aastore))
                                      (1156 (dup))
                                      (1157 (iconst_3))
                                      (1158 (iconst_1))
                                      (1159 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1162 (aastore))
                                      (1163 (dup))
                                      (1164 (iconst_4))
                                      (1165 (aconst_null))
                                      (1166 (ldc_w 12))   ;;STRING:: "added"
                                      (1169 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1172 (aastore))
                                      (1173 (dup))
                                      (1174 (iconst_5))
                                      (1175 (ldc_w 13))   ;;STRING:: "1.1"
                                      (1178 (aastore))
                                      (1179 (dup))
                                      (1180 (bipush 6))
                                      (1182 (aconst_null))
                                      (1183 (ldc_w 3))    ;;STRING:: "doc"
                                      (1186 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1189 (aastore))
                                      (1190 (dup))
                                      (1191 (bipush 7))
                                      (1193 (ldc_w 91))   ;;STRING:: "Defines a test function with no arguments.  Test functions may call\n  other tests, so tests may be composed.  If you compose tests, you\n  should also define a function named test-ns-hook; run-tests will\n  call test-ns-hook instead of testing all vars.\n\n  Note: Actually, the test body goes in the :test metadata on the var,\n  and the real function (the value of the var) calls test-var on\n  itself.\n\n  When *load-tests* is false, deftest is ignored."
                                      (1196 (aastore))
                                      (1197 (dup))
                                      (1198 (bipush 8))
                                      (1200 (aconst_null))
                                      (1201 (ldc_w 10))   ;;STRING:: "line"
                                      (1204 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1207 (aastore))
                                      (1208 (dup))
                                      (1209 (bipush 9))
                                      (1211 (sipush 606))
                                      (1214 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1217 (aastore))
                                      (1218 (dup))
                                      (1219 (bipush 10))
                                      (1221 (aconst_null))
                                      (1222 (ldc_w 8))    ;;STRING:: "file"
                                      (1225 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1228 (aastore))
                                      (1229 (dup))
                                      (1230 (bipush 11))
                                      (1232 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (1235 (aastore))
                                      (1236 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1239 (checkcast (class "clojure.lang.AFn")))
                                      (1242 (putstatic (fieldCP "const__118" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (1245 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (1248 (ldc_w 92))   ;;STRING:: "deftest-"
                                      (1251 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (1254 (checkcast (class "clojure.lang.Var")))
                                      (1257 (putstatic (fieldCP "const__119" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (1260 (sipush 623))
                                      (1263 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1266 (putstatic (fieldCP "const__120" "clojure.test__init" (class "java.lang.Object"))))
                                      (1269 (iconst_1))
                                      (1270 (anewarray (class "java.lang.Object")))
                                      (1273 (dup))
                                      (1274 (iconst_0))
                                      (1275 (iconst_3))
                                      (1276 (anewarray (class "java.lang.Object")))
                                      (1279 (dup))
                                      (1280 (iconst_0))
                                      (1281 (aconst_null))
                                      (1282 (ldc_w 43))   ;;STRING:: "name"
                                      (1285 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1288 (aastore))
                                      (1289 (dup))
                                      (1290 (iconst_1))
                                      (1291 (aconst_null))
                                      (1292 (ldc_w 29))   ;;STRING:: "&"
                                      (1295 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1298 (aastore))
                                      (1299 (dup))
                                      (1300 (iconst_2))
                                      (1301 (aconst_null))
                                      (1302 (ldc_w 30))   ;;STRING:: "body"
                                      (1305 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1308 (aastore))
                                      (1309 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1312 (aastore))
                                      (1313 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1316 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1319 (putstatic (fieldCP "const__121" "clojure.test__init" (class "java.lang.Object"))))
                                      (1322 (bipush 12))
                                      (1324 (anewarray (class "java.lang.Object")))
                                      (1327 (dup))
                                      (1328 (iconst_0))
                                      (1329 (aconst_null))
                                      (1330 (ldc_w 28))   ;;STRING:: "arglists"
                                      (1333 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1336 (aastore))
                                      (1337 (dup))
                                      (1338 (iconst_1))
                                      (1339 (iconst_1))
                                      (1340 (anewarray (class "java.lang.Object")))
                                      (1343 (dup))
                                      (1344 (iconst_0))
                                      (1345 (iconst_3))
                                      (1346 (anewarray (class "java.lang.Object")))
                                      (1349 (dup))
                                      (1350 (iconst_0))
                                      (1351 (aconst_null))
                                      (1352 (ldc_w 43))   ;;STRING:: "name"
                                      (1355 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1358 (aastore))
                                      (1359 (dup))
                                      (1360 (iconst_1))
                                      (1361 (aconst_null))
                                      (1362 (ldc_w 29))   ;;STRING:: "&"
                                      (1365 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1368 (aastore))
                                      (1369 (dup))
                                      (1370 (iconst_2))
                                      (1371 (aconst_null))
                                      (1372 (ldc_w 30))   ;;STRING:: "body"
                                      (1375 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1378 (aastore))
                                      (1379 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1382 (aastore))
                                      (1383 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1386 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1389 (aastore))
                                      (1390 (dup))
                                      (1391 (iconst_2))
                                      (1392 (aconst_null))
                                      (1393 (ldc_w 9))    ;;STRING:: "column"
                                      (1396 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1399 (aastore))
                                      (1400 (dup))
                                      (1401 (iconst_3))
                                      (1402 (iconst_1))
                                      (1403 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1406 (aastore))
                                      (1407 (dup))
                                      (1408 (iconst_4))
                                      (1409 (aconst_null))
                                      (1410 (ldc_w 12))   ;;STRING:: "added"
                                      (1413 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1416 (aastore))
                                      (1417 (dup))
                                      (1418 (iconst_5))
                                      (1419 (ldc_w 13))   ;;STRING:: "1.1"
                                      (1422 (aastore))
                                      (1423 (dup))
                                      (1424 (bipush 6))
                                      (1426 (aconst_null))
                                      (1427 (ldc_w 3))    ;;STRING:: "doc"
                                      (1430 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1433 (aastore))
                                      (1434 (dup))
                                      (1435 (bipush 7))
                                      (1437 (ldc_w 93))   ;;STRING:: "Like deftest but creates a private var."
                                      (1440 (aastore))
                                      (1441 (dup))
                                      (1442 (bipush 8))
                                      (1444 (aconst_null))
                                      (1445 (ldc_w 10))   ;;STRING:: "line"
                                      (1448 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1451 (aastore))
                                      (1452 (dup))
                                      (1453 (bipush 9))
                                      (1455 (sipush 623))
                                      (1458 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1461 (aastore))
                                      (1462 (dup))
                                      (1463 (bipush 10))
                                      (1465 (aconst_null))
                                      (1466 (ldc_w 8))    ;;STRING:: "file"
                                      (1469 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1472 (aastore))
                                      (1473 (dup))
                                      (1474 (bipush 11))
                                      (1476 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (1479 (aastore))
                                      (1480 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1483 (checkcast (class "clojure.lang.AFn")))
                                      (1486 (putstatic (fieldCP "const__122" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (1489 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (1492 (ldc_w 94))   ;;STRING:: "set-test"
                                      (1495 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (1498 (checkcast (class "clojure.lang.Var")))
                                      (1501 (putstatic (fieldCP "const__123" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (1504 (sipush 632))
                                      (1507 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1510 (putstatic (fieldCP "const__124" "clojure.test__init" (class "java.lang.Object"))))
                                      (1513 (iconst_1))
                                      (1514 (anewarray (class "java.lang.Object")))
                                      (1517 (dup))
                                      (1518 (iconst_0))
                                      (1519 (iconst_3))
                                      (1520 (anewarray (class "java.lang.Object")))
                                      (1523 (dup))
                                      (1524 (iconst_0))
                                      (1525 (aconst_null))
                                      (1526 (ldc_w 43))   ;;STRING:: "name"
                                      (1529 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1532 (aastore))
                                      (1533 (dup))
                                      (1534 (iconst_1))
                                      (1535 (aconst_null))
                                      (1536 (ldc_w 29))   ;;STRING:: "&"
                                      (1539 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1542 (aastore))
                                      (1543 (dup))
                                      (1544 (iconst_2))
                                      (1545 (aconst_null))
                                      (1546 (ldc_w 30))   ;;STRING:: "body"
                                      (1549 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1552 (aastore))
                                      (1553 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1556 (aastore))
                                      (1557 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1560 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1563 (putstatic (fieldCP "const__125" "clojure.test__init" (class "java.lang.Object"))))
                                      (1566 (bipush 12))
                                      (1568 (anewarray (class "java.lang.Object")))
                                      (1571 (dup))
                                      (1572 (iconst_0))
                                      (1573 (aconst_null))
                                      (1574 (ldc_w 28))   ;;STRING:: "arglists"
                                      (1577 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1580 (aastore))
                                      (1581 (dup))
                                      (1582 (iconst_1))
                                      (1583 (iconst_1))
                                      (1584 (anewarray (class "java.lang.Object")))
                                      (1587 (dup))
                                      (1588 (iconst_0))
                                      (1589 (iconst_3))
                                      (1590 (anewarray (class "java.lang.Object")))
                                      (1593 (dup))
                                      (1594 (iconst_0))
                                      (1595 (aconst_null))
                                      (1596 (ldc_w 43))   ;;STRING:: "name"
                                      (1599 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1602 (aastore))
                                      (1603 (dup))
                                      (1604 (iconst_1))
                                      (1605 (aconst_null))
                                      (1606 (ldc_w 29))   ;;STRING:: "&"
                                      (1609 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1612 (aastore))
                                      (1613 (dup))
                                      (1614 (iconst_2))
                                      (1615 (aconst_null))
                                      (1616 (ldc_w 30))   ;;STRING:: "body"
                                      (1619 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1622 (aastore))
                                      (1623 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1626 (aastore))
                                      (1627 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1630 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1633 (aastore))
                                      (1634 (dup))
                                      (1635 (iconst_2))
                                      (1636 (aconst_null))
                                      (1637 (ldc_w 9))    ;;STRING:: "column"
                                      (1640 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1643 (aastore))
                                      (1644 (dup))
                                      (1645 (iconst_3))
                                      (1646 (iconst_1))
                                      (1647 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1650 (aastore))
                                      (1651 (dup))
                                      (1652 (iconst_4))
                                      (1653 (aconst_null))
                                      (1654 (ldc_w 12))   ;;STRING:: "added"
                                      (1657 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1660 (aastore))
                                      (1661 (dup))
                                      (1662 (iconst_5))
                                      (1663 (ldc_w 13))   ;;STRING:: "1.1"
                                      (1666 (aastore))
                                      (1667 (dup))
                                      (1668 (bipush 6))
                                      (1670 (aconst_null))
                                      (1671 (ldc_w 3))    ;;STRING:: "doc"
                                      (1674 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1677 (aastore))
                                      (1678 (dup))
                                      (1679 (bipush 7))
                                      (1681 (ldc_w 95))   ;;STRING:: "Experimental.\n  Sets :test metadata of the named var to a fn with the given body.\n  The var must already exist.  Does not modify the value of the var.\n\n  When *load-tests* is false, set-test is ignored."
                                      (1684 (aastore))
                                      (1685 (dup))
                                      (1686 (bipush 8))
                                      (1688 (aconst_null))
                                      (1689 (ldc_w 10))   ;;STRING:: "line"
                                      (1692 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1695 (aastore))
                                      (1696 (dup))
                                      (1697 (bipush 9))
                                      (1699 (sipush 632))
                                      (1702 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1705 (aastore))
                                      (1706 (dup))
                                      (1707 (bipush 10))
                                      (1709 (aconst_null))
                                      (1710 (ldc_w 8))    ;;STRING:: "file"
                                      (1713 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1716 (aastore))
                                      (1717 (dup))
                                      (1718 (bipush 11))
                                      (1720 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (1723 (aastore))
                                      (1724 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1727 (checkcast (class "clojure.lang.AFn")))
                                      (1730 (putstatic (fieldCP "const__126" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (1733 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (1736 (ldc_w 96))   ;;STRING:: "add-ns-meta"
                                      (1739 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (1742 (checkcast (class "clojure.lang.Var")))
                                      (1745 (putstatic (fieldCP "const__127" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (1748 (sipush 647))
                                      (1751 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1754 (putstatic (fieldCP "const__128" "clojure.test__init" (class "java.lang.Object"))))
                                      (1757 (iconst_1))
                                      (1758 (anewarray (class "java.lang.Object")))
                                      (1761 (dup))
                                      (1762 (iconst_0))
                                      (1763 (iconst_2))
                                      (1764 (anewarray (class "java.lang.Object")))
                                      (1767 (dup))
                                      (1768 (iconst_0))
                                      (1769 (aconst_null))
                                      (1770 (ldc_w 97))   ;;STRING:: "key"
                                      (1773 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1776 (aastore))
                                      (1777 (dup))
                                      (1778 (iconst_1))
                                      (1779 (aconst_null))
                                      (1780 (ldc_w 98))   ;;STRING:: "coll"
                                      (1783 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1786 (aastore))
                                      (1787 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1790 (aastore))
                                      (1791 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1794 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1797 (putstatic (fieldCP "const__129" "clojure.test__init" (class "java.lang.Object"))))
                                      (1800 (bipush 14))
                                      (1802 (anewarray (class "java.lang.Object")))
                                      (1805 (dup))
                                      (1806 (iconst_0))
                                      (1807 (aconst_null))
                                      (1808 (ldc_w 28))   ;;STRING:: "arglists"
                                      (1811 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1814 (aastore))
                                      (1815 (dup))
                                      (1816 (iconst_1))
                                      (1817 (iconst_1))
                                      (1818 (anewarray (class "java.lang.Object")))
                                      (1821 (dup))
                                      (1822 (iconst_0))
                                      (1823 (iconst_2))
                                      (1824 (anewarray (class "java.lang.Object")))
                                      (1827 (dup))
                                      (1828 (iconst_0))
                                      (1829 (aconst_null))
                                      (1830 (ldc_w 97))   ;;STRING:: "key"
                                      (1833 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1836 (aastore))
                                      (1837 (dup))
                                      (1838 (iconst_1))
                                      (1839 (aconst_null))
                                      (1840 (ldc_w 98))   ;;STRING:: "coll"
                                      (1843 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (1846 (aastore))
                                      (1847 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (1850 (aastore))
                                      (1851 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (1854 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (1857 (aastore))
                                      (1858 (dup))
                                      (1859 (iconst_2))
                                      (1860 (aconst_null))
                                      (1861 (ldc_w 9))    ;;STRING:: "column"
                                      (1864 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1867 (aastore))
                                      (1868 (dup))
                                      (1869 (iconst_3))
                                      (1870 (iconst_1))
                                      (1871 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1874 (aastore))
                                      (1875 (dup))
                                      (1876 (iconst_4))
                                      (1877 (aconst_null))
                                      (1878 (ldc_w 12))   ;;STRING:: "added"
                                      (1881 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1884 (aastore))
                                      (1885 (dup))
                                      (1886 (iconst_5))
                                      (1887 (ldc_w 13))   ;;STRING:: "1.1"
                                      (1890 (aastore))
                                      (1891 (dup))
                                      (1892 (bipush 6))
                                      (1894 (aconst_null))
                                      (1895 (ldc_w 48))   ;;STRING:: "private"
                                      (1898 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1901 (aastore))
                                      (1902 (dup))
                                      (1903 (bipush 7))
                                      (1905 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (1908 (aastore))
                                      (1909 (dup))
                                      (1910 (bipush 8))
                                      (1912 (aconst_null))
                                      (1913 (ldc_w 3))    ;;STRING:: "doc"
                                      (1916 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1919 (aastore))
                                      (1920 (dup))
                                      (1921 (bipush 9))
                                      (1923 (ldc_w 99))   ;;STRING:: "Adds elements in coll to the current namespace metadata as the\n  value of key."
                                      (1926 (aastore))
                                      (1927 (dup))
                                      (1928 (bipush 10))
                                      (1930 (aconst_null))
                                      (1931 (ldc_w 10))   ;;STRING:: "line"
                                      (1934 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1937 (aastore))
                                      (1938 (dup))
                                      (1939 (bipush 11))
                                      (1941 (sipush 647))
                                      (1944 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (1947 (aastore))
                                      (1948 (dup))
                                      (1949 (bipush 12))
                                      (1951 (aconst_null))
                                      (1952 (ldc_w 8))    ;;STRING:: "file"
                                      (1955 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1958 (aastore))
                                      (1959 (dup))
                                      (1960 (bipush 13))
                                      (1962 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (1965 (aastore))
                                      (1966 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (1969 (checkcast (class "clojure.lang.AFn")))
                                      (1972 (putstatic (fieldCP "const__130" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (1975 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (1978 (ldc_w 100))  ;;STRING:: "use-fixtures"
                                      (1981 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (1984 (checkcast (class "clojure.lang.Var")))
                                      (1987 (putstatic (fieldCP "const__131" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (1990 (aconst_null))
                                      (1991 (ldc_w 101))  ;;STRING:: "each"
                                      (1994 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (1997 (checkcast (class "clojure.lang.Keyword")))
                                      (2000 (putstatic (fieldCP "const__132" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (2003 (aconst_null))
                                      (2004 (ldc_w 102))  ;;STRING:: "once"
                                      (2007 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2010 (checkcast (class "clojure.lang.Keyword")))
                                      (2013 (putstatic (fieldCP "const__133" "clojure.test__init" (class "clojure.lang.Keyword"))))
                                      (2016 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (2019 (ldc_w 103))  ;;STRING:: "default-fixture"
                                      (2022 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (2025 (checkcast (class "clojure.lang.Var")))
                                      (2028 (putstatic (fieldCP "const__134" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (2031 (sipush 667))
                                      (2034 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2037 (putstatic (fieldCP "const__135" "clojure.test__init" (class "java.lang.Object"))))
                                      (2040 (iconst_1))
                                      (2041 (anewarray (class "java.lang.Object")))
                                      (2044 (dup))
                                      (2045 (iconst_0))
                                      (2046 (iconst_1))
                                      (2047 (anewarray (class "java.lang.Object")))
                                      (2050 (dup))
                                      (2051 (iconst_0))
                                      (2052 (aconst_null))
                                      (2053 (ldc_w 104))  ;;STRING:: "f"
                                      (2056 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2059 (aastore))
                                      (2060 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2063 (aastore))
                                      (2064 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2067 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2070 (putstatic (fieldCP "const__136" "clojure.test__init" (class "java.lang.Object"))))
                                      (2073 (bipush 14))
                                      (2075 (anewarray (class "java.lang.Object")))
                                      (2078 (dup))
                                      (2079 (iconst_0))
                                      (2080 (aconst_null))
                                      (2081 (ldc_w 28))   ;;STRING:: "arglists"
                                      (2084 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2087 (aastore))
                                      (2088 (dup))
                                      (2089 (iconst_1))
                                      (2090 (iconst_1))
                                      (2091 (anewarray (class "java.lang.Object")))
                                      (2094 (dup))
                                      (2095 (iconst_0))
                                      (2096 (iconst_1))
                                      (2097 (anewarray (class "java.lang.Object")))
                                      (2100 (dup))
                                      (2101 (iconst_0))
                                      (2102 (aconst_null))
                                      (2103 (ldc_w 104))  ;;STRING:: "f"
                                      (2106 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2109 (aastore))
                                      (2110 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2113 (aastore))
                                      (2114 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2117 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2120 (aastore))
                                      (2121 (dup))
                                      (2122 (iconst_2))
                                      (2123 (aconst_null))
                                      (2124 (ldc_w 9))    ;;STRING:: "column"
                                      (2127 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2130 (aastore))
                                      (2131 (dup))
                                      (2132 (iconst_3))
                                      (2133 (iconst_1))
                                      (2134 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2137 (aastore))
                                      (2138 (dup))
                                      (2139 (iconst_4))
                                      (2140 (aconst_null))
                                      (2141 (ldc_w 12))   ;;STRING:: "added"
                                      (2144 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2147 (aastore))
                                      (2148 (dup))
                                      (2149 (iconst_5))
                                      (2150 (ldc_w 13))   ;;STRING:: "1.1"
                                      (2153 (aastore))
                                      (2154 (dup))
                                      (2155 (bipush 6))
                                      (2157 (aconst_null))
                                      (2158 (ldc_w 48))   ;;STRING:: "private"
                                      (2161 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2164 (aastore))
                                      (2165 (dup))
                                      (2166 (bipush 7))
                                      (2168 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (2171 (aastore))
                                      (2172 (dup))
                                      (2173 (bipush 8))
                                      (2175 (aconst_null))
                                      (2176 (ldc_w 3))    ;;STRING:: "doc"
                                      (2179 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2182 (aastore))
                                      (2183 (dup))
                                      (2184 (bipush 9))
                                      (2186 (ldc_w 105))  ;;STRING:: "The default, empty, fixture function.  Just calls its argument."
                                      (2189 (aastore))
                                      (2190 (dup))
                                      (2191 (bipush 10))
                                      (2193 (aconst_null))
                                      (2194 (ldc_w 10))   ;;STRING:: "line"
                                      (2197 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2200 (aastore))
                                      (2201 (dup))
                                      (2202 (bipush 11))
                                      (2204 (sipush 667))
                                      (2207 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2210 (aastore))
                                      (2211 (dup))
                                      (2212 (bipush 12))
                                      (2214 (aconst_null))
                                      (2215 (ldc_w 8))    ;;STRING:: "file"
                                      (2218 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2221 (aastore))
                                      (2222 (dup))
                                      (2223 (bipush 13))
                                      (2225 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (2228 (aastore))
                                      (2229 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (2232 (checkcast (class "clojure.lang.AFn")))
                                      (2235 (putstatic (fieldCP "const__137" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (2238 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (2241 (ldc_w 106))  ;;STRING:: "compose-fixtures"
                                      (2244 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (2247 (checkcast (class "clojure.lang.Var")))
                                      (2250 (putstatic (fieldCP "const__138" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (2253 (sipush 673))
                                      (2256 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2259 (putstatic (fieldCP "const__139" "clojure.test__init" (class "java.lang.Object"))))
                                      (2262 (iconst_1))
                                      (2263 (anewarray (class "java.lang.Object")))
                                      (2266 (dup))
                                      (2267 (iconst_0))
                                      (2268 (iconst_2))
                                      (2269 (anewarray (class "java.lang.Object")))
                                      (2272 (dup))
                                      (2273 (iconst_0))
                                      (2274 (aconst_null))
                                      (2275 (ldc_w 107))  ;;STRING:: "f1"
                                      (2278 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2281 (aastore))
                                      (2282 (dup))
                                      (2283 (iconst_1))
                                      (2284 (aconst_null))
                                      (2285 (ldc_w 108))  ;;STRING:: "f2"
                                      (2288 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2291 (aastore))
                                      (2292 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2295 (aastore))
                                      (2296 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2299 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2302 (putstatic (fieldCP "const__140" "clojure.test__init" (class "java.lang.Object"))))
                                      (2305 (bipush 12))
                                      (2307 (anewarray (class "java.lang.Object")))
                                      (2310 (dup))
                                      (2311 (iconst_0))
                                      (2312 (aconst_null))
                                      (2313 (ldc_w 28))   ;;STRING:: "arglists"
                                      (2316 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2319 (aastore))
                                      (2320 (dup))
                                      (2321 (iconst_1))
                                      (2322 (iconst_1))
                                      (2323 (anewarray (class "java.lang.Object")))
                                      (2326 (dup))
                                      (2327 (iconst_0))
                                      (2328 (iconst_2))
                                      (2329 (anewarray (class "java.lang.Object")))
                                      (2332 (dup))
                                      (2333 (iconst_0))
                                      (2334 (aconst_null))
                                      (2335 (ldc_w 107))  ;;STRING:: "f1"
                                      (2338 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2341 (aastore))
                                      (2342 (dup))
                                      (2343 (iconst_1))
                                      (2344 (aconst_null))
                                      (2345 (ldc_w 108))  ;;STRING:: "f2"
                                      (2348 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2351 (aastore))
                                      (2352 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2355 (aastore))
                                      (2356 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2359 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2362 (aastore))
                                      (2363 (dup))
                                      (2364 (iconst_2))
                                      (2365 (aconst_null))
                                      (2366 (ldc_w 9))    ;;STRING:: "column"
                                      (2369 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2372 (aastore))
                                      (2373 (dup))
                                      (2374 (iconst_3))
                                      (2375 (iconst_1))
                                      (2376 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2379 (aastore))
                                      (2380 (dup))
                                      (2381 (iconst_4))
                                      (2382 (aconst_null))
                                      (2383 (ldc_w 12))   ;;STRING:: "added"
                                      (2386 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2389 (aastore))
                                      (2390 (dup))
                                      (2391 (iconst_5))
                                      (2392 (ldc_w 13))   ;;STRING:: "1.1"
                                      (2395 (aastore))
                                      (2396 (dup))
                                      (2397 (bipush 6))
                                      (2399 (aconst_null))
                                      (2400 (ldc_w 3))    ;;STRING:: "doc"
                                      (2403 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2406 (aastore))
                                      (2407 (dup))
                                      (2408 (bipush 7))
                                      (2410 (ldc_w 109))  ;;STRING:: "Composes two fixture functions, creating a new fixture function\n  that combines their behavior."
                                      (2413 (aastore))
                                      (2414 (dup))
                                      (2415 (bipush 8))
                                      (2417 (aconst_null))
                                      (2418 (ldc_w 10))   ;;STRING:: "line"
                                      (2421 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2424 (aastore))
                                      (2425 (dup))
                                      (2426 (bipush 9))
                                      (2428 (sipush 673))
                                      (2431 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2434 (aastore))
                                      (2435 (dup))
                                      (2436 (bipush 10))
                                      (2438 (aconst_null))
                                      (2439 (ldc_w 8))    ;;STRING:: "file"
                                      (2442 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2445 (aastore))
                                      (2446 (dup))
                                      (2447 (bipush 11))
                                      (2449 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (2452 (aastore))
                                      (2453 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (2456 (checkcast (class "clojure.lang.AFn")))
                                      (2459 (putstatic (fieldCP "const__141" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (2462 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (2465 (ldc_w 110))  ;;STRING:: "join-fixtures"
                                      (2468 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (2471 (checkcast (class "clojure.lang.Var")))
                                      (2474 (putstatic (fieldCP "const__142" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (2477 (sipush 680))
                                      (2480 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2483 (putstatic (fieldCP "const__143" "clojure.test__init" (class "java.lang.Object"))))
                                      (2486 (iconst_1))
                                      (2487 (anewarray (class "java.lang.Object")))
                                      (2490 (dup))
                                      (2491 (iconst_0))
                                      (2492 (iconst_1))
                                      (2493 (anewarray (class "java.lang.Object")))
                                      (2496 (dup))
                                      (2497 (iconst_0))
                                      (2498 (aconst_null))
                                      (2499 (ldc_w 111))  ;;STRING:: "fixtures"
                                      (2502 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2505 (aastore))
                                      (2506 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2509 (aastore))
                                      (2510 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2513 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2516 (putstatic (fieldCP "const__144" "clojure.test__init" (class "java.lang.Object"))))
                                      (2519 (bipush 12))
                                      (2521 (anewarray (class "java.lang.Object")))
                                      (2524 (dup))
                                      (2525 (iconst_0))
                                      (2526 (aconst_null))
                                      (2527 (ldc_w 28))   ;;STRING:: "arglists"
                                      (2530 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2533 (aastore))
                                      (2534 (dup))
                                      (2535 (iconst_1))
                                      (2536 (iconst_1))
                                      (2537 (anewarray (class "java.lang.Object")))
                                      (2540 (dup))
                                      (2541 (iconst_0))
                                      (2542 (iconst_1))
                                      (2543 (anewarray (class "java.lang.Object")))
                                      (2546 (dup))
                                      (2547 (iconst_0))
                                      (2548 (aconst_null))
                                      (2549 (ldc_w 111))  ;;STRING:: "fixtures"
                                      (2552 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2555 (aastore))
                                      (2556 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2559 (aastore))
                                      (2560 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2563 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2566 (aastore))
                                      (2567 (dup))
                                      (2568 (iconst_2))
                                      (2569 (aconst_null))
                                      (2570 (ldc_w 9))    ;;STRING:: "column"
                                      (2573 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2576 (aastore))
                                      (2577 (dup))
                                      (2578 (iconst_3))
                                      (2579 (iconst_1))
                                      (2580 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2583 (aastore))
                                      (2584 (dup))
                                      (2585 (iconst_4))
                                      (2586 (aconst_null))
                                      (2587 (ldc_w 12))   ;;STRING:: "added"
                                      (2590 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2593 (aastore))
                                      (2594 (dup))
                                      (2595 (iconst_5))
                                      (2596 (ldc_w 13))   ;;STRING:: "1.1"
                                      (2599 (aastore))
                                      (2600 (dup))
                                      (2601 (bipush 6))
                                      (2603 (aconst_null))
                                      (2604 (ldc_w 3))    ;;STRING:: "doc"
                                      (2607 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2610 (aastore))
                                      (2611 (dup))
                                      (2612 (bipush 7))
                                      (2614 (ldc_w 112))  ;;STRING:: "Composes a collection of fixtures, in order.  Always returns a valid\n  fixture function, even if the collection is empty."
                                      (2617 (aastore))
                                      (2618 (dup))
                                      (2619 (bipush 8))
                                      (2621 (aconst_null))
                                      (2622 (ldc_w 10))   ;;STRING:: "line"
                                      (2625 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2628 (aastore))
                                      (2629 (dup))
                                      (2630 (bipush 9))
                                      (2632 (sipush 680))
                                      (2635 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2638 (aastore))
                                      (2639 (dup))
                                      (2640 (bipush 10))
                                      (2642 (aconst_null))
                                      (2643 (ldc_w 8))    ;;STRING:: "file"
                                      (2646 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2649 (aastore))
                                      (2650 (dup))
                                      (2651 (bipush 11))
                                      (2653 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (2656 (aastore))
                                      (2657 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (2660 (checkcast (class "clojure.lang.AFn")))
                                      (2663 (putstatic (fieldCP "const__145" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (2666 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (2669 (ldc_w 113))  ;;STRING:: "test-var"
                                      (2672 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (2675 (checkcast (class "clojure.lang.Var")))
                                      (2678 (putstatic (fieldCP "const__146" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (2681 (sipush 692))
                                      (2684 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2687 (putstatic (fieldCP "const__147" "clojure.test__init" (class "java.lang.Object"))))
                                      (2690 (iconst_1))
                                      (2691 (anewarray (class "java.lang.Object")))
                                      (2694 (dup))
                                      (2695 (iconst_0))
                                      (2696 (iconst_1))
                                      (2697 (anewarray (class "java.lang.Object")))
                                      (2700 (dup))
                                      (2701 (iconst_0))
                                      (2702 (aconst_null))
                                      (2703 (ldc_w 59))   ;;STRING:: "v"
                                      (2706 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2709 (aastore))
                                      (2710 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2713 (aastore))
                                      (2714 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2717 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2720 (putstatic (fieldCP "const__148" "clojure.test__init" (class "java.lang.Object"))))
                                      (2723 (bipush 14))
                                      (2725 (anewarray (class "java.lang.Object")))
                                      (2728 (dup))
                                      (2729 (iconst_0))
                                      (2730 (aconst_null))
                                      (2731 (ldc_w 28))   ;;STRING:: "arglists"
                                      (2734 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2737 (aastore))
                                      (2738 (dup))
                                      (2739 (iconst_1))
                                      (2740 (iconst_1))
                                      (2741 (anewarray (class "java.lang.Object")))
                                      (2744 (dup))
                                      (2745 (iconst_0))
                                      (2746 (iconst_1))
                                      (2747 (anewarray (class "java.lang.Object")))
                                      (2750 (dup))
                                      (2751 (iconst_0))
                                      (2752 (aconst_null))
                                      (2753 (ldc_w 59))   ;;STRING:: "v"
                                      (2756 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2759 (aastore))
                                      (2760 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2763 (aastore))
                                      (2764 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2767 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2770 (aastore))
                                      (2771 (dup))
                                      (2772 (iconst_2))
                                      (2773 (aconst_null))
                                      (2774 (ldc_w 11))   ;;STRING:: "dynamic"
                                      (2777 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2780 (aastore))
                                      (2781 (dup))
                                      (2782 (iconst_3))
                                      (2783 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (2786 (aastore))
                                      (2787 (dup))
                                      (2788 (iconst_4))
                                      (2789 (aconst_null))
                                      (2790 (ldc_w 9))    ;;STRING:: "column"
                                      (2793 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2796 (aastore))
                                      (2797 (dup))
                                      (2798 (iconst_5))
                                      (2799 (iconst_1))
                                      (2800 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2803 (aastore))
                                      (2804 (dup))
                                      (2805 (bipush 6))
                                      (2807 (aconst_null))
                                      (2808 (ldc_w 12))   ;;STRING:: "added"
                                      (2811 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2814 (aastore))
                                      (2815 (dup))
                                      (2816 (bipush 7))
                                      (2818 (ldc_w 13))   ;;STRING:: "1.1"
                                      (2821 (aastore))
                                      (2822 (dup))
                                      (2823 (bipush 8))
                                      (2825 (aconst_null))
                                      (2826 (ldc_w 3))    ;;STRING:: "doc"
                                      (2829 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2832 (aastore))
                                      (2833 (dup))
                                      (2834 (bipush 9))
                                      (2836 (ldc_w 114))  ;;STRING:: "If v has a function in its :test metadata, calls that function,\n  with *testing-vars* bound to (conj *testing-vars* v)."
                                      (2839 (aastore))
                                      (2840 (dup))
                                      (2841 (bipush 10))
                                      (2843 (aconst_null))
                                      (2844 (ldc_w 10))   ;;STRING:: "line"
                                      (2847 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2850 (aastore))
                                      (2851 (dup))
                                      (2852 (bipush 11))
                                      (2854 (sipush 692))
                                      (2857 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2860 (aastore))
                                      (2861 (dup))
                                      (2862 (bipush 12))
                                      (2864 (aconst_null))
                                      (2865 (ldc_w 8))    ;;STRING:: "file"
                                      (2868 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2871 (aastore))
                                      (2872 (dup))
                                      (2873 (bipush 13))
                                      (2875 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (2878 (aastore))
                                      (2879 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (2882 (checkcast (class "clojure.lang.AFn")))
                                      (2885 (putstatic (fieldCP "const__149" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (2888 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (2891 (ldc_w 115))  ;;STRING:: "test-all-vars"
                                      (2894 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (2897 (checkcast (class "clojure.lang.Var")))
                                      (2900 (putstatic (fieldCP "const__150" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (2903 (sipush 707))
                                      (2906 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (2909 (putstatic (fieldCP "const__151" "clojure.test__init" (class "java.lang.Object"))))
                                      (2912 (iconst_1))
                                      (2913 (anewarray (class "java.lang.Object")))
                                      (2916 (dup))
                                      (2917 (iconst_0))
                                      (2918 (iconst_1))
                                      (2919 (anewarray (class "java.lang.Object")))
                                      (2922 (dup))
                                      (2923 (iconst_0))
                                      (2924 (aconst_null))
                                      (2925 (ldc_w 116))  ;;STRING:: "ns"
                                      (2928 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2931 (aastore))
                                      (2932 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2935 (aastore))
                                      (2936 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2939 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2942 (putstatic (fieldCP "const__152" "clojure.test__init" (class "java.lang.Object"))))
                                      (2945 (bipush 12))
                                      (2947 (anewarray (class "java.lang.Object")))
                                      (2950 (dup))
                                      (2951 (iconst_0))
                                      (2952 (aconst_null))
                                      (2953 (ldc_w 28))   ;;STRING:: "arglists"
                                      (2956 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (2959 (aastore))
                                      (2960 (dup))
                                      (2961 (iconst_1))
                                      (2962 (iconst_1))
                                      (2963 (anewarray (class "java.lang.Object")))
                                      (2966 (dup))
                                      (2967 (iconst_0))
                                      (2968 (iconst_1))
                                      (2969 (anewarray (class "java.lang.Object")))
                                      (2972 (dup))
                                      (2973 (iconst_0))
                                      (2974 (aconst_null))
                                      (2975 (ldc_w 116))  ;;STRING:: "ns"
                                      (2978 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (2981 (aastore))
                                      (2982 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (2985 (aastore))
                                      (2986 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (2989 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (2992 (aastore))
                                      (2993 (dup))
                                      (2994 (iconst_2))
                                      (2995 (aconst_null))
                                      (2996 (ldc_w 9))    ;;STRING:: "column"
                                      (2999 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3002 (aastore))
                                      (3003 (dup))
                                      (3004 (iconst_3))
                                      (3005 (iconst_1))
                                      (3006 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3009 (aastore))
                                      (3010 (dup))
                                      (3011 (iconst_4))
                                      (3012 (aconst_null))
                                      (3013 (ldc_w 12))   ;;STRING:: "added"
                                      (3016 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3019 (aastore))
                                      (3020 (dup))
                                      (3021 (iconst_5))
                                      (3022 (ldc_w 13))   ;;STRING:: "1.1"
                                      (3025 (aastore))
                                      (3026 (dup))
                                      (3027 (bipush 6))
                                      (3029 (aconst_null))
                                      (3030 (ldc_w 3))    ;;STRING:: "doc"
                                      (3033 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3036 (aastore))
                                      (3037 (dup))
                                      (3038 (bipush 7))
                                      (3040 (ldc_w 117))  ;;STRING:: "Calls test-var on every var interned in the namespace, with fixtures."
                                      (3043 (aastore))
                                      (3044 (dup))
                                      (3045 (bipush 8))
                                      (3047 (aconst_null))
                                      (3048 (ldc_w 10))   ;;STRING:: "line"
                                      (3051 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3054 (aastore))
                                      (3055 (dup))
                                      (3056 (bipush 9))
                                      (3058 (sipush 707))
                                      (3061 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3064 (aastore))
                                      (3065 (dup))
                                      (3066 (bipush 10))
                                      (3068 (aconst_null))
                                      (3069 (ldc_w 8))    ;;STRING:: "file"
                                      (3072 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3075 (aastore))
                                      (3076 (dup))
                                      (3077 (bipush 11))
                                      (3079 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (3082 (aastore))
                                      (3083 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (3086 (checkcast (class "clojure.lang.AFn")))
                                      (3089 (putstatic (fieldCP "const__153" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (3092 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (3095 (ldc_w 118))  ;;STRING:: "test-ns"
                                      (3098 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (3101 (checkcast (class "clojure.lang.Var")))
                                      (3104 (putstatic (fieldCP "const__154" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (3107 (sipush 719))
                                      (3110 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3113 (putstatic (fieldCP "const__155" "clojure.test__init" (class "java.lang.Object"))))
                                      (3116 (iconst_1))
                                      (3117 (anewarray (class "java.lang.Object")))
                                      (3120 (dup))
                                      (3121 (iconst_0))
                                      (3122 (iconst_1))
                                      (3123 (anewarray (class "java.lang.Object")))
                                      (3126 (dup))
                                      (3127 (iconst_0))
                                      (3128 (aconst_null))
                                      (3129 (ldc_w 116))  ;;STRING:: "ns"
                                      (3132 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3135 (aastore))
                                      (3136 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3139 (aastore))
                                      (3140 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (3143 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (3146 (putstatic (fieldCP "const__156" "clojure.test__init" (class "java.lang.Object"))))
                                      (3149 (bipush 12))
                                      (3151 (anewarray (class "java.lang.Object")))
                                      (3154 (dup))
                                      (3155 (iconst_0))
                                      (3156 (aconst_null))
                                      (3157 (ldc_w 28))   ;;STRING:: "arglists"
                                      (3160 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3163 (aastore))
                                      (3164 (dup))
                                      (3165 (iconst_1))
                                      (3166 (iconst_1))
                                      (3167 (anewarray (class "java.lang.Object")))
                                      (3170 (dup))
                                      (3171 (iconst_0))
                                      (3172 (iconst_1))
                                      (3173 (anewarray (class "java.lang.Object")))
                                      (3176 (dup))
                                      (3177 (iconst_0))
                                      (3178 (aconst_null))
                                      (3179 (ldc_w 116))  ;;STRING:: "ns"
                                      (3182 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3185 (aastore))
                                      (3186 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3189 (aastore))
                                      (3190 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (3193 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (3196 (aastore))
                                      (3197 (dup))
                                      (3198 (iconst_2))
                                      (3199 (aconst_null))
                                      (3200 (ldc_w 9))    ;;STRING:: "column"
                                      (3203 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3206 (aastore))
                                      (3207 (dup))
                                      (3208 (iconst_3))
                                      (3209 (iconst_1))
                                      (3210 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3213 (aastore))
                                      (3214 (dup))
                                      (3215 (iconst_4))
                                      (3216 (aconst_null))
                                      (3217 (ldc_w 12))   ;;STRING:: "added"
                                      (3220 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3223 (aastore))
                                      (3224 (dup))
                                      (3225 (iconst_5))
                                      (3226 (ldc_w 13))   ;;STRING:: "1.1"
                                      (3229 (aastore))
                                      (3230 (dup))
                                      (3231 (bipush 6))
                                      (3233 (aconst_null))
                                      (3234 (ldc_w 3))    ;;STRING:: "doc"
                                      (3237 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3240 (aastore))
                                      (3241 (dup))
                                      (3242 (bipush 7))
                                      (3244 (ldc_w 119))  ;;STRING:: "If the namespace defines a function named test-ns-hook, calls that.\n  Otherwise, calls test-all-vars on the namespace.  \nns\n is a\n  namespace object or a symbol.\n\n  Internally binds *report-counters* to a ref initialized to\n  *inital-report-counters*.  Returns the final, dereferenced state of\n  *report-counters*."
                                      (3247 (aastore))
                                      (3248 (dup))
                                      (3249 (bipush 8))
                                      (3251 (aconst_null))
                                      (3252 (ldc_w 10))   ;;STRING:: "line"
                                      (3255 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3258 (aastore))
                                      (3259 (dup))
                                      (3260 (bipush 9))
                                      (3262 (sipush 719))
                                      (3265 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3268 (aastore))
                                      (3269 (dup))
                                      (3270 (bipush 10))
                                      (3272 (aconst_null))
                                      (3273 (ldc_w 8))    ;;STRING:: "file"
                                      (3276 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3279 (aastore))
                                      (3280 (dup))
                                      (3281 (bipush 11))
                                      (3283 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (3286 (aastore))
                                      (3287 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (3290 (checkcast (class "clojure.lang.AFn")))
                                      (3293 (putstatic (fieldCP "const__157" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (3296 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (3299 (ldc_w 120))  ;;STRING:: "run-tests"
                                      (3302 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (3305 (checkcast (class "clojure.lang.Var")))
                                      (3308 (putstatic (fieldCP "const__158" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (3311 (sipush 744))
                                      (3314 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3317 (putstatic (fieldCP "const__159" "clojure.test__init" (class "java.lang.Object"))))
                                      (3320 (iconst_2))
                                      (3321 (anewarray (class "java.lang.Object")))
                                      (3324 (dup))
                                      (3325 (iconst_0))
                                      (3326 (iconst_0))
                                      (3327 (anewarray (class "java.lang.Object")))
                                      (3330 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3333 (aastore))
                                      (3334 (dup))
                                      (3335 (iconst_1))
                                      (3336 (iconst_2))
                                      (3337 (anewarray (class "java.lang.Object")))
                                      (3340 (dup))
                                      (3341 (iconst_0))
                                      (3342 (aconst_null))
                                      (3343 (ldc_w 29))   ;;STRING:: "&"
                                      (3346 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3349 (aastore))
                                      (3350 (dup))
                                      (3351 (iconst_1))
                                      (3352 (aconst_null))
                                      (3353 (ldc_w 121))  ;;STRING:: "namespaces"
                                      (3356 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3359 (aastore))
                                      (3360 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3363 (aastore))
                                      (3364 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (3367 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (3370 (putstatic (fieldCP "const__160" "clojure.test__init" (class "java.lang.Object"))))
                                      (3373 (bipush 12))
                                      (3375 (anewarray (class "java.lang.Object")))
                                      (3378 (dup))
                                      (3379 (iconst_0))
                                      (3380 (aconst_null))
                                      (3381 (ldc_w 28))   ;;STRING:: "arglists"
                                      (3384 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3387 (aastore))
                                      (3388 (dup))
                                      (3389 (iconst_1))
                                      (3390 (iconst_2))
                                      (3391 (anewarray (class "java.lang.Object")))
                                      (3394 (dup))
                                      (3395 (iconst_0))
                                      (3396 (iconst_0))
                                      (3397 (anewarray (class "java.lang.Object")))
                                      (3400 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3403 (aastore))
                                      (3404 (dup))
                                      (3405 (iconst_1))
                                      (3406 (iconst_2))
                                      (3407 (anewarray (class "java.lang.Object")))
                                      (3410 (dup))
                                      (3411 (iconst_0))
                                      (3412 (aconst_null))
                                      (3413 (ldc_w 29))   ;;STRING:: "&"
                                      (3416 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3419 (aastore))
                                      (3420 (dup))
                                      (3421 (iconst_1))
                                      (3422 (aconst_null))
                                      (3423 (ldc_w 121))  ;;STRING:: "namespaces"
                                      (3426 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3429 (aastore))
                                      (3430 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3433 (aastore))
                                      (3434 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (3437 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (3440 (aastore))
                                      (3441 (dup))
                                      (3442 (iconst_2))
                                      (3443 (aconst_null))
                                      (3444 (ldc_w 9))    ;;STRING:: "column"
                                      (3447 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3450 (aastore))
                                      (3451 (dup))
                                      (3452 (iconst_3))
                                      (3453 (iconst_1))
                                      (3454 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3457 (aastore))
                                      (3458 (dup))
                                      (3459 (iconst_4))
                                      (3460 (aconst_null))
                                      (3461 (ldc_w 12))   ;;STRING:: "added"
                                      (3464 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3467 (aastore))
                                      (3468 (dup))
                                      (3469 (iconst_5))
                                      (3470 (ldc_w 13))   ;;STRING:: "1.1"
                                      (3473 (aastore))
                                      (3474 (dup))
                                      (3475 (bipush 6))
                                      (3477 (aconst_null))
                                      (3478 (ldc_w 3))    ;;STRING:: "doc"
                                      (3481 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3484 (aastore))
                                      (3485 (dup))
                                      (3486 (bipush 7))
                                      (3488 (ldc_w 122))  ;;STRING:: "Runs all tests in the given namespaces; prints results.\n  Defaults to current namespace if none given.  Returns a map\n  summarizing test results."
                                      (3491 (aastore))
                                      (3492 (dup))
                                      (3493 (bipush 8))
                                      (3495 (aconst_null))
                                      (3496 (ldc_w 10))   ;;STRING:: "line"
                                      (3499 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3502 (aastore))
                                      (3503 (dup))
                                      (3504 (bipush 9))
                                      (3506 (sipush 744))
                                      (3509 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3512 (aastore))
                                      (3513 (dup))
                                      (3514 (bipush 10))
                                      (3516 (aconst_null))
                                      (3517 (ldc_w 8))    ;;STRING:: "file"
                                      (3520 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3523 (aastore))
                                      (3524 (dup))
                                      (3525 (bipush 11))
                                      (3527 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (3530 (aastore))
                                      (3531 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (3534 (checkcast (class "clojure.lang.AFn")))
                                      (3537 (putstatic (fieldCP "const__161" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (3540 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (3543 (ldc_w 123))  ;;STRING:: "run-all-tests"
                                      (3546 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (3549 (checkcast (class "clojure.lang.Var")))
                                      (3552 (putstatic (fieldCP "const__162" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (3555 (sipush 756))
                                      (3558 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3561 (putstatic (fieldCP "const__163" "clojure.test__init" (class "java.lang.Object"))))
                                      (3564 (iconst_2))
                                      (3565 (anewarray (class "java.lang.Object")))
                                      (3568 (dup))
                                      (3569 (iconst_0))
                                      (3570 (iconst_0))
                                      (3571 (anewarray (class "java.lang.Object")))
                                      (3574 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3577 (aastore))
                                      (3578 (dup))
                                      (3579 (iconst_1))
                                      (3580 (iconst_1))
                                      (3581 (anewarray (class "java.lang.Object")))
                                      (3584 (dup))
                                      (3585 (iconst_0))
                                      (3586 (aconst_null))
                                      (3587 (ldc_w 124))  ;;STRING:: "re"
                                      (3590 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3593 (aastore))
                                      (3594 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3597 (aastore))
                                      (3598 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (3601 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (3604 (putstatic (fieldCP "const__164" "clojure.test__init" (class "java.lang.Object"))))
                                      (3607 (bipush 12))
                                      (3609 (anewarray (class "java.lang.Object")))
                                      (3612 (dup))
                                      (3613 (iconst_0))
                                      (3614 (aconst_null))
                                      (3615 (ldc_w 28))   ;;STRING:: "arglists"
                                      (3618 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3621 (aastore))
                                      (3622 (dup))
                                      (3623 (iconst_1))
                                      (3624 (iconst_2))
                                      (3625 (anewarray (class "java.lang.Object")))
                                      (3628 (dup))
                                      (3629 (iconst_0))
                                      (3630 (iconst_0))
                                      (3631 (anewarray (class "java.lang.Object")))
                                      (3634 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3637 (aastore))
                                      (3638 (dup))
                                      (3639 (iconst_1))
                                      (3640 (iconst_1))
                                      (3641 (anewarray (class "java.lang.Object")))
                                      (3644 (dup))
                                      (3645 (iconst_0))
                                      (3646 (aconst_null))
                                      (3647 (ldc_w 124))  ;;STRING:: "re"
                                      (3650 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3653 (aastore))
                                      (3654 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3657 (aastore))
                                      (3658 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (3661 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (3664 (aastore))
                                      (3665 (dup))
                                      (3666 (iconst_2))
                                      (3667 (aconst_null))
                                      (3668 (ldc_w 9))    ;;STRING:: "column"
                                      (3671 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3674 (aastore))
                                      (3675 (dup))
                                      (3676 (iconst_3))
                                      (3677 (iconst_1))
                                      (3678 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3681 (aastore))
                                      (3682 (dup))
                                      (3683 (iconst_4))
                                      (3684 (aconst_null))
                                      (3685 (ldc_w 12))   ;;STRING:: "added"
                                      (3688 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3691 (aastore))
                                      (3692 (dup))
                                      (3693 (iconst_5))
                                      (3694 (ldc_w 13))   ;;STRING:: "1.1"
                                      (3697 (aastore))
                                      (3698 (dup))
                                      (3699 (bipush 6))
                                      (3701 (aconst_null))
                                      (3702 (ldc_w 3))    ;;STRING:: "doc"
                                      (3705 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3708 (aastore))
                                      (3709 (dup))
                                      (3710 (bipush 7))
                                      (3712 (ldc_w 125))  ;;STRING:: "Runs all tests in all namespaces; prints results.\n  Optional argument is a regular expression; only namespaces with\n  names matching the regular expression (with re-matches) will be\n  tested."
                                      (3715 (aastore))
                                      (3716 (dup))
                                      (3717 (bipush 8))
                                      (3719 (aconst_null))
                                      (3720 (ldc_w 10))   ;;STRING:: "line"
                                      (3723 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3726 (aastore))
                                      (3727 (dup))
                                      (3728 (bipush 9))
                                      (3730 (sipush 756))
                                      (3733 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3736 (aastore))
                                      (3737 (dup))
                                      (3738 (bipush 10))
                                      (3740 (aconst_null))
                                      (3741 (ldc_w 8))    ;;STRING:: "file"
                                      (3744 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3747 (aastore))
                                      (3748 (dup))
                                      (3749 (bipush 11))
                                      (3751 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (3754 (aastore))
                                      (3755 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (3758 (checkcast (class "clojure.lang.AFn")))
                                      (3761 (putstatic (fieldCP "const__165" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (3764 (ldc_w 2))    ;;STRING:: "clojure.test"
                                      (3767 (ldc_w 126))  ;;STRING:: "successful?"
                                      (3770 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (3773 (checkcast (class "clojure.lang.Var")))
                                      (3776 (putstatic (fieldCP "const__166" "clojure.test__init" (class "clojure.lang.Var"))))
                                      (3779 (sipush 765))
                                      (3782 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3785 (putstatic (fieldCP "const__167" "clojure.test__init" (class "java.lang.Object"))))
                                      (3788 (iconst_1))
                                      (3789 (anewarray (class "java.lang.Object")))
                                      (3792 (dup))
                                      (3793 (iconst_0))
                                      (3794 (iconst_1))
                                      (3795 (anewarray (class "java.lang.Object")))
                                      (3798 (dup))
                                      (3799 (iconst_0))
                                      (3800 (aconst_null))
                                      (3801 (ldc_w 53))   ;;STRING:: "summary"
                                      (3804 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3807 (aastore))
                                      (3808 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3811 (aastore))
                                      (3812 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (3815 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (3818 (putstatic (fieldCP "const__168" "clojure.test__init" (class "java.lang.Object"))))
                                      (3821 (bipush 12))
                                      (3823 (anewarray (class "java.lang.Object")))
                                      (3826 (dup))
                                      (3827 (iconst_0))
                                      (3828 (aconst_null))
                                      (3829 (ldc_w 28))   ;;STRING:: "arglists"
                                      (3832 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3835 (aastore))
                                      (3836 (dup))
                                      (3837 (iconst_1))
                                      (3838 (iconst_1))
                                      (3839 (anewarray (class "java.lang.Object")))
                                      (3842 (dup))
                                      (3843 (iconst_0))
                                      (3844 (iconst_1))
                                      (3845 (anewarray (class "java.lang.Object")))
                                      (3848 (dup))
                                      (3849 (iconst_0))
                                      (3850 (aconst_null))
                                      (3851 (ldc_w 53))   ;;STRING:: "summary"
                                      (3854 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (3857 (aastore))
                                      (3858 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (3861 (aastore))
                                      (3862 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (3865 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (3868 (aastore))
                                      (3869 (dup))
                                      (3870 (iconst_2))
                                      (3871 (aconst_null))
                                      (3872 (ldc_w 9))    ;;STRING:: "column"
                                      (3875 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3878 (aastore))
                                      (3879 (dup))
                                      (3880 (iconst_3))
                                      (3881 (iconst_1))
                                      (3882 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3885 (aastore))
                                      (3886 (dup))
                                      (3887 (iconst_4))
                                      (3888 (aconst_null))
                                      (3889 (ldc_w 12))   ;;STRING:: "added"
                                      (3892 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3895 (aastore))
                                      (3896 (dup))
                                      (3897 (iconst_5))
                                      (3898 (ldc_w 13))   ;;STRING:: "1.1"
                                      (3901 (aastore))
                                      (3902 (dup))
                                      (3903 (bipush 6))
                                      (3905 (aconst_null))
                                      (3906 (ldc_w 3))    ;;STRING:: "doc"
                                      (3909 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3912 (aastore))
                                      (3913 (dup))
                                      (3914 (bipush 7))
                                      (3916 (ldc_w 127))  ;;STRING:: "Returns true if the given test summary indicates all tests\n  were successful, false otherwise."
                                      (3919 (aastore))
                                      (3920 (dup))
                                      (3921 (bipush 8))
                                      (3923 (aconst_null))
                                      (3924 (ldc_w 10))   ;;STRING:: "line"
                                      (3927 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3930 (aastore))
                                      (3931 (dup))
                                      (3932 (bipush 9))
                                      (3934 (sipush 765))
                                      (3937 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (3940 (aastore))
                                      (3941 (dup))
                                      (3942 (bipush 10))
                                      (3944 (aconst_null))
                                      (3945 (ldc_w 8))    ;;STRING:: "file"
                                      (3948 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (3951 (aastore))
                                      (3952 (dup))
                                      (3953 (bipush 11))
                                      (3955 (ldc_w 15))   ;;STRING:: "clojure/test.clj"
                                      (3958 (aastore))
                                      (3959 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (3962 (checkcast (class "clojure.lang.AFn")))
                                      (3965 (putstatic (fieldCP "const__169" "clojure.test__init" (class "clojure.lang.AFn"))))
                                      (3968 (return))
                                      (endofcode 3969))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 0) (code_length . 32)
                                   (parsedcode
                                      (0 (invokestatic (methodCP "__init0" "clojure.test__init" () void))) 
                                      (3 (invokestatic (methodCP "__init1" "clojure.test__init" () void))) 
                                      (6 (ldc_w 128)) ;;STRING:: "clojure.test__init"
                                      (9 (invokestatic (methodCP "forName" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.Class")))) 
                                      (12 (invokevirtual (methodCP "getClassLoader" "java.lang.Class" () (class "java.lang.ClassLoader")))) 
                                      (15 (invokestatic (methodCP "pushNSandLoader" "clojure.lang.Compiler" ((class "java.lang.ClassLoader")) void))) 
                                      (18 (invokestatic (methodCP "load" "clojure.test__init" () void))) ;;at TAG_1
                                      (21 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) ;;at TAG_2
                                      (24 (goto 31)) ;;to TAG_0
                                      (27 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) ;;at TAG_3
                                      (30 (athrow)) 
                                      (31 (return)) ;;at TAG_0
                                      (endofcode 32))
                                   (Exceptions 
                                     (handler 18 21  27 (class "java.lang.Throwable")))
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes))))


(defconst *test__init-class-table*
  (make-static-class-decls 
   *clojure.test__init*))

(defconst *package-name-map* 
  ("clojure.test__init" . "clojure"))

