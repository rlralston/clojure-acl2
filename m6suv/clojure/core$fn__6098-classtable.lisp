; core$fn__6098-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:42 CDT 2014.
;

(defconst *clojure.core$fn__6098*
 (make-class-def
      '(class "clojure.core$fn__6098"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "->VecSeq")
                        (STRING  "file")
                        (STRING  "column")
                        (STRING  "line")
                        (STRING  "arglists")
                        (STRING  "am")
                        (STRING  "vec")
                        (STRING  "anode")
                        (STRING  "i")
                        (STRING  "offset")
                        (STRING  "doc")
                        (STRING  "Positional factory function for class clojure.core.VecSeq.")
                        (STRING  "clojure/gvec.clj")
                        (STRING  "clojure.core.VecSeq"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 11) (max_locals . 0) (code_length . 321)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "->VecSeq"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$fn__6098" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "file"
                                      (16 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (19 (checkcast (class "clojure.lang.Keyword")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.core$fn__6098" (class "clojure.lang.Keyword"))))
                                      (25 (aconst_null))
                                      (26 (ldc 3))        ;;STRING:: "column"
                                      (28 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (31 (checkcast (class "clojure.lang.Keyword")))
                                      (34 (putstatic (fieldCP "const__2" "clojure.core$fn__6098" (class "clojure.lang.Keyword"))))
                                      (37 (iconst_1))
                                      (38 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (41 (putstatic (fieldCP "const__3" "clojure.core$fn__6098" (class "java.lang.Object"))))
                                      (44 (aconst_null))
                                      (45 (ldc 4))        ;;STRING:: "line"
                                      (47 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (50 (checkcast (class "clojure.lang.Keyword")))
                                      (53 (putstatic (fieldCP "const__4" "clojure.core$fn__6098" (class "clojure.lang.Keyword"))))
                                      (56 (bipush 54))
                                      (58 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (61 (putstatic (fieldCP "const__5" "clojure.core$fn__6098" (class "java.lang.Object"))))
                                      (64 (aconst_null))
                                      (65 (ldc 5))        ;;STRING:: "arglists"
                                      (67 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (70 (checkcast (class "clojure.lang.Keyword")))
                                      (73 (putstatic (fieldCP "const__6" "clojure.core$fn__6098" (class "clojure.lang.Keyword"))))
                                      (76 (iconst_1))
                                      (77 (anewarray (class "java.lang.Object")))
                                      (80 (dup))
                                      (81 (iconst_0))
                                      (82 (iconst_5))
                                      (83 (anewarray (class "java.lang.Object")))
                                      (86 (dup))
                                      (87 (iconst_0))
                                      (88 (aconst_null))
                                      (89 (ldc 6))        ;;STRING:: "am"
                                      (91 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (94 (aastore))
                                      (95 (dup))
                                      (96 (iconst_1))
                                      (97 (aconst_null))
                                      (98 (ldc 7))        ;;STRING:: "vec"
                                      (100 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (103 (aastore))
                                      (104 (dup))
                                      (105 (iconst_2))
                                      (106 (aconst_null))
                                      (107 (ldc 8))       ;;STRING:: "anode"
                                      (109 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (112 (aastore))
                                      (113 (dup))
                                      (114 (iconst_3))
                                      (115 (aconst_null))
                                      (116 (ldc 9))       ;;STRING:: "i"
                                      (118 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (121 (aastore))
                                      (122 (dup))
                                      (123 (iconst_4))
                                      (124 (aconst_null))
                                      (125 (ldc 10))      ;;STRING:: "offset"
                                      (127 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (130 (aastore))
                                      (131 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (134 (aastore))
                                      (135 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (138 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (141 (putstatic (fieldCP "const__7" "clojure.core$fn__6098" (class "java.lang.Object"))))
                                      (144 (aconst_null))
                                      (145 (ldc 11))      ;;STRING:: "doc"
                                      (147 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (150 (checkcast (class "clojure.lang.Keyword")))
                                      (153 (putstatic (fieldCP "const__8" "clojure.core$fn__6098" (class "clojure.lang.Keyword"))))
                                      (156 (bipush 10))
                                      (158 (anewarray (class "java.lang.Object")))
                                      (161 (dup))
                                      (162 (iconst_0))
                                      (163 (aconst_null))
                                      (164 (ldc 5))       ;;STRING:: "arglists"
                                      (166 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (169 (aastore))
                                      (170 (dup))
                                      (171 (iconst_1))
                                      (172 (iconst_1))
                                      (173 (anewarray (class "java.lang.Object")))
                                      (176 (dup))
                                      (177 (iconst_0))
                                      (178 (iconst_5))
                                      (179 (anewarray (class "java.lang.Object")))
                                      (182 (dup))
                                      (183 (iconst_0))
                                      (184 (aconst_null))
                                      (185 (ldc 6))       ;;STRING:: "am"
                                      (187 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (190 (aastore))
                                      (191 (dup))
                                      (192 (iconst_1))
                                      (193 (aconst_null))
                                      (194 (ldc 7))       ;;STRING:: "vec"
                                      (196 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (199 (aastore))
                                      (200 (dup))
                                      (201 (iconst_2))
                                      (202 (aconst_null))
                                      (203 (ldc 8))       ;;STRING:: "anode"
                                      (205 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (208 (aastore))
                                      (209 (dup))
                                      (210 (iconst_3))
                                      (211 (aconst_null))
                                      (212 (ldc 9))       ;;STRING:: "i"
                                      (214 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (217 (aastore))
                                      (218 (dup))
                                      (219 (iconst_4))
                                      (220 (aconst_null))
                                      (221 (ldc 10))      ;;STRING:: "offset"
                                      (223 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (226 (aastore))
                                      (227 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (230 (aastore))
                                      (231 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (234 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (237 (aastore))
                                      (238 (dup))
                                      (239 (iconst_2))
                                      (240 (aconst_null))
                                      (241 (ldc 3))       ;;STRING:: "column"
                                      (243 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (246 (aastore))
                                      (247 (dup))
                                      (248 (iconst_3))
                                      (249 (iconst_1))
                                      (250 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (253 (aastore))
                                      (254 (dup))
                                      (255 (iconst_4))
                                      (256 (aconst_null))
                                      (257 (ldc 11))      ;;STRING:: "doc"
                                      (259 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (262 (aastore))
                                      (263 (dup))
                                      (264 (iconst_5))
                                      (265 (ldc 12))      ;;STRING:: "Positional factory function for class clojure.core.VecSeq."
                                      (267 (aastore))
                                      (268 (dup))
                                      (269 (bipush 6))
                                      (271 (aconst_null))
                                      (272 (ldc 4))       ;;STRING:: "line"
                                      (274 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (277 (aastore))
                                      (278 (dup))
                                      (279 (bipush 7))
                                      (281 (bipush 54))
                                      (283 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (286 (aastore))
                                      (287 (dup))
                                      (288 (bipush 8))
                                      (290 (aconst_null))
                                      (291 (ldc 2))       ;;STRING:: "file"
                                      (293 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (296 (aastore))
                                      (297 (dup))
                                      (298 (bipush 9))
                                      (300 (ldc 13))      ;;STRING:: "clojure/gvec.clj"
                                      (302 (aastore))
                                      (303 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (306 (checkcast (class "clojure.lang.AFn")))
                                      (309 (putstatic (fieldCP "const__9" "clojure.core$fn__6098" (class "clojure.lang.AFn"))))
                                      (312 (ldc 14))      ;;STRING:: "clojure.core.VecSeq"
                                      (314 (invokestatic
					(methodCP "forName" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.Class"))))
                                      (317 (putstatic (fieldCP "const__10" "clojure.core$fn__6098" (class "java.lang.Object"))))
                                      (320 (return))
                                      (endofcode 321))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 1) (code_length . 49)
                                   (parsedcode
                                      (0 (aconst_null))
                                      (1 (pop))
                                      (2 (getstatic (fieldCP "CURRENT_NS" "clojure.lang.RT" (class "clojure.lang.Var"))))
                                      (5 (invokevirtual
					(methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (8 (checkcast (class "clojure.lang.Namespace")))
                                      (11 (ldc 14))       ;;STRING:: "clojure.core.VecSeq"
                                      (13 (invokestatic
					(methodCP "forName" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.Class"))))
                                      (16 (invokevirtual
					(methodCP "importClass" "clojure.lang.Namespace" ((class "java.lang.Class")) (class "java.lang.Class"))))
                                      (19 (pop))
                                      (20 (getstatic (fieldCP "const__0" "clojure.core$fn__6098" (class "clojure.lang.Var"))))
                                      (23 (dup))
                                      (24 (getstatic (fieldCP "const__9" "clojure.core$fn__6098" (class "clojure.lang.AFn"))))
                                      (27 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (30 (invokevirtual
					(methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void)))
                                      (33 (dup))
                                      (34 (new (class "clojure.core$fn__6098$__GT_VecSeq__6106")))
                                      (37 (dup))
                                      (38 (invokespecial
					(methodCP "<init>" "clojure.core$fn__6098$__GT_VecSeq__6106" () void)))
                                      (41 (invokevirtual
					(methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void)))
                                      (44 (pop))
                                      (45 (getstatic (fieldCP "const__10" "clojure.core$fn__6098" (class "java.lang.Object"))))
                                      (48 (areturn))
                                      (endofcode 49))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$fn__6098-class-table*
  (make-static-class-decls 
   *clojure.core$fn__6098*))

(defconst *package-name-map* 
  ("clojure.core$fn__6098" . "clojure"))

