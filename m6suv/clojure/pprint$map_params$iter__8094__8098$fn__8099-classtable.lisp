; pprint$map_params$iter__8094__8098$fn__8099-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:56 CDT 2014.
;

(defconst *clojure.pprint$map_params$iter__8094__8098$fn__8099*
 (make-class-def
      '(class "clojure.pprint$map_params$iter__8094__8098$fn__8099"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "seq")
                        (STRING  "chunked-seq?")
                        (STRING  "chunk-first")
                        (STRING  "int")
                        (STRING  "count")
                        (STRING  "chunk-buffer")
                        (STRING  "chunk-cons")
                        (STRING  "chunk")
                        (STRING  "chunk-rest")
                        (STRING  "first")
                        (STRING  "nth")
                        (STRING  "cons")
                        (STRING  "rest"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "offset" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "iter__8094" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "s__8095" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 184)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "seq"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "chunked-seq?"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "chunk-first"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "int"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var"))))
                                      (52 (ldc 0))        ;;STRING:: "clojure.core"
                                      (54 (ldc 5))        ;;STRING:: "count"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var"))))
                                      (65 (ldc 0))        ;;STRING:: "clojure.core"
                                      (67 (ldc 6))        ;;STRING:: "chunk-buffer"
                                      (69 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (72 (checkcast (class "clojure.lang.Var")))
                                      (75 (putstatic (fieldCP "const__5" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var"))))
                                      (78 (ldc 0))        ;;STRING:: "clojure.core"
                                      (80 (ldc 7))        ;;STRING:: "chunk-cons"
                                      (82 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (85 (checkcast (class "clojure.lang.Var")))
                                      (88 (putstatic (fieldCP "const__6" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var"))))
                                      (91 (ldc 0))        ;;STRING:: "clojure.core"
                                      (93 (ldc 8))        ;;STRING:: "chunk"
                                      (95 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (98 (checkcast (class "clojure.lang.Var")))
                                      (101 (putstatic (fieldCP "const__7" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var"))))
                                      (104 (ldc 0))       ;;STRING:: "clojure.core"
                                      (106 (ldc 9))       ;;STRING:: "chunk-rest"
                                      (108 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (111 (checkcast (class "clojure.lang.Var")))
                                      (114 (putstatic (fieldCP "const__8" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var"))))
                                      (117 (ldc 0))       ;;STRING:: "clojure.core"
                                      (119 (ldc 10))      ;;STRING:: "first"
                                      (121 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (124 (checkcast (class "clojure.lang.Var")))
                                      (127 (putstatic (fieldCP "const__9" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var"))))
                                      (130 (ldc 0))       ;;STRING:: "clojure.core"
                                      (132 (ldc 11))      ;;STRING:: "nth"
                                      (134 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (137 (checkcast (class "clojure.lang.Var")))
                                      (140 (putstatic (fieldCP "const__10" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var"))))
                                      (143 (lconst_0))
                                      (144 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (147 (putstatic (fieldCP "const__11" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "java.lang.Object"))))
                                      (150 (lconst_1))
                                      (151 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (154 (putstatic (fieldCP "const__12" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "java.lang.Object"))))
                                      (157 (ldc 0))       ;;STRING:: "clojure.core"
                                      (159 (ldc 12))      ;;STRING:: "cons"
                                      (161 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (164 (checkcast (class "clojure.lang.Var")))
                                      (167 (putstatic (fieldCP "const__13" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var"))))
                                      (170 (ldc 0))       ;;STRING:: "clojure.core"
                                      (172 (ldc 13))      ;;STRING:: "rest"
                                      (174 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (177 (checkcast (class "clojure.lang.Var")))
                                      (180 (putstatic (fieldCP "const__14" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var"))))
                                      (183 (return))
                                      (endofcode 184))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 20)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "offset" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "java.lang.Object"))))
                                      (9 (aload_0))
                                      (10 (aload_2))
                                      (11 (putfield (fieldCP "iter__8094" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "java.lang.Object"))))
                                      (14 (aload_0))
                                      (15 (aload_3))
                                      (16 (putfield (fieldCP "s__8095" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "java.lang.Object"))))
                                      (19 (return))
                                      (endofcode 20))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 9) (max_locals . 8) (code_length . 404)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "s__8095" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "java.lang.Object")))) 
                                      (4 (aload_0)) 
                                      (5 (aconst_null)) 
                                      (6 (putfield (fieldCP "s__8095" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "java.lang.Object")))) 
                                      (9 (astore_1)) 
                                      (10 (getstatic (fieldCP "const__0" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var")))) 
                                      (13 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (16 (checkcast (class "clojure.lang.IFn"))) 
                                      (19 (aload_1)) 
                                      (20 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (25 (astore_2)) 
                                      (26 (aload_2)) 
                                      (27 (dup)) 
                                      (28 (ifnull 401)) ;;to TAG_0
                                      (31 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (34 (if_acmpeq 402))  ;;to TAG_1
                                      (37 (aload_2)) 
                                      (38 (aconst_null)) 
                                      (39 (astore_2)) 
                                      (40 (astore_3)) 
                                      (41 (getstatic (fieldCP "const__1" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var")))) 
                                      (44 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (47 (checkcast (class "clojure.lang.IFn"))) 
                                      (50 (aload_3)) 
                                      (51 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (56 (dup)) 
                                      (57 (ifnull 255)) ;;to TAG_2
                                      (60 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (63 (if_acmpeq 256)) ;;to TAG_3
                                      (66 (getstatic (fieldCP "const__2" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var")))) 
                                      (69 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (72 (checkcast (class "clojure.lang.IFn"))) 
                                      (75 (aload_3)) 
                                      (76 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (81 (astore 4)) 
                                      (83 (aload 4)) 
                                      (85 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (88 (invokestatic (methodCP "intCast" "clojure.lang.RT" (int) int))) 
                                      (91 (istore 5)) 
                                      (93 (getstatic (fieldCP "const__5" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var")))) 
                                      (96 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (99 (checkcast (class "clojure.lang.IFn"))) 
                                      (102 (iload 5)) 
                                      (104 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (107 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (112 (astore 6)) 
                                      (114 (new (class "clojure.pprint$map_params$iter__8094__8098$fn__8099$fn__8100"))) 
                                      (117 (dup)) 
                                      (118 (aload_0)) 
                                      (119 (getfield (fieldCP "offset" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "java.lang.Object")))) 
                                      (122 (aload 6)) 
                                      (124 (iload 5)) 
                                      (126 (aload 4)) 
                                      (128 (aconst_null)) 
                                      (129 (astore 4)) 
                                      (131 (invokespecial (methodCP "<init>" "clojure.pprint$map_params$iter__8094__8098$fn__8099$fn__8100" ((class "java.lang.Object") (class "java.lang.Object") int (class "java.lang.Object")) void))) 
                                      (134 (checkcast (class "clojure.lang.IFn"))) 
                                      (137 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (142 (dup)) 
                                      (143 (ifnull 217)) ;;to TAG_4
                                      (146 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (149 (if_acmpeq 218)) ;;to TAG_5
                                      (152 (getstatic (fieldCP "const__6" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var")))) 
                                      (155 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (158 (checkcast (class "clojure.lang.IFn"))) 
                                      (161 (getstatic (fieldCP "const__7" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var")))) 
                                      (164 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (167 (checkcast (class "clojure.lang.IFn"))) 
                                      (170 (aload 6)) 
                                      (172 (aconst_null)) 
                                      (173 (astore 6)) 
                                      (175 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (180 (aload_0)) 
                                      (181 (getfield (fieldCP "iter__8094" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "java.lang.Object")))) 
                                      (184 (checkcast (class "clojure.lang.IFn"))) 
                                      (187 (getstatic (fieldCP "const__8" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var")))) 
                                      (190 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (193 (checkcast (class "clojure.lang.IFn"))) 
                                      (196 (aload_3)) 
                                      (197 (aconst_null)) 
                                      (198 (astore_3)) 
                                      (199 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (204 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (209 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (214 (goto 252)) ;;to TAG_6
                                      (217 (pop)) ;;at TAG_4
                                      (218 (getstatic (fieldCP "const__6" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var")))) ;;at TAG_5
                                      (221 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (224 (checkcast (class "clojure.lang.IFn"))) 
                                      (227 (getstatic (fieldCP "const__7" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var")))) 
                                      (230 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (233 (checkcast (class "clojure.lang.IFn"))) 
                                      (236 (aload 6)) 
                                      (238 (aconst_null)) 
                                      (239 (astore 6)) 
                                      (241 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (246 (aconst_null)) 
                                      (247 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (252 (goto 398)) ;;to TAG_7;;at TAG_6
                                      (255 (pop)) ;;at TAG_2
                                      (256 (getstatic (fieldCP "const__9" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var")))) ;;at TAG_3
                                      (259 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (262 (checkcast (class "clojure.lang.IFn"))) 
                                      (265 (aload_3)) 
                                      (266 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (271 (astore 4)) 
                                      (273 (aload 4)) 
                                      (275 (lconst_0)) 
                                      (276 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (279 (aconst_null)) 
                                      (280 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (283 (astore 5)) 
                                      (285 (aload 4)) 
                                      (287 (aconst_null)) 
                                      (288 (astore 4)) 
                                      (290 (lconst_1)) 
                                      (291 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (294 (aconst_null)) 
                                      (295 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (298 (astore 6)) 
                                      (300 (aload 6)) 
                                      (302 (aconst_null)) 
                                      (303 (astore 6)) 
                                      (305 (lconst_0)) 
                                      (306 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (309 (aconst_null)) 
                                      (310 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (313 (astore 7)) 
                                      (315 (getstatic (fieldCP "const__13" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var")))) 
                                      (318 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (321 (checkcast (class "clojure.lang.IFn"))) 
                                      (324 (iconst_2)) 
                                      (325 (anewarray (class "java.lang.Object"))) 
                                      (328 (dup)) 
                                      (329 (iconst_0)) 
                                      (330 (aload 5)) 
                                      (332 (aconst_null)) 
                                      (333 (astore 5)) 
                                      (335 (aastore)) 
                                      (336 (dup)) 
                                      (337 (iconst_1)) 
                                      (338 (iconst_2)) 
                                      (339 (anewarray (class "java.lang.Object"))) 
                                      (342 (dup)) 
                                      (343 (iconst_0)) 
                                      (344 (aload 7)) 
                                      (346 (aconst_null)) 
                                      (347 (astore 7)) 
                                      (349 (aastore)) 
                                      (350 (dup)) 
                                      (351 (iconst_1)) 
                                      (352 (aload_0)) 
                                      (353 (getfield (fieldCP "offset" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "java.lang.Object")))) 
                                      (356 (aastore)) 
                                      (357 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (360 (aastore)) 
                                      (361 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (364 (aload_0)) 
                                      (365 (getfield (fieldCP "iter__8094" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "java.lang.Object")))) 
                                      (368 (checkcast (class "clojure.lang.IFn"))) 
                                      (371 (getstatic (fieldCP "const__14" "clojure.pprint$map_params$iter__8094__8098$fn__8099" (class "clojure.lang.Var")))) 
                                      (374 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (377 (checkcast (class "clojure.lang.IFn"))) 
                                      (380 (aload_3)) 
                                      (381 (aconst_null)) 
                                      (382 (astore_3)) 
                                      (383 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (388 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (393 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (398 (goto 403)) ;;to TAG_8;;at TAG_7
                                      (401 (pop)) ;;at TAG_0
                                      (402 (aconst_null)) ;;at TAG_1
                                      (403 (areturn)) ;;at TAG_8
                                      (endofcode 404))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$map_params$iter__8094__8098$fn__8099-class-table*
  (make-static-class-decls 
   *clojure.pprint$map_params$iter__8094__8098$fn__8099*))

(defconst *package-name-map* 
  ("clojure.pprint$map_params$iter__8094__8098$fn__8099" . "clojure"))

