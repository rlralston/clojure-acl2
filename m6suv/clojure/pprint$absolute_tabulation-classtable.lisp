; pprint$absolute_tabulation-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:54 CDT 2014.
;

(defconst *clojure.pprint$absolute_tabulation*
 (make-class-def
      '(class "clojure.pprint$absolute_tabulation"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "colnum")
                        (STRING  "colinc")
                        (STRING  "clojure.pprint")
                        (STRING  "get-column")
                        (STRING  "base")
                        (STRING  "clojure.core")
                        (STRING  "deref")
                        (STRING  "*out*")
                        (STRING  "<")
                        (STRING  "-")
                        (STRING  "=")
                        (STRING  "else")
                        (STRING  "rem")
                        (STRING  "print")
                        (STRING  "apply")
                        (STRING  "str")
                        (STRING  "repeat"))
            (fields
                        (field "const__0" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__1__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__1__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__2__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__2__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 267)
                                   (parsedcode
                                      (0 (aconst_null))
                                      (1 (ldc 0))         ;;STRING:: "colnum"
                                      (3 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (6 (checkcast (class "clojure.lang.Keyword")))
                                      (9 (putstatic (fieldCP "const__0" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Keyword"))))
                                      (12 (aconst_null))
                                      (13 (ldc 1))        ;;STRING:: "colinc"
                                      (15 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (18 (checkcast (class "clojure.lang.Keyword")))
                                      (21 (putstatic (fieldCP "const__1" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Keyword"))))
                                      (24 (ldc 2))        ;;STRING:: "clojure.pprint"
                                      (26 (ldc 3))        ;;STRING:: "get-column"
                                      (28 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (31 (checkcast (class "clojure.lang.Var")))
                                      (34 (putstatic (fieldCP "const__2" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var"))))
                                      (37 (aconst_null))
                                      (38 (ldc 4))        ;;STRING:: "base"
                                      (40 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (43 (checkcast (class "clojure.lang.Keyword")))
                                      (46 (putstatic (fieldCP "const__3" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Keyword"))))
                                      (49 (ldc 5))        ;;STRING:: "clojure.core"
                                      (51 (ldc 6))        ;;STRING:: "deref"
                                      (53 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (56 (checkcast (class "clojure.lang.Var")))
                                      (59 (putstatic (fieldCP "const__4" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var"))))
                                      (62 (ldc 5))        ;;STRING:: "clojure.core"
                                      (64 (ldc 7))        ;;STRING:: "*out*"
                                      (66 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (69 (checkcast (class "clojure.lang.Var")))
                                      (72 (putstatic (fieldCP "const__5" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var"))))
                                      (75 (ldc 5))        ;;STRING:: "clojure.core"
                                      (77 (ldc 8))        ;;STRING:: "<"
                                      (79 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (82 (checkcast (class "clojure.lang.Var")))
                                      (85 (putstatic (fieldCP "const__6" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var"))))
                                      (88 (ldc 5))        ;;STRING:: "clojure.core"
                                      (90 (ldc 9))        ;;STRING:: "-"
                                      (92 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (95 (checkcast (class "clojure.lang.Var")))
                                      (98 (putstatic (fieldCP "const__7" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var"))))
                                      (101 (ldc 5))       ;;STRING:: "clojure.core"
                                      (103 (ldc 10))      ;;STRING:: "="
                                      (105 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (108 (checkcast (class "clojure.lang.Var")))
                                      (111 (putstatic (fieldCP "const__8" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var"))))
                                      (114 (lconst_0))
                                      (115 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (118 (putstatic (fieldCP "const__9" "clojure.pprint$absolute_tabulation" (class "java.lang.Object"))))
                                      (121 (aconst_null))
                                      (122 (ldc 11))      ;;STRING:: "else"
                                      (124 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (127 (checkcast (class "clojure.lang.Keyword")))
                                      (130 (putstatic (fieldCP "const__10" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Keyword"))))
                                      (133 (ldc 5))       ;;STRING:: "clojure.core"
                                      (135 (ldc 12))      ;;STRING:: "rem"
                                      (137 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (140 (checkcast (class "clojure.lang.Var")))
                                      (143 (putstatic (fieldCP "const__11" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var"))))
                                      (146 (ldc 5))       ;;STRING:: "clojure.core"
                                      (148 (ldc 13))      ;;STRING:: "print"
                                      (150 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (153 (checkcast (class "clojure.lang.Var")))
                                      (156 (putstatic (fieldCP "const__12" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var"))))
                                      (159 (ldc 5))       ;;STRING:: "clojure.core"
                                      (161 (ldc 14))      ;;STRING:: "apply"
                                      (163 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (166 (checkcast (class "clojure.lang.Var")))
                                      (169 (putstatic (fieldCP "const__13" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var"))))
                                      (172 (ldc 5))       ;;STRING:: "clojure.core"
                                      (174 (ldc 15))      ;;STRING:: "str"
                                      (176 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (179 (checkcast (class "clojure.lang.Var")))
                                      (182 (putstatic (fieldCP "const__14" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var"))))
                                      (185 (ldc 5))       ;;STRING:: "clojure.core"
                                      (187 (ldc 16))      ;;STRING:: "repeat"
                                      (189 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (192 (checkcast (class "clojure.lang.Var")))
                                      (195 (putstatic (fieldCP "const__15" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var"))))
                                      (198 (bipush 32))
                                      (200 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (203 (putstatic (fieldCP "const__16" "clojure.pprint$absolute_tabulation" (class "java.lang.Object"))))
                                      (206 (new (class "clojure.lang.KeywordLookupSite")))
                                      (209 (dup))
                                      (210 (aconst_null))
                                      (211 (ldc 0))       ;;STRING:: "colnum"
                                      (213 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (216 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (219 (dup))
                                      (220 (putstatic (fieldCP "__site__0__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.KeywordLookupSite"))))
                                      (223 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.ILookupThunk"))))
                                      (226 (new (class "clojure.lang.KeywordLookupSite")))
                                      (229 (dup))
                                      (230 (aconst_null))
                                      (231 (ldc 1))       ;;STRING:: "colinc"
                                      (233 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (236 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (239 (dup))
                                      (240 (putstatic (fieldCP "__site__1__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.KeywordLookupSite"))))
                                      (243 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.ILookupThunk"))))
                                      (246 (new (class "clojure.lang.KeywordLookupSite")))
                                      (249 (dup))
                                      (250 (aconst_null))
                                      (251 (ldc 4))       ;;STRING:: "base"
                                      (253 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (256 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (259 (dup))
                                      (260 (putstatic (fieldCP "__site__2__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.KeywordLookupSite"))))
                                      (263 (putstatic (fieldCP "__thunk__2__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.ILookupThunk"))))
                                      (266 (return))
                                      (endofcode 267))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 8) (code_length . 328)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "__thunk__0__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (3 (dup)) 
                                      (4 (aload_1)) 
                                      (5 (dup_x2)) 
                                      (6 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (11 (dup_x2)) 
                                      (12 (if_acmpeq 19)) ;;to TAG_0
                                      (15 (pop)) 
                                      (16 (goto 41))  ;;to TAG_1
                                      (19 (swap)) ;;at TAG_0
                                      (20 (pop)) 
                                      (21 (dup)) 
                                      (22 (getstatic (fieldCP "__site__0__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.KeywordLookupSite")))) 
                                      (25 (swap)) 
                                      (26 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (31 (dup)) 
                                      (32 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (35 (swap)) 
                                      (36 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (41 (astore 4)) ;;at TAG_1
                                      (43 (getstatic (fieldCP "__thunk__1__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (46 (dup)) 
                                      (47 (aload_1)) 
                                      (48 (aconst_null)) 
                                      (49 (astore_1)) 
                                      (50 (dup_x2)) 
                                      (51 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (56 (dup_x2)) 
                                      (57 (if_acmpeq 64)) ;;to TAG_2
                                      (60 (pop)) 
                                      (61 (goto 86)) ;;to TAG_3
                                      (64 (swap)) ;;at TAG_2
                                      (65 (pop)) 
                                      (66 (dup)) 
                                      (67 (getstatic (fieldCP "__site__1__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.KeywordLookupSite")))) 
                                      (70 (swap)) 
                                      (71 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (76 (dup)) 
                                      (77 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (80 (swap)) 
                                      (81 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (86 (astore 5)) ;;at TAG_3
                                      (88 (getstatic (fieldCP "const__2" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var")))) 
                                      (91 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (94 (checkcast (class "clojure.lang.IFn"))) 
                                      (97 (getstatic (fieldCP "__thunk__2__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (100 (dup)) 
                                      (101 (getstatic (fieldCP "const__4" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var")))) 
                                      (104 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (107 (checkcast (class "clojure.lang.IFn"))) 
                                      (110 (getstatic (fieldCP "const__4" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var")))) 
                                      (113 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (116 (checkcast (class "clojure.lang.IFn"))) 
                                      (119 (getstatic (fieldCP "const__5" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var")))) 
                                      (122 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (125 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (130 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (135 (dup_x2)) 
                                      (136 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (141 (dup_x2)) 
                                      (142 (if_acmpeq 149)) ;;to TAG_4
                                      (145 (pop)) 
                                      (146 (goto 171)) ;;to TAG_5
                                      (149 (swap)) ;;at TAG_4
                                      (150 (pop)) 
                                      (151 (dup)) 
                                      (152 (getstatic (fieldCP "__site__2__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.KeywordLookupSite")))) 
                                      (155 (swap)) 
                                      (156 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (161 (dup)) 
                                      (162 (putstatic (fieldCP "__thunk__2__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (165 (swap)) 
                                      (166 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (171 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_5
                                      (176 (astore 6)) 
                                      (178 (aload 6)) 
                                      (180 (aload 4)) 
                                      (182 (invokestatic (methodCP "lt" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (185 (ifeq 205)) ;;to TAG_6
                                      (188 (aload 4)) 
                                      (190 (aconst_null)) 
                                      (191 (astore 4)) 
                                      (193 (aload 6)) 
                                      (195 (aconst_null)) 
                                      (196 (astore 6)) 
                                      (198 (invokestatic (methodCP "minus" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (201 (goto 265)) ;;to TAG_7
                                      (204 (pop)) 
                                      (205 (aload 5)) ;;at TAG_6
                                      (207 (lconst_0)) 
                                      (208 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") long) boolean))) 
                                      (211 (ifeq 221)) ;;to TAG_8
                                      (214 (getstatic (fieldCP "const__9" "clojure.pprint$absolute_tabulation" (class "java.lang.Object")))) 
                                      (217 (goto 265)) ;;to TAG_7
                                      (220 (pop)) 
                                      (221 (getstatic (fieldCP "const__10" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Keyword")))) ;;at TAG_8
                                      (224 (dup)) 
                                      (225 (ifnull 263)) ;;to TAG_9
                                      (228 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (231 (if_acmpeq 264)) ;;to TAG_10
                                      (234 (aload 5)) 
                                      (236 (aload 6)) 
                                      (238 (aconst_null)) 
                                      (239 (astore 6)) 
                                      (241 (aload 4)) 
                                      (243 (aconst_null)) 
                                      (244 (astore 4)) 
                                      (246 (invokestatic (methodCP "minus" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (249 (aload 5)) 
                                      (251 (aconst_null)) 
                                      (252 (astore 5)) 
                                      (254 (invokestatic (methodCP "remainder" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (257 (invokestatic (methodCP "minus" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (260 (goto 265)) ;;to TAG_7
                                      (263 (pop)) ;;at TAG_9
                                      (264 (aconst_null)) ;;at TAG_10
                                      (265 (astore 7)) ;;at TAG_7
                                      (267 (getstatic (fieldCP "const__12" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var")))) 
                                      (270 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (273 (checkcast (class "clojure.lang.IFn"))) 
                                      (276 (getstatic (fieldCP "const__13" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var")))) 
                                      (279 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (282 (checkcast (class "clojure.lang.IFn"))) 
                                      (285 (getstatic (fieldCP "const__14" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var")))) 
                                      (288 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (291 (getstatic (fieldCP "const__15" "clojure.pprint$absolute_tabulation" (class "clojure.lang.Var")))) 
                                      (294 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (297 (checkcast (class "clojure.lang.IFn"))) 
                                      (300 (aload 7)) 
                                      (302 (aconst_null)) 
                                      (303 (astore 7)) 
                                      (305 (getstatic (fieldCP "const__16" "clojure.pprint$absolute_tabulation" (class "java.lang.Object")))) 
                                      (308 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (313 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (318 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (323 (pop)) 
                                      (324 (aload_2)) 
                                      (325 (aconst_null)) 
                                      (326 (astore_2)) 
                                      (327 (areturn)) 
                                      (endofcode 328))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 50)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 49 (0 . 2) (28 35 42))))  ;;to TAG_2;;to TAG_3;;to TAG_0;;to TAG_1
                                      (28 (aload_2)) ;;at TAG_1
                                      (29 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (32 (goto 49)) ;;to TAG_0
                                      (35 (aload_2)) ;;at TAG_2
                                      (36 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (39 (goto 49)) ;;to TAG_0
                                      (42 (aload_2)) ;;at TAG_3
                                      (43 (putstatic (fieldCP "__thunk__2__" "clojure.pprint$absolute_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (46 (goto 49)) ;;to TAG_0
                                      (49 (return)) ;;at TAG_0
                                      (endofcode 50))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$absolute_tabulation-class-table*
  (make-static-class-decls 
   *clojure.pprint$absolute_tabulation*))

(defconst *package-name-map* 
  ("clojure.pprint$absolute_tabulation" . "clojure"))

