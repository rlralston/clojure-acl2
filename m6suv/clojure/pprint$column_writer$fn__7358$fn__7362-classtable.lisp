; pprint$column_writer$fn__7358$fn__7362-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:55 CDT 2014.
;

(defconst *clojure.pprint$column_writer$fn__7358$fn__7362*
 (make-class-def
      '(class "clojure.pprint$column_writer$fn__7358$fn__7362"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "neg?")
                        (STRING  "clojure.pprint")
                        (STRING  "set-field")
                        (STRING  "cur")
                        (STRING  "+")
                        (STRING  "get-field")
                        (STRING  "count")
                        (STRING  "-")
                        (STRING  "line")
                        (STRING  "filter"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "this" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "nl" int (accessflags  *class* ) -1)
                        (field "s" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 123)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "neg?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Var"))))
                                      (13 (ldc 2))        ;;STRING:: "clojure.pprint"
                                      (15 (ldc 3))        ;;STRING:: "set-field"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Var"))))
                                      (26 (aconst_null))
                                      (27 (ldc 4))        ;;STRING:: "cur"
                                      (29 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (32 (checkcast (class "clojure.lang.Keyword")))
                                      (35 (putstatic (fieldCP "const__2" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Keyword"))))
                                      (38 (ldc 0))        ;;STRING:: "clojure.core"
                                      (40 (ldc 5))        ;;STRING:: "+"
                                      (42 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (45 (checkcast (class "clojure.lang.Var")))
                                      (48 (putstatic (fieldCP "const__3" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Var"))))
                                      (51 (ldc 2))        ;;STRING:: "clojure.pprint"
                                      (53 (ldc 6))        ;;STRING:: "get-field"
                                      (55 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (58 (checkcast (class "clojure.lang.Var")))
                                      (61 (putstatic (fieldCP "const__4" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Var"))))
                                      (64 (ldc 0))        ;;STRING:: "clojure.core"
                                      (66 (ldc 7))        ;;STRING:: "count"
                                      (68 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (71 (checkcast (class "clojure.lang.Var")))
                                      (74 (putstatic (fieldCP "const__5" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Var"))))
                                      (77 (ldc 0))        ;;STRING:: "clojure.core"
                                      (79 (ldc 8))        ;;STRING:: "-"
                                      (81 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (84 (checkcast (class "clojure.lang.Var")))
                                      (87 (putstatic (fieldCP "const__6" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Var"))))
                                      (90 (lconst_1))
                                      (91 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (94 (putstatic (fieldCP "const__7" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "java.lang.Object"))))
                                      (97 (aconst_null))
                                      (98 (ldc 9))        ;;STRING:: "line"
                                      (100 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (103 (checkcast (class "clojure.lang.Keyword")))
                                      (106 (putstatic (fieldCP "const__8" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Keyword"))))
                                      (109 (ldc 0))       ;;STRING:: "clojure.core"
                                      (111 (ldc 10))      ;;STRING:: "filter"
                                      (113 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (116 (checkcast (class "clojure.lang.Var")))
                                      (119 (putstatic (fieldCP "const__9" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Var"))))
                                      (122 (return))
                                      (endofcode 123))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object") int (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 20)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "this" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "java.lang.Object"))))
                                      (9 (aload_0))
                                      (10 (iload_2))
                                      (11 (putfield (fieldCP "nl" "clojure.pprint$column_writer$fn__7358$fn__7362" int)))
                                      (14 (aload_0))
                                      (15 (aload_3))
                                      (16 (putfield (fieldCP "s" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "java.lang.Object"))))
                                      (19 (return))
                                      (endofcode 20))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 1) (code_length . 187)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "nl" "clojure.pprint$column_writer$fn__7358$fn__7362" int))) 
                                      (4 (i2l)) 
                                      (5 (lconst_0)) 
                                      (6 (lcmp)) 
                                      (7 (ifge 67))  ;;to TAG_0
                                      (10 (getstatic (fieldCP "const__1" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Var")))) 
                                      (13 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (16 (checkcast (class "clojure.lang.IFn"))) 
                                      (19 (aload_0)) 
                                      (20 (getfield (fieldCP "this" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "java.lang.Object")))) 
                                      (23 (getstatic (fieldCP "const__2" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Keyword")))) 
                                      (26 (getstatic (fieldCP "const__4" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Var")))) 
                                      (29 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (32 (checkcast (class "clojure.lang.IFn"))) 
                                      (35 (aload_0)) 
                                      (36 (getfield (fieldCP "this" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "java.lang.Object")))) 
                                      (39 (getstatic (fieldCP "const__2" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Keyword")))) 
                                      (42 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (47 (aload_0)) 
                                      (48 (getfield (fieldCP "s" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "java.lang.Object")))) 
                                      (51 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (54 (i2l)) 
                                      (55 (invokestatic (methodCP "add" "clojure.lang.Numbers" ((class "java.lang.Object") long) (class "java.lang.Number")))) 
                                      (58 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (63 (goto 186)) ;;to TAG_1
                                      (66 (pop)) 
                                      (67 (getstatic (fieldCP "const__1" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Var")))) ;;at TAG_0
                                      (70 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (73 (checkcast (class "clojure.lang.IFn"))) 
                                      (76 (aload_0)) 
                                      (77 (getfield (fieldCP "this" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "java.lang.Object")))) 
                                      (80 (getstatic (fieldCP "const__2" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Keyword")))) 
                                      (83 (aload_0)) 
                                      (84 (getfield (fieldCP "s" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "java.lang.Object")))) 
                                      (87 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (90 (i2l)) 
                                      (91 (aload_0)) 
                                      (92 (getfield (fieldCP "nl" "clojure.pprint$column_writer$fn__7358$fn__7362" int))) 
                                      (95 (i2l)) 
                                      (96 (invokestatic (methodCP "minus" "clojure.lang.Numbers" (long long) long))) 
                                      (99 (lconst_1)) 
                                      (100 (invokestatic (methodCP "minus" "clojure.lang.Numbers" (long long) long))) 
                                      (103 (invokestatic (methodCP "num" "clojure.lang.Numbers" (long) (class "java.lang.Number")))) 
                                      (106 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (111 (pop)) 
                                      (112 (getstatic (fieldCP "const__1" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Var")))) 
                                      (115 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (118 (checkcast (class "clojure.lang.IFn"))) 
                                      (121 (aload_0)) 
                                      (122 (getfield (fieldCP "this" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "java.lang.Object")))) 
                                      (125 (getstatic (fieldCP "const__8" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Keyword")))) 
                                      (128 (getstatic (fieldCP "const__4" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Var")))) 
                                      (131 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (134 (checkcast (class "clojure.lang.IFn"))) 
                                      (137 (aload_0)) 
                                      (138 (getfield (fieldCP "this" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "java.lang.Object")))) 
                                      (141 (getstatic (fieldCP "const__8" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Keyword")))) 
                                      (144 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (149 (getstatic (fieldCP "const__9" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "clojure.lang.Var")))) 
                                      (152 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (155 (checkcast (class "clojure.lang.IFn"))) 
                                      (158 (new (class "clojure.pprint$column_writer$fn__7358$fn__7362$fn__7363"))) 
                                      (161 (dup)) 
                                      (162 (invokespecial (methodCP "<init>" "clojure.pprint$column_writer$fn__7358$fn__7362$fn__7363" () void))) 
                                      (165 (aload_0)) 
                                      (166 (getfield (fieldCP "s" "clojure.pprint$column_writer$fn__7358$fn__7362" (class "java.lang.Object")))) 
                                      (169 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (174 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (177 (i2l)) 
                                      (178 (invokestatic (methodCP "add" "clojure.lang.Numbers" ((class "java.lang.Object") long) (class "java.lang.Number")))) 
                                      (181 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (186 (areturn)) ;;at TAG_1
                                      (endofcode 187))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$column_writer$fn__7358$fn__7362-class-table*
  (make-static-class-decls 
   *clojure.pprint$column_writer$fn__7358$fn__7362*))

(defconst *package-name-map* 
  ("clojure.pprint$column_writer$fn__7358$fn__7362" . "clojure"))

