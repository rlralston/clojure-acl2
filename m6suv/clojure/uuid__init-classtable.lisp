; uuid__init-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:59 CDT 2014.
;

(defconst *clojure.uuid__init*
 (make-class-def
      '(class "clojure.uuid__init"
            "java.lang.Object"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "in-ns")
                        (STRING  "clojure.uuid")
                        (STRING  "default-uuid-reader")
                        (STRING  "file")
                        (STRING  "column")
                        (STRING  "line")
                        (STRING  "arglists")
                        (STRING  "form")
                        (STRING  "pre")
                        (STRING  "string?")
                        (STRING  "private")
                        (STRING  "clojure/uuid.clj")
                        (STRING  "print-method")
                        (STRING  "java.util.UUID")
                        (STRING  "print-dup")
                        (STRING  "clojure.uuid__init"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "load"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 9) (max_locals . 0) (code_length . 142)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.uuid__init" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (getstatic (fieldCP "const__1" "clojure.uuid__init" (class "clojure.lang.AFn")))) 
                                      (12 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (17 (new (class "clojure.uuid$loading__4910__auto__"))) 
                                      (20 (dup)) 
                                      (21 (invokespecial (methodCP "<init>" "clojure.uuid$loading__4910__auto__" () void))) 
                                      (24 (checkcast (class "clojure.lang.IFn"))) 
                                      (27 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (32 (getstatic (fieldCP "const__1" "clojure.uuid__init" (class "clojure.lang.AFn")))) 
                                      (35 (checkcast (class "clojure.lang.Symbol"))) 
                                      (38 (getstatic (fieldCP "const__2" "clojure.uuid__init" (class "clojure.lang.AFn")))) 
                                      (41 (invokevirtual (methodCP "equals" "clojure.lang.Symbol" ((class "java.lang.Object")) boolean))) 
                                      (44 (ifeq 52))  ;;to TAG_0
                                      (47 (aconst_null)) 
                                      (48 (goto 67)) ;;to TAG_1
                                      (51 (pop)) 
                                      (52 (new (class "clojure.uuid$fn__6232"))) ;;at TAG_0
                                      (55 (dup)) 
                                      (56 (invokespecial (methodCP "<init>" "clojure.uuid$fn__6232" () void))) 
                                      (59 (checkcast (class "java.util.concurrent.Callable"))) 
                                      (62 (invokestatic (methodCP "runInTransaction" "clojure.lang.LockingTransaction" ((class "java.util.concurrent.Callable")) (class "java.lang.Object")))) 
                                      (65 (pop)) 
                                      (66 (aconst_null)) 
                                      (67 (getstatic (fieldCP "const__3" "clojure.uuid__init" (class "clojure.lang.Var")))) ;;at TAG_1
                                      (70 (dup)) 
                                      (71 (getstatic (fieldCP "const__12" "clojure.uuid__init" (class "clojure.lang.AFn")))) 
                                      (74 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (77 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (80 (dup)) 
                                      (81 (new (class "clojure.uuid$default_uuid_reader"))) 
                                      (84 (dup)) 
                                      (85 (invokespecial (methodCP "<init>" "clojure.uuid$default_uuid_reader" () void))) 
                                      (88 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (91 (getstatic (fieldCP "const__13" "clojure.uuid__init" (class "clojure.lang.Var")))) 
                                      (94 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (97 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (100 (getstatic (fieldCP "const__14" "clojure.uuid__init" (class "java.lang.Object")))) 
                                      (103 (new (class "clojure.uuid$fn__6235"))) 
                                      (106 (dup)) 
                                      (107 (invokespecial (methodCP "<init>" "clojure.uuid$fn__6235" () void))) 
                                      (110 (checkcast (class "clojure.lang.IFn"))) 
                                      (113 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (116 (getstatic (fieldCP "const__15" "clojure.uuid__init" (class "clojure.lang.Var")))) 
                                      (119 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (122 (checkcast (class "clojure.lang.MultiFn"))) 
                                      (125 (getstatic (fieldCP "const__14" "clojure.uuid__init" (class "java.lang.Object")))) 
                                      (128 (new (class "clojure.uuid$fn__6237"))) 
                                      (131 (dup)) 
                                      (132 (invokespecial (methodCP "<init>" "clojure.uuid$fn__6237" () void))) 
                                      (135 (checkcast (class "clojure.lang.IFn"))) 
                                      (138 (invokevirtual (methodCP "addMethod" "clojure.lang.MultiFn" ((class "java.lang.Object") (class "clojure.lang.IFn")) (class "clojure.lang.MultiFn")))) 
                                      (141 (return)) 
                                      (endofcode 142))
                                   (Exceptions )
                                   (StackMap )))
                        (method "__init0"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 19) (max_locals . 0) (code_length . 553)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "in-ns"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.uuid__init" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "clojure.uuid"
                                      (16 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (19 (checkcast (class "clojure.lang.AFn")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.uuid__init" (class "clojure.lang.AFn"))))
                                      (25 (aconst_null))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (31 (checkcast (class "clojure.lang.AFn")))
                                      (34 (putstatic (fieldCP "const__2" "clojure.uuid__init" (class "clojure.lang.AFn"))))
                                      (37 (ldc 2))        ;;STRING:: "clojure.uuid"
                                      (39 (ldc 3))        ;;STRING:: "default-uuid-reader"
                                      (41 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (44 (checkcast (class "clojure.lang.Var")))
                                      (47 (putstatic (fieldCP "const__3" "clojure.uuid__init" (class "clojure.lang.Var"))))
                                      (50 (aconst_null))
                                      (51 (ldc 4))        ;;STRING:: "file"
                                      (53 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (56 (checkcast (class "clojure.lang.Keyword")))
                                      (59 (putstatic (fieldCP "const__4" "clojure.uuid__init" (class "clojure.lang.Keyword"))))
                                      (62 (aconst_null))
                                      (63 (ldc 5))        ;;STRING:: "column"
                                      (65 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (68 (checkcast (class "clojure.lang.Keyword")))
                                      (71 (putstatic (fieldCP "const__5" "clojure.uuid__init" (class "clojure.lang.Keyword"))))
                                      (74 (iconst_1))
                                      (75 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (78 (putstatic (fieldCP "const__6" "clojure.uuid__init" (class "java.lang.Object"))))
                                      (81 (aconst_null))
                                      (82 (ldc 6))        ;;STRING:: "line"
                                      (84 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (87 (checkcast (class "clojure.lang.Keyword")))
                                      (90 (putstatic (fieldCP "const__7" "clojure.uuid__init" (class "clojure.lang.Keyword"))))
                                      (93 (bipush 11))
                                      (95 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (98 (putstatic (fieldCP "const__8" "clojure.uuid__init" (class "java.lang.Object"))))
                                      (101 (aconst_null))
                                      (102 (ldc 7))       ;;STRING:: "arglists"
                                      (104 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (107 (checkcast (class "clojure.lang.Keyword")))
                                      (110 (putstatic (fieldCP "const__9" "clojure.uuid__init" (class "clojure.lang.Keyword"))))
                                      (113 (iconst_1))
                                      (114 (anewarray (class "java.lang.Object")))
                                      (117 (dup))
                                      (118 (iconst_0))
                                      (119 (iconst_1))
                                      (120 (anewarray (class "java.lang.Object")))
                                      (123 (dup))
                                      (124 (iconst_0))
                                      (125 (aconst_null))
                                      (126 (ldc 8))       ;;STRING:: "form"
                                      (128 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (131 (aastore))
                                      (132 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (135 (checkcast (class "clojure.lang.IObj")))
                                      (138 (iconst_2))
                                      (139 (anewarray (class "java.lang.Object")))
                                      (142 (dup))
                                      (143 (iconst_0))
                                      (144 (aconst_null))
                                      (145 (ldc 9))       ;;STRING:: "pre"
                                      (147 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (150 (aastore))
                                      (151 (dup))
                                      (152 (iconst_1))
                                      (153 (iconst_1))
                                      (154 (anewarray (class "java.lang.Object")))
                                      (157 (dup))
                                      (158 (iconst_0))
                                      (159 (iconst_2))
                                      (160 (anewarray (class "java.lang.Object")))
                                      (163 (dup))
                                      (164 (iconst_0))
                                      (165 (aconst_null))
                                      (166 (ldc 10))      ;;STRING:: "string?"
                                      (168 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (171 (aastore))
                                      (172 (dup))
                                      (173 (iconst_1))
                                      (174 (aconst_null))
                                      (175 (ldc 8))       ;;STRING:: "form"
                                      (177 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (180 (aastore))
                                      (181 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (184 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (187 (checkcast (class "clojure.lang.IObj")))
                                      (190 (iconst_4))
                                      (191 (anewarray (class "java.lang.Object")))
                                      (194 (dup))
                                      (195 (iconst_0))
                                      (196 (aconst_null))
                                      (197 (ldc 6))       ;;STRING:: "line"
                                      (199 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (202 (aastore))
                                      (203 (dup))
                                      (204 (iconst_1))
                                      (205 (bipush 12))
                                      (207 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (210 (aastore))
                                      (211 (dup))
                                      (212 (iconst_2))
                                      (213 (aconst_null))
                                      (214 (ldc 5))       ;;STRING:: "column"
                                      (216 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (219 (aastore))
                                      (220 (dup))
                                      (221 (iconst_3))
                                      (222 (bipush 10))
                                      (224 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (227 (aastore))
                                      (228 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (231 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (234 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (239 (aastore))
                                      (240 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (243 (aastore))
                                      (244 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (247 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (250 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (255 (aastore))
                                      (256 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (259 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (262 (putstatic (fieldCP "const__10" "clojure.uuid__init" (class "java.lang.Object"))))
                                      (265 (aconst_null))
                                      (266 (ldc 11))      ;;STRING:: "private"
                                      (268 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (271 (checkcast (class "clojure.lang.Keyword")))
                                      (274 (putstatic (fieldCP "const__11" "clojure.uuid__init" (class "clojure.lang.Keyword"))))
                                      (277 (bipush 10))
                                      (279 (anewarray (class "java.lang.Object")))
                                      (282 (dup))
                                      (283 (iconst_0))
                                      (284 (aconst_null))
                                      (285 (ldc 7))       ;;STRING:: "arglists"
                                      (287 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (290 (aastore))
                                      (291 (dup))
                                      (292 (iconst_1))
                                      (293 (iconst_1))
                                      (294 (anewarray (class "java.lang.Object")))
                                      (297 (dup))
                                      (298 (iconst_0))
                                      (299 (iconst_1))
                                      (300 (anewarray (class "java.lang.Object")))
                                      (303 (dup))
                                      (304 (iconst_0))
                                      (305 (aconst_null))
                                      (306 (ldc 8))       ;;STRING:: "form"
                                      (308 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (311 (aastore))
                                      (312 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (315 (checkcast (class "clojure.lang.IObj")))
                                      (318 (iconst_2))
                                      (319 (anewarray (class "java.lang.Object")))
                                      (322 (dup))
                                      (323 (iconst_0))
                                      (324 (aconst_null))
                                      (325 (ldc 9))       ;;STRING:: "pre"
                                      (327 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (330 (aastore))
                                      (331 (dup))
                                      (332 (iconst_1))
                                      (333 (iconst_1))
                                      (334 (anewarray (class "java.lang.Object")))
                                      (337 (dup))
                                      (338 (iconst_0))
                                      (339 (iconst_2))
                                      (340 (anewarray (class "java.lang.Object")))
                                      (343 (dup))
                                      (344 (iconst_0))
                                      (345 (aconst_null))
                                      (346 (ldc 10))      ;;STRING:: "string?"
                                      (348 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (351 (aastore))
                                      (352 (dup))
                                      (353 (iconst_1))
                                      (354 (aconst_null))
                                      (355 (ldc 8))       ;;STRING:: "form"
                                      (357 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (360 (aastore))
                                      (361 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (364 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (367 (checkcast (class "clojure.lang.IObj")))
                                      (370 (iconst_4))
                                      (371 (anewarray (class "java.lang.Object")))
                                      (374 (dup))
                                      (375 (iconst_0))
                                      (376 (aconst_null))
                                      (377 (ldc 6))       ;;STRING:: "line"
                                      (379 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (382 (aastore))
                                      (383 (dup))
                                      (384 (iconst_1))
                                      (385 (bipush 12))
                                      (387 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (390 (aastore))
                                      (391 (dup))
                                      (392 (iconst_2))
                                      (393 (aconst_null))
                                      (394 (ldc 5))       ;;STRING:: "column"
                                      (396 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (399 (aastore))
                                      (400 (dup))
                                      (401 (iconst_3))
                                      (402 (bipush 10))
                                      (404 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (407 (aastore))
                                      (408 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (411 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (414 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (419 (aastore))
                                      (420 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (423 (aastore))
                                      (424 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (427 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (430 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (435 (aastore))
                                      (436 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (439 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (442 (aastore))
                                      (443 (dup))
                                      (444 (iconst_2))
                                      (445 (aconst_null))
                                      (446 (ldc 5))       ;;STRING:: "column"
                                      (448 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (451 (aastore))
                                      (452 (dup))
                                      (453 (iconst_3))
                                      (454 (iconst_1))
                                      (455 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (458 (aastore))
                                      (459 (dup))
                                      (460 (iconst_4))
                                      (461 (aconst_null))
                                      (462 (ldc 11))      ;;STRING:: "private"
                                      (464 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (467 (aastore))
                                      (468 (dup))
                                      (469 (iconst_5))
                                      (470 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (473 (aastore))
                                      (474 (dup))
                                      (475 (bipush 6))
                                      (477 (aconst_null))
                                      (478 (ldc 6))       ;;STRING:: "line"
                                      (480 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (483 (aastore))
                                      (484 (dup))
                                      (485 (bipush 7))
                                      (487 (bipush 11))
                                      (489 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (492 (aastore))
                                      (493 (dup))
                                      (494 (bipush 8))
                                      (496 (aconst_null))
                                      (497 (ldc 4))       ;;STRING:: "file"
                                      (499 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (502 (aastore))
                                      (503 (dup))
                                      (504 (bipush 9))
                                      (506 (ldc 12))      ;;STRING:: "clojure/uuid.clj"
                                      (508 (aastore))
                                      (509 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (512 (checkcast (class "clojure.lang.AFn")))
                                      (515 (putstatic (fieldCP "const__12" "clojure.uuid__init" (class "clojure.lang.AFn"))))
                                      (518 (ldc 0))       ;;STRING:: "clojure.core"
                                      (520 (ldc 13))      ;;STRING:: "print-method"
                                      (522 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (525 (checkcast (class "clojure.lang.Var")))
                                      (528 (putstatic (fieldCP "const__13" "clojure.uuid__init" (class "clojure.lang.Var"))))
                                      (531 (ldc 14))      ;;STRING:: "java.util.UUID"
                                      (533 (invokestatic
					(methodCP "forName" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.Class"))))
                                      (536 (putstatic (fieldCP "const__14" "clojure.uuid__init" (class "java.lang.Object"))))
                                      (539 (ldc 0))       ;;STRING:: "clojure.core"
                                      (541 (ldc 15))      ;;STRING:: "print-dup"
                                      (543 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (546 (checkcast (class "clojure.lang.Var")))
                                      (549 (putstatic (fieldCP "const__15" "clojure.uuid__init" (class "clojure.lang.Var"))))
                                      (552 (return))
                                      (endofcode 553))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 0) (code_length . 28)
                                   (parsedcode
                                      (0 (invokestatic (methodCP "__init0" "clojure.uuid__init" () void))) 
                                      (3 (ldc 16)) ;;STRING:: "clojure.uuid__init"
                                      (5 (invokestatic (methodCP "forName" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.Class")))) 
                                      (8 (invokevirtual (methodCP "getClassLoader" "java.lang.Class" () (class "java.lang.ClassLoader")))) 
                                      (11 (invokestatic (methodCP "pushNSandLoader" "clojure.lang.Compiler" ((class "java.lang.ClassLoader")) void))) 
                                      (14 (invokestatic (methodCP "load" "clojure.uuid__init" () void))) ;;at TAG_1
                                      (17 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) ;;at TAG_2
                                      (20 (goto 27)) ;;to TAG_0
                                      (23 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) ;;at TAG_3
                                      (26 (athrow)) 
                                      (27 (return)) ;;at TAG_0
                                      (endofcode 28))
                                   (Exceptions 
                                     (handler 14 17  23 (class "java.lang.Throwable")))
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes))))


(defconst *uuid__init-class-table*
  (make-static-class-decls 
   *clojure.uuid__init*))

(defconst *package-name-map* 
  ("clojure.uuid__init" . "clojure"))

