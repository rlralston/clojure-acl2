; pprint$relative_tabulation-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:57 CDT 2014.
;

(defconst *clojure.pprint$relative_tabulation*
 (make-class-def
      '(class "clojure.pprint$relative_tabulation"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "colnum")
                        (STRING  "colinc")
                        (STRING  "clojure.core")
                        (STRING  "+")
                        (STRING  "clojure.pprint")
                        (STRING  "get-column")
                        (STRING  "base")
                        (STRING  "deref")
                        (STRING  "*out*")
                        (STRING  "pos?")
                        (STRING  "rem")
                        (STRING  "=")
                        (STRING  "-")
                        (STRING  "print")
                        (STRING  "apply")
                        (STRING  "str")
                        (STRING  "repeat"))
            (fields
                        (field "const__0" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__1__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__1__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__2__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__2__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 268)
                                   (parsedcode
                                      (0 (aconst_null))
                                      (1 (ldc 0))         ;;STRING:: "colnum"
                                      (3 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (6 (checkcast (class "clojure.lang.Keyword")))
                                      (9 (putstatic (fieldCP "const__0" "clojure.pprint$relative_tabulation" (class "clojure.lang.Keyword"))))
                                      (12 (aconst_null))
                                      (13 (ldc 1))        ;;STRING:: "colinc"
                                      (15 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (18 (checkcast (class "clojure.lang.Keyword")))
                                      (21 (putstatic (fieldCP "const__1" "clojure.pprint$relative_tabulation" (class "clojure.lang.Keyword"))))
                                      (24 (ldc 2))        ;;STRING:: "clojure.core"
                                      (26 (ldc 3))        ;;STRING:: "+"
                                      (28 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (31 (checkcast (class "clojure.lang.Var")))
                                      (34 (putstatic (fieldCP "const__2" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var"))))
                                      (37 (ldc 4))        ;;STRING:: "clojure.pprint"
                                      (39 (ldc 5))        ;;STRING:: "get-column"
                                      (41 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (44 (checkcast (class "clojure.lang.Var")))
                                      (47 (putstatic (fieldCP "const__3" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var"))))
                                      (50 (aconst_null))
                                      (51 (ldc 6))        ;;STRING:: "base"
                                      (53 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (56 (checkcast (class "clojure.lang.Keyword")))
                                      (59 (putstatic (fieldCP "const__4" "clojure.pprint$relative_tabulation" (class "clojure.lang.Keyword"))))
                                      (62 (ldc 2))        ;;STRING:: "clojure.core"
                                      (64 (ldc 7))        ;;STRING:: "deref"
                                      (66 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (69 (checkcast (class "clojure.lang.Var")))
                                      (72 (putstatic (fieldCP "const__5" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var"))))
                                      (75 (ldc 2))        ;;STRING:: "clojure.core"
                                      (77 (ldc 8))        ;;STRING:: "*out*"
                                      (79 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (82 (checkcast (class "clojure.lang.Var")))
                                      (85 (putstatic (fieldCP "const__6" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var"))))
                                      (88 (ldc 2))        ;;STRING:: "clojure.core"
                                      (90 (ldc 9))        ;;STRING:: "pos?"
                                      (92 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (95 (checkcast (class "clojure.lang.Var")))
                                      (98 (putstatic (fieldCP "const__7" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var"))))
                                      (101 (ldc 2))       ;;STRING:: "clojure.core"
                                      (103 (ldc 10))      ;;STRING:: "rem"
                                      (105 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (108 (checkcast (class "clojure.lang.Var")))
                                      (111 (putstatic (fieldCP "const__8" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var"))))
                                      (114 (lconst_0))
                                      (115 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (118 (putstatic (fieldCP "const__9" "clojure.pprint$relative_tabulation" (class "java.lang.Object"))))
                                      (121 (ldc 2))       ;;STRING:: "clojure.core"
                                      (123 (ldc 11))      ;;STRING:: "="
                                      (125 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (128 (checkcast (class "clojure.lang.Var")))
                                      (131 (putstatic (fieldCP "const__10" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var"))))
                                      (134 (ldc 2))       ;;STRING:: "clojure.core"
                                      (136 (ldc 12))      ;;STRING:: "-"
                                      (138 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (141 (checkcast (class "clojure.lang.Var")))
                                      (144 (putstatic (fieldCP "const__11" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var"))))
                                      (147 (ldc 2))       ;;STRING:: "clojure.core"
                                      (149 (ldc 13))      ;;STRING:: "print"
                                      (151 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (154 (checkcast (class "clojure.lang.Var")))
                                      (157 (putstatic (fieldCP "const__12" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var"))))
                                      (160 (ldc 2))       ;;STRING:: "clojure.core"
                                      (162 (ldc 14))      ;;STRING:: "apply"
                                      (164 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (167 (checkcast (class "clojure.lang.Var")))
                                      (170 (putstatic (fieldCP "const__13" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var"))))
                                      (173 (ldc 2))       ;;STRING:: "clojure.core"
                                      (175 (ldc 15))      ;;STRING:: "str"
                                      (177 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (180 (checkcast (class "clojure.lang.Var")))
                                      (183 (putstatic (fieldCP "const__14" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var"))))
                                      (186 (ldc 2))       ;;STRING:: "clojure.core"
                                      (188 (ldc 16))      ;;STRING:: "repeat"
                                      (190 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (193 (checkcast (class "clojure.lang.Var")))
                                      (196 (putstatic (fieldCP "const__15" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var"))))
                                      (199 (bipush 32))
                                      (201 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (204 (putstatic (fieldCP "const__16" "clojure.pprint$relative_tabulation" (class "java.lang.Object"))))
                                      (207 (new (class "clojure.lang.KeywordLookupSite")))
                                      (210 (dup))
                                      (211 (aconst_null))
                                      (212 (ldc 0))       ;;STRING:: "colnum"
                                      (214 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (217 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (220 (dup))
                                      (221 (putstatic (fieldCP "__site__0__" "clojure.pprint$relative_tabulation" (class "clojure.lang.KeywordLookupSite"))))
                                      (224 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$relative_tabulation" (class "clojure.lang.ILookupThunk"))))
                                      (227 (new (class "clojure.lang.KeywordLookupSite")))
                                      (230 (dup))
                                      (231 (aconst_null))
                                      (232 (ldc 1))       ;;STRING:: "colinc"
                                      (234 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (237 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (240 (dup))
                                      (241 (putstatic (fieldCP "__site__1__" "clojure.pprint$relative_tabulation" (class "clojure.lang.KeywordLookupSite"))))
                                      (244 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$relative_tabulation" (class "clojure.lang.ILookupThunk"))))
                                      (247 (new (class "clojure.lang.KeywordLookupSite")))
                                      (250 (dup))
                                      (251 (aconst_null))
                                      (252 (ldc 6))       ;;STRING:: "base"
                                      (254 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (257 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (260 (dup))
                                      (261 (putstatic (fieldCP "__site__2__" "clojure.pprint$relative_tabulation" (class "clojure.lang.KeywordLookupSite"))))
                                      (264 (putstatic (fieldCP "__thunk__2__" "clojure.pprint$relative_tabulation" (class "clojure.lang.ILookupThunk"))))
                                      (267 (return))
                                      (endofcode 268))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 9) (code_length . 310)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "__thunk__0__" "clojure.pprint$relative_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (3 (dup)) 
                                      (4 (aload_1)) 
                                      (5 (dup_x2)) 
                                      (6 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (11 (dup_x2)) 
                                      (12 (if_acmpeq 19)) ;;to TAG_0
                                      (15 (pop)) 
                                      (16 (goto 41))  ;;to TAG_1
                                      (19 (swap)) ;;at TAG_0
                                      (20 (pop)) 
                                      (21 (dup)) 
                                      (22 (getstatic (fieldCP "__site__0__" "clojure.pprint$relative_tabulation" (class "clojure.lang.KeywordLookupSite")))) 
                                      (25 (swap)) 
                                      (26 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (31 (dup)) 
                                      (32 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$relative_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (35 (swap)) 
                                      (36 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (41 (astore 4)) ;;at TAG_1
                                      (43 (getstatic (fieldCP "__thunk__1__" "clojure.pprint$relative_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (46 (dup)) 
                                      (47 (aload_1)) 
                                      (48 (aconst_null)) 
                                      (49 (astore_1)) 
                                      (50 (dup_x2)) 
                                      (51 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (56 (dup_x2)) 
                                      (57 (if_acmpeq 64)) ;;to TAG_2
                                      (60 (pop)) 
                                      (61 (goto 86)) ;;to TAG_3
                                      (64 (swap)) ;;at TAG_2
                                      (65 (pop)) 
                                      (66 (dup)) 
                                      (67 (getstatic (fieldCP "__site__1__" "clojure.pprint$relative_tabulation" (class "clojure.lang.KeywordLookupSite")))) 
                                      (70 (swap)) 
                                      (71 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (76 (dup)) 
                                      (77 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$relative_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (80 (swap)) 
                                      (81 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (86 (astore 5)) ;;at TAG_3
                                      (88 (aload 4)) 
                                      (90 (getstatic (fieldCP "const__3" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var")))) 
                                      (93 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (96 (checkcast (class "clojure.lang.IFn"))) 
                                      (99 (getstatic (fieldCP "__thunk__2__" "clojure.pprint$relative_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (102 (dup)) 
                                      (103 (getstatic (fieldCP "const__5" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var")))) 
                                      (106 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (109 (checkcast (class "clojure.lang.IFn"))) 
                                      (112 (getstatic (fieldCP "const__5" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var")))) 
                                      (115 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (118 (checkcast (class "clojure.lang.IFn"))) 
                                      (121 (getstatic (fieldCP "const__6" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var")))) 
                                      (124 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (127 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (132 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (137 (dup_x2)) 
                                      (138 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (143 (dup_x2)) 
                                      (144 (if_acmpeq 151)) ;;to TAG_4
                                      (147 (pop)) 
                                      (148 (goto 173)) ;;to TAG_5
                                      (151 (swap)) ;;at TAG_4
                                      (152 (pop)) 
                                      (153 (dup)) 
                                      (154 (getstatic (fieldCP "__site__2__" "clojure.pprint$relative_tabulation" (class "clojure.lang.KeywordLookupSite")))) 
                                      (157 (swap)) 
                                      (158 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (163 (dup)) 
                                      (164 (putstatic (fieldCP "__thunk__2__" "clojure.pprint$relative_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (167 (swap)) 
                                      (168 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (173 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_5
                                      (178 (invokestatic (methodCP "add" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (181 (astore 6)) 
                                      (183 (aload 5)) 
                                      (185 (invokestatic (methodCP "isPos" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (188 (ifeq 205)) ;;to TAG_6
                                      (191 (aload 6)) 
                                      (193 (aconst_null)) 
                                      (194 (astore 6)) 
                                      (196 (aload 5)) 
                                      (198 (invokestatic (methodCP "remainder" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (201 (goto 208)) ;;to TAG_7
                                      (204 (pop)) 
                                      (205 (getstatic (fieldCP "const__9" "clojure.pprint$relative_tabulation" (class "java.lang.Object")))) ;;at TAG_6
                                      (208 (astore 7)) ;;at TAG_7
                                      (210 (aload 4)) 
                                      (212 (aconst_null)) 
                                      (213 (astore 4)) 
                                      (215 (lconst_0)) 
                                      (216 (aload 7)) 
                                      (218 (invokestatic (methodCP "equiv" "clojure.lang.Util" (long (class "java.lang.Object")) boolean))) 
                                      (221 (ifeq 231)) ;;to TAG_8
                                      (224 (getstatic (fieldCP "const__9" "clojure.pprint$relative_tabulation" (class "java.lang.Object")))) 
                                      (227 (goto 244)) ;;to TAG_9
                                      (230 (pop)) 
                                      (231 (aload 5)) ;;at TAG_8
                                      (233 (aconst_null)) 
                                      (234 (astore 5)) 
                                      (236 (aload 7)) 
                                      (238 (aconst_null)) 
                                      (239 (astore 7)) 
                                      (241 (invokestatic (methodCP "minus" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (244 (invokestatic (methodCP "add" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Number")))) ;;at TAG_9
                                      (247 (astore 8)) 
                                      (249 (getstatic (fieldCP "const__12" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var")))) 
                                      (252 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (255 (checkcast (class "clojure.lang.IFn"))) 
                                      (258 (getstatic (fieldCP "const__13" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var")))) 
                                      (261 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (264 (checkcast (class "clojure.lang.IFn"))) 
                                      (267 (getstatic (fieldCP "const__14" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var")))) 
                                      (270 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (273 (getstatic (fieldCP "const__15" "clojure.pprint$relative_tabulation" (class "clojure.lang.Var")))) 
                                      (276 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (279 (checkcast (class "clojure.lang.IFn"))) 
                                      (282 (aload 8)) 
                                      (284 (aconst_null)) 
                                      (285 (astore 8)) 
                                      (287 (getstatic (fieldCP "const__16" "clojure.pprint$relative_tabulation" (class "java.lang.Object")))) 
                                      (290 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (295 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (300 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (305 (pop)) 
                                      (306 (aload_2)) 
                                      (307 (aconst_null)) 
                                      (308 (astore_2)) 
                                      (309 (areturn)) 
                                      (endofcode 310))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 50)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 49 (0 . 2) (28 35 42))))  ;;to TAG_2;;to TAG_3;;to TAG_0;;to TAG_1
                                      (28 (aload_2)) ;;at TAG_1
                                      (29 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$relative_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (32 (goto 49)) ;;to TAG_0
                                      (35 (aload_2)) ;;at TAG_2
                                      (36 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$relative_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (39 (goto 49)) ;;to TAG_0
                                      (42 (aload_2)) ;;at TAG_3
                                      (43 (putstatic (fieldCP "__thunk__2__" "clojure.pprint$relative_tabulation" (class "clojure.lang.ILookupThunk")))) 
                                      (46 (goto 49)) ;;to TAG_0
                                      (49 (return)) ;;at TAG_0
                                      (endofcode 50))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$relative_tabulation-class-table*
  (make-static-class-decls 
   *clojure.pprint$relative_tabulation*))

(defconst *package-name-map* 
  ("clojure.pprint$relative_tabulation" . "clojure"))

