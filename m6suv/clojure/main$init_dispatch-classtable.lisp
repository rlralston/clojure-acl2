; main$init_dispatch-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:53 CDT 2014.
;

(defconst *clojure.main$init_dispatch*
 (make-class-def
      '(class "clojure.main$init_dispatch"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.main")
                        (STRING  "init-opt")
                        (STRING  "eval-opt")
                        (STRING  "-i")
                        (STRING  "--init")
                        (STRING  "-e")
                        (STRING  "--eval"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 27)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.main"
                                      (2 (ldc 1))         ;;STRING:: "init-opt"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.main$init_dispatch" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.main"
                                      (15 (ldc 2))        ;;STRING:: "eval-opt"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.main$init_dispatch" (class "clojure.lang.Var"))))
                                      (26 (return))
                                      (endofcode 27))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 78)
                                   (parsedcode
                                      (0 (bipush 8))
                                      (2 (anewarray (class "java.lang.Object")))
                                      (5 (dup))
                                      (6 (iconst_0))
                                      (7 (ldc 3))         ;;STRING:: "-i"
                                      (9 (aastore))
                                      (10 (dup))
                                      (11 (iconst_1))
                                      (12 (getstatic (fieldCP "const__0" "clojure.main$init_dispatch" (class "clojure.lang.Var"))))
                                      (15 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (18 (aastore))
                                      (19 (dup))
                                      (20 (iconst_2))
                                      (21 (ldc 4))        ;;STRING:: "--init"
                                      (23 (aastore))
                                      (24 (dup))
                                      (25 (iconst_3))
                                      (26 (getstatic (fieldCP "const__0" "clojure.main$init_dispatch" (class "clojure.lang.Var"))))
                                      (29 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (32 (aastore))
                                      (33 (dup))
                                      (34 (iconst_4))
                                      (35 (ldc 5))        ;;STRING:: "-e"
                                      (37 (aastore))
                                      (38 (dup))
                                      (39 (iconst_5))
                                      (40 (getstatic (fieldCP "const__1" "clojure.main$init_dispatch" (class "clojure.lang.Var"))))
                                      (43 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (46 (aastore))
                                      (47 (dup))
                                      (48 (bipush 6))
                                      (50 (ldc 6))        ;;STRING:: "--eval"
                                      (52 (aastore))
                                      (53 (dup))
                                      (54 (bipush 7))
                                      (56 (getstatic (fieldCP "const__1" "clojure.main$init_dispatch" (class "clojure.lang.Var"))))
                                      (59 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (62 (aastore))
                                      (63 (invokestatic
					(methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (66 (checkcast (class "clojure.lang.IFn")))
                                      (69 (aload_1))
                                      (70 (aconst_null))
                                      (71 (astore_1))
                                      (72 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (77 (areturn))
                                      (endofcode 78))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *main$init_dispatch-class-table*
  (make-static-class-decls 
   *clojure.main$init_dispatch*))

(defconst *package-name-map* 
  ("clojure.main$init_dispatch" . "clojure"))

