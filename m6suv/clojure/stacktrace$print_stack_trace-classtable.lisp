; stacktrace$print_stack_trace-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:58 CDT 2014.
;

(defconst *clojure.stacktrace$print_stack_trace*
 (make-class-def
      '(class "clojure.stacktrace$print_stack_trace"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.stacktrace")
                        (STRING  "print-stack-trace")
                        (STRING  "print-throwable")
                        (STRING  "clojure.core")
                        (STRING  "newline")
                        (STRING  "print")
                        (STRING  "print-trace-element")
                        (STRING  "first")
                        (STRING  "seq")
                        (STRING  "nil?")
                        (STRING  "rest")
                        (STRING  "take")
                        (STRING  "dec")
                        (STRING  "<")
                        (STRING  "unchecked-inc")
                        (STRING  "chunked-seq?")
                        (STRING  "chunk-first")
                        (STRING  "chunk-rest")
                        (STRING  "int")
                        (STRING  "count")
                        (STRING  "next")
                        (STRING  "getStackTrace")
                        (STRING  " at ")
                        (STRING  "    "))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__19" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 255)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.stacktrace"
                                      (2 (ldc 1))         ;;STRING:: "print-stack-trace"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.stacktrace"
                                      (15 (ldc 2))        ;;STRING:: "print-throwable"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (26 (ldc 3))        ;;STRING:: "clojure.core"
                                      (28 (ldc 4))        ;;STRING:: "newline"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (39 (ldc 3))        ;;STRING:: "clojure.core"
                                      (41 (ldc 5))        ;;STRING:: "print"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (52 (ldc 0))        ;;STRING:: "clojure.stacktrace"
                                      (54 (ldc 6))        ;;STRING:: "print-trace-element"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (65 (ldc 3))        ;;STRING:: "clojure.core"
                                      (67 (ldc 7))        ;;STRING:: "first"
                                      (69 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (72 (checkcast (class "clojure.lang.Var")))
                                      (75 (putstatic (fieldCP "const__5" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (78 (ldc 3))        ;;STRING:: "clojure.core"
                                      (80 (ldc 8))        ;;STRING:: "seq"
                                      (82 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (85 (checkcast (class "clojure.lang.Var")))
                                      (88 (putstatic (fieldCP "const__6" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (91 (ldc 3))        ;;STRING:: "clojure.core"
                                      (93 (ldc 9))        ;;STRING:: "nil?"
                                      (95 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (98 (checkcast (class "clojure.lang.Var")))
                                      (101 (putstatic (fieldCP "const__7" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (104 (ldc 3))       ;;STRING:: "clojure.core"
                                      (106 (ldc 10))      ;;STRING:: "rest"
                                      (108 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (111 (checkcast (class "clojure.lang.Var")))
                                      (114 (putstatic (fieldCP "const__8" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (117 (ldc 3))       ;;STRING:: "clojure.core"
                                      (119 (ldc 11))      ;;STRING:: "take"
                                      (121 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (124 (checkcast (class "clojure.lang.Var")))
                                      (127 (putstatic (fieldCP "const__9" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (130 (ldc 3))       ;;STRING:: "clojure.core"
                                      (132 (ldc 12))      ;;STRING:: "dec"
                                      (134 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (137 (checkcast (class "clojure.lang.Var")))
                                      (140 (putstatic (fieldCP "const__10" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (143 (lconst_0))
                                      (144 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (147 (putstatic (fieldCP "const__11" "clojure.stacktrace$print_stack_trace" (class "java.lang.Object"))))
                                      (150 (ldc 3))       ;;STRING:: "clojure.core"
                                      (152 (ldc 13))      ;;STRING:: "<"
                                      (154 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (157 (checkcast (class "clojure.lang.Var")))
                                      (160 (putstatic (fieldCP "const__12" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (163 (ldc 3))       ;;STRING:: "clojure.core"
                                      (165 (ldc 14))      ;;STRING:: "unchecked-inc"
                                      (167 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (170 (checkcast (class "clojure.lang.Var")))
                                      (173 (putstatic (fieldCP "const__13" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (176 (ldc 3))       ;;STRING:: "clojure.core"
                                      (178 (ldc 15))      ;;STRING:: "chunked-seq?"
                                      (180 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (183 (checkcast (class "clojure.lang.Var")))
                                      (186 (putstatic (fieldCP "const__14" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (189 (ldc 3))       ;;STRING:: "clojure.core"
                                      (191 (ldc 16))      ;;STRING:: "chunk-first"
                                      (193 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (196 (checkcast (class "clojure.lang.Var")))
                                      (199 (putstatic (fieldCP "const__15" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (202 (ldc 3))       ;;STRING:: "clojure.core"
                                      (204 (ldc 17))      ;;STRING:: "chunk-rest"
                                      (206 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (209 (checkcast (class "clojure.lang.Var")))
                                      (212 (putstatic (fieldCP "const__16" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (215 (ldc 3))       ;;STRING:: "clojure.core"
                                      (217 (ldc 18))      ;;STRING:: "int"
                                      (219 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (222 (checkcast (class "clojure.lang.Var")))
                                      (225 (putstatic (fieldCP "const__17" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (228 (ldc 3))       ;;STRING:: "clojure.core"
                                      (230 (ldc 19))      ;;STRING:: "count"
                                      (232 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (235 (checkcast (class "clojure.lang.Var")))
                                      (238 (putstatic (fieldCP "const__18" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (241 (ldc 3))       ;;STRING:: "clojure.core"
                                      (243 (ldc 20))      ;;STRING:: "next"
                                      (245 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (248 (checkcast (class "clojure.lang.Var")))
                                      (251 (putstatic (fieldCP "const__19" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (254 (return))
                                      (endofcode 255))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 8) (max_locals . 13) (code_length . 538)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (ldc 21)) ;;STRING:: "getStackTrace"
                                      (3 (invokestatic (methodCP "invokeNoArgInstanceMember" "clojure.lang.Reflector" ((class "java.lang.Object") (class "java.lang.String")) (class "java.lang.Object")))) 
                                      (6 (astore_3)) 
                                      (7 (getstatic (fieldCP "const__1" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (10 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (13 (checkcast (class "clojure.lang.IFn"))) 
                                      (16 (aload_1)) 
                                      (17 (aconst_null)) 
                                      (18 (astore_1)) 
                                      (19 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (24 (pop)) 
                                      (25 (getstatic (fieldCP "const__2" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (28 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (31 (checkcast (class "clojure.lang.IFn"))) 
                                      (34 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (39 (pop)) 
                                      (40 (getstatic (fieldCP "const__3" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (43 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (46 (checkcast (class "clojure.lang.IFn"))) 
                                      (49 (ldc 22)) ;;STRING:: " at "
                                      (51 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (56 (pop)) 
                                      (57 (getstatic (fieldCP "const__4" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (60 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (63 (checkcast (class "clojure.lang.IFn"))) 
                                      (66 (getstatic (fieldCP "const__5" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (69 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (72 (checkcast (class "clojure.lang.IFn"))) 
                                      (75 (aload_3)) 
                                      (76 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (81 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (86 (pop)) 
                                      (87 (getstatic (fieldCP "const__2" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (90 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (93 (checkcast (class "clojure.lang.IFn"))) 
                                      (96 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (101 (pop)) 
                                      (102 (getstatic (fieldCP "const__6" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (105 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (108 (checkcast (class "clojure.lang.IFn"))) 
                                      (111 (aload_2)) 
                                      (112 (aconst_null)) 
                                      (113 (invokestatic (methodCP "identical" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (116 (ifeq 140)) ;;to TAG_0
                                      (119 (getstatic (fieldCP "const__8" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (122 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (125 (checkcast (class "clojure.lang.IFn"))) 
                                      (128 (aload_3)) 
                                      (129 (aconst_null)) 
                                      (130 (astore_3)) 
                                      (131 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (136 (goto 177))  ;;to TAG_1
                                      (139 (pop)) 
                                      (140 (getstatic (fieldCP "const__9" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) ;;at TAG_0
                                      (143 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (146 (checkcast (class "clojure.lang.IFn"))) 
                                      (149 (aload_2)) 
                                      (150 (aconst_null)) 
                                      (151 (astore_2)) 
                                      (152 (invokestatic (methodCP "dec" "clojure.lang.Numbers" ((class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (155 (getstatic (fieldCP "const__8" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (158 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (161 (checkcast (class "clojure.lang.IFn"))) 
                                      (164 (aload_3)) 
                                      (165 (aconst_null)) 
                                      (166 (astore_3)) 
                                      (167 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (172 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (177 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_1
                                      (182 (astore 4)) 
                                      (184 (aconst_null)) 
                                      (185 (astore 5)) 
                                      (187 (lconst_0)) 
                                      (188 (lstore 6)) 
                                      (190 (lconst_0)) 
                                      (191 (lstore 8)) 
                                      (193 (lload 8)) ;;at TAG_3
                                      (195 (lload 6)) 
                                      (197 (lcmp)) 
                                      (198 (ifge 295)) ;;to TAG_2
                                      (201 (aload 5)) 
                                      (203 (checkcast (class "clojure.lang.Indexed"))) 
                                      (206 (lload 8)) 
                                      (208 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (211 (invokeinterface (methodCP "nth" "clojure.lang.Indexed" (int) (class "java.lang.Object")) 2)) 
                                      (216 (astore 10)) 
                                      (218 (getstatic (fieldCP "const__3" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (221 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (224 (checkcast (class "clojure.lang.IFn"))) 
                                      (227 (ldc 23)) ;;STRING:: "    "
                                      (229 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (234 (pop)) 
                                      (235 (getstatic (fieldCP "const__4" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (238 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (241 (checkcast (class "clojure.lang.IFn"))) 
                                      (244 (aload 10)) 
                                      (246 (aconst_null)) 
                                      (247 (astore 10)) 
                                      (249 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (254 (pop)) 
                                      (255 (getstatic (fieldCP "const__2" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (258 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (261 (checkcast (class "clojure.lang.IFn"))) 
                                      (264 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (269 (pop)) 
                                      (270 (aload 4)) 
                                      (272 (aload 5)) 
                                      (274 (lload 6)) 
                                      (276 (lload 8)) 
                                      (278 (lconst_1)) 
                                      (279 (ladd)) 
                                      (280 (lstore 8)) 
                                      (282 (lstore 6)) 
                                      (284 (astore 5)) 
                                      (286 (astore 4)) 
                                      (288 (goto 193)) ;;to TAG_3
                                      (291 (goto 537)) ;;to TAG_4
                                      (294 (pop)) 
                                      (295 (getstatic (fieldCP "const__6" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) ;;at TAG_2
                                      (298 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (301 (checkcast (class "clojure.lang.IFn"))) 
                                      (304 (aload 4)) 
                                      (306 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (311 (astore 10)) 
                                      (313 (aload 10)) 
                                      (315 (dup)) 
                                      (316 (ifnull 535)) ;;to TAG_5
                                      (319 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (322 (if_acmpeq 536)) ;;to TAG_6
                                      (325 (aload 10)) 
                                      (327 (aconst_null)) 
                                      (328 (astore 10)) 
                                      (330 (astore 11)) 
                                      (332 (getstatic (fieldCP "const__14" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (335 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (338 (checkcast (class "clojure.lang.IFn"))) 
                                      (341 (aload 11)) 
                                      (343 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (348 (dup)) 
                                      (349 (ifnull 428)) ;;to TAG_7
                                      (352 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (355 (if_acmpeq 429)) ;;to TAG_8
                                      (358 (getstatic (fieldCP "const__15" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (361 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (364 (checkcast (class "clojure.lang.IFn"))) 
                                      (367 (aload 11)) 
                                      (369 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (374 (astore 12)) 
                                      (376 (getstatic (fieldCP "const__16" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (379 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (382 (checkcast (class "clojure.lang.IFn"))) 
                                      (385 (aload 11)) 
                                      (387 (aconst_null)) 
                                      (388 (astore 11)) 
                                      (390 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (395 (aload 12)) 
                                      (397 (aload 12)) 
                                      (399 (aconst_null)) 
                                      (400 (astore 12)) 
                                      (402 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (405 (invokestatic (methodCP "intCast" "clojure.lang.RT" (int) int))) 
                                      (408 (i2l)) 
                                      (409 (lconst_0)) 
                                      (410 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (413 (i2l)) 
                                      (414 (lstore 8)) 
                                      (416 (lstore 6)) 
                                      (418 (astore 5)) 
                                      (420 (astore 4)) 
                                      (422 (goto 193)) ;;to TAG_3
                                      (425 (goto 532)) ;;to TAG_9
                                      (428 (pop)) ;;at TAG_7
                                      (429 (getstatic (fieldCP "const__5" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) ;;at TAG_8
                                      (432 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (435 (checkcast (class "clojure.lang.IFn"))) 
                                      (438 (aload 11)) 
                                      (440 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (445 (astore 12)) 
                                      (447 (getstatic (fieldCP "const__3" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (450 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (453 (checkcast (class "clojure.lang.IFn"))) 
                                      (456 (ldc 23)) ;;STRING:: "    "
                                      (458 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (463 (pop)) 
                                      (464 (getstatic (fieldCP "const__4" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (467 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (470 (checkcast (class "clojure.lang.IFn"))) 
                                      (473 (aload 12)) 
                                      (475 (aconst_null)) 
                                      (476 (astore 12)) 
                                      (478 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (483 (pop)) 
                                      (484 (getstatic (fieldCP "const__2" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (487 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (490 (checkcast (class "clojure.lang.IFn"))) 
                                      (493 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (498 (pop)) 
                                      (499 (getstatic (fieldCP "const__19" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var")))) 
                                      (502 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (505 (checkcast (class "clojure.lang.IFn"))) 
                                      (508 (aload 11)) 
                                      (510 (aconst_null)) 
                                      (511 (astore 11)) 
                                      (513 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (518 (aconst_null)) 
                                      (519 (lconst_0)) 
                                      (520 (lconst_0)) 
                                      (521 (lstore 8)) 
                                      (523 (lstore 6)) 
                                      (525 (astore 5)) 
                                      (527 (astore 4)) 
                                      (529 (goto 193)) ;;to TAG_3
                                      (532 (goto 537)) ;;to TAG_4;;at TAG_9
                                      (535 (pop)) ;;at TAG_5
                                      (536 (aconst_null)) ;;at TAG_6
                                      (537 (areturn)) ;;at TAG_4
                                      (endofcode 538))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 19)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.stacktrace$print_stack_trace" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (checkcast (class "clojure.lang.IFn")))
                                      (9 (aload_1))
                                      (10 (aconst_null))
                                      (11 (astore_1))
                                      (12 (aconst_null))
                                      (13 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (18 (areturn))
                                      (endofcode 19))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *stacktrace$print_stack_trace-class-table*
  (make-static-class-decls 
   *clojure.stacktrace$print_stack_trace*))

(defconst *package-name-map* 
  ("clojure.stacktrace$print_stack_trace" . "clojure"))

