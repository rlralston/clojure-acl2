; test$test_ns-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:59 CDT 2014.
;

(defconst *clojure.test$test_ns*
 (make-class-def
      '(class "clojure.test$test_ns"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "push-thread-bindings")
                        (STRING  "hash-map")
                        (STRING  "clojure.test")
                        (STRING  "*report-counters*")
                        (STRING  "ref")
                        (STRING  "*initial-report-counters*")
                        (STRING  "the-ns")
                        (STRING  "do-report")
                        (STRING  "type")
                        (STRING  "begin-test-ns")
                        (STRING  "ns")
                        (STRING  "find-var")
                        (STRING  "symbol")
                        (STRING  "str")
                        (STRING  "ns-name")
                        (STRING  "var-get")
                        (STRING  "test-all-vars")
                        (STRING  "end-test-ns")
                        (STRING  "deref")
                        (STRING  "pop-thread-bindings")
                        (STRING  "test-ns-hook"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 244)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "push-thread-bindings"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.test$test_ns" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "hash-map"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.test$test_ns" (class "clojure.lang.Var"))))
                                      (26 (ldc 3))        ;;STRING:: "clojure.test"
                                      (28 (ldc 4))        ;;STRING:: "*report-counters*"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.test$test_ns" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 5))        ;;STRING:: "ref"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.test$test_ns" (class "clojure.lang.Var"))))
                                      (52 (ldc 3))        ;;STRING:: "clojure.test"
                                      (54 (ldc 6))        ;;STRING:: "*initial-report-counters*"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.test$test_ns" (class "clojure.lang.Var"))))
                                      (65 (ldc 0))        ;;STRING:: "clojure.core"
                                      (67 (ldc 7))        ;;STRING:: "the-ns"
                                      (69 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (72 (checkcast (class "clojure.lang.Var")))
                                      (75 (putstatic (fieldCP "const__5" "clojure.test$test_ns" (class "clojure.lang.Var"))))
                                      (78 (ldc 3))        ;;STRING:: "clojure.test"
                                      (80 (ldc 8))        ;;STRING:: "do-report"
                                      (82 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (85 (checkcast (class "clojure.lang.Var")))
                                      (88 (putstatic (fieldCP "const__6" "clojure.test$test_ns" (class "clojure.lang.Var"))))
                                      (91 (aconst_null))
                                      (92 (ldc 9))        ;;STRING:: "type"
                                      (94 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (97 (checkcast (class "clojure.lang.Keyword")))
                                      (100 (putstatic (fieldCP "const__7" "clojure.test$test_ns" (class "clojure.lang.Keyword"))))
                                      (103 (aconst_null))
                                      (104 (ldc 10))      ;;STRING:: "begin-test-ns"
                                      (106 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (109 (checkcast (class "clojure.lang.Keyword")))
                                      (112 (putstatic (fieldCP "const__8" "clojure.test$test_ns" (class "clojure.lang.Keyword"))))
                                      (115 (aconst_null))
                                      (116 (ldc 11))      ;;STRING:: "ns"
                                      (118 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (121 (checkcast (class "clojure.lang.Keyword")))
                                      (124 (putstatic (fieldCP "const__9" "clojure.test$test_ns" (class "clojure.lang.Keyword"))))
                                      (127 (ldc 0))       ;;STRING:: "clojure.core"
                                      (129 (ldc 12))      ;;STRING:: "find-var"
                                      (131 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (134 (checkcast (class "clojure.lang.Var")))
                                      (137 (putstatic (fieldCP "const__10" "clojure.test$test_ns" (class "clojure.lang.Var"))))
                                      (140 (ldc 0))       ;;STRING:: "clojure.core"
                                      (142 (ldc 13))      ;;STRING:: "symbol"
                                      (144 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (147 (checkcast (class "clojure.lang.Var")))
                                      (150 (putstatic (fieldCP "const__11" "clojure.test$test_ns" (class "clojure.lang.Var"))))
                                      (153 (ldc 0))       ;;STRING:: "clojure.core"
                                      (155 (ldc 14))      ;;STRING:: "str"
                                      (157 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (160 (checkcast (class "clojure.lang.Var")))
                                      (163 (putstatic (fieldCP "const__12" "clojure.test$test_ns" (class "clojure.lang.Var"))))
                                      (166 (ldc 0))       ;;STRING:: "clojure.core"
                                      (168 (ldc 15))      ;;STRING:: "ns-name"
                                      (170 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (173 (checkcast (class "clojure.lang.Var")))
                                      (176 (putstatic (fieldCP "const__13" "clojure.test$test_ns" (class "clojure.lang.Var"))))
                                      (179 (ldc 0))       ;;STRING:: "clojure.core"
                                      (181 (ldc 16))      ;;STRING:: "var-get"
                                      (183 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (186 (checkcast (class "clojure.lang.Var")))
                                      (189 (putstatic (fieldCP "const__14" "clojure.test$test_ns" (class "clojure.lang.Var"))))
                                      (192 (ldc 3))       ;;STRING:: "clojure.test"
                                      (194 (ldc 17))      ;;STRING:: "test-all-vars"
                                      (196 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (199 (checkcast (class "clojure.lang.Var")))
                                      (202 (putstatic (fieldCP "const__15" "clojure.test$test_ns" (class "clojure.lang.Var"))))
                                      (205 (aconst_null))
                                      (206 (ldc 18))      ;;STRING:: "end-test-ns"
                                      (208 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (211 (checkcast (class "clojure.lang.Keyword")))
                                      (214 (putstatic (fieldCP "const__16" "clojure.test$test_ns" (class "clojure.lang.Keyword"))))
                                      (217 (ldc 0))       ;;STRING:: "clojure.core"
                                      (219 (ldc 19))      ;;STRING:: "deref"
                                      (221 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (224 (checkcast (class "clojure.lang.Var")))
                                      (227 (putstatic (fieldCP "const__17" "clojure.test$test_ns" (class "clojure.lang.Var"))))
                                      (230 (ldc 0))       ;;STRING:: "clojure.core"
                                      (232 (ldc 20))      ;;STRING:: "pop-thread-bindings"
                                      (234 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (237 (checkcast (class "clojure.lang.Var")))
                                      (240 (putstatic (fieldCP "const__18" "clojure.test$test_ns" (class "clojure.lang.Var"))))
                                      (243 (return))
                                      (endofcode 244))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 7) (code_length . 347)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.test$test_ns" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (getstatic (fieldCP "const__1" "clojure.test$test_ns" (class "clojure.lang.Var")))) 
                                      (12 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (15 (checkcast (class "clojure.lang.IFn"))) 
                                      (18 (getstatic (fieldCP "const__2" "clojure.test$test_ns" (class "clojure.lang.Var")))) 
                                      (21 (getstatic (fieldCP "const__3" "clojure.test$test_ns" (class "clojure.lang.Var")))) 
                                      (24 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (27 (checkcast (class "clojure.lang.IFn"))) 
                                      (30 (getstatic (fieldCP "const__4" "clojure.test$test_ns" (class "clojure.lang.Var")))) 
                                      (33 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (36 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (41 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (46 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (51 (pop)) 
                                      (52 (getstatic (fieldCP "const__5" "clojure.test$test_ns" (class "clojure.lang.Var")))) ;;at TAG_4
                                      (55 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (58 (checkcast (class "clojure.lang.IFn"))) 
                                      (61 (aload_1)) 
                                      (62 (aconst_null)) 
                                      (63 (astore_1)) 
                                      (64 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (69 (astore_2)) 
                                      (70 (getstatic (fieldCP "const__6" "clojure.test$test_ns" (class "clojure.lang.Var")))) 
                                      (73 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (76 (checkcast (class "clojure.lang.IFn"))) 
                                      (79 (iconst_4)) 
                                      (80 (anewarray (class "java.lang.Object"))) 
                                      (83 (dup)) 
                                      (84 (iconst_0)) 
                                      (85 (getstatic (fieldCP "const__7" "clojure.test$test_ns" (class "clojure.lang.Keyword")))) 
                                      (88 (aastore)) 
                                      (89 (dup)) 
                                      (90 (iconst_1)) 
                                      (91 (getstatic (fieldCP "const__8" "clojure.test$test_ns" (class "clojure.lang.Keyword")))) 
                                      (94 (aastore)) 
                                      (95 (dup)) 
                                      (96 (iconst_2)) 
                                      (97 (getstatic (fieldCP "const__9" "clojure.test$test_ns" (class "clojure.lang.Keyword")))) 
                                      (100 (aastore)) 
                                      (101 (dup)) 
                                      (102 (iconst_3)) 
                                      (103 (aload_2)) 
                                      (104 (aastore)) 
                                      (105 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (108 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (113 (pop)) 
                                      (114 (getstatic (fieldCP "const__10" "clojure.test$test_ns" (class "clojure.lang.Var")))) 
                                      (117 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (120 (checkcast (class "clojure.lang.IFn"))) 
                                      (123 (getstatic (fieldCP "const__11" "clojure.test$test_ns" (class "clojure.lang.Var")))) 
                                      (126 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (129 (checkcast (class "clojure.lang.IFn"))) 
                                      (132 (getstatic (fieldCP "const__12" "clojure.test$test_ns" (class "clojure.lang.Var")))) 
                                      (135 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (138 (checkcast (class "clojure.lang.IFn"))) 
                                      (141 (getstatic (fieldCP "const__13" "clojure.test$test_ns" (class "clojure.lang.Var")))) 
                                      (144 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (147 (checkcast (class "clojure.lang.IFn"))) 
                                      (150 (aload_2)) 
                                      (151 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (156 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (161 (ldc 21)) ;;STRING:: "test-ns-hook"
                                      (163 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (168 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (173 (astore_3)) 
                                      (174 (aload_3)) 
                                      (175 (dup)) 
                                      (176 (ifnull 221)) ;;to TAG_0
                                      (179 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (182 (if_acmpeq 222)) ;;to TAG_1
                                      (185 (aload_3)) 
                                      (186 (aconst_null)) 
                                      (187 (astore_3)) 
                                      (188 (astore 4)) 
                                      (190 (getstatic (fieldCP "const__14" "clojure.test$test_ns" (class "clojure.lang.Var")))) 
                                      (193 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (196 (checkcast (class "clojure.lang.IFn"))) 
                                      (199 (aload 4)) 
                                      (201 (aconst_null)) 
                                      (202 (astore 4)) 
                                      (204 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (209 (checkcast (class "clojure.lang.IFn"))) 
                                      (212 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (217 (pop)) 
                                      (218 (goto 238))  ;;to TAG_2
                                      (221 (pop)) ;;at TAG_0
                                      (222 (getstatic (fieldCP "const__15" "clojure.test$test_ns" (class "clojure.lang.Var")))) ;;at TAG_1
                                      (225 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (228 (checkcast (class "clojure.lang.IFn"))) 
                                      (231 (aload_2)) 
                                      (232 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (237 (pop)) 
                                      (238 (getstatic (fieldCP "const__6" "clojure.test$test_ns" (class "clojure.lang.Var")))) ;;at TAG_2
                                      (241 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (244 (checkcast (class "clojure.lang.IFn"))) 
                                      (247 (iconst_4)) 
                                      (248 (anewarray (class "java.lang.Object"))) 
                                      (251 (dup)) 
                                      (252 (iconst_0)) 
                                      (253 (getstatic (fieldCP "const__7" "clojure.test$test_ns" (class "clojure.lang.Keyword")))) 
                                      (256 (aastore)) 
                                      (257 (dup)) 
                                      (258 (iconst_1)) 
                                      (259 (getstatic (fieldCP "const__16" "clojure.test$test_ns" (class "clojure.lang.Keyword")))) 
                                      (262 (aastore)) 
                                      (263 (dup)) 
                                      (264 (iconst_2)) 
                                      (265 (getstatic (fieldCP "const__9" "clojure.test$test_ns" (class "clojure.lang.Keyword")))) 
                                      (268 (aastore)) 
                                      (269 (dup)) 
                                      (270 (iconst_3)) 
                                      (271 (aload_2)) 
                                      (272 (aconst_null)) 
                                      (273 (astore_2)) 
                                      (274 (aastore)) 
                                      (275 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (278 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (283 (pop)) 
                                      (284 (getstatic (fieldCP "const__17" "clojure.test$test_ns" (class "clojure.lang.Var")))) 
                                      (287 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (290 (checkcast (class "clojure.lang.IFn"))) 
                                      (293 (getstatic (fieldCP "const__2" "clojure.test$test_ns" (class "clojure.lang.Var")))) 
                                      (296 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (299 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (304 (astore 5)) 
                                      (306 (getstatic (fieldCP "const__18" "clojure.test$test_ns" (class "clojure.lang.Var")))) ;;at TAG_5
                                      (309 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (312 (checkcast (class "clojure.lang.IFn"))) 
                                      (315 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (320 (pop)) 
                                      (321 (goto 344)) ;;to TAG_3
                                      (324 (astore 6)) ;;at TAG_6
                                      (326 (getstatic (fieldCP "const__18" "clojure.test$test_ns" (class "clojure.lang.Var")))) 
                                      (329 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (332 (checkcast (class "clojure.lang.IFn"))) 
                                      (335 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (340 (pop)) 
                                      (341 (aload 6)) 
                                      (343 (athrow)) 
                                      (344 (aload 5)) ;;at TAG_3
                                      (346 (areturn)) 
                                      (endofcode 347))
                                   (Exceptions 
                                     (handler 52 306  324 (class "java.lang.Throwable")))
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *test$test_ns-class-table*
  (make-static-class-decls 
   *clojure.test$test_ns*))

(defconst *package-name-map* 
  ("clojure.test$test_ns" . "clojure"))

