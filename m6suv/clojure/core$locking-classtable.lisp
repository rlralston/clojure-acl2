; core$locking-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:44 CDT 2014.
;

(defconst *clojure.core$locking*
 (make-class-def
      '(class "clojure.core$locking"
            "clojure.lang.RestFn"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "seq")
                        (STRING  "concat")
                        (STRING  "list")
                        (STRING  "let")
                        (STRING  "apply")
                        (STRING  "vector")
                        (STRING  "lockee__4071__auto__")
                        (STRING  "try")
                        (STRING  "monitor-enter")
                        (STRING  "finally")
                        (STRING  "monitor-exit"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 139)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "seq"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "concat"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "list"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "let"
                                      (43 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (46 (checkcast (class "clojure.lang.AFn")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.core$locking" (class "clojure.lang.AFn"))))
                                      (52 (ldc 0))        ;;STRING:: "clojure.core"
                                      (54 (ldc 5))        ;;STRING:: "apply"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (65 (ldc 0))        ;;STRING:: "clojure.core"
                                      (67 (ldc 6))        ;;STRING:: "vector"
                                      (69 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (72 (checkcast (class "clojure.lang.Var")))
                                      (75 (putstatic (fieldCP "const__5" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (78 (aconst_null))
                                      (79 (ldc 7))        ;;STRING:: "lockee__4071__auto__"
                                      (81 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (84 (checkcast (class "clojure.lang.AFn")))
                                      (87 (putstatic (fieldCP "const__6" "clojure.core$locking" (class "clojure.lang.AFn"))))
                                      (90 (aconst_null))
                                      (91 (ldc 8))        ;;STRING:: "try"
                                      (93 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (96 (checkcast (class "clojure.lang.AFn")))
                                      (99 (putstatic (fieldCP "const__7" "clojure.core$locking" (class "clojure.lang.AFn"))))
                                      (102 (aconst_null))
                                      (103 (ldc 9))       ;;STRING:: "monitor-enter"
                                      (105 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (108 (checkcast (class "clojure.lang.AFn")))
                                      (111 (putstatic (fieldCP "const__8" "clojure.core$locking" (class "clojure.lang.AFn"))))
                                      (114 (aconst_null))
                                      (115 (ldc 10))      ;;STRING:: "finally"
                                      (117 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (120 (checkcast (class "clojure.lang.AFn")))
                                      (123 (putstatic (fieldCP "const__9" "clojure.core$locking" (class "clojure.lang.AFn"))))
                                      (126 (aconst_null))
                                      (127 (ldc 11))      ;;STRING:: "monitor-exit"
                                      (129 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (132 (checkcast (class "clojure.lang.AFn")))
                                      (135 (putstatic (fieldCP "const__10" "clojure.core$locking" (class "clojure.lang.AFn"))))
                                      (138 (return))
                                      (endofcode 139))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.RestFn" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doInvoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 20) (max_locals . 5) (code_length . 417)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (checkcast (class "clojure.lang.IFn")))
                                      (9 (getstatic (fieldCP "const__1" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (12 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (15 (checkcast (class "clojure.lang.IFn")))
                                      (18 (getstatic (fieldCP "const__2" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (21 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (24 (checkcast (class "clojure.lang.IFn")))
                                      (27 (getstatic (fieldCP "const__3" "clojure.core$locking" (class "clojure.lang.AFn"))))
                                      (30 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (35 (getstatic (fieldCP "const__2" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (38 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (41 (checkcast (class "clojure.lang.IFn")))
                                      (44 (getstatic (fieldCP "const__4" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (47 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (50 (checkcast (class "clojure.lang.IFn")))
                                      (53 (getstatic (fieldCP "const__5" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (56 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (59 (getstatic (fieldCP "const__0" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (62 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (65 (checkcast (class "clojure.lang.IFn")))
                                      (68 (getstatic (fieldCP "const__1" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (71 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (74 (checkcast (class "clojure.lang.IFn")))
                                      (77 (getstatic (fieldCP "const__2" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (80 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (83 (checkcast (class "clojure.lang.IFn")))
                                      (86 (getstatic (fieldCP "const__6" "clojure.core$locking" (class "clojure.lang.AFn"))))
                                      (89 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (94 (getstatic (fieldCP "const__2" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (97 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (100 (checkcast (class "clojure.lang.IFn")))
                                      (103 (aload_3))
                                      (104 (aconst_null))
                                      (105 (astore_3))
                                      (106 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (111 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (116 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (121 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (126 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (131 (getstatic (fieldCP "const__2" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (134 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (137 (checkcast (class "clojure.lang.IFn")))
                                      (140 (getstatic (fieldCP "const__0" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (143 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (146 (checkcast (class "clojure.lang.IFn")))
                                      (149 (getstatic (fieldCP "const__1" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (152 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (155 (checkcast (class "clojure.lang.IFn")))
                                      (158 (getstatic (fieldCP "const__2" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (161 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (164 (checkcast (class "clojure.lang.IFn")))
                                      (167 (getstatic (fieldCP "const__7" "clojure.core$locking" (class "clojure.lang.AFn"))))
                                      (170 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (175 (getstatic (fieldCP "const__2" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (178 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (181 (checkcast (class "clojure.lang.IFn")))
                                      (184 (getstatic (fieldCP "const__0" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (187 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (190 (checkcast (class "clojure.lang.IFn")))
                                      (193 (getstatic (fieldCP "const__1" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (196 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (199 (checkcast (class "clojure.lang.IFn")))
                                      (202 (getstatic (fieldCP "const__2" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (205 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (208 (checkcast (class "clojure.lang.IFn")))
                                      (211 (getstatic (fieldCP "const__8" "clojure.core$locking" (class "clojure.lang.AFn"))))
                                      (214 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (219 (getstatic (fieldCP "const__2" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (222 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (225 (checkcast (class "clojure.lang.IFn")))
                                      (228 (getstatic (fieldCP "const__6" "clojure.core$locking" (class "clojure.lang.AFn"))))
                                      (231 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (236 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (241 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (246 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (251 (aload 4))
                                      (253 (aconst_null))
                                      (254 (astore 4))
                                      (256 (getstatic (fieldCP "const__2" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (259 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (262 (checkcast (class "clojure.lang.IFn")))
                                      (265 (getstatic (fieldCP "const__0" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (268 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (271 (checkcast (class "clojure.lang.IFn")))
                                      (274 (getstatic (fieldCP "const__1" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (277 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (280 (checkcast (class "clojure.lang.IFn")))
                                      (283 (getstatic (fieldCP "const__2" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (286 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (289 (checkcast (class "clojure.lang.IFn")))
                                      (292 (getstatic (fieldCP "const__9" "clojure.core$locking" (class "clojure.lang.AFn"))))
                                      (295 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (300 (getstatic (fieldCP "const__2" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (303 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (306 (checkcast (class "clojure.lang.IFn")))
                                      (309 (getstatic (fieldCP "const__0" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (312 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (315 (checkcast (class "clojure.lang.IFn")))
                                      (318 (getstatic (fieldCP "const__1" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (321 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (324 (checkcast (class "clojure.lang.IFn")))
                                      (327 (getstatic (fieldCP "const__2" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (330 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (333 (checkcast (class "clojure.lang.IFn")))
                                      (336 (getstatic (fieldCP "const__10" "clojure.core$locking" (class "clojure.lang.AFn"))))
                                      (339 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (344 (getstatic (fieldCP "const__2" "clojure.core$locking" (class "clojure.lang.Var"))))
                                      (347 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (350 (checkcast (class "clojure.lang.IFn")))
                                      (353 (getstatic (fieldCP "const__6" "clojure.core$locking" (class "clojure.lang.AFn"))))
                                      (356 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (361 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (366 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (371 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (376 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (381 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (386 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (391 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5))
                                      (396 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (401 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (406 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4))
                                      (411 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (416 (areturn))
                                      (endofcode 417))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getRequiredArity"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iconst_3))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$locking-class-table*
  (make-static-class-decls 
   *clojure.core$locking*))

(defconst *package-name-map* 
  ("clojure.core$locking" . "clojure"))

