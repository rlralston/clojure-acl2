; core$asm_type-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:40 CDT 2014.
;

(defconst *clojure.core$asm_type*
 (make-class-def
      '(class "clojure.core$asm_type"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "instance?")
                        (STRING  "prim->class")
                        (STRING  "the-class")
                        (STRING  "str")
                        (STRING  "some")
                        (STRING  "java.lang.")
                        (STRING  ".")
                        (STRING  "/"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 111)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "instance?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$asm_type" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "prim->class"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$asm_type" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "the-class"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$asm_type" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "str"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.core$asm_type" (class "clojure.lang.Var"))))
                                      (52 (ldc 0))        ;;STRING:: "clojure.core"
                                      (54 (ldc 5))        ;;STRING:: "some"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.core$asm_type" (class "clojure.lang.Var"))))
                                      (65 (bipush 46))
                                      (67 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (70 (putstatic (fieldCP "const__5" "clojure.core$asm_type" (class "java.lang.Object"))))
                                      (73 (bipush 91))
                                      (75 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (78 (putstatic (fieldCP "const__6" "clojure.core$asm_type" (class "java.lang.Object"))))
                                      (81 (iconst_2))
                                      (82 (anewarray (class "java.lang.Object")))
                                      (85 (dup))
                                      (86 (iconst_0))
                                      (87 (bipush 46))
                                      (89 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (92 (aastore))
                                      (93 (dup))
                                      (94 (iconst_1))
                                      (95 (bipush 91))
                                      (97 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (100 (aastore))
                                      (101 (invokestatic
					(methodCP "create" "clojure.lang.PersistentHashSet" ((array (class "java.lang.Object"))) (class "clojure.lang.PersistentHashSet"))))
                                      (104 (checkcast (class "clojure.lang.AFn")))
                                      (107 (putstatic (fieldCP "const__7" "clojure.core$asm_type" (class "clojure.lang.AFn"))))
                                      (110 (return))
                                      (endofcode 111))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 173)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (instanceof (class "java.lang.Class"))) 
                                      (4 (istore_2)) 
                                      (5 (iload_2)) 
                                      (6 (ifeq 26)) ;;to TAG_0
                                      (9 (iload_2)) 
                                      (10 (ifeq 19))  ;;to TAG_1
                                      (13 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (16 (goto 22)) ;;to TAG_2
                                      (19 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_1
                                      (22 (goto 41)) ;;to TAG_3;;at TAG_2
                                      (25 (pop)) 
                                      (26 (getstatic (fieldCP "const__1" "clojure.core$asm_type" (class "clojure.lang.Var")))) ;;at TAG_0
                                      (29 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (32 (checkcast (class "clojure.lang.IFn"))) 
                                      (35 (aload_1)) 
                                      (36 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (41 (dup)) ;;at TAG_3
                                      (42 (ifnull 77)) ;;to TAG_4
                                      (45 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (48 (if_acmpeq 78)) ;;to TAG_5
                                      (51 (getstatic (fieldCP "const__2" "clojure.core$asm_type" (class "clojure.lang.Var")))) 
                                      (54 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (57 (checkcast (class "clojure.lang.IFn"))) 
                                      (60 (aload_1)) 
                                      (61 (aconst_null)) 
                                      (62 (astore_1)) 
                                      (63 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (68 (checkcast (class "java.lang.Class"))) 
                                      (71 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (74 (goto 172)) ;;to TAG_6
                                      (77 (pop)) ;;at TAG_4
                                      (78 (getstatic (fieldCP "const__3" "clojure.core$asm_type" (class "clojure.lang.Var")))) ;;at TAG_5
                                      (81 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (84 (checkcast (class "clojure.lang.IFn"))) 
                                      (87 (aload_1)) 
                                      (88 (aconst_null)) 
                                      (89 (astore_1)) 
                                      (90 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (95 (astore_2)) 
                                      (96 (getstatic (fieldCP "const__4" "clojure.core$asm_type" (class "clojure.lang.Var")))) 
                                      (99 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (102 (checkcast (class "clojure.lang.IFn"))) 
                                      (105 (getstatic (fieldCP "const__7" "clojure.core$asm_type" (class "clojure.lang.AFn")))) 
                                      (108 (aload_2)) 
                                      (109 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (114 (dup)) 
                                      (115 (ifnull 130)) ;;to TAG_7
                                      (118 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (121 (if_acmpeq 131)) ;;to TAG_8
                                      (124 (aload_2)) 
                                      (125 (aconst_null)) 
                                      (126 (astore_2)) 
                                      (127 (goto 150)) ;;to TAG_9
                                      (130 (pop)) ;;at TAG_7
                                      (131 (getstatic (fieldCP "const__3" "clojure.core$asm_type" (class "clojure.lang.Var")))) ;;at TAG_8
                                      (134 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (137 (checkcast (class "clojure.lang.IFn"))) 
                                      (140 (ldc 6)) ;;STRING:: "java.lang."
                                      (142 (aload_2)) 
                                      (143 (aconst_null)) 
                                      (144 (astore_2)) 
                                      (145 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (150 (checkcast (class "java.lang.String"))) ;;at TAG_9
                                      (153 (ldc 7)) ;;STRING:: "."
                                      (155 (checkcast (class "java.lang.CharSequence"))) 
                                      (158 (ldc 8)) ;;STRING:: "/"
                                      (160 (checkcast (class "java.lang.CharSequence"))) 
                                      (163 (invokevirtual (methodCP "replace" "java.lang.String" ((class "java.lang.CharSequence") (class "java.lang.CharSequence")) (class "java.lang.String")))) 
                                      (166 (checkcast (class "java.lang.String"))) 
                                      (169 (invokestatic (methodCP "getObjectType" "clojure.asm.Type" ((class "java.lang.String")) (class "clojure.asm.Type")))) 
                                      (172 (areturn)) ;;at TAG_6
                                      (endofcode 173))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$asm_type-class-table*
  (make-static-class-decls 
   *clojure.core$asm_type*))

(defconst *package-name-map* 
  ("clojure.core$asm_type" . "clojure"))

