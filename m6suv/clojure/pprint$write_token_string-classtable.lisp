; pprint$write_token_string-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:57 CDT 2014.
;

(defconst *clojure.pprint$write_token_string*
 (make-class-def
      '(class "clojure.pprint$write_token_string"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.pprint")
                        (STRING  "split-at-newline")
                        (STRING  "clojure.core")
                        (STRING  "nth")
                        (STRING  "write-tokens")
                        (STRING  "get-section")
                        (STRING  "first")
                        (STRING  "emit-nl?")
                        (STRING  "get-sub-section")
                        (STRING  "emit-nl")
                        (STRING  "next")
                        (STRING  "not")
                        (STRING  "tokens-fit?")
                        (STRING  "write-token-string")
                        (STRING  "=")
                        (STRING  "into")
                        (STRING  "concat"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 210)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.pprint"
                                      (2 (ldc 1))         ;;STRING:: "split-at-newline"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$write_token_string" (class "clojure.lang.Var"))))
                                      (13 (ldc 2))        ;;STRING:: "clojure.core"
                                      (15 (ldc 3))        ;;STRING:: "nth"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$write_token_string" (class "clojure.lang.Var"))))
                                      (26 (lconst_0))
                                      (27 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (30 (putstatic (fieldCP "const__2" "clojure.pprint$write_token_string" (class "java.lang.Object"))))
                                      (33 (lconst_1))
                                      (34 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (37 (putstatic (fieldCP "const__3" "clojure.pprint$write_token_string" (class "java.lang.Object"))))
                                      (40 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (42 (ldc 4))        ;;STRING:: "write-tokens"
                                      (44 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (47 (checkcast (class "clojure.lang.Var")))
                                      (50 (putstatic (fieldCP "const__4" "clojure.pprint$write_token_string" (class "clojure.lang.Var"))))
                                      (53 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (55 (ldc 5))        ;;STRING:: "get-section"
                                      (57 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (60 (checkcast (class "clojure.lang.Var")))
                                      (63 (putstatic (fieldCP "const__5" "clojure.pprint$write_token_string" (class "clojure.lang.Var"))))
                                      (66 (ldc 2))        ;;STRING:: "clojure.core"
                                      (68 (ldc 6))        ;;STRING:: "first"
                                      (70 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (73 (checkcast (class "clojure.lang.Var")))
                                      (76 (putstatic (fieldCP "const__6" "clojure.pprint$write_token_string" (class "clojure.lang.Var"))))
                                      (79 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (81 (ldc 7))        ;;STRING:: "emit-nl?"
                                      (83 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (86 (checkcast (class "clojure.lang.Var")))
                                      (89 (putstatic (fieldCP "const__7" "clojure.pprint$write_token_string" (class "clojure.lang.Var"))))
                                      (92 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (94 (ldc 8))        ;;STRING:: "get-sub-section"
                                      (96 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (99 (checkcast (class "clojure.lang.Var")))
                                      (102 (putstatic (fieldCP "const__8" "clojure.pprint$write_token_string" (class "clojure.lang.Var"))))
                                      (105 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (107 (ldc 9))       ;;STRING:: "emit-nl"
                                      (109 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (112 (checkcast (class "clojure.lang.Var")))
                                      (115 (putstatic (fieldCP "const__9" "clojure.pprint$write_token_string" (class "clojure.lang.Var"))))
                                      (118 (ldc 2))       ;;STRING:: "clojure.core"
                                      (120 (ldc 10))      ;;STRING:: "next"
                                      (122 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (125 (checkcast (class "clojure.lang.Var")))
                                      (128 (putstatic (fieldCP "const__10" "clojure.pprint$write_token_string" (class "clojure.lang.Var"))))
                                      (131 (ldc 2))       ;;STRING:: "clojure.core"
                                      (133 (ldc 11))      ;;STRING:: "not"
                                      (135 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (138 (checkcast (class "clojure.lang.Var")))
                                      (141 (putstatic (fieldCP "const__11" "clojure.pprint$write_token_string" (class "clojure.lang.Var"))))
                                      (144 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (146 (ldc 12))      ;;STRING:: "tokens-fit?"
                                      (148 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (151 (checkcast (class "clojure.lang.Var")))
                                      (154 (putstatic (fieldCP "const__12" "clojure.pprint$write_token_string" (class "clojure.lang.Var"))))
                                      (157 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (159 (ldc 13))      ;;STRING:: "write-token-string"
                                      (161 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (164 (checkcast (class "clojure.lang.Var")))
                                      (167 (putstatic (fieldCP "const__13" "clojure.pprint$write_token_string" (class "clojure.lang.Var"))))
                                      (170 (ldc 2))       ;;STRING:: "clojure.core"
                                      (172 (ldc 14))      ;;STRING:: "="
                                      (174 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (177 (checkcast (class "clojure.lang.Var")))
                                      (180 (putstatic (fieldCP "const__14" "clojure.pprint$write_token_string" (class "clojure.lang.Var"))))
                                      (183 (ldc 2))       ;;STRING:: "clojure.core"
                                      (185 (ldc 15))      ;;STRING:: "into"
                                      (187 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (190 (checkcast (class "clojure.lang.Var")))
                                      (193 (putstatic (fieldCP "const__15" "clojure.pprint$write_token_string" (class "clojure.lang.Var"))))
                                      (196 (ldc 2))       ;;STRING:: "clojure.core"
                                      (198 (ldc 16))      ;;STRING:: "concat"
                                      (200 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (203 (checkcast (class "clojure.lang.Var")))
                                      (206 (putstatic (fieldCP "const__16" "clojure.pprint$write_token_string" (class "clojure.lang.Var"))))
                                      (209 (return))
                                      (endofcode 210))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 14) (code_length . 437)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$write_token_string" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_2)) 
                                      (10 (aconst_null)) 
                                      (11 (astore_2)) 
                                      (12 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (17 (astore_3)) 
                                      (18 (aload_3)) 
                                      (19 (lconst_0)) 
                                      (20 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (23 (aconst_null)) 
                                      (24 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (27 (astore 4)) 
                                      (29 (aload_3)) 
                                      (30 (aconst_null)) 
                                      (31 (astore_3)) 
                                      (32 (lconst_1)) 
                                      (33 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (36 (aconst_null)) 
                                      (37 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (40 (astore 5)) 
                                      (42 (aload 4)) 
                                      (44 (dup)) 
                                      (45 (ifnull 81)) ;;to TAG_0
                                      (48 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (51 (if_acmpeq 82))  ;;to TAG_1
                                      (54 (getstatic (fieldCP "const__4" "clojure.pprint$write_token_string" (class "clojure.lang.Var")))) 
                                      (57 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (60 (checkcast (class "clojure.lang.IFn"))) 
                                      (63 (aload_1)) 
                                      (64 (aload 4)) 
                                      (66 (aconst_null)) 
                                      (67 (astore 4)) 
                                      (69 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (72 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (77 (pop)) 
                                      (78 (goto 84)) ;;to TAG_2
                                      (81 (pop)) ;;at TAG_0
                                      (82 (aconst_null)) ;;at TAG_1
                                      (83 (pop)) 
                                      (84 (aload 5)) ;;at TAG_2
                                      (86 (dup)) 
                                      (87 (ifnull 434)) ;;to TAG_3
                                      (90 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (93 (if_acmpeq 435)) ;;to TAG_4
                                      (96 (getstatic (fieldCP "const__5" "clojure.pprint$write_token_string" (class "clojure.lang.Var")))) 
                                      (99 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (102 (checkcast (class "clojure.lang.IFn"))) 
                                      (105 (aload 5)) 
                                      (107 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (112 (astore 6)) 
                                      (114 (aload 6)) 
                                      (116 (lconst_0)) 
                                      (117 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (120 (aconst_null)) 
                                      (121 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (124 (astore 7)) 
                                      (126 (aload 6)) 
                                      (128 (aconst_null)) 
                                      (129 (astore 6)) 
                                      (131 (lconst_1)) 
                                      (132 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (135 (aconst_null)) 
                                      (136 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (139 (astore 8)) 
                                      (141 (getstatic (fieldCP "const__6" "clojure.pprint$write_token_string" (class "clojure.lang.Var")))) 
                                      (144 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (147 (checkcast (class "clojure.lang.IFn"))) 
                                      (150 (aload 5)) 
                                      (152 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (157 (astore 9)) 
                                      (159 (getstatic (fieldCP "const__7" "clojure.pprint$write_token_string" (class "clojure.lang.Var")))) 
                                      (162 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (165 (checkcast (class "clojure.lang.IFn"))) 
                                      (168 (aload 9)) 
                                      (170 (aload_1)) 
                                      (171 (aload 7)) 
                                      (173 (getstatic (fieldCP "const__8" "clojure.pprint$write_token_string" (class "clojure.lang.Var")))) 
                                      (176 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (179 (checkcast (class "clojure.lang.IFn"))) 
                                      (182 (aload 5)) 
                                      (184 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (189 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5)) 
                                      (194 (astore 10)) 
                                      (196 (aload 10)) 
                                      (198 (aconst_null)) 
                                      (199 (astore 10)) 
                                      (201 (dup)) 
                                      (202 (ifnull 254)) ;;to TAG_5
                                      (205 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (208 (if_acmpeq 255)) ;;to TAG_6
                                      (211 (getstatic (fieldCP "const__9" "clojure.pprint$write_token_string" (class "clojure.lang.Var")))) 
                                      (214 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (217 (checkcast (class "clojure.lang.IFn"))) 
                                      (220 (aload_1)) 
                                      (221 (aload 9)) 
                                      (223 (aconst_null)) 
                                      (224 (astore 9)) 
                                      (226 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (231 (pop)) 
                                      (232 (getstatic (fieldCP "const__10" "clojure.pprint$write_token_string" (class "clojure.lang.Var")))) 
                                      (235 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (238 (checkcast (class "clojure.lang.IFn"))) 
                                      (241 (aload 5)) 
                                      (243 (aconst_null)) 
                                      (244 (astore 5)) 
                                      (246 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (251 (goto 260)) ;;to TAG_7
                                      (254 (pop)) ;;at TAG_5
                                      (255 (aload 5)) ;;at TAG_6
                                      (257 (aconst_null)) 
                                      (258 (astore 5)) 
                                      (260 (astore 11)) ;;at TAG_7
                                      (262 (getstatic (fieldCP "const__11" "clojure.pprint$write_token_string" (class "clojure.lang.Var")))) 
                                      (265 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (268 (checkcast (class "clojure.lang.IFn"))) 
                                      (271 (getstatic (fieldCP "const__12" "clojure.pprint$write_token_string" (class "clojure.lang.Var")))) 
                                      (274 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (277 (checkcast (class "clojure.lang.IFn"))) 
                                      (280 (aload_1)) 
                                      (281 (aload 11)) 
                                      (283 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (288 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (293 (astore 12)) 
                                      (295 (aload 12)) 
                                      (297 (aconst_null)) 
                                      (298 (astore 12)) 
                                      (300 (dup)) 
                                      (301 (ifnull 418)) ;;to TAG_8
                                      (304 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (307 (if_acmpeq 419)) ;;to TAG_9
                                      (310 (getstatic (fieldCP "const__13" "clojure.pprint$write_token_string" (class "clojure.lang.Var")))) 
                                      (313 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (316 (checkcast (class "clojure.lang.IFn"))) 
                                      (319 (aload_1)) 
                                      (320 (aload 7)) 
                                      (322 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (327 (astore 13)) 
                                      (329 (aload 13)) 
                                      (331 (aload 7)) 
                                      (333 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (336 (ifeq 374)) ;;to TAG_10
                                      (339 (getstatic (fieldCP "const__4" "clojure.pprint$write_token_string" (class "clojure.lang.Var")))) 
                                      (342 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (345 (checkcast (class "clojure.lang.IFn"))) 
                                      (348 (aload_1)) 
                                      (349 (aconst_null)) 
                                      (350 (astore_1)) 
                                      (351 (aload 7)) 
                                      (353 (aconst_null)) 
                                      (354 (astore 7)) 
                                      (356 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (359 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (364 (pop)) 
                                      (365 (aload 8)) 
                                      (367 (aconst_null)) 
                                      (368 (astore 8)) 
                                      (370 (goto 415)) ;;to TAG_11
                                      (373 (pop)) 
                                      (374 (getstatic (fieldCP "const__15" "clojure.pprint$write_token_string" (class "clojure.lang.Var")))) ;;at TAG_10
                                      (377 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (380 (checkcast (class "clojure.lang.IFn"))) 
                                      (383 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) 
                                      (386 (getstatic (fieldCP "const__16" "clojure.pprint$write_token_string" (class "clojure.lang.Var")))) 
                                      (389 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (392 (checkcast (class "clojure.lang.IFn"))) 
                                      (395 (aload 13)) 
                                      (397 (aconst_null)) 
                                      (398 (astore 13)) 
                                      (400 (aload 8)) 
                                      (402 (aconst_null)) 
                                      (403 (astore 8)) 
                                      (405 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (410 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (415 (goto 424)) ;;to TAG_12;;at TAG_11
                                      (418 (pop)) ;;at TAG_8
                                      (419 (aload 11)) ;;at TAG_9
                                      (421 (aconst_null)) 
                                      (422 (astore 11)) 
                                      (424 (astore 13)) ;;at TAG_12
                                      (426 (aload 13)) 
                                      (428 (aconst_null)) 
                                      (429 (astore 13)) 
                                      (431 (goto 436)) ;;to TAG_13
                                      (434 (pop)) ;;at TAG_3
                                      (435 (aconst_null)) ;;at TAG_4
                                      (436 (areturn)) ;;at TAG_13
                                      (endofcode 437))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$write_token_string-class-table*
  (make-static-class-decls 
   *clojure.pprint$write_token_string*))

(defconst *package-name-map* 
  ("clojure.pprint$write_token_string" . "clojure"))

