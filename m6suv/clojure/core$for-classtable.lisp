; core$for-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:42 CDT 2014.
;

(defconst *clojure.core$for*
 (make-class-def
      '(class "clojure.core$for"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "vector?")
                        (STRING  "str")
                        (STRING  "first")
                        (STRING  "*ns*")
                        (STRING  "line")
                        (STRING  "meta")
                        (STRING  "even?")
                        (STRING  "count")
                        (STRING  "seq")
                        (STRING  "concat")
                        (STRING  "list")
                        (STRING  "let")
                        (STRING  "apply")
                        (STRING  "vector")
                        (STRING  "iter__4590__auto__")
                        (STRING  "second")
                        (STRING  " requires ")
                        (STRING  "a vector for its binding")
                        (STRING  " in ")
                        (STRING  ":")
                        (STRING  "an even number of forms in binding vector"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__1__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__1__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 247)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "vector?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$for" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "str"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$for" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "first"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$for" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "*ns*"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.core$for" (class "clojure.lang.Var"))))
                                      (52 (aconst_null))
                                      (53 (ldc 5))        ;;STRING:: "line"
                                      (55 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (58 (checkcast (class "clojure.lang.Keyword")))
                                      (61 (putstatic (fieldCP "const__4" "clojure.core$for" (class "clojure.lang.Keyword"))))
                                      (64 (ldc 0))        ;;STRING:: "clojure.core"
                                      (66 (ldc 6))        ;;STRING:: "meta"
                                      (68 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (71 (checkcast (class "clojure.lang.Var")))
                                      (74 (putstatic (fieldCP "const__5" "clojure.core$for" (class "clojure.lang.Var"))))
                                      (77 (ldc 0))        ;;STRING:: "clojure.core"
                                      (79 (ldc 7))        ;;STRING:: "even?"
                                      (81 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (84 (checkcast (class "clojure.lang.Var")))
                                      (87 (putstatic (fieldCP "const__6" "clojure.core$for" (class "clojure.lang.Var"))))
                                      (90 (ldc 0))        ;;STRING:: "clojure.core"
                                      (92 (ldc 8))        ;;STRING:: "count"
                                      (94 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (97 (checkcast (class "clojure.lang.Var")))
                                      (100 (putstatic (fieldCP "const__7" "clojure.core$for" (class "clojure.lang.Var"))))
                                      (103 (ldc 0))       ;;STRING:: "clojure.core"
                                      (105 (ldc 9))       ;;STRING:: "seq"
                                      (107 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (110 (checkcast (class "clojure.lang.Var")))
                                      (113 (putstatic (fieldCP "const__8" "clojure.core$for" (class "clojure.lang.Var"))))
                                      (116 (ldc 0))       ;;STRING:: "clojure.core"
                                      (118 (ldc 10))      ;;STRING:: "concat"
                                      (120 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (123 (checkcast (class "clojure.lang.Var")))
                                      (126 (putstatic (fieldCP "const__9" "clojure.core$for" (class "clojure.lang.Var"))))
                                      (129 (ldc 0))       ;;STRING:: "clojure.core"
                                      (131 (ldc 11))      ;;STRING:: "list"
                                      (133 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (136 (checkcast (class "clojure.lang.Var")))
                                      (139 (putstatic (fieldCP "const__10" "clojure.core$for" (class "clojure.lang.Var"))))
                                      (142 (ldc 0))       ;;STRING:: "clojure.core"
                                      (144 (ldc 12))      ;;STRING:: "let"
                                      (146 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (149 (checkcast (class "clojure.lang.AFn")))
                                      (152 (putstatic (fieldCP "const__11" "clojure.core$for" (class "clojure.lang.AFn"))))
                                      (155 (ldc 0))       ;;STRING:: "clojure.core"
                                      (157 (ldc 13))      ;;STRING:: "apply"
                                      (159 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (162 (checkcast (class "clojure.lang.Var")))
                                      (165 (putstatic (fieldCP "const__12" "clojure.core$for" (class "clojure.lang.Var"))))
                                      (168 (ldc 0))       ;;STRING:: "clojure.core"
                                      (170 (ldc 14))      ;;STRING:: "vector"
                                      (172 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (175 (checkcast (class "clojure.lang.Var")))
                                      (178 (putstatic (fieldCP "const__13" "clojure.core$for" (class "clojure.lang.Var"))))
                                      (181 (aconst_null))
                                      (182 (ldc 15))      ;;STRING:: "iter__4590__auto__"
                                      (184 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (187 (checkcast (class "clojure.lang.AFn")))
                                      (190 (putstatic (fieldCP "const__14" "clojure.core$for" (class "clojure.lang.AFn"))))
                                      (193 (ldc 0))       ;;STRING:: "clojure.core"
                                      (195 (ldc 16))      ;;STRING:: "second"
                                      (197 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (200 (checkcast (class "clojure.lang.Var")))
                                      (203 (putstatic (fieldCP "const__15" "clojure.core$for" (class "clojure.lang.Var"))))
                                      (206 (new (class "clojure.lang.KeywordLookupSite")))
                                      (209 (dup))
                                      (210 (aconst_null))
                                      (211 (ldc 5))       ;;STRING:: "line"
                                      (213 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (216 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (219 (dup))
                                      (220 (putstatic (fieldCP "__site__0__" "clojure.core$for" (class "clojure.lang.KeywordLookupSite"))))
                                      (223 (putstatic (fieldCP "__thunk__0__" "clojure.core$for" (class "clojure.lang.ILookupThunk"))))
                                      (226 (new (class "clojure.lang.KeywordLookupSite")))
                                      (229 (dup))
                                      (230 (aconst_null))
                                      (231 (ldc 5))       ;;STRING:: "line"
                                      (233 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (236 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (239 (dup))
                                      (240 (putstatic (fieldCP "__site__1__" "clojure.core$for" (class "clojure.lang.KeywordLookupSite"))))
                                      (243 (putstatic (fieldCP "__thunk__1__" "clojure.core$for" (class "clojure.lang.ILookupThunk"))))
                                      (246 (return))
                                      (endofcode 247))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 14) (max_locals . 8) (code_length . 589)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_3)) 
                                      (10 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (15 (dup)) 
                                      (16 (ifnull 30)) ;;to TAG_0
                                      (19 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (22 (if_acmpeq 31))  ;;to TAG_1
                                      (25 (aconst_null)) 
                                      (26 (pop)) 
                                      (27 (goto 143)) ;;to TAG_2
                                      (30 (pop)) ;;at TAG_0
                                      (31 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_1
                                      (34 (dup)) 
                                      (35 (getstatic (fieldCP "const__1" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (38 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (41 (checkcast (class "clojure.lang.IFn"))) 
                                      (44 (getstatic (fieldCP "const__2" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (47 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (50 (checkcast (class "clojure.lang.IFn"))) 
                                      (53 (aload_1)) 
                                      (54 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (59 (ldc 17)) ;;STRING:: " requires "
                                      (61 (ldc 18)) ;;STRING:: "a vector for its binding"
                                      (63 (ldc 19)) ;;STRING:: " in "
                                      (65 (getstatic (fieldCP "const__3" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (68 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (71 (ldc 20)) ;;STRING:: ":"
                                      (73 (getstatic (fieldCP "__thunk__0__" "clojure.core$for" (class "clojure.lang.ILookupThunk")))) 
                                      (76 (dup)) 
                                      (77 (getstatic (fieldCP "const__5" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (80 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (83 (checkcast (class "clojure.lang.IFn"))) 
                                      (86 (aload_1)) 
                                      (87 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (92 (dup_x2)) 
                                      (93 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (98 (dup_x2)) 
                                      (99 (if_acmpeq 106)) ;;to TAG_3
                                      (102 (pop)) 
                                      (103 (goto 128)) ;;to TAG_4
                                      (106 (swap)) ;;at TAG_3
                                      (107 (pop)) 
                                      (108 (dup)) 
                                      (109 (getstatic (fieldCP "__site__0__" "clojure.core$for" (class "clojure.lang.KeywordLookupSite")))) 
                                      (112 (swap)) 
                                      (113 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (118 (dup)) 
                                      (119 (putstatic (fieldCP "__thunk__0__" "clojure.core$for" (class "clojure.lang.ILookupThunk")))) 
                                      (122 (swap)) 
                                      (123 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (128 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 8)) ;;at TAG_4
                                      (133 (checkcast (class "java.lang.String"))) 
                                      (136 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (139 (checkcast (class "java.lang.Throwable"))) 
                                      (142 (athrow)) 
                                      (143 (getstatic (fieldCP "const__6" "clojure.core$for" (class "clojure.lang.Var")))) ;;at TAG_2
                                      (146 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (149 (checkcast (class "clojure.lang.IFn"))) 
                                      (152 (aload_3)) 
                                      (153 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (156 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (159 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (164 (dup)) 
                                      (165 (ifnull 179)) ;;to TAG_5
                                      (168 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (171 (if_acmpeq 180)) ;;to TAG_6
                                      (174 (aconst_null)) 
                                      (175 (pop)) 
                                      (176 (goto 294)) ;;to TAG_7
                                      (179 (pop)) ;;at TAG_5
                                      (180 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_6
                                      (183 (dup)) 
                                      (184 (getstatic (fieldCP "const__1" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (187 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (190 (checkcast (class "clojure.lang.IFn"))) 
                                      (193 (getstatic (fieldCP "const__2" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (196 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (199 (checkcast (class "clojure.lang.IFn"))) 
                                      (202 (aload_1)) 
                                      (203 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (208 (ldc 17)) ;;STRING:: " requires "
                                      (210 (ldc 21)) ;;STRING:: "an even number of forms in binding vector"
                                      (212 (ldc 19)) ;;STRING:: " in "
                                      (214 (getstatic (fieldCP "const__3" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (217 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (220 (ldc 20)) ;;STRING:: ":"
                                      (222 (getstatic (fieldCP "__thunk__1__" "clojure.core$for" (class "clojure.lang.ILookupThunk")))) 
                                      (225 (dup)) 
                                      (226 (getstatic (fieldCP "const__5" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (229 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (232 (checkcast (class "clojure.lang.IFn"))) 
                                      (235 (aload_1)) 
                                      (236 (aconst_null)) 
                                      (237 (astore_1)) 
                                      (238 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (243 (dup_x2)) 
                                      (244 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (249 (dup_x2)) 
                                      (250 (if_acmpeq 257)) ;;to TAG_8
                                      (253 (pop)) 
                                      (254 (goto 279)) ;;to TAG_9
                                      (257 (swap)) ;;at TAG_8
                                      (258 (pop)) 
                                      (259 (dup)) 
                                      (260 (getstatic (fieldCP "__site__1__" "clojure.core$for" (class "clojure.lang.KeywordLookupSite")))) 
                                      (263 (swap)) 
                                      (264 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (269 (dup)) 
                                      (270 (putstatic (fieldCP "__thunk__1__" "clojure.core$for" (class "clojure.lang.ILookupThunk")))) 
                                      (273 (swap)) 
                                      (274 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (279 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 8)) ;;at TAG_9
                                      (284 (checkcast (class "java.lang.String"))) 
                                      (287 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (290 (checkcast (class "java.lang.Throwable"))) 
                                      (293 (athrow)) 
                                      (294 (aconst_null)) ;;at TAG_7
                                      (295 (pop)) 
                                      (296 (new (class "clojure.core$for$to_groups__4591"))) 
                                      (299 (dup)) 
                                      (300 (invokespecial (methodCP "<init>" "clojure.core$for$to_groups__4591" () void))) 
                                      (303 (astore 5)) 
                                      (305 (new (class "clojure.core$for$err__4597"))) 
                                      (308 (dup)) 
                                      (309 (invokespecial (methodCP "<init>" "clojure.core$for$err__4597" () void))) 
                                      (312 (astore 6)) 
                                      (314 (new (class "clojure.core$for$emit_bind__4600"))) 
                                      (317 (dup)) 
                                      (318 (aload 4)) 
                                      (320 (aconst_null)) 
                                      (321 (astore 4)) 
                                      (323 (aload 6)) 
                                      (325 (aconst_null)) 
                                      (326 (astore 6)) 
                                      (328 (invokespecial (methodCP "<init>" "clojure.core$for$emit_bind__4600" ((class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (331 (astore 7)) 
                                      (333 (getstatic (fieldCP "const__8" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (336 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (339 (checkcast (class "clojure.lang.IFn"))) 
                                      (342 (getstatic (fieldCP "const__9" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (345 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (348 (checkcast (class "clojure.lang.IFn"))) 
                                      (351 (getstatic (fieldCP "const__10" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (354 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (357 (checkcast (class "clojure.lang.IFn"))) 
                                      (360 (getstatic (fieldCP "const__11" "clojure.core$for" (class "clojure.lang.AFn")))) 
                                      (363 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (368 (getstatic (fieldCP "const__10" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (371 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (374 (checkcast (class "clojure.lang.IFn"))) 
                                      (377 (getstatic (fieldCP "const__12" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (380 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (383 (checkcast (class "clojure.lang.IFn"))) 
                                      (386 (getstatic (fieldCP "const__13" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (389 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (392 (getstatic (fieldCP "const__8" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (395 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (398 (checkcast (class "clojure.lang.IFn"))) 
                                      (401 (getstatic (fieldCP "const__9" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (404 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (407 (checkcast (class "clojure.lang.IFn"))) 
                                      (410 (getstatic (fieldCP "const__10" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (413 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (416 (checkcast (class "clojure.lang.IFn"))) 
                                      (419 (getstatic (fieldCP "const__14" "clojure.core$for" (class "clojure.lang.AFn")))) 
                                      (422 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (427 (getstatic (fieldCP "const__10" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (430 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (433 (checkcast (class "clojure.lang.IFn"))) 
                                      (436 (aload 7)) 
                                      (438 (aconst_null)) 
                                      (439 (astore 7)) 
                                      (441 (checkcast (class "clojure.lang.IFn"))) 
                                      (444 (aload 5)) 
                                      (446 (aconst_null)) 
                                      (447 (astore 5)) 
                                      (449 (checkcast (class "clojure.lang.IFn"))) 
                                      (452 (aload_3)) 
                                      (453 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (458 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (463 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (468 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (473 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (478 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (483 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (488 (getstatic (fieldCP "const__10" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (491 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (494 (checkcast (class "clojure.lang.IFn"))) 
                                      (497 (getstatic (fieldCP "const__8" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (500 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (503 (checkcast (class "clojure.lang.IFn"))) 
                                      (506 (getstatic (fieldCP "const__9" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (509 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (512 (checkcast (class "clojure.lang.IFn"))) 
                                      (515 (getstatic (fieldCP "const__10" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (518 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (521 (checkcast (class "clojure.lang.IFn"))) 
                                      (524 (getstatic (fieldCP "const__14" "clojure.core$for" (class "clojure.lang.AFn")))) 
                                      (527 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (532 (getstatic (fieldCP "const__10" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (535 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (538 (checkcast (class "clojure.lang.IFn"))) 
                                      (541 (getstatic (fieldCP "const__15" "clojure.core$for" (class "clojure.lang.Var")))) 
                                      (544 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (547 (checkcast (class "clojure.lang.IFn"))) 
                                      (550 (aload_3)) 
                                      (551 (aconst_null)) 
                                      (552 (astore_3)) 
                                      (553 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (558 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (563 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (568 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (573 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (578 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (583 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (588 (areturn)) 
                                      (endofcode 589))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 39)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 38 (0 . 1) (24 31))))  ;;to TAG_2;;to TAG_0;;to TAG_1
                                      (24 (aload_2)) ;;at TAG_1
                                      (25 (putstatic (fieldCP "__thunk__0__" "clojure.core$for" (class "clojure.lang.ILookupThunk")))) 
                                      (28 (goto 38)) ;;to TAG_0
                                      (31 (aload_2)) ;;at TAG_2
                                      (32 (putstatic (fieldCP "__thunk__1__" "clojure.core$for" (class "clojure.lang.ILookupThunk")))) 
                                      (35 (goto 38)) ;;to TAG_0
                                      (38 (return)) ;;at TAG_0
                                      (endofcode 39))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$for-class-table*
  (make-static-class-decls 
   *clojure.core$for*))

(defconst *package-name-map* 
  ("clojure.core$for" . "clojure"))

