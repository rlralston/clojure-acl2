; pprint$tokens_fit_QMARK_-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:57 CDT 2014.
;

(defconst *clojure.pprint$tokens_fit_QMARK_*
 (make-class-def
      '(class "clojure.pprint$tokens_fit_QMARK_"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.pprint")
                        (STRING  "get-max-column")
                        (STRING  "base")
                        (STRING  "clojure.core")
                        (STRING  "deref")
                        (STRING  "nil?")
                        (STRING  "<")
                        (STRING  "+")
                        (STRING  "get-column")
                        (STRING  "buffer-length"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__1__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__1__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 144)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.pprint"
                                      (2 (ldc 1))         ;;STRING:: "get-max-column"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "base"
                                      (16 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (19 (checkcast (class "clojure.lang.Keyword")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.Keyword"))))
                                      (25 (ldc 3))        ;;STRING:: "clojure.core"
                                      (27 (ldc 4))        ;;STRING:: "deref"
                                      (29 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (32 (checkcast (class "clojure.lang.Var")))
                                      (35 (putstatic (fieldCP "const__2" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.Var"))))
                                      (38 (ldc 3))        ;;STRING:: "clojure.core"
                                      (40 (ldc 5))        ;;STRING:: "nil?"
                                      (42 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (45 (checkcast (class "clojure.lang.Var")))
                                      (48 (putstatic (fieldCP "const__3" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.Var"))))
                                      (51 (ldc 3))        ;;STRING:: "clojure.core"
                                      (53 (ldc 6))        ;;STRING:: "<"
                                      (55 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (58 (checkcast (class "clojure.lang.Var")))
                                      (61 (putstatic (fieldCP "const__4" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.Var"))))
                                      (64 (ldc 3))        ;;STRING:: "clojure.core"
                                      (66 (ldc 7))        ;;STRING:: "+"
                                      (68 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (71 (checkcast (class "clojure.lang.Var")))
                                      (74 (putstatic (fieldCP "const__5" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.Var"))))
                                      (77 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (79 (ldc 8))        ;;STRING:: "get-column"
                                      (81 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (84 (checkcast (class "clojure.lang.Var")))
                                      (87 (putstatic (fieldCP "const__6" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.Var"))))
                                      (90 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (92 (ldc 9))        ;;STRING:: "buffer-length"
                                      (94 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (97 (checkcast (class "clojure.lang.Var")))
                                      (100 (putstatic (fieldCP "const__7" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.Var"))))
                                      (103 (new (class "clojure.lang.KeywordLookupSite")))
                                      (106 (dup))
                                      (107 (aconst_null))
                                      (108 (ldc 2))       ;;STRING:: "base"
                                      (110 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (113 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (116 (dup))
                                      (117 (putstatic (fieldCP "__site__0__" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.KeywordLookupSite"))))
                                      (120 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.ILookupThunk"))))
                                      (123 (new (class "clojure.lang.KeywordLookupSite")))
                                      (126 (dup))
                                      (127 (aconst_null))
                                      (128 (ldc 2))       ;;STRING:: "base"
                                      (130 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (133 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (136 (dup))
                                      (137 (putstatic (fieldCP "__site__1__" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.KeywordLookupSite"))))
                                      (140 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.ILookupThunk"))))
                                      (143 (return))
                                      (endofcode 144))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 5) (code_length . 238)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (getstatic (fieldCP "__thunk__0__" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.ILookupThunk")))) 
                                      (12 (dup)) 
                                      (13 (getstatic (fieldCP "const__2" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.Var")))) 
                                      (16 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (19 (checkcast (class "clojure.lang.IFn"))) 
                                      (22 (getstatic (fieldCP "const__2" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.Var")))) 
                                      (25 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (28 (checkcast (class "clojure.lang.IFn"))) 
                                      (31 (aload_1)) 
                                      (32 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (37 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (42 (dup_x2)) 
                                      (43 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (48 (dup_x2)) 
                                      (49 (if_acmpeq 56)) ;;to TAG_0
                                      (52 (pop)) 
                                      (53 (goto 78))  ;;to TAG_1
                                      (56 (swap)) ;;at TAG_0
                                      (57 (pop)) 
                                      (58 (dup)) 
                                      (59 (getstatic (fieldCP "__site__0__" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.KeywordLookupSite")))) 
                                      (62 (swap)) 
                                      (63 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (68 (dup)) 
                                      (69 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.ILookupThunk")))) 
                                      (72 (swap)) 
                                      (73 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (78 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_1
                                      (83 (astore_3)) 
                                      (84 (aload_3)) 
                                      (85 (aconst_null)) 
                                      (86 (invokestatic (methodCP "identical" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (89 (istore 4)) 
                                      (91 (iload 4)) 
                                      (93 (ifeq 114)) ;;to TAG_2
                                      (96 (iload 4)) 
                                      (98 (ifeq 107)) ;;to TAG_3
                                      (101 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (104 (goto 110)) ;;to TAG_4
                                      (107 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_3
                                      (110 (goto 237)) ;;to TAG_5;;at TAG_4
                                      (113 (pop)) 
                                      (114 (getstatic (fieldCP "const__6" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.Var")))) ;;at TAG_2
                                      (117 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (120 (checkcast (class "clojure.lang.IFn"))) 
                                      (123 (getstatic (fieldCP "__thunk__1__" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.ILookupThunk")))) 
                                      (126 (dup)) 
                                      (127 (getstatic (fieldCP "const__2" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.Var")))) 
                                      (130 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (133 (checkcast (class "clojure.lang.IFn"))) 
                                      (136 (getstatic (fieldCP "const__2" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.Var")))) 
                                      (139 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (142 (checkcast (class "clojure.lang.IFn"))) 
                                      (145 (aload_1)) 
                                      (146 (aconst_null)) 
                                      (147 (astore_1)) 
                                      (148 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (153 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (158 (dup_x2)) 
                                      (159 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (164 (dup_x2)) 
                                      (165 (if_acmpeq 172)) ;;to TAG_6
                                      (168 (pop)) 
                                      (169 (goto 194)) ;;to TAG_7
                                      (172 (swap)) ;;at TAG_6
                                      (173 (pop)) 
                                      (174 (dup)) 
                                      (175 (getstatic (fieldCP "__site__1__" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.KeywordLookupSite")))) 
                                      (178 (swap)) 
                                      (179 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (184 (dup)) 
                                      (185 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.ILookupThunk")))) 
                                      (188 (swap)) 
                                      (189 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (194 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_7
                                      (199 (getstatic (fieldCP "const__7" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.Var")))) 
                                      (202 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (205 (checkcast (class "clojure.lang.IFn"))) 
                                      (208 (aload_2)) 
                                      (209 (aconst_null)) 
                                      (210 (astore_2)) 
                                      (211 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (216 (invokestatic (methodCP "add" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (219 (aload_3)) 
                                      (220 (aconst_null)) 
                                      (221 (astore_3)) 
                                      (222 (invokestatic (methodCP "lt" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (225 (ifeq 234)) ;;to TAG_8
                                      (228 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (231 (goto 237)) ;;to TAG_5
                                      (234 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_8
                                      (237 (areturn)) ;;at TAG_5
                                      (endofcode 238))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 39)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 38 (0 . 1) (24 31))))  ;;to TAG_2;;to TAG_0;;to TAG_1
                                      (24 (aload_2)) ;;at TAG_1
                                      (25 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.ILookupThunk")))) 
                                      (28 (goto 38)) ;;to TAG_0
                                      (31 (aload_2)) ;;at TAG_2
                                      (32 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$tokens_fit_QMARK_" (class "clojure.lang.ILookupThunk")))) 
                                      (35 (goto 38)) ;;to TAG_0
                                      (38 (return)) ;;at TAG_0
                                      (endofcode 39))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$tokens_fit_QMARK_-class-table*
  (make-static-class-decls 
   *clojure.pprint$tokens_fit_QMARK_*))

(defconst *package-name-map* 
  ("clojure.pprint$tokens_fit_QMARK_" . "clojure"))

