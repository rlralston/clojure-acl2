; pprint$format_ordinal_english-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:56 CDT 2014.
;

(defconst *clojure.pprint$format_ordinal_english*
 (make-class-def
      '(class "clojure.pprint$format_ordinal_english"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.pprint")
                        (STRING  "next-arg")
                        (STRING  "clojure.core")
                        (STRING  "nth")
                        (STRING  "=")
                        (STRING  "print")
                        (STRING  "neg?")
                        (STRING  "-")
                        (STRING  "remainders")
                        (LONG 1000)
                        (STRING  "<=")
                        (STRING  "count")
                        (STRING  "english-scale-numbers")
                        (STRING  "map")
                        (STRING  "format-simple-cardinal")
                        (STRING  "drop-last")
                        (STRING  "add-english-scales")
                        (STRING  "format-simple-ordinal")
                        (STRING  "last")
                        (STRING  "str")
                        (STRING  "not")
                        (STRING  "empty?")
                        (STRING  "else")
                        (STRING  "format-integer")
                        (LONG 10)
                        (STRING  "mincol")
                        (STRING  "padchar")
                        (STRING  "commachar")
                        (STRING  "commainterval")
                        (LONG 3)
                        (STRING  "colon")
                        (STRING  "init-navigator")
                        (STRING  "rem")
                        (LONG 100)
                        (STRING  "<")
                        (LONG 11)
                        (STRING  ">")
                        (LONG 19)
                        (STRING  "==")
                        (LONG 2)
                        (STRING  "zeroth")
                        (STRING  "minus ")
                        (STRING  ", ")
                        (STRING  "th")
                        (STRING  "st")
                        (STRING  "nd")
                        (STRING  "rd"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__19" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__20" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__21" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__22" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__23" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__24" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__25" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__26" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__27" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__28" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__29" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__30" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__31" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__32" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__33" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__34" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__35" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__36" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__37" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__38" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__39" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__40" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__41" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__42" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__43" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 0) (code_length . 672)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.pprint"
                                      (2 (ldc 1))         ;;STRING:: "next-arg"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (13 (ldc 2))        ;;STRING:: "clojure.core"
                                      (15 (ldc 3))        ;;STRING:: "nth"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (26 (lconst_0))
                                      (27 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (30 (putstatic (fieldCP "const__2" "clojure.pprint$format_ordinal_english" (class "java.lang.Object"))))
                                      (33 (lconst_1))
                                      (34 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (37 (putstatic (fieldCP "const__3" "clojure.pprint$format_ordinal_english" (class "java.lang.Object"))))
                                      (40 (ldc 2))        ;;STRING:: "clojure.core"
                                      (42 (ldc 4))        ;;STRING:: "="
                                      (44 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (47 (checkcast (class "clojure.lang.Var")))
                                      (50 (putstatic (fieldCP "const__4" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (53 (ldc 2))        ;;STRING:: "clojure.core"
                                      (55 (ldc 5))        ;;STRING:: "print"
                                      (57 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (60 (checkcast (class "clojure.lang.Var")))
                                      (63 (putstatic (fieldCP "const__5" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (66 (ldc 2))        ;;STRING:: "clojure.core"
                                      (68 (ldc 6))        ;;STRING:: "neg?"
                                      (70 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (73 (checkcast (class "clojure.lang.Var")))
                                      (76 (putstatic (fieldCP "const__6" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (79 (ldc 2))        ;;STRING:: "clojure.core"
                                      (81 (ldc 7))        ;;STRING:: "-"
                                      (83 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (86 (checkcast (class "clojure.lang.Var")))
                                      (89 (putstatic (fieldCP "const__7" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (92 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (94 (ldc 8))        ;;STRING:: "remainders"
                                      (96 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (99 (checkcast (class "clojure.lang.Var")))
                                      (102 (putstatic (fieldCP "const__8" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (105 (ldc2_w 9))    ;; LONG:: "1000"
                                      (108 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (111 (putstatic (fieldCP "const__9" "clojure.pprint$format_ordinal_english" (class "java.lang.Object"))))
                                      (114 (ldc 2))       ;;STRING:: "clojure.core"
                                      (116 (ldc 10))      ;;STRING:: "<="
                                      (118 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (121 (checkcast (class "clojure.lang.Var")))
                                      (124 (putstatic (fieldCP "const__10" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (127 (ldc 2))       ;;STRING:: "clojure.core"
                                      (129 (ldc 11))      ;;STRING:: "count"
                                      (131 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (134 (checkcast (class "clojure.lang.Var")))
                                      (137 (putstatic (fieldCP "const__11" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (140 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (142 (ldc 12))      ;;STRING:: "english-scale-numbers"
                                      (144 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (147 (checkcast (class "clojure.lang.Var")))
                                      (150 (putstatic (fieldCP "const__12" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (153 (ldc 2))       ;;STRING:: "clojure.core"
                                      (155 (ldc 13))      ;;STRING:: "map"
                                      (157 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (160 (checkcast (class "clojure.lang.Var")))
                                      (163 (putstatic (fieldCP "const__13" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (166 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (168 (ldc 14))      ;;STRING:: "format-simple-cardinal"
                                      (170 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (173 (checkcast (class "clojure.lang.Var")))
                                      (176 (putstatic (fieldCP "const__14" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (179 (ldc 2))       ;;STRING:: "clojure.core"
                                      (181 (ldc 15))      ;;STRING:: "drop-last"
                                      (183 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (186 (checkcast (class "clojure.lang.Var")))
                                      (189 (putstatic (fieldCP "const__15" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (192 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (194 (ldc 16))      ;;STRING:: "add-english-scales"
                                      (196 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (199 (checkcast (class "clojure.lang.Var")))
                                      (202 (putstatic (fieldCP "const__16" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (205 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (207 (ldc 17))      ;;STRING:: "format-simple-ordinal"
                                      (209 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (212 (checkcast (class "clojure.lang.Var")))
                                      (215 (putstatic (fieldCP "const__17" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (218 (ldc 2))       ;;STRING:: "clojure.core"
                                      (220 (ldc 18))      ;;STRING:: "last"
                                      (222 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (225 (checkcast (class "clojure.lang.Var")))
                                      (228 (putstatic (fieldCP "const__18" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (231 (ldc 2))       ;;STRING:: "clojure.core"
                                      (233 (ldc 19))      ;;STRING:: "str"
                                      (235 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (238 (checkcast (class "clojure.lang.Var")))
                                      (241 (putstatic (fieldCP "const__19" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (244 (ldc 2))       ;;STRING:: "clojure.core"
                                      (246 (ldc 20))      ;;STRING:: "not"
                                      (248 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (251 (checkcast (class "clojure.lang.Var")))
                                      (254 (putstatic (fieldCP "const__20" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (257 (ldc 2))       ;;STRING:: "clojure.core"
                                      (259 (ldc 21))      ;;STRING:: "empty?"
                                      (261 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (264 (checkcast (class "clojure.lang.Var")))
                                      (267 (putstatic (fieldCP "const__21" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (270 (aconst_null))
                                      (271 (ldc 22))      ;;STRING:: "else"
                                      (273 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (276 (checkcast (class "clojure.lang.Keyword")))
                                      (279 (putstatic (fieldCP "const__22" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Keyword"))))
                                      (282 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (284 (ldc 23))      ;;STRING:: "format-integer"
                                      (286 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (289 (checkcast (class "clojure.lang.Var")))
                                      (292 (putstatic (fieldCP "const__23" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (295 (ldc2_w 24))   ;; LONG:: "10"
                                      (298 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (301 (putstatic (fieldCP "const__24" "clojure.pprint$format_ordinal_english" (class "java.lang.Object"))))
                                      (304 (aconst_null))
                                      (305 (ldc 25))      ;;STRING:: "mincol"
                                      (307 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (310 (checkcast (class "clojure.lang.Keyword")))
                                      (313 (putstatic (fieldCP "const__25" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Keyword"))))
                                      (316 (aconst_null))
                                      (317 (ldc 26))      ;;STRING:: "padchar"
                                      (319 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (322 (checkcast (class "clojure.lang.Keyword")))
                                      (325 (putstatic (fieldCP "const__26" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Keyword"))))
                                      (328 (bipush 32))
                                      (330 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (333 (putstatic (fieldCP "const__27" "clojure.pprint$format_ordinal_english" (class "java.lang.Object"))))
                                      (336 (aconst_null))
                                      (337 (ldc 27))      ;;STRING:: "commachar"
                                      (339 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (342 (checkcast (class "clojure.lang.Keyword")))
                                      (345 (putstatic (fieldCP "const__28" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Keyword"))))
                                      (348 (bipush 44))
                                      (350 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (353 (putstatic (fieldCP "const__29" "clojure.pprint$format_ordinal_english" (class "java.lang.Object"))))
                                      (356 (aconst_null))
                                      (357 (ldc 28))      ;;STRING:: "commainterval"
                                      (359 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (362 (checkcast (class "clojure.lang.Keyword")))
                                      (365 (putstatic (fieldCP "const__30" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Keyword"))))
                                      (368 (ldc2_w 29))   ;; LONG:: "3"
                                      (371 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (374 (putstatic (fieldCP "const__31" "clojure.pprint$format_ordinal_english" (class "java.lang.Object"))))
                                      (377 (aconst_null))
                                      (378 (ldc 30))      ;;STRING:: "colon"
                                      (380 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (383 (checkcast (class "clojure.lang.Keyword")))
                                      (386 (putstatic (fieldCP "const__32" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Keyword"))))
                                      (389 (bipush 10))
                                      (391 (anewarray (class "java.lang.Object")))
                                      (394 (dup))
                                      (395 (iconst_0))
                                      (396 (aconst_null))
                                      (397 (ldc 27))      ;;STRING:: "commachar"
                                      (399 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (402 (aastore))
                                      (403 (dup))
                                      (404 (iconst_1))
                                      (405 (bipush 44))
                                      (407 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (410 (aastore))
                                      (411 (dup))
                                      (412 (iconst_2))
                                      (413 (aconst_null))
                                      (414 (ldc 30))      ;;STRING:: "colon"
                                      (416 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (419 (aastore))
                                      (420 (dup))
                                      (421 (iconst_3))
                                      (422 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (425 (aastore))
                                      (426 (dup))
                                      (427 (iconst_4))
                                      (428 (aconst_null))
                                      (429 (ldc 26))      ;;STRING:: "padchar"
                                      (431 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (434 (aastore))
                                      (435 (dup))
                                      (436 (iconst_5))
                                      (437 (bipush 32))
                                      (439 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (442 (aastore))
                                      (443 (dup))
                                      (444 (bipush 6))
                                      (446 (aconst_null))
                                      (447 (ldc 25))      ;;STRING:: "mincol"
                                      (449 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (452 (aastore))
                                      (453 (dup))
                                      (454 (bipush 7))
                                      (456 (lconst_0))
                                      (457 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (460 (aastore))
                                      (461 (dup))
                                      (462 (bipush 8))
                                      (464 (aconst_null))
                                      (465 (ldc 28))      ;;STRING:: "commainterval"
                                      (467 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (470 (aastore))
                                      (471 (dup))
                                      (472 (bipush 9))
                                      (474 (ldc2_w 29))   ;; LONG:: "3"
                                      (477 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (480 (aastore))
                                      (481 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (484 (checkcast (class "clojure.lang.AFn")))
                                      (487 (putstatic (fieldCP "const__33" "clojure.pprint$format_ordinal_english" (class "clojure.lang.AFn"))))
                                      (490 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (492 (ldc 31))      ;;STRING:: "init-navigator"
                                      (494 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (497 (checkcast (class "clojure.lang.Var")))
                                      (500 (putstatic (fieldCP "const__34" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (503 (bipush 8))
                                      (505 (anewarray (class "java.lang.Object")))
                                      (508 (dup))
                                      (509 (iconst_0))
                                      (510 (aconst_null))
                                      (511 (ldc 27))      ;;STRING:: "commachar"
                                      (513 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (516 (aastore))
                                      (517 (dup))
                                      (518 (iconst_1))
                                      (519 (lconst_0))
                                      (520 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (523 (aastore))
                                      (524 (dup))
                                      (525 (iconst_2))
                                      (526 (aconst_null))
                                      (527 (ldc 26))      ;;STRING:: "padchar"
                                      (529 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (532 (aastore))
                                      (533 (dup))
                                      (534 (iconst_3))
                                      (535 (lconst_0))
                                      (536 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (539 (aastore))
                                      (540 (dup))
                                      (541 (iconst_4))
                                      (542 (aconst_null))
                                      (543 (ldc 25))      ;;STRING:: "mincol"
                                      (545 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (548 (aastore))
                                      (549 (dup))
                                      (550 (iconst_5))
                                      (551 (lconst_0))
                                      (552 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (555 (aastore))
                                      (556 (dup))
                                      (557 (bipush 6))
                                      (559 (aconst_null))
                                      (560 (ldc 28))      ;;STRING:: "commainterval"
                                      (562 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (565 (aastore))
                                      (566 (dup))
                                      (567 (bipush 7))
                                      (569 (lconst_0))
                                      (570 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (573 (aastore))
                                      (574 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (577 (checkcast (class "clojure.lang.AFn")))
                                      (580 (putstatic (fieldCP "const__35" "clojure.pprint$format_ordinal_english" (class "clojure.lang.AFn"))))
                                      (583 (ldc 2))       ;;STRING:: "clojure.core"
                                      (585 (ldc 32))      ;;STRING:: "rem"
                                      (587 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (590 (checkcast (class "clojure.lang.Var")))
                                      (593 (putstatic (fieldCP "const__36" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (596 (ldc2_w 33))   ;; LONG:: "100"
                                      (599 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (602 (putstatic (fieldCP "const__37" "clojure.pprint$format_ordinal_english" (class "java.lang.Object"))))
                                      (605 (ldc 2))       ;;STRING:: "clojure.core"
                                      (607 (ldc 34))      ;;STRING:: "<"
                                      (609 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (612 (checkcast (class "clojure.lang.Var")))
                                      (615 (putstatic (fieldCP "const__38" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (618 (ldc2_w 35))   ;; LONG:: "11"
                                      (621 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (624 (putstatic (fieldCP "const__39" "clojure.pprint$format_ordinal_english" (class "java.lang.Object"))))
                                      (627 (ldc 2))       ;;STRING:: "clojure.core"
                                      (629 (ldc 36))      ;;STRING:: ">"
                                      (631 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (634 (checkcast (class "clojure.lang.Var")))
                                      (637 (putstatic (fieldCP "const__40" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (640 (ldc2_w 37))   ;; LONG:: "19"
                                      (643 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (646 (putstatic (fieldCP "const__41" "clojure.pprint$format_ordinal_english" (class "java.lang.Object"))))
                                      (649 (ldc 2))       ;;STRING:: "clojure.core"
                                      (651 (ldc 38))      ;;STRING:: "=="
                                      (653 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (656 (checkcast (class "clojure.lang.Var")))
                                      (659 (putstatic (fieldCP "const__42" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var"))))
                                      (662 (ldc2_w 39))   ;; LONG:: "2"
                                      (665 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (668 (putstatic (fieldCP "const__43" "clojure.pprint$format_ordinal_english" (class "java.lang.Object"))))
                                      (671 (return))
                                      (endofcode 672))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 8) (max_locals . 13) (code_length . 753)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_2)) 
                                      (10 (aconst_null)) 
                                      (11 (astore_2)) 
                                      (12 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (17 (astore 4)) 
                                      (19 (aload 4)) 
                                      (21 (lconst_0)) 
                                      (22 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (25 (aconst_null)) 
                                      (26 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (29 (astore 5)) 
                                      (31 (aload 4)) 
                                      (33 (aconst_null)) 
                                      (34 (astore 4)) 
                                      (36 (lconst_1)) 
                                      (37 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (40 (aconst_null)) 
                                      (41 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (44 (astore 6)) 
                                      (46 (lconst_0)) 
                                      (47 (aload 5)) 
                                      (49 (invokestatic (methodCP "equiv" "clojure.lang.Util" (long (class "java.lang.Object")) boolean))) 
                                      (52 (ifeq 77)) ;;to TAG_0
                                      (55 (getstatic (fieldCP "const__5" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (58 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (61 (checkcast (class "clojure.lang.IFn"))) 
                                      (64 (ldc_w 40)) ;;STRING:: "zeroth"
                                      (67 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (72 (pop)) 
                                      (73 (goto 747)) ;;to TAG_1
                                      (76 (pop)) 
                                      (77 (aload 5)) ;;at TAG_0
                                      (79 (invokestatic (methodCP "isNeg" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (82 (ifeq 94)) ;;to TAG_2
                                      (85 (aload 5)) 
                                      (87 (invokestatic (methodCP "minus" "clojure.lang.Numbers" ((class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (90 (goto 96)) ;;to TAG_3
                                      (93 (pop)) 
                                      (94 (aload 5)) ;;at TAG_2
                                      (96 (astore 7)) ;;at TAG_3
                                      (98 (getstatic (fieldCP "const__8" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (101 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (104 (checkcast (class "clojure.lang.IFn"))) 
                                      (107 (getstatic (fieldCP "const__9" "clojure.pprint$format_ordinal_english" (class "java.lang.Object")))) 
                                      (110 (aload 7)) 
                                      (112 (aconst_null)) 
                                      (113 (astore 7)) 
                                      (115 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (120 (astore 8)) 
                                      (122 (aload 8)) 
                                      (124 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (127 (i2l)) 
                                      (128 (getstatic (fieldCP "const__12" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (131 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (134 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (137 (i2l)) 
                                      (138 (lcmp)) 
                                      (139 (ifgt 504)) ;;to TAG_4
                                      (142 (getstatic (fieldCP "const__13" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (145 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (148 (checkcast (class "clojure.lang.IFn"))) 
                                      (151 (getstatic (fieldCP "const__14" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (154 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (157 (getstatic (fieldCP "const__15" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (160 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (163 (checkcast (class "clojure.lang.IFn"))) 
                                      (166 (aload 8)) 
                                      (168 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (173 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (178 (astore 9)) 
                                      (180 (getstatic (fieldCP "const__16" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (183 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (186 (checkcast (class "clojure.lang.IFn"))) 
                                      (189 (aload 9)) 
                                      (191 (aconst_null)) 
                                      (192 (astore 9)) 
                                      (194 (getstatic (fieldCP "const__3" "clojure.pprint$format_ordinal_english" (class "java.lang.Object")))) 
                                      (197 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (202 (astore 10)) 
                                      (204 (getstatic (fieldCP "const__17" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (207 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (210 (checkcast (class "clojure.lang.IFn"))) 
                                      (213 (getstatic (fieldCP "const__18" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (216 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (219 (checkcast (class "clojure.lang.IFn"))) 
                                      (222 (aload 8)) 
                                      (224 (aconst_null)) 
                                      (225 (astore 8)) 
                                      (227 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (232 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (237 (astore 11)) 
                                      (239 (getstatic (fieldCP "const__5" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (242 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (245 (checkcast (class "clojure.lang.IFn"))) 
                                      (248 (getstatic (fieldCP "const__19" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (251 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (254 (checkcast (class "clojure.lang.IFn"))) 
                                      (257 (aload 5)) 
                                      (259 (aconst_null)) 
                                      (260 (astore 5)) 
                                      (262 (invokestatic (methodCP "isNeg" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (265 (ifeq 275)) ;;to TAG_5
                                      (268 (ldc_w 41)) ;;STRING:: "minus "
                                      (271 (goto 276)) ;;to TAG_6
                                      (274 (pop)) 
                                      (275 (aconst_null)) ;;at TAG_5
                                      (276 (getstatic (fieldCP "const__20" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) ;;at TAG_6
                                      (279 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (282 (checkcast (class "clojure.lang.IFn"))) 
                                      (285 (getstatic (fieldCP "const__21" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (288 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (291 (checkcast (class "clojure.lang.IFn"))) 
                                      (294 (aload 10)) 
                                      (296 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (301 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (306 (astore 12)) 
                                      (308 (aload 12)) 
                                      (310 (dup)) 
                                      (311 (ifnull 353)) ;;to TAG_7
                                      (314 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (317 (if_acmpeq 354)) ;;to TAG_8
                                      (320 (getstatic (fieldCP "const__20" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (323 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (326 (checkcast (class "clojure.lang.IFn"))) 
                                      (329 (getstatic (fieldCP "const__21" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (332 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (335 (checkcast (class "clojure.lang.IFn"))) 
                                      (338 (aload 11)) 
                                      (340 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (345 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (350 (goto 359)) ;;to TAG_9
                                      (353 (pop)) ;;at TAG_7
                                      (354 (aload 12)) ;;at TAG_8
                                      (356 (aconst_null)) 
                                      (357 (astore 12)) 
                                      (359 (dup)) ;;at TAG_9
                                      (360 (ifnull 399)) ;;to TAG_10
                                      (363 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (366 (if_acmpeq 400)) ;;to TAG_11
                                      (369 (getstatic (fieldCP "const__19" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (372 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (375 (checkcast (class "clojure.lang.IFn"))) 
                                      (378 (aload 10)) 
                                      (380 (aconst_null)) 
                                      (381 (astore 10)) 
                                      (383 (ldc_w 42)) ;;STRING:: ", "
                                      (386 (aload 11)) 
                                      (388 (aconst_null)) 
                                      (389 (astore 11)) 
                                      (391 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (396 (goto 489)) ;;to TAG_12
                                      (399 (pop)) ;;at TAG_10
                                      (400 (getstatic (fieldCP "const__20" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) ;;at TAG_11
                                      (403 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (406 (checkcast (class "clojure.lang.IFn"))) 
                                      (409 (getstatic (fieldCP "const__21" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (412 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (415 (checkcast (class "clojure.lang.IFn"))) 
                                      (418 (aload 10)) 
                                      (420 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (425 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (430 (dup)) 
                                      (431 (ifnull 465))  ;;to TAG_13
                                      (434 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (437 (if_acmpeq 466)) ;;to TAG_14
                                      (440 (getstatic (fieldCP "const__19" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (443 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (446 (checkcast (class "clojure.lang.IFn"))) 
                                      (449 (aload 10)) 
                                      (451 (aconst_null)) 
                                      (452 (astore 10)) 
                                      (454 (ldc_w 43)) ;;STRING:: "th"
                                      (457 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (462 (goto 489)) ;;to TAG_12
                                      (465 (pop)) ;;at TAG_13
                                      (466 (getstatic (fieldCP "const__22" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Keyword")))) ;;at TAG_14
                                      (469 (dup)) 
                                      (470 (ifnull 487)) ;;to TAG_15
                                      (473 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (476 (if_acmpeq 488)) ;;to TAG_16
                                      (479 (aload 11)) 
                                      (481 (aconst_null)) 
                                      (482 (astore 11)) 
                                      (484 (goto 489)) ;;to TAG_12
                                      (487 (pop)) ;;at TAG_15
                                      (488 (aconst_null)) ;;at TAG_16
                                      (489 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) ;;at TAG_12
                                      (494 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (499 (pop)) 
                                      (500 (goto 747)) ;;to TAG_1
                                      (503 (pop)) 
                                      (504 (getstatic (fieldCP "const__23" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) ;;at TAG_4
                                      (507 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (510 (checkcast (class "clojure.lang.IFn"))) 
                                      (513 (getstatic (fieldCP "const__24" "clojure.pprint$format_ordinal_english" (class "java.lang.Object")))) 
                                      (516 (getstatic (fieldCP "const__33" "clojure.pprint$format_ordinal_english" (class "clojure.lang.AFn")))) 
                                      (519 (getstatic (fieldCP "const__34" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (522 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (525 (checkcast (class "clojure.lang.IFn"))) 
                                      (528 (iconst_1)) 
                                      (529 (anewarray (class "java.lang.Object"))) 
                                      (532 (dup)) 
                                      (533 (iconst_0)) 
                                      (534 (aload 5)) 
                                      (536 (aastore)) 
                                      (537 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (540 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (545 (getstatic (fieldCP "const__35" "clojure.pprint$format_ordinal_english" (class "clojure.lang.AFn")))) 
                                      (548 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5)) 
                                      (553 (pop)) 
                                      (554 (aload 5)) 
                                      (556 (aconst_null)) 
                                      (557 (astore 5)) 
                                      (559 (ldc2_w 33)) ;; LONG:: "100"
                                      (562 (invokestatic (methodCP "remainder" "clojure.lang.Numbers" ((class "java.lang.Object") long) (class "java.lang.Number")))) 
                                      (565 (astore 9)) 
                                      (567 (ldc2_w 35)) ;; LONG:: "11"
                                      (570 (aload 9)) 
                                      (572 (invokestatic (methodCP "lt" "clojure.lang.Numbers" (long (class "java.lang.Object")) boolean))) 
                                      (575 (istore 10)) 
                                      (577 (iload 10)) 
                                      (579 (ifeq 588)) ;;to TAG_17
                                      (582 (iload 10)) 
                                      (584 (goto 596)) ;;to TAG_18
                                      (587 (pop)) 
                                      (588 (ldc2_w 37)) ;;at TAG_17;; LONG:: "19"
                                      (591 (aload 9)) 
                                      (593 (invokestatic (methodCP "gt" "clojure.lang.Numbers" (long (class "java.lang.Object")) boolean))) 
                                      (596 (istore 10)) ;;at TAG_18
                                      (598 (aload 9)) 
                                      (600 (aconst_null)) 
                                      (601 (astore 9)) 
                                      (603 (ldc2_w 24)) ;; LONG:: "10"
                                      (606 (invokestatic (methodCP "remainder" "clojure.lang.Numbers" ((class "java.lang.Object") long) (class "java.lang.Number")))) 
                                      (609 (astore 11)) 
                                      (611 (getstatic (fieldCP "const__5" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Var")))) 
                                      (614 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (617 (checkcast (class "clojure.lang.IFn"))) 
                                      (620 (aload 11)) 
                                      (622 (lconst_1)) 
                                      (623 (invokestatic (methodCP "equiv" "clojure.lang.Numbers" ((class "java.lang.Object") long) boolean))) 
                                      (626 (istore 12)) 
                                      (628 (iload 12)) 
                                      (630 (ifeq 639)) ;;to TAG_19
                                      (633 (iload 10)) 
                                      (635 (goto 641)) ;;to TAG_20
                                      (638 (pop)) 
                                      (639 (iload 12)) ;;at TAG_19
                                      (641 (ifeq 651)) ;;to TAG_21;;at TAG_20
                                      (644 (ldc_w 44)) ;;STRING:: "st"
                                      (647 (goto 741)) ;;to TAG_22
                                      (650 (pop)) 
                                      (651 (aload 11)) ;;at TAG_21
                                      (653 (ldc2_w 39)) ;; LONG:: "2"
                                      (656 (invokestatic (methodCP "equiv" "clojure.lang.Numbers" ((class "java.lang.Object") long) boolean))) 
                                      (659 (istore 12)) 
                                      (661 (iload 12)) 
                                      (663 (ifeq 672)) ;;to TAG_23
                                      (666 (iload 10)) 
                                      (668 (goto 674)) ;;to TAG_24
                                      (671 (pop)) 
                                      (672 (iload 12)) ;;at TAG_23
                                      (674 (ifeq 684)) ;;to TAG_25;;at TAG_24
                                      (677 (ldc_w 45)) ;;STRING:: "nd"
                                      (680 (goto 741)) ;;to TAG_22
                                      (683 (pop)) 
                                      (684 (aload 11)) ;;at TAG_25
                                      (686 (aconst_null)) 
                                      (687 (astore 11)) 
                                      (689 (ldc2_w 29)) ;; LONG:: "3"
                                      (692 (invokestatic (methodCP "equiv" "clojure.lang.Numbers" ((class "java.lang.Object") long) boolean))) 
                                      (695 (istore 12)) 
                                      (697 (iload 12)) 
                                      (699 (ifeq 708)) ;;to TAG_26
                                      (702 (iload 10)) 
                                      (704 (goto 710)) ;;to TAG_27
                                      (707 (pop)) 
                                      (708 (iload 12)) ;;at TAG_26
                                      (710 (ifeq 720)) ;;to TAG_28;;at TAG_27
                                      (713 (ldc_w 46)) ;;STRING:: "rd"
                                      (716 (goto 741)) ;;to TAG_22
                                      (719 (pop)) 
                                      (720 (getstatic (fieldCP "const__22" "clojure.pprint$format_ordinal_english" (class "clojure.lang.Keyword")))) ;;at TAG_28
                                      (723 (dup)) 
                                      (724 (ifnull 739)) ;;to TAG_29
                                      (727 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (730 (if_acmpeq 740)) ;;to TAG_30
                                      (733 (ldc_w 43)) ;;STRING:: "th"
                                      (736 (goto 741)) ;;to TAG_22
                                      (739 (pop)) ;;at TAG_29
                                      (740 (aconst_null)) ;;at TAG_30
                                      (741 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_22
                                      (746 (pop)) 
                                      (747 (aload 6)) ;;at TAG_1
                                      (749 (aconst_null)) 
                                      (750 (astore 6)) 
                                      (752 (areturn)) 
                                      (endofcode 753))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$format_ordinal_english-class-table*
  (make-static-class-decls 
   *clojure.pprint$format_ordinal_english*))

(defconst *package-name-map* 
  ("clojure.pprint$format_ordinal_english" . "clojure"))

