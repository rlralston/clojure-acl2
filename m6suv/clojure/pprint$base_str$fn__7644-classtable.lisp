; pprint$base_str$fn__7644-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:55 CDT 2014.
;

(defconst *clojure.pprint$base_str$fn__7644*
 (make-class-def
      '(class "clojure.pprint$base_str$fn__7644"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "<")
                        (LONG 10)
                        (STRING  "char")
                        (STRING  "+")
                        (STRING  "int")
                        (STRING  "-"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 91)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "<"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$base_str$fn__7644" (class "clojure.lang.Var"))))
                                      (13 (ldc2_w 2))     ;; LONG:: "10"
                                      (16 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (19 (putstatic (fieldCP "const__1" "clojure.pprint$base_str$fn__7644" (class "java.lang.Object"))))
                                      (22 (ldc 0))        ;;STRING:: "clojure.core"
                                      (24 (ldc 3))        ;;STRING:: "char"
                                      (26 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (29 (checkcast (class "clojure.lang.Var")))
                                      (32 (putstatic (fieldCP "const__2" "clojure.pprint$base_str$fn__7644" (class "clojure.lang.Var"))))
                                      (35 (ldc 0))        ;;STRING:: "clojure.core"
                                      (37 (ldc 4))        ;;STRING:: "+"
                                      (39 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (42 (checkcast (class "clojure.lang.Var")))
                                      (45 (putstatic (fieldCP "const__3" "clojure.pprint$base_str$fn__7644" (class "clojure.lang.Var"))))
                                      (48 (ldc 0))        ;;STRING:: "clojure.core"
                                      (50 (ldc 5))        ;;STRING:: "int"
                                      (52 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (55 (checkcast (class "clojure.lang.Var")))
                                      (58 (putstatic (fieldCP "const__4" "clojure.pprint$base_str$fn__7644" (class "clojure.lang.Var"))))
                                      (61 (bipush 48))
                                      (63 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (66 (putstatic (fieldCP "const__5" "clojure.pprint$base_str$fn__7644" (class "java.lang.Object"))))
                                      (69 (bipush 97))
                                      (71 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (74 (putstatic (fieldCP "const__6" "clojure.pprint$base_str$fn__7644" (class "java.lang.Object"))))
                                      (77 (ldc 0))        ;;STRING:: "clojure.core"
                                      (79 (ldc 6))        ;;STRING:: "-"
                                      (81 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (84 (checkcast (class "clojure.lang.Var")))
                                      (87 (putstatic (fieldCP "const__7" "clojure.pprint$base_str$fn__7644" (class "clojure.lang.Var"))))
                                      (90 (return))
                                      (endofcode 91))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 59)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (ldc2_w 2)) ;; LONG:: "10"
                                      (4 (invokestatic (methodCP "lt" "clojure.lang.Numbers" ((class "java.lang.Object") long) boolean))) 
                                      (7 (ifeq 33))  ;;to TAG_0
                                      (10 (getstatic (fieldCP "const__5" "clojure.pprint$base_str$fn__7644" (class "java.lang.Object")))) 
                                      (13 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (16 (i2l)) 
                                      (17 (aload_1)) 
                                      (18 (aconst_null)) 
                                      (19 (astore_1)) 
                                      (20 (invokestatic (methodCP "add" "clojure.lang.Numbers" (long (class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (23 (invokestatic (methodCP "charCast" "clojure.lang.RT" ((class "java.lang.Object")) char))) 
                                      (26 (invokestatic (methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character")))) 
                                      (29 (goto 58)) ;;to TAG_1
                                      (32 (pop)) 
                                      (33 (getstatic (fieldCP "const__6" "clojure.pprint$base_str$fn__7644" (class "java.lang.Object")))) ;;at TAG_0
                                      (36 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (39 (i2l)) 
                                      (40 (aload_1)) 
                                      (41 (aconst_null)) 
                                      (42 (astore_1)) 
                                      (43 (ldc2_w 2)) ;; LONG:: "10"
                                      (46 (invokestatic (methodCP "minus" "clojure.lang.Numbers" ((class "java.lang.Object") long) (class "java.lang.Number")))) 
                                      (49 (invokestatic (methodCP "add" "clojure.lang.Numbers" (long (class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (52 (invokestatic (methodCP "charCast" "clojure.lang.RT" ((class "java.lang.Object")) char))) 
                                      (55 (invokestatic (methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character")))) 
                                      (58 (areturn)) ;;at TAG_1
                                      (endofcode 59))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$base_str$fn__7644-class-table*
  (make-static-class-decls 
   *clojure.pprint$base_str$fn__7644*))

(defconst *package-name-map* 
  ("clojure.pprint$base_str$fn__7644" . "clojure"))

