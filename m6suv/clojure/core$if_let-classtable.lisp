; core$if_let-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:44 CDT 2014.
;

(defconst *clojure.core$if_let*
 (make-class-def
      '(class "clojure.core$if_let"
            "clojure.lang.RestFn"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "seq")
                        (STRING  "concat")
                        (STRING  "list")
                        (STRING  "if-let")
                        (STRING  "vector?")
                        (STRING  "str")
                        (STRING  "first")
                        (STRING  "*ns*")
                        (STRING  "line")
                        (STRING  "meta")
                        (STRING  "nil?")
                        (STRING  "=")
                        (LONG 2)
                        (STRING  "count")
                        (STRING  "let")
                        (STRING  "apply")
                        (STRING  "vector")
                        (STRING  "temp__4090__auto__")
                        (STRING  "if")
                        (STRING  " requires ")
                        (STRING  "a vector for its binding")
                        (STRING  " in ")
                        (STRING  ":")
                        (STRING  "1 or 2 forms after binding vector")
                        (STRING  "exactly 2 forms in binding vector"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__19" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__20" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__21" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__1__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__1__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__2__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__2__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 328)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "seq"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "concat"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "list"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "if-let"
                                      (43 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (46 (checkcast (class "clojure.lang.AFn")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.core$if_let" (class "clojure.lang.AFn"))))
                                      (52 (ldc 0))        ;;STRING:: "clojure.core"
                                      (54 (ldc 5))        ;;STRING:: "vector?"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (65 (ldc 0))        ;;STRING:: "clojure.core"
                                      (67 (ldc 6))        ;;STRING:: "str"
                                      (69 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (72 (checkcast (class "clojure.lang.Var")))
                                      (75 (putstatic (fieldCP "const__5" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (78 (ldc 0))        ;;STRING:: "clojure.core"
                                      (80 (ldc 7))        ;;STRING:: "first"
                                      (82 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (85 (checkcast (class "clojure.lang.Var")))
                                      (88 (putstatic (fieldCP "const__6" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (91 (ldc 0))        ;;STRING:: "clojure.core"
                                      (93 (ldc 8))        ;;STRING:: "*ns*"
                                      (95 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (98 (checkcast (class "clojure.lang.Var")))
                                      (101 (putstatic (fieldCP "const__7" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (104 (aconst_null))
                                      (105 (ldc 9))       ;;STRING:: "line"
                                      (107 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (110 (checkcast (class "clojure.lang.Keyword")))
                                      (113 (putstatic (fieldCP "const__8" "clojure.core$if_let" (class "clojure.lang.Keyword"))))
                                      (116 (ldc 0))       ;;STRING:: "clojure.core"
                                      (118 (ldc 10))      ;;STRING:: "meta"
                                      (120 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (123 (checkcast (class "clojure.lang.Var")))
                                      (126 (putstatic (fieldCP "const__9" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (129 (ldc 0))       ;;STRING:: "clojure.core"
                                      (131 (ldc 11))      ;;STRING:: "nil?"
                                      (133 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (136 (checkcast (class "clojure.lang.Var")))
                                      (139 (putstatic (fieldCP "const__10" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (142 (ldc 0))       ;;STRING:: "clojure.core"
                                      (144 (ldc 12))      ;;STRING:: "="
                                      (146 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (149 (checkcast (class "clojure.lang.Var")))
                                      (152 (putstatic (fieldCP "const__11" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (155 (ldc2_w 13))   ;; LONG:: "2"
                                      (158 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (161 (putstatic (fieldCP "const__12" "clojure.core$if_let" (class "java.lang.Object"))))
                                      (164 (ldc 0))       ;;STRING:: "clojure.core"
                                      (166 (ldc 14))      ;;STRING:: "count"
                                      (168 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (171 (checkcast (class "clojure.lang.Var")))
                                      (174 (putstatic (fieldCP "const__13" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (177 (lconst_0))
                                      (178 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (181 (putstatic (fieldCP "const__14" "clojure.core$if_let" (class "java.lang.Object"))))
                                      (184 (lconst_1))
                                      (185 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (188 (putstatic (fieldCP "const__15" "clojure.core$if_let" (class "java.lang.Object"))))
                                      (191 (ldc 0))       ;;STRING:: "clojure.core"
                                      (193 (ldc 15))      ;;STRING:: "let"
                                      (195 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (198 (checkcast (class "clojure.lang.AFn")))
                                      (201 (putstatic (fieldCP "const__16" "clojure.core$if_let" (class "clojure.lang.AFn"))))
                                      (204 (ldc 0))       ;;STRING:: "clojure.core"
                                      (206 (ldc 16))      ;;STRING:: "apply"
                                      (208 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (211 (checkcast (class "clojure.lang.Var")))
                                      (214 (putstatic (fieldCP "const__17" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (217 (ldc 0))       ;;STRING:: "clojure.core"
                                      (219 (ldc 17))      ;;STRING:: "vector"
                                      (221 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (224 (checkcast (class "clojure.lang.Var")))
                                      (227 (putstatic (fieldCP "const__18" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (230 (aconst_null))
                                      (231 (ldc 18))      ;;STRING:: "temp__4090__auto__"
                                      (233 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (236 (checkcast (class "clojure.lang.AFn")))
                                      (239 (putstatic (fieldCP "const__19" "clojure.core$if_let" (class "clojure.lang.AFn"))))
                                      (242 (aconst_null))
                                      (243 (ldc 19))      ;;STRING:: "if"
                                      (245 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (248 (checkcast (class "clojure.lang.AFn")))
                                      (251 (putstatic (fieldCP "const__20" "clojure.core$if_let" (class "clojure.lang.AFn"))))
                                      (254 (ldc 0))       ;;STRING:: "clojure.core"
                                      (256 (ldc 15))      ;;STRING:: "let"
                                      (258 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (261 (checkcast (class "clojure.lang.AFn")))
                                      (264 (putstatic (fieldCP "const__21" "clojure.core$if_let" (class "clojure.lang.AFn"))))
                                      (267 (new (class "clojure.lang.KeywordLookupSite")))
                                      (270 (dup))
                                      (271 (aconst_null))
                                      (272 (ldc 9))       ;;STRING:: "line"
                                      (274 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (277 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (280 (dup))
                                      (281 (putstatic (fieldCP "__site__0__" "clojure.core$if_let" (class "clojure.lang.KeywordLookupSite"))))
                                      (284 (putstatic (fieldCP "__thunk__0__" "clojure.core$if_let" (class "clojure.lang.ILookupThunk"))))
                                      (287 (new (class "clojure.lang.KeywordLookupSite")))
                                      (290 (dup))
                                      (291 (aconst_null))
                                      (292 (ldc 9))       ;;STRING:: "line"
                                      (294 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (297 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (300 (dup))
                                      (301 (putstatic (fieldCP "__site__1__" "clojure.core$if_let" (class "clojure.lang.KeywordLookupSite"))))
                                      (304 (putstatic (fieldCP "__thunk__1__" "clojure.core$if_let" (class "clojure.lang.ILookupThunk"))))
                                      (307 (new (class "clojure.lang.KeywordLookupSite")))
                                      (310 (dup))
                                      (311 (aconst_null))
                                      (312 (ldc 9))       ;;STRING:: "line"
                                      (314 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (317 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (320 (dup))
                                      (321 (putstatic (fieldCP "__site__2__" "clojure.core$if_let" (class "clojure.lang.KeywordLookupSite"))))
                                      (324 (putstatic (fieldCP "__thunk__2__" "clojure.core$if_let" (class "clojure.lang.ILookupThunk"))))
                                      (327 (return))
                                      (endofcode 328))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.RestFn" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doInvoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 21) (max_locals . 9) (code_length . 852)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__4" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_3)) 
                                      (10 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (15 (dup)) 
                                      (16 (ifnull 30)) ;;to TAG_0
                                      (19 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (22 (if_acmpeq 31))  ;;to TAG_1
                                      (25 (aconst_null)) 
                                      (26 (pop)) 
                                      (27 (goto 143)) ;;to TAG_2
                                      (30 (pop)) ;;at TAG_0
                                      (31 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_1
                                      (34 (dup)) 
                                      (35 (getstatic (fieldCP "const__5" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (38 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (41 (checkcast (class "clojure.lang.IFn"))) 
                                      (44 (getstatic (fieldCP "const__6" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (47 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (50 (checkcast (class "clojure.lang.IFn"))) 
                                      (53 (aload_1)) 
                                      (54 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (59 (ldc 20)) ;;STRING:: " requires "
                                      (61 (ldc 21)) ;;STRING:: "a vector for its binding"
                                      (63 (ldc 22)) ;;STRING:: " in "
                                      (65 (getstatic (fieldCP "const__7" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (68 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (71 (ldc 23)) ;;STRING:: ":"
                                      (73 (getstatic (fieldCP "__thunk__0__" "clojure.core$if_let" (class "clojure.lang.ILookupThunk")))) 
                                      (76 (dup)) 
                                      (77 (getstatic (fieldCP "const__9" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (80 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (83 (checkcast (class "clojure.lang.IFn"))) 
                                      (86 (aload_1)) 
                                      (87 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (92 (dup_x2)) 
                                      (93 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (98 (dup_x2)) 
                                      (99 (if_acmpeq 106)) ;;to TAG_3
                                      (102 (pop)) 
                                      (103 (goto 128)) ;;to TAG_4
                                      (106 (swap)) ;;at TAG_3
                                      (107 (pop)) 
                                      (108 (dup)) 
                                      (109 (getstatic (fieldCP "__site__0__" "clojure.core$if_let" (class "clojure.lang.KeywordLookupSite")))) 
                                      (112 (swap)) 
                                      (113 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (118 (dup)) 
                                      (119 (putstatic (fieldCP "__thunk__0__" "clojure.core$if_let" (class "clojure.lang.ILookupThunk")))) 
                                      (122 (swap)) 
                                      (123 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (128 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 8)) ;;at TAG_4
                                      (133 (checkcast (class "java.lang.String"))) 
                                      (136 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (139 (checkcast (class "java.lang.Throwable"))) 
                                      (142 (athrow)) 
                                      (143 (aload 6)) ;;at TAG_2
                                      (145 (aconst_null)) 
                                      (146 (astore 6)) 
                                      (148 (aconst_null)) 
                                      (149 (invokestatic (methodCP "identical" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (152 (ifeq 161)) ;;to TAG_5
                                      (155 (aconst_null)) 
                                      (156 (pop)) 
                                      (157 (goto 273)) ;;to TAG_6
                                      (160 (pop)) 
                                      (161 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_5
                                      (164 (dup)) 
                                      (165 (getstatic (fieldCP "const__5" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (168 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (171 (checkcast (class "clojure.lang.IFn"))) 
                                      (174 (getstatic (fieldCP "const__6" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (177 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (180 (checkcast (class "clojure.lang.IFn"))) 
                                      (183 (aload_1)) 
                                      (184 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (189 (ldc 20)) ;;STRING:: " requires "
                                      (191 (ldc 24)) ;;STRING:: "1 or 2 forms after binding vector"
                                      (193 (ldc 22)) ;;STRING:: " in "
                                      (195 (getstatic (fieldCP "const__7" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (198 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (201 (ldc 23)) ;;STRING:: ":"
                                      (203 (getstatic (fieldCP "__thunk__1__" "clojure.core$if_let" (class "clojure.lang.ILookupThunk")))) 
                                      (206 (dup)) 
                                      (207 (getstatic (fieldCP "const__9" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (210 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (213 (checkcast (class "clojure.lang.IFn"))) 
                                      (216 (aload_1)) 
                                      (217 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (222 (dup_x2)) 
                                      (223 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (228 (dup_x2)) 
                                      (229 (if_acmpeq 236)) ;;to TAG_7
                                      (232 (pop)) 
                                      (233 (goto 258)) ;;to TAG_8
                                      (236 (swap)) ;;at TAG_7
                                      (237 (pop)) 
                                      (238 (dup)) 
                                      (239 (getstatic (fieldCP "__site__1__" "clojure.core$if_let" (class "clojure.lang.KeywordLookupSite")))) 
                                      (242 (swap)) 
                                      (243 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (248 (dup)) 
                                      (249 (putstatic (fieldCP "__thunk__1__" "clojure.core$if_let" (class "clojure.lang.ILookupThunk")))) 
                                      (252 (swap)) 
                                      (253 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (258 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 8)) ;;at TAG_8
                                      (263 (checkcast (class "java.lang.String"))) 
                                      (266 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (269 (checkcast (class "java.lang.Throwable"))) 
                                      (272 (athrow)) 
                                      (273 (ldc2_w 13)) ;;at TAG_6;; LONG:: "2"
                                      (276 (aload_3)) 
                                      (277 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (280 (i2l)) 
                                      (281 (lcmp)) 
                                      (282 (ifne 291)) ;;to TAG_9
                                      (285 (aconst_null)) 
                                      (286 (pop)) 
                                      (287 (goto 405)) ;;to TAG_10
                                      (290 (pop)) 
                                      (291 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_9
                                      (294 (dup)) 
                                      (295 (getstatic (fieldCP "const__5" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (298 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (301 (checkcast (class "clojure.lang.IFn"))) 
                                      (304 (getstatic (fieldCP "const__6" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (307 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (310 (checkcast (class "clojure.lang.IFn"))) 
                                      (313 (aload_1)) 
                                      (314 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (319 (ldc 20)) ;;STRING:: " requires "
                                      (321 (ldc 25)) ;;STRING:: "exactly 2 forms in binding vector"
                                      (323 (ldc 22)) ;;STRING:: " in "
                                      (325 (getstatic (fieldCP "const__7" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (328 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (331 (ldc 23)) ;;STRING:: ":"
                                      (333 (getstatic (fieldCP "__thunk__2__" "clojure.core$if_let" (class "clojure.lang.ILookupThunk")))) 
                                      (336 (dup)) 
                                      (337 (getstatic (fieldCP "const__9" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (340 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (343 (checkcast (class "clojure.lang.IFn"))) 
                                      (346 (aload_1)) 
                                      (347 (aconst_null)) 
                                      (348 (astore_1)) 
                                      (349 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (354 (dup_x2)) 
                                      (355 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (360 (dup_x2)) 
                                      (361 (if_acmpeq 368)) ;;to TAG_11
                                      (364 (pop)) 
                                      (365 (goto 390)) ;;to TAG_12
                                      (368 (swap)) ;;at TAG_11
                                      (369 (pop)) 
                                      (370 (dup)) 
                                      (371 (getstatic (fieldCP "__site__2__" "clojure.core$if_let" (class "clojure.lang.KeywordLookupSite")))) 
                                      (374 (swap)) 
                                      (375 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (380 (dup)) 
                                      (381 (putstatic (fieldCP "__thunk__2__" "clojure.core$if_let" (class "clojure.lang.ILookupThunk")))) 
                                      (384 (swap)) 
                                      (385 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (390 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 8)) ;;at TAG_12
                                      (395 (checkcast (class "java.lang.String"))) 
                                      (398 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (401 (checkcast (class "java.lang.Throwable"))) 
                                      (404 (athrow)) 
                                      (405 (aconst_null)) ;;at TAG_10
                                      (406 (pop)) 
                                      (407 (aload_3)) 
                                      (408 (checkcast (class "clojure.lang.IFn"))) 
                                      (411 (getstatic (fieldCP "const__14" "clojure.core$if_let" (class "java.lang.Object")))) 
                                      (414 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (419 (astore 7)) 
                                      (421 (aload_3)) 
                                      (422 (aconst_null)) 
                                      (423 (astore_3)) 
                                      (424 (checkcast (class "clojure.lang.IFn"))) 
                                      (427 (getstatic (fieldCP "const__15" "clojure.core$if_let" (class "java.lang.Object")))) 
                                      (430 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (435 (astore 8)) 
                                      (437 (getstatic (fieldCP "const__0" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (440 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (443 (checkcast (class "clojure.lang.IFn"))) 
                                      (446 (getstatic (fieldCP "const__1" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (449 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (452 (checkcast (class "clojure.lang.IFn"))) 
                                      (455 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (458 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (461 (checkcast (class "clojure.lang.IFn"))) 
                                      (464 (getstatic (fieldCP "const__16" "clojure.core$if_let" (class "clojure.lang.AFn")))) 
                                      (467 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (472 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (475 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (478 (checkcast (class "clojure.lang.IFn"))) 
                                      (481 (getstatic (fieldCP "const__17" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (484 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (487 (checkcast (class "clojure.lang.IFn"))) 
                                      (490 (getstatic (fieldCP "const__18" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (493 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (496 (getstatic (fieldCP "const__0" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (499 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (502 (checkcast (class "clojure.lang.IFn"))) 
                                      (505 (getstatic (fieldCP "const__1" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (508 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (511 (checkcast (class "clojure.lang.IFn"))) 
                                      (514 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (517 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (520 (checkcast (class "clojure.lang.IFn"))) 
                                      (523 (getstatic (fieldCP "const__19" "clojure.core$if_let" (class "clojure.lang.AFn")))) 
                                      (526 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (531 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (534 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (537 (checkcast (class "clojure.lang.IFn"))) 
                                      (540 (aload 8)) 
                                      (542 (aconst_null)) 
                                      (543 (astore 8)) 
                                      (545 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (550 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (555 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (560 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (565 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (570 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (573 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (576 (checkcast (class "clojure.lang.IFn"))) 
                                      (579 (getstatic (fieldCP "const__0" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (582 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (585 (checkcast (class "clojure.lang.IFn"))) 
                                      (588 (getstatic (fieldCP "const__1" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (591 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (594 (checkcast (class "clojure.lang.IFn"))) 
                                      (597 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (600 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (603 (checkcast (class "clojure.lang.IFn"))) 
                                      (606 (getstatic (fieldCP "const__20" "clojure.core$if_let" (class "clojure.lang.AFn")))) 
                                      (609 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (614 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (617 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (620 (checkcast (class "clojure.lang.IFn"))) 
                                      (623 (getstatic (fieldCP "const__19" "clojure.core$if_let" (class "clojure.lang.AFn")))) 
                                      (626 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (631 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (634 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (637 (checkcast (class "clojure.lang.IFn"))) 
                                      (640 (getstatic (fieldCP "const__0" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (643 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (646 (checkcast (class "clojure.lang.IFn"))) 
                                      (649 (getstatic (fieldCP "const__1" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (652 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (655 (checkcast (class "clojure.lang.IFn"))) 
                                      (658 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (661 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (664 (checkcast (class "clojure.lang.IFn"))) 
                                      (667 (getstatic (fieldCP "const__21" "clojure.core$if_let" (class "clojure.lang.AFn")))) 
                                      (670 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (675 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (678 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (681 (checkcast (class "clojure.lang.IFn"))) 
                                      (684 (getstatic (fieldCP "const__17" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (687 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (690 (checkcast (class "clojure.lang.IFn"))) 
                                      (693 (getstatic (fieldCP "const__18" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (696 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (699 (getstatic (fieldCP "const__0" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (702 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (705 (checkcast (class "clojure.lang.IFn"))) 
                                      (708 (getstatic (fieldCP "const__1" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (711 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (714 (checkcast (class "clojure.lang.IFn"))) 
                                      (717 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (720 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (723 (checkcast (class "clojure.lang.IFn"))) 
                                      (726 (aload 7)) 
                                      (728 (aconst_null)) 
                                      (729 (astore 7)) 
                                      (731 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (736 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (739 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (742 (checkcast (class "clojure.lang.IFn"))) 
                                      (745 (getstatic (fieldCP "const__19" "clojure.core$if_let" (class "clojure.lang.AFn")))) 
                                      (748 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (753 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (758 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (763 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (768 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (773 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (776 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (779 (checkcast (class "clojure.lang.IFn"))) 
                                      (782 (aload 4)) 
                                      (784 (aconst_null)) 
                                      (785 (astore 4)) 
                                      (787 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (792 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (797 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (802 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (807 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var")))) 
                                      (810 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (813 (checkcast (class "clojure.lang.IFn"))) 
                                      (816 (aload 5)) 
                                      (818 (aconst_null)) 
                                      (819 (astore 5)) 
                                      (821 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (826 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5)) 
                                      (831 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (836 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (841 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (846 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (851 (areturn)) 
                                      (endofcode 852))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 5) (code_length . 97)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (checkcast (class "clojure.lang.IFn")))
                                      (9 (getstatic (fieldCP "const__1" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (12 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (15 (checkcast (class "clojure.lang.IFn")))
                                      (18 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (21 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (24 (checkcast (class "clojure.lang.IFn")))
                                      (27 (getstatic (fieldCP "const__3" "clojure.core$if_let" (class "clojure.lang.AFn"))))
                                      (30 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (35 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (38 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (41 (checkcast (class "clojure.lang.IFn")))
                                      (44 (aload_3))
                                      (45 (aconst_null))
                                      (46 (astore_3))
                                      (47 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (52 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (55 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (58 (checkcast (class "clojure.lang.IFn")))
                                      (61 (aload 4))
                                      (63 (aconst_null))
                                      (64 (astore 4))
                                      (66 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (71 (getstatic (fieldCP "const__2" "clojure.core$if_let" (class "clojure.lang.Var"))))
                                      (74 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (77 (checkcast (class "clojure.lang.IFn")))
                                      (80 (aconst_null))
                                      (81 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (86 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5))
                                      (91 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (96 (areturn))
                                      (endofcode 97))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getRequiredArity"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iconst_5))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 50)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 49 (0 . 2) (28 35 42))))  ;;to TAG_2;;to TAG_3;;to TAG_0;;to TAG_1
                                      (28 (aload_2)) ;;at TAG_1
                                      (29 (putstatic (fieldCP "__thunk__0__" "clojure.core$if_let" (class "clojure.lang.ILookupThunk")))) 
                                      (32 (goto 49)) ;;to TAG_0
                                      (35 (aload_2)) ;;at TAG_2
                                      (36 (putstatic (fieldCP "__thunk__1__" "clojure.core$if_let" (class "clojure.lang.ILookupThunk")))) 
                                      (39 (goto 49)) ;;to TAG_0
                                      (42 (aload_2)) ;;at TAG_3
                                      (43 (putstatic (fieldCP "__thunk__2__" "clojure.core$if_let" (class "clojure.lang.ILookupThunk")))) 
                                      (46 (goto 49)) ;;to TAG_0
                                      (49 (return)) ;;at TAG_0
                                      (endofcode 50))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$if_let-class-table*
  (make-static-class-decls 
   *clojure.core$if_let*))

(defconst *package-name-map* 
  ("clojure.core$if_let" . "clojure"))

