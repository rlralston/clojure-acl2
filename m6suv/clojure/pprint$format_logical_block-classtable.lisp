; pprint$format_logical_block-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:56 CDT 2014.
;

(defconst *clojure.pprint$format_logical_block*
 (make-class-def
      '(class "clojure.pprint$format_logical_block"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clauses")
                        (STRING  "clojure.core")
                        (STRING  "count")
                        (STRING  ">")
                        (STRING  "string")
                        (STRING  "params")
                        (STRING  "first")
                        (STRING  "colon")
                        (STRING  "nth")
                        (LONG 2)
                        (STRING  "clojure.pprint")
                        (STRING  "next-arg")
                        (STRING  "level-exceeded")
                        (STRING  "*out*")
                        (STRING  "push-thread-bindings")
                        (STRING  "*current-level*")
                        (STRING  "inc")
                        (STRING  "var-get")
                        (STRING  "*current-length*")
                        (STRING  "(")
                        (STRING  ")")
                        (STRING  "#"))
            (fields
                        (field "const__0" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__1__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__1__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__2__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__2__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__3__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__3__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__4__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__4__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__5__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__5__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__6__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__6__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 368)
                                   (parsedcode
                                      (0 (aconst_null))
                                      (1 (ldc 0))         ;;STRING:: "clauses"
                                      (3 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (6 (checkcast (class "clojure.lang.Keyword")))
                                      (9 (putstatic (fieldCP "const__0" "clojure.pprint$format_logical_block" (class "clojure.lang.Keyword"))))
                                      (12 (ldc 1))        ;;STRING:: "clojure.core"
                                      (14 (ldc 2))        ;;STRING:: "count"
                                      (16 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (19 (checkcast (class "clojure.lang.Var")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.pprint$format_logical_block" (class "clojure.lang.Var"))))
                                      (25 (ldc 1))        ;;STRING:: "clojure.core"
                                      (27 (ldc 3))        ;;STRING:: ">"
                                      (29 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (32 (checkcast (class "clojure.lang.Var")))
                                      (35 (putstatic (fieldCP "const__2" "clojure.pprint$format_logical_block" (class "clojure.lang.Var"))))
                                      (38 (lconst_1))
                                      (39 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (42 (putstatic (fieldCP "const__3" "clojure.pprint$format_logical_block" (class "java.lang.Object"))))
                                      (45 (aconst_null))
                                      (46 (ldc 4))        ;;STRING:: "string"
                                      (48 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (51 (checkcast (class "clojure.lang.Keyword")))
                                      (54 (putstatic (fieldCP "const__4" "clojure.pprint$format_logical_block" (class "clojure.lang.Keyword"))))
                                      (57 (aconst_null))
                                      (58 (ldc 5))        ;;STRING:: "params"
                                      (60 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (63 (checkcast (class "clojure.lang.Keyword")))
                                      (66 (putstatic (fieldCP "const__5" "clojure.pprint$format_logical_block" (class "clojure.lang.Keyword"))))
                                      (69 (ldc 1))        ;;STRING:: "clojure.core"
                                      (71 (ldc 6))        ;;STRING:: "first"
                                      (73 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (76 (checkcast (class "clojure.lang.Var")))
                                      (79 (putstatic (fieldCP "const__6" "clojure.pprint$format_logical_block" (class "clojure.lang.Var"))))
                                      (82 (aconst_null))
                                      (83 (ldc 7))        ;;STRING:: "colon"
                                      (85 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (88 (checkcast (class "clojure.lang.Keyword")))
                                      (91 (putstatic (fieldCP "const__7" "clojure.pprint$format_logical_block" (class "clojure.lang.Keyword"))))
                                      (94 (ldc 1))        ;;STRING:: "clojure.core"
                                      (96 (ldc 8))        ;;STRING:: "nth"
                                      (98 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (101 (checkcast (class "clojure.lang.Var")))
                                      (104 (putstatic (fieldCP "const__8" "clojure.pprint$format_logical_block" (class "clojure.lang.Var"))))
                                      (107 (lconst_0))
                                      (108 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (111 (putstatic (fieldCP "const__9" "clojure.pprint$format_logical_block" (class "java.lang.Object"))))
                                      (114 (ldc2_w 9))    ;; LONG:: "2"
                                      (117 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (120 (putstatic (fieldCP "const__10" "clojure.pprint$format_logical_block" (class "java.lang.Object"))))
                                      (123 (ldc 10))      ;;STRING:: "clojure.pprint"
                                      (125 (ldc 11))      ;;STRING:: "next-arg"
                                      (127 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (130 (checkcast (class "clojure.lang.Var")))
                                      (133 (putstatic (fieldCP "const__11" "clojure.pprint$format_logical_block" (class "clojure.lang.Var"))))
                                      (136 (ldc 10))      ;;STRING:: "clojure.pprint"
                                      (138 (ldc 12))      ;;STRING:: "level-exceeded"
                                      (140 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (143 (checkcast (class "clojure.lang.Var")))
                                      (146 (putstatic (fieldCP "const__12" "clojure.pprint$format_logical_block" (class "clojure.lang.Var"))))
                                      (149 (ldc 1))       ;;STRING:: "clojure.core"
                                      (151 (ldc 13))      ;;STRING:: "*out*"
                                      (153 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (156 (checkcast (class "clojure.lang.Var")))
                                      (159 (putstatic (fieldCP "const__13" "clojure.pprint$format_logical_block" (class "clojure.lang.Var"))))
                                      (162 (ldc 1))       ;;STRING:: "clojure.core"
                                      (164 (ldc 14))      ;;STRING:: "push-thread-bindings"
                                      (166 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (169 (checkcast (class "clojure.lang.Var")))
                                      (172 (putstatic (fieldCP "const__14" "clojure.pprint$format_logical_block" (class "clojure.lang.Var"))))
                                      (175 (ldc 10))      ;;STRING:: "clojure.pprint"
                                      (177 (ldc 15))      ;;STRING:: "*current-level*"
                                      (179 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (182 (checkcast (class "clojure.lang.Var")))
                                      (185 (putstatic (fieldCP "const__15" "clojure.pprint$format_logical_block" (class "clojure.lang.Var"))))
                                      (188 (ldc 1))       ;;STRING:: "clojure.core"
                                      (190 (ldc 16))      ;;STRING:: "inc"
                                      (192 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (195 (checkcast (class "clojure.lang.Var")))
                                      (198 (putstatic (fieldCP "const__16" "clojure.pprint$format_logical_block" (class "clojure.lang.Var"))))
                                      (201 (ldc 1))       ;;STRING:: "clojure.core"
                                      (203 (ldc 17))      ;;STRING:: "var-get"
                                      (205 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (208 (checkcast (class "clojure.lang.Var")))
                                      (211 (putstatic (fieldCP "const__17" "clojure.pprint$format_logical_block" (class "clojure.lang.Var"))))
                                      (214 (ldc 10))      ;;STRING:: "clojure.pprint"
                                      (216 (ldc 18))      ;;STRING:: "*current-length*"
                                      (218 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (221 (checkcast (class "clojure.lang.Var")))
                                      (224 (putstatic (fieldCP "const__18" "clojure.pprint$format_logical_block" (class "clojure.lang.Var"))))
                                      (227 (new (class "clojure.lang.KeywordLookupSite")))
                                      (230 (dup))
                                      (231 (aconst_null))
                                      (232 (ldc 0))       ;;STRING:: "clauses"
                                      (234 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (237 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (240 (dup))
                                      (241 (putstatic (fieldCP "__site__0__" "clojure.pprint$format_logical_block" (class "clojure.lang.KeywordLookupSite"))))
                                      (244 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk"))))
                                      (247 (new (class "clojure.lang.KeywordLookupSite")))
                                      (250 (dup))
                                      (251 (aconst_null))
                                      (252 (ldc 5))       ;;STRING:: "params"
                                      (254 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (257 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (260 (dup))
                                      (261 (putstatic (fieldCP "__site__1__" "clojure.pprint$format_logical_block" (class "clojure.lang.KeywordLookupSite"))))
                                      (264 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk"))))
                                      (267 (new (class "clojure.lang.KeywordLookupSite")))
                                      (270 (dup))
                                      (271 (aconst_null))
                                      (272 (ldc 4))       ;;STRING:: "string"
                                      (274 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (277 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (280 (dup))
                                      (281 (putstatic (fieldCP "__site__2__" "clojure.pprint$format_logical_block" (class "clojure.lang.KeywordLookupSite"))))
                                      (284 (putstatic (fieldCP "__thunk__2__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk"))))
                                      (287 (new (class "clojure.lang.KeywordLookupSite")))
                                      (290 (dup))
                                      (291 (aconst_null))
                                      (292 (ldc 7))       ;;STRING:: "colon"
                                      (294 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (297 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (300 (dup))
                                      (301 (putstatic (fieldCP "__site__3__" "clojure.pprint$format_logical_block" (class "clojure.lang.KeywordLookupSite"))))
                                      (304 (putstatic (fieldCP "__thunk__3__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk"))))
                                      (307 (new (class "clojure.lang.KeywordLookupSite")))
                                      (310 (dup))
                                      (311 (aconst_null))
                                      (312 (ldc 5))       ;;STRING:: "params"
                                      (314 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (317 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (320 (dup))
                                      (321 (putstatic (fieldCP "__site__4__" "clojure.pprint$format_logical_block" (class "clojure.lang.KeywordLookupSite"))))
                                      (324 (putstatic (fieldCP "__thunk__4__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk"))))
                                      (327 (new (class "clojure.lang.KeywordLookupSite")))
                                      (330 (dup))
                                      (331 (aconst_null))
                                      (332 (ldc 4))       ;;STRING:: "string"
                                      (334 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (337 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (340 (dup))
                                      (341 (putstatic (fieldCP "__site__5__" "clojure.pprint$format_logical_block" (class "clojure.lang.KeywordLookupSite"))))
                                      (344 (putstatic (fieldCP "__thunk__5__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk"))))
                                      (347 (new (class "clojure.lang.KeywordLookupSite")))
                                      (350 (dup))
                                      (351 (aconst_null))
                                      (352 (ldc 7))       ;;STRING:: "colon"
                                      (354 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (357 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (360 (dup))
                                      (361 (putstatic (fieldCP "__site__6__" "clojure.pprint$format_logical_block" (class "clojure.lang.KeywordLookupSite"))))
                                      (364 (putstatic (fieldCP "__thunk__6__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk"))))
                                      (367 (return))
                                      (endofcode 368))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 8) (max_locals . 12) (code_length . 638)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "__thunk__0__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (3 (dup)) 
                                      (4 (aload_1)) 
                                      (5 (dup_x2)) 
                                      (6 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (11 (dup_x2)) 
                                      (12 (if_acmpeq 19)) ;;to TAG_0
                                      (15 (pop)) 
                                      (16 (goto 41)) ;;to TAG_1
                                      (19 (swap)) ;;at TAG_0
                                      (20 (pop)) 
                                      (21 (dup)) 
                                      (22 (getstatic (fieldCP "__site__0__" "clojure.pprint$format_logical_block" (class "clojure.lang.KeywordLookupSite")))) 
                                      (25 (swap)) 
                                      (26 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (31 (dup)) 
                                      (32 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (35 (swap)) 
                                      (36 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (41 (astore 4)) ;;at TAG_1
                                      (43 (aload 4)) 
                                      (45 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (48 (istore 5)) 
                                      (50 (iload 5)) 
                                      (52 (i2l)) 
                                      (53 (lconst_1)) 
                                      (54 (lcmp)) 
                                      (55 (ifle 172)) ;;to TAG_2
                                      (58 (getstatic (fieldCP "__thunk__2__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (61 (dup)) 
                                      (62 (getstatic (fieldCP "__thunk__1__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (65 (dup)) 
                                      (66 (getstatic (fieldCP "const__6" "clojure.pprint$format_logical_block" (class "clojure.lang.Var")))) 
                                      (69 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (72 (checkcast (class "clojure.lang.IFn"))) 
                                      (75 (getstatic (fieldCP "const__6" "clojure.pprint$format_logical_block" (class "clojure.lang.Var")))) 
                                      (78 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (81 (checkcast (class "clojure.lang.IFn"))) 
                                      (84 (aload 4)) 
                                      (86 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (91 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (96 (dup_x2)) 
                                      (97 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (102 (dup_x2)) 
                                      (103 (if_acmpeq 110)) ;;to TAG_3
                                      (106 (pop)) 
                                      (107 (goto 132)) ;;to TAG_4
                                      (110 (swap)) ;;at TAG_3
                                      (111 (pop)) 
                                      (112 (dup)) 
                                      (113 (getstatic (fieldCP "__site__1__" "clojure.pprint$format_logical_block" (class "clojure.lang.KeywordLookupSite")))) 
                                      (116 (swap)) 
                                      (117 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (122 (dup)) 
                                      (123 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (126 (swap)) 
                                      (127 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (132 (dup_x2)) ;;at TAG_4
                                      (133 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (138 (dup_x2)) 
                                      (139 (if_acmpeq 146)) ;;to TAG_5
                                      (142 (pop)) 
                                      (143 (goto 168)) ;;to TAG_6
                                      (146 (swap)) ;;at TAG_5
                                      (147 (pop)) 
                                      (148 (dup)) 
                                      (149 (getstatic (fieldCP "__site__2__" "clojure.pprint$format_logical_block" (class "clojure.lang.KeywordLookupSite")))) 
                                      (152 (swap)) 
                                      (153 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (158 (dup)) 
                                      (159 (putstatic (fieldCP "__thunk__2__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (162 (swap)) 
                                      (163 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (168 (goto 230)) ;;to TAG_7;;at TAG_6
                                      (171 (pop)) 
                                      (172 (getstatic (fieldCP "__thunk__3__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) ;;at TAG_2
                                      (175 (dup)) 
                                      (176 (aload_1)) 
                                      (177 (dup_x2)) 
                                      (178 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (183 (dup_x2)) 
                                      (184 (if_acmpeq 191)) ;;to TAG_8
                                      (187 (pop)) 
                                      (188 (goto 213)) ;;to TAG_9
                                      (191 (swap)) ;;at TAG_8
                                      (192 (pop)) 
                                      (193 (dup)) 
                                      (194 (getstatic (fieldCP "__site__3__" "clojure.pprint$format_logical_block" (class "clojure.lang.KeywordLookupSite")))) 
                                      (197 (swap)) 
                                      (198 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (203 (dup)) 
                                      (204 (putstatic (fieldCP "__thunk__3__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (207 (swap)) 
                                      (208 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (213 (dup)) ;;at TAG_9
                                      (214 (ifnull 228)) ;;to TAG_10
                                      (217 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (220 (if_acmpeq 229)) ;;to TAG_11
                                      (223 (ldc 19)) ;;STRING:: "("
                                      (225 (goto 230)) ;;to TAG_7
                                      (228 (pop)) ;;at TAG_10
                                      (229 (aconst_null)) ;;at TAG_11
                                      (230 (astore 6)) ;;at TAG_7
                                      (232 (aload 4)) 
                                      (234 (iload 5)) 
                                      (236 (i2l)) 
                                      (237 (lconst_1)) 
                                      (238 (lcmp)) 
                                      (239 (ifle 247)) ;;to TAG_12
                                      (242 (lconst_1)) 
                                      (243 (goto 248))  ;;to TAG_13
                                      (246 (pop)) 
                                      (247 (lconst_0)) ;;at TAG_12
                                      (248 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) ;;at TAG_13
                                      (251 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (254 (astore 7)) 
                                      (256 (iload 5)) 
                                      (258 (i2l)) 
                                      (259 (ldc2_w 9)) ;; LONG:: "2"
                                      (262 (lcmp)) 
                                      (263 (ifle 378)) ;;to TAG_14
                                      (266 (getstatic (fieldCP "__thunk__5__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (269 (dup)) 
                                      (270 (getstatic (fieldCP "__thunk__4__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (273 (dup)) 
                                      (274 (getstatic (fieldCP "const__6" "clojure.pprint$format_logical_block" (class "clojure.lang.Var")))) 
                                      (277 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (280 (checkcast (class "clojure.lang.IFn"))) 
                                      (283 (aload 4)) 
                                      (285 (aconst_null)) 
                                      (286 (astore 4)) 
                                      (288 (ldc2_w 9)) ;; LONG:: "2"
                                      (291 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (294 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (297 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (302 (dup_x2)) 
                                      (303 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (308 (dup_x2)) 
                                      (309 (if_acmpeq 316)) ;;to TAG_15
                                      (312 (pop)) 
                                      (313 (goto 338)) ;;to TAG_16
                                      (316 (swap)) ;;at TAG_15
                                      (317 (pop)) 
                                      (318 (dup)) 
                                      (319 (getstatic (fieldCP "__site__4__" "clojure.pprint$format_logical_block" (class "clojure.lang.KeywordLookupSite")))) 
                                      (322 (swap)) 
                                      (323 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (328 (dup)) 
                                      (329 (putstatic (fieldCP "__thunk__4__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (332 (swap)) 
                                      (333 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (338 (dup_x2)) ;;at TAG_16
                                      (339 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (344 (dup_x2)) 
                                      (345 (if_acmpeq 352)) ;;to TAG_17
                                      (348 (pop)) 
                                      (349 (goto 374)) ;;to TAG_18
                                      (352 (swap)) ;;at TAG_17
                                      (353 (pop)) 
                                      (354 (dup)) 
                                      (355 (getstatic (fieldCP "__site__5__" "clojure.pprint$format_logical_block" (class "clojure.lang.KeywordLookupSite")))) 
                                      (358 (swap)) 
                                      (359 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (364 (dup)) 
                                      (365 (putstatic (fieldCP "__thunk__5__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (368 (swap)) 
                                      (369 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (374 (goto 436)) ;;to TAG_19;;at TAG_18
                                      (377 (pop)) 
                                      (378 (getstatic (fieldCP "__thunk__6__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) ;;at TAG_14
                                      (381 (dup)) 
                                      (382 (aload_1)) 
                                      (383 (dup_x2)) 
                                      (384 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (389 (dup_x2)) 
                                      (390 (if_acmpeq 397)) ;;to TAG_20
                                      (393 (pop)) 
                                      (394 (goto 419)) ;;to TAG_21
                                      (397 (swap)) ;;at TAG_20
                                      (398 (pop)) 
                                      (399 (dup)) 
                                      (400 (getstatic (fieldCP "__site__6__" "clojure.pprint$format_logical_block" (class "clojure.lang.KeywordLookupSite")))) 
                                      (403 (swap)) 
                                      (404 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (409 (dup)) 
                                      (410 (putstatic (fieldCP "__thunk__6__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (413 (swap)) 
                                      (414 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (419 (dup)) ;;at TAG_21
                                      (420 (ifnull 434)) ;;to TAG_22
                                      (423 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (426 (if_acmpeq 435)) ;;to TAG_23
                                      (429 (ldc 20)) ;;STRING:: ")"
                                      (431 (goto 436)) ;;to TAG_19
                                      (434 (pop)) ;;at TAG_22
                                      (435 (aconst_null)) ;;at TAG_23
                                      (436 (astore 8)) ;;at TAG_19
                                      (438 (getstatic (fieldCP "const__11" "clojure.pprint$format_logical_block" (class "clojure.lang.Var")))) 
                                      (441 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (444 (checkcast (class "clojure.lang.IFn"))) 
                                      (447 (aload_2)) 
                                      (448 (aconst_null)) 
                                      (449 (astore_2)) 
                                      (450 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (455 (astore 9)) 
                                      (457 (aload 9)) 
                                      (459 (lconst_0)) 
                                      (460 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (463 (aconst_null)) 
                                      (464 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (467 (astore 10)) 
                                      (469 (aload 9)) 
                                      (471 (aconst_null)) 
                                      (472 (astore 9)) 
                                      (474 (lconst_1)) 
                                      (475 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (478 (aconst_null)) 
                                      (479 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (482 (astore 11)) 
                                      (484 (getstatic (fieldCP "const__12" "clojure.pprint$format_logical_block" (class "clojure.lang.Var")))) 
                                      (487 (checkcast (class "clojure.lang.IFn"))) 
                                      (490 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (495 (dup)) 
                                      (496 (ifnull 527)) ;;to TAG_24
                                      (499 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (502 (if_acmpeq 528)) ;;to TAG_25
                                      (505 (getstatic (fieldCP "const__13" "clojure.pprint$format_logical_block" (class "clojure.lang.Var")))) 
                                      (508 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (511 (checkcast (class "java.io.Writer"))) 
                                      (514 (ldc 21)) ;;STRING:: "#"
                                      (516 (checkcast (class "java.lang.String"))) 
                                      (519 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (522 (aconst_null)) 
                                      (523 (pop)) 
                                      (524 (goto 630)) ;;to TAG_26
                                      (527 (pop)) ;;at TAG_24
                                      (528 (getstatic (fieldCP "const__14" "clojure.pprint$format_logical_block" (class "clojure.lang.Var")))) ;;at TAG_25
                                      (531 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (534 (checkcast (class "clojure.lang.IFn"))) 
                                      (537 (iconst_4)) 
                                      (538 (anewarray (class "java.lang.Object"))) 
                                      (541 (dup)) 
                                      (542 (iconst_0)) 
                                      (543 (getstatic (fieldCP "const__15" "clojure.pprint$format_logical_block" (class "clojure.lang.Var")))) 
                                      (546 (aastore)) 
                                      (547 (dup)) 
                                      (548 (iconst_1)) 
                                      (549 (getstatic (fieldCP "const__17" "clojure.pprint$format_logical_block" (class "clojure.lang.Var")))) 
                                      (552 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (555 (checkcast (class "clojure.lang.IFn"))) 
                                      (558 (getstatic (fieldCP "const__15" "clojure.pprint$format_logical_block" (class "clojure.lang.Var")))) 
                                      (561 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (566 (invokestatic (methodCP "inc" "clojure.lang.Numbers" ((class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (569 (aastore)) 
                                      (570 (dup)) 
                                      (571 (iconst_2)) 
                                      (572 (getstatic (fieldCP "const__18" "clojure.pprint$format_logical_block" (class "clojure.lang.Var")))) 
                                      (575 (aastore)) 
                                      (576 (dup)) 
                                      (577 (iconst_3)) 
                                      (578 (getstatic (fieldCP "const__9" "clojure.pprint$format_logical_block" (class "java.lang.Object")))) 
                                      (581 (aastore)) 
                                      (582 (invokestatic (methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (585 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (590 (pop)) 
                                      (591 (new (class "clojure.pprint$format_logical_block$fn__7878"))) 
                                      (594 (dup)) 
                                      (595 (aload 10)) 
                                      (597 (aconst_null)) 
                                      (598 (astore 10)) 
                                      (600 (aload 8)) 
                                      (602 (aconst_null)) 
                                      (603 (astore 8)) 
                                      (605 (aload 7)) 
                                      (607 (aconst_null)) 
                                      (608 (astore 7)) 
                                      (610 (aload 6)) 
                                      (612 (aconst_null)) 
                                      (613 (astore 6)) 
                                      (615 (aload_1)) 
                                      (616 (aconst_null)) 
                                      (617 (astore_1)) 
                                      (618 (invokespecial (methodCP "<init>" "clojure.pprint$format_logical_block$fn__7878" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (621 (checkcast (class "clojure.lang.IFn"))) 
                                      (624 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (629 (pop)) 
                                      (630 (aconst_null)) ;;at TAG_26
                                      (631 (pop)) 
                                      (632 (aload 11)) 
                                      (634 (aconst_null)) 
                                      (635 (astore 11)) 
                                      (637 (areturn)) 
                                      (endofcode 638))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 94)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 93 (0 . 6) (44 51 58 65 72 79 86))))  ;;to TAG_2;;to TAG_3;;to TAG_4;;to TAG_5;;to TAG_6;;to TAG_7;;to TAG_0;;to TAG_1
                                      (44 (aload_2)) ;;at TAG_1
                                      (45 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (48 (goto 93)) ;;to TAG_0
                                      (51 (aload_2)) ;;at TAG_2
                                      (52 (putstatic (fieldCP "__thunk__1__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (55 (goto 93)) ;;to TAG_0
                                      (58 (aload_2)) ;;at TAG_3
                                      (59 (putstatic (fieldCP "__thunk__2__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (62 (goto 93)) ;;to TAG_0
                                      (65 (aload_2)) ;;at TAG_4
                                      (66 (putstatic (fieldCP "__thunk__3__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (69 (goto 93)) ;;to TAG_0
                                      (72 (aload_2)) ;;at TAG_5
                                      (73 (putstatic (fieldCP "__thunk__4__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (76 (goto 93)) ;;to TAG_0
                                      (79 (aload_2)) ;;at TAG_6
                                      (80 (putstatic (fieldCP "__thunk__5__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (83 (goto 93)) ;;to TAG_0
                                      (86 (aload_2)) ;;at TAG_7
                                      (87 (putstatic (fieldCP "__thunk__6__" "clojure.pprint$format_logical_block" (class "clojure.lang.ILookupThunk")))) 
                                      (90 (goto 93)) ;;to TAG_0
                                      (93 (return)) ;;at TAG_0
                                      (endofcode 94))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$format_logical_block-class-table*
  (make-static-class-decls 
   *clojure.pprint$format_logical_block*))

(defconst *package-name-map* 
  ("clojure.pprint$format_logical_block" . "clojure"))

