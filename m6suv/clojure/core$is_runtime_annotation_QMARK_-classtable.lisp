; core$is_runtime_annotation_QMARK_-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:44 CDT 2014.
;

(defconst *clojure.core$is_runtime_annotation_QMARK_*
 (make-class-def
      '(class "clojure.core$is_runtime_annotation_QMARK_"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "boolean")
                        (STRING  "is-annotation?")
                        (STRING  "java.lang.annotation.Retention")
                        (STRING  "="))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 48)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "boolean"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$is_runtime_annotation_QMARK_" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "is-annotation?"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$is_runtime_annotation_QMARK_" (class "clojure.lang.Var"))))
                                      (26 (ldc 3))        ;;STRING:: "java.lang.annotation.Retention"
                                      (28 (invokestatic
					(methodCP "forName" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.Class"))))
                                      (31 (putstatic (fieldCP "const__2" "clojure.core$is_runtime_annotation_QMARK_" (class "java.lang.Object"))))
                                      (34 (ldc 0))        ;;STRING:: "clojure.core"
                                      (36 (ldc 4))        ;;STRING:: "="
                                      (38 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (41 (checkcast (class "clojure.lang.Var")))
                                      (44 (putstatic (fieldCP "const__3" "clojure.core$is_runtime_annotation_QMARK_" (class "clojure.lang.Var"))))
                                      (47 (return))
                                      (endofcode 48))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 5) (code_length . 118)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__1" "clojure.core$is_runtime_annotation_QMARK_" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_1)) 
                                      (10 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (15 (astore_2)) 
                                      (16 (aload_2)) 
                                      (17 (dup)) 
                                      (18 (ifnull 98)) ;;to TAG_0
                                      (21 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (24 (if_acmpeq 99))  ;;to TAG_1
                                      (27 (aload_1)) 
                                      (28 (aconst_null)) 
                                      (29 (astore_1)) 
                                      (30 (checkcast (class "java.lang.Class"))) 
                                      (33 (getstatic (fieldCP "const__2" "clojure.core$is_runtime_annotation_QMARK_" (class "java.lang.Object")))) 
                                      (36 (checkcast (class "java.lang.Class"))) 
                                      (39 (invokevirtual (methodCP "getAnnotation" "java.lang.Class" ((class "java.lang.Class")) (class "java.lang.annotation.Annotation")))) 
                                      (42 (astore_3)) 
                                      (43 (aload_3)) 
                                      (44 (dup)) 
                                      (45 (ifnull 93)) ;;to TAG_2
                                      (48 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (51 (if_acmpeq 94)) ;;to TAG_3
                                      (54 (aload_3)) 
                                      (55 (aconst_null)) 
                                      (56 (astore_3)) 
                                      (57 (astore 4)) 
                                      (59 (aload 4)) 
                                      (61 (aconst_null)) 
                                      (62 (astore 4)) 
                                      (64 (checkcast (class "java.lang.annotation.Retention"))) 
                                      (67 (invokeinterface (methodCP "value" "java.lang.annotation.Retention" () (class "java.lang.annotation.RetentionPolicy")) 1)) 
                                      (72 (getstatic (fieldCP "RUNTIME" "java.lang.annotation.RetentionPolicy" (class "java.lang.annotation.RetentionPolicy")))) 
                                      (75 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (78 (ifeq 87)) ;;to TAG_4
                                      (81 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (84 (goto 90)) ;;to TAG_5
                                      (87 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_4
                                      (90 (goto 95)) ;;to TAG_6;;at TAG_5
                                      (93 (pop)) ;;at TAG_2
                                      (94 (aconst_null)) ;;at TAG_3
                                      (95 (goto 102)) ;;to TAG_7;;at TAG_6
                                      (98 (pop)) ;;at TAG_0
                                      (99 (aload_2)) ;;at TAG_1
                                      (100 (aconst_null)) 
                                      (101 (astore_2)) 
                                      (102 (invokestatic (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean))) ;;at TAG_7
                                      (105 (ifeq 114)) ;;to TAG_8
                                      (108 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (111 (goto 117)) ;;to TAG_9
                                      (114 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_8
                                      (117 (areturn)) ;;at TAG_9
                                      (endofcode 118))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$is_runtime_annotation_QMARK_-class-table*
  (make-static-class-decls 
   *clojure.core$is_runtime_annotation_QMARK_*))

(defconst *package-name-map* 
  ("clojure.core$is_runtime_annotation_QMARK_" . "clojure"))

