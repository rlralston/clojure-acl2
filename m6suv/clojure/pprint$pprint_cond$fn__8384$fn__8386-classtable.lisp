; pprint$pprint_cond$fn__8384$fn__8386-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:56 CDT 2014.
;

(defconst *clojure.pprint$pprint_cond$fn__8384$fn__8386*
 (make-class-def
      '(class "clojure.pprint$pprint_cond$fn__8384$fn__8386"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.pprint")
                        (STRING  "start-block")
                        (STRING  "clojure.core")
                        (STRING  "*out*")
                        (STRING  "write-out")
                        (STRING  "first")
                        (STRING  "next")
                        (STRING  "pprint-newline")
                        (STRING  "miser")
                        (STRING  "second")
                        (STRING  "end-block")
                        (STRING  "pop-thread-bindings")
                        (STRING  " "))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "alis" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 130)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.pprint"
                                      (2 (ldc 1))         ;;STRING:: "start-block"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var"))))
                                      (13 (ldc 2))        ;;STRING:: "clojure.core"
                                      (15 (ldc 3))        ;;STRING:: "*out*"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (28 (ldc 4))        ;;STRING:: "write-out"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var"))))
                                      (39 (ldc 2))        ;;STRING:: "clojure.core"
                                      (41 (ldc 5))        ;;STRING:: "first"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var"))))
                                      (52 (ldc 2))        ;;STRING:: "clojure.core"
                                      (54 (ldc 6))        ;;STRING:: "next"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var"))))
                                      (65 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (67 (ldc 7))        ;;STRING:: "pprint-newline"
                                      (69 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (72 (checkcast (class "clojure.lang.Var")))
                                      (75 (putstatic (fieldCP "const__5" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var"))))
                                      (78 (aconst_null))
                                      (79 (ldc 8))        ;;STRING:: "miser"
                                      (81 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (84 (checkcast (class "clojure.lang.Keyword")))
                                      (87 (putstatic (fieldCP "const__6" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Keyword"))))
                                      (90 (ldc 2))        ;;STRING:: "clojure.core"
                                      (92 (ldc 9))        ;;STRING:: "second"
                                      (94 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (97 (checkcast (class "clojure.lang.Var")))
                                      (100 (putstatic (fieldCP "const__7" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var"))))
                                      (103 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (105 (ldc 10))      ;;STRING:: "end-block"
                                      (107 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (110 (checkcast (class "clojure.lang.Var")))
                                      (113 (putstatic (fieldCP "const__8" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var"))))
                                      (116 (ldc 2))       ;;STRING:: "clojure.core"
                                      (118 (ldc 11))      ;;STRING:: "pop-thread-bindings"
                                      (120 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (123 (checkcast (class "clojure.lang.Var")))
                                      (126 (putstatic (fieldCP "const__9" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var"))))
                                      (129 (return))
                                      (endofcode 130))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "alis" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "java.lang.Object"))))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 3) (code_length . 214)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var")))) ;;at TAG_4
                                      (3 (checkcast (class "clojure.lang.IFn"))) 
                                      (6 (getstatic (fieldCP "const__1" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var")))) 
                                      (9 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (12 (aconst_null)) 
                                      (13 (aconst_null)) 
                                      (14 (aconst_null)) 
                                      (15 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5)) 
                                      (20 (pop)) 
                                      (21 (getstatic (fieldCP "const__2" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var")))) 
                                      (24 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (27 (checkcast (class "clojure.lang.IFn"))) 
                                      (30 (getstatic (fieldCP "const__3" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var")))) 
                                      (33 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (36 (checkcast (class "clojure.lang.IFn"))) 
                                      (39 (aload_0)) 
                                      (40 (getfield (fieldCP "alis" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "java.lang.Object")))) 
                                      (43 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (48 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (53 (pop)) 
                                      (54 (getstatic (fieldCP "const__4" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var")))) 
                                      (57 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (60 (checkcast (class "clojure.lang.IFn"))) 
                                      (63 (aload_0)) 
                                      (64 (getfield (fieldCP "alis" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "java.lang.Object")))) 
                                      (67 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (72 (dup)) 
                                      (73 (ifnull 155)) ;;to TAG_0
                                      (76 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (79 (if_acmpeq 156)) ;;to TAG_1
                                      (82 (getstatic (fieldCP "const__1" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var")))) 
                                      (85 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (88 (checkcast (class "java.io.Writer"))) 
                                      (91 (ldc 12)) ;;STRING:: " "
                                      (93 (checkcast (class "java.lang.String"))) 
                                      (96 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (99 (aconst_null)) 
                                      (100 (pop)) 
                                      (101 (getstatic (fieldCP "const__5" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var")))) 
                                      (104 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (107 (checkcast (class "clojure.lang.IFn"))) 
                                      (110 (getstatic (fieldCP "const__6" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Keyword")))) 
                                      (113 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (118 (pop)) 
                                      (119 (getstatic (fieldCP "const__2" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var")))) 
                                      (122 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (125 (checkcast (class "clojure.lang.IFn"))) 
                                      (128 (getstatic (fieldCP "const__7" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var")))) 
                                      (131 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (134 (checkcast (class "clojure.lang.IFn"))) 
                                      (137 (aload_0)) 
                                      (138 (getfield (fieldCP "alis" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "java.lang.Object")))) 
                                      (141 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (146 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (151 (pop)) 
                                      (152 (goto 158))  ;;to TAG_2
                                      (155 (pop)) ;;at TAG_0
                                      (156 (aconst_null)) ;;at TAG_1
                                      (157 (pop)) 
                                      (158 (getstatic (fieldCP "const__8" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var")))) ;;at TAG_2
                                      (161 (checkcast (class "clojure.lang.IFn"))) 
                                      (164 (getstatic (fieldCP "const__1" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var")))) 
                                      (167 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (170 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (175 (astore_1)) 
                                      (176 (getstatic (fieldCP "const__9" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var")))) ;;at TAG_5
                                      (179 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (182 (checkcast (class "clojure.lang.IFn"))) 
                                      (185 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (190 (pop)) 
                                      (191 (goto 212)) ;;to TAG_3
                                      (194 (astore_2)) ;;at TAG_6
                                      (195 (getstatic (fieldCP "const__9" "clojure.pprint$pprint_cond$fn__8384$fn__8386" (class "clojure.lang.Var")))) 
                                      (198 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (201 (checkcast (class "clojure.lang.IFn"))) 
                                      (204 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (209 (pop)) 
                                      (210 (aload_2)) 
                                      (211 (athrow)) 
                                      (212 (aload_1)) ;;at TAG_3
                                      (213 (areturn)) 
                                      (endofcode 214))
                                   (Exceptions 
                                     (handler 0 176  194 (class "java.lang.Throwable")))
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$pprint_cond$fn__8384$fn__8386-class-table*
  (make-static-class-decls 
   *clojure.pprint$pprint_cond$fn__8384$fn__8386*))

(defconst *package-name-map* 
  ("clojure.pprint$pprint_cond$fn__8384$fn__8386" . "clojure"))

