; core$imap_cons-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:44 CDT 2014.
;

(defconst *clojure.core$imap_cons*
 (make-class-def
      '(class "clojure.core$imap_cons"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "instance?")
                        (STRING  "else")
                        (STRING  "seq")
                        (STRING  "first")
                        (STRING  "rest"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 79)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "instance?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$imap_cons" (class "clojure.lang.Var"))))
                                      (13 (lconst_0))
                                      (14 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (17 (putstatic (fieldCP "const__1" "clojure.core$imap_cons" (class "java.lang.Object"))))
                                      (20 (lconst_1))
                                      (21 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (24 (putstatic (fieldCP "const__2" "clojure.core$imap_cons" (class "java.lang.Object"))))
                                      (27 (aconst_null))
                                      (28 (ldc 2))        ;;STRING:: "else"
                                      (30 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (33 (checkcast (class "clojure.lang.Keyword")))
                                      (36 (putstatic (fieldCP "const__3" "clojure.core$imap_cons" (class "clojure.lang.Keyword"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 3))        ;;STRING:: "seq"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__4" "clojure.core$imap_cons" (class "clojure.lang.Var"))))
                                      (52 (ldc 0))        ;;STRING:: "clojure.core"
                                      (54 (ldc 4))        ;;STRING:: "first"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__5" "clojure.core$imap_cons" (class "clojure.lang.Var"))))
                                      (65 (ldc 0))        ;;STRING:: "clojure.core"
                                      (67 (ldc 5))        ;;STRING:: "rest"
                                      (69 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (72 (checkcast (class "clojure.lang.Var")))
                                      (75 (putstatic (fieldCP "const__6" "clojure.core$imap_cons" (class "clojure.lang.Var"))))
                                      (78 (return))
                                      (endofcode 79))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 6) (code_length . 231)
                                   (parsedcode
                                      (0 (aload_2)) 
                                      (1 (instanceof (class "java.util.Map$Entry"))) 
                                      (4 (ifeq 46)) ;;to TAG_0
                                      (7 (aload_2)) 
                                      (8 (aconst_null)) 
                                      (9 (astore_2)) 
                                      (10 (astore_3)) 
                                      (11 (aload_1)) 
                                      (12 (aconst_null)) 
                                      (13 (astore_1)) 
                                      (14 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (17 (aload_3)) 
                                      (18 (checkcast (class "java.util.Map$Entry"))) 
                                      (21 (invokeinterface (methodCP "getKey" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (26 (aload_3)) 
                                      (27 (aconst_null)) 
                                      (28 (astore_3)) 
                                      (29 (checkcast (class "java.util.Map$Entry"))) 
                                      (32 (invokeinterface (methodCP "getValue" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (37 (invokeinterface (methodCP "assoc" "clojure.lang.IPersistentMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.IPersistentMap")) 3)) 
                                      (42 (goto 230))  ;;to TAG_1
                                      (45 (pop)) 
                                      (46 (aload_2)) ;;at TAG_0
                                      (47 (instanceof (class "clojure.lang.IPersistentVector"))) 
                                      (50 (ifeq 100)) ;;to TAG_2
                                      (53 (aload_2)) 
                                      (54 (aconst_null)) 
                                      (55 (astore_2)) 
                                      (56 (astore_3)) 
                                      (57 (aload_1)) 
                                      (58 (aconst_null)) 
                                      (59 (astore_1)) 
                                      (60 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (63 (aload_3)) 
                                      (64 (checkcast (class "clojure.lang.Indexed"))) 
                                      (67 (lconst_0)) 
                                      (68 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (71 (invokeinterface (methodCP "nth" "clojure.lang.Indexed" (int) (class "java.lang.Object")) 2)) 
                                      (76 (aload_3)) 
                                      (77 (aconst_null)) 
                                      (78 (astore_3)) 
                                      (79 (checkcast (class "clojure.lang.Indexed"))) 
                                      (82 (lconst_1)) 
                                      (83 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (86 (invokeinterface (methodCP "nth" "clojure.lang.Indexed" (int) (class "java.lang.Object")) 2)) 
                                      (91 (invokeinterface (methodCP "assoc" "clojure.lang.IPersistentMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.IPersistentMap")) 3)) 
                                      (96 (goto 230))  ;;to TAG_1
                                      (99 (pop)) 
                                      (100 (getstatic (fieldCP "const__3" "clojure.core$imap_cons" (class "clojure.lang.Keyword")))) ;;at TAG_2
                                      (103 (dup)) 
                                      (104 (ifnull 228)) ;;to TAG_3
                                      (107 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (110 (if_acmpeq 229)) ;;to TAG_4
                                      (113 (aload_1)) 
                                      (114 (aconst_null)) 
                                      (115 (astore_1)) 
                                      (116 (astore_3)) 
                                      (117 (aload_2)) 
                                      (118 (aconst_null)) 
                                      (119 (astore_2)) 
                                      (120 (astore 4)) 
                                      (122 (getstatic (fieldCP "const__4" "clojure.core$imap_cons" (class "clojure.lang.Var")))) ;;at TAG_7
                                      (125 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (128 (checkcast (class "clojure.lang.IFn"))) 
                                      (131 (aload 4)) 
                                      (133 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (138 (dup)) 
                                      (139 (ifnull 223)) ;;to TAG_5
                                      (142 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (145 (if_acmpeq 224)) ;;to TAG_6
                                      (148 (getstatic (fieldCP "const__5" "clojure.core$imap_cons" (class "clojure.lang.Var")))) 
                                      (151 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (154 (checkcast (class "clojure.lang.IFn"))) 
                                      (157 (aload 4)) 
                                      (159 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (164 (astore 5)) 
                                      (166 (aload_3)) 
                                      (167 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (170 (aload 5)) 
                                      (172 (checkcast (class "java.util.Map$Entry"))) 
                                      (175 (invokeinterface (methodCP "getKey" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (180 (aload 5)) 
                                      (182 (aconst_null)) 
                                      (183 (astore 5)) 
                                      (185 (checkcast (class "java.util.Map$Entry"))) 
                                      (188 (invokeinterface (methodCP "getValue" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (193 (invokeinterface (methodCP "assoc" "clojure.lang.IPersistentMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.IPersistentMap")) 3)) 
                                      (198 (getstatic (fieldCP "const__6" "clojure.core$imap_cons" (class "clojure.lang.Var")))) 
                                      (201 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (204 (checkcast (class "clojure.lang.IFn"))) 
                                      (207 (aload 4)) 
                                      (209 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (214 (astore 4)) 
                                      (216 (astore_3)) 
                                      (217 (goto 122)) ;;to TAG_7
                                      (220 (goto 225)) ;;to TAG_8
                                      (223 (pop)) ;;at TAG_5
                                      (224 (aload_3)) ;;at TAG_6
                                      (225 (goto 230))  ;;to TAG_1;;at TAG_8
                                      (228 (pop)) ;;at TAG_3
                                      (229 (aconst_null)) ;;at TAG_4
                                      (230 (areturn)) ;;at TAG_1
                                      (endofcode 231))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$imap_cons-class-table*
  (make-static-class-decls 
   *clojure.core$imap_cons*))

(defconst *package-name-map* 
  ("clojure.core$imap_cons" . "clojure"))

