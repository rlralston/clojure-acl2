; pprint$round_str-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:57 CDT 2014.
;

(defconst *clojure.pprint$round_str*
 (make-class-def
      '(class "clojure.pprint$round_str"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "count")
                        (STRING  "max")
                        (LONG 2)
                        (STRING  "+")
                        (STRING  ">=")
                        (STRING  "inc")
                        (STRING  "dec")
                        (STRING  "else")
                        (STRING  "=")
                        (STRING  "str")
                        (STRING  "nth")
                        (LONG 3)
                        (STRING  "neg?")
                        (STRING  "0")
                        (STRING  ">")
                        (STRING  "subs")
                        (STRING  "int")
                        (STRING  "clojure.pprint")
                        (STRING  "inc-s"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__19" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__20" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 0) (code_length . 266)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "count"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$round_str" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "max"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$round_str" (class "clojure.lang.Var"))))
                                      (26 (ldc2_w 3))     ;; LONG:: "2"
                                      (29 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (32 (putstatic (fieldCP "const__2" "clojure.pprint$round_str" (class "java.lang.Object"))))
                                      (35 (ldc 0))        ;;STRING:: "clojure.core"
                                      (37 (ldc 4))        ;;STRING:: "+"
                                      (39 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (42 (checkcast (class "clojure.lang.Var")))
                                      (45 (putstatic (fieldCP "const__3" "clojure.pprint$round_str" (class "clojure.lang.Var"))))
                                      (48 (lconst_1))
                                      (49 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (52 (putstatic (fieldCP "const__4" "clojure.pprint$round_str" (class "java.lang.Object"))))
                                      (55 (ldc 0))        ;;STRING:: "clojure.core"
                                      (57 (ldc 5))        ;;STRING:: ">="
                                      (59 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (62 (checkcast (class "clojure.lang.Var")))
                                      (65 (putstatic (fieldCP "const__5" "clojure.pprint$round_str" (class "clojure.lang.Var"))))
                                      (68 (lconst_0))
                                      (69 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (72 (putstatic (fieldCP "const__6" "clojure.pprint$round_str" (class "java.lang.Object"))))
                                      (75 (ldc 0))        ;;STRING:: "clojure.core"
                                      (77 (ldc 6))        ;;STRING:: "inc"
                                      (79 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (82 (checkcast (class "clojure.lang.Var")))
                                      (85 (putstatic (fieldCP "const__7" "clojure.pprint$round_str" (class "clojure.lang.Var"))))
                                      (88 (ldc 0))        ;;STRING:: "clojure.core"
                                      (90 (ldc 7))        ;;STRING:: "dec"
                                      (92 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (95 (checkcast (class "clojure.lang.Var")))
                                      (98 (putstatic (fieldCP "const__8" "clojure.pprint$round_str" (class "clojure.lang.Var"))))
                                      (101 (aconst_null))
                                      (102 (ldc 8))       ;;STRING:: "else"
                                      (104 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (107 (checkcast (class "clojure.lang.Keyword")))
                                      (110 (putstatic (fieldCP "const__9" "clojure.pprint$round_str" (class "clojure.lang.Keyword"))))
                                      (113 (ldc 0))       ;;STRING:: "clojure.core"
                                      (115 (ldc 9))       ;;STRING:: "="
                                      (117 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (120 (checkcast (class "clojure.lang.Var")))
                                      (123 (putstatic (fieldCP "const__10" "clojure.pprint$round_str" (class "clojure.lang.Var"))))
                                      (126 (ldc 0))       ;;STRING:: "clojure.core"
                                      (128 (ldc 10))      ;;STRING:: "str"
                                      (130 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (133 (checkcast (class "clojure.lang.Var")))
                                      (136 (putstatic (fieldCP "const__11" "clojure.pprint$round_str" (class "clojure.lang.Var"))))
                                      (139 (ldc 0))       ;;STRING:: "clojure.core"
                                      (141 (ldc 11))      ;;STRING:: "nth"
                                      (143 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (146 (checkcast (class "clojure.lang.Var")))
                                      (149 (putstatic (fieldCP "const__12" "clojure.pprint$round_str" (class "clojure.lang.Var"))))
                                      (152 (ldc2_w 12))   ;; LONG:: "3"
                                      (155 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (158 (putstatic (fieldCP "const__13" "clojure.pprint$round_str" (class "java.lang.Object"))))
                                      (161 (ldc 0))       ;;STRING:: "clojure.core"
                                      (163 (ldc 13))      ;;STRING:: "neg?"
                                      (165 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (168 (checkcast (class "clojure.lang.Var")))
                                      (171 (putstatic (fieldCP "const__14" "clojure.pprint$round_str" (class "clojure.lang.Var"))))
                                      (174 (iconst_3))
                                      (175 (anewarray (class "java.lang.Object")))
                                      (178 (dup))
                                      (179 (iconst_0))
                                      (180 (ldc 14))      ;;STRING:: "0"
                                      (182 (aastore))
                                      (183 (dup))
                                      (184 (iconst_1))
                                      (185 (lconst_0))
                                      (186 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (189 (aastore))
                                      (190 (dup))
                                      (191 (iconst_2))
                                      (192 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (195 (aastore))
                                      (196 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (199 (checkcast (class "clojure.lang.AFn")))
                                      (202 (putstatic (fieldCP "const__15" "clojure.pprint$round_str" (class "clojure.lang.AFn"))))
                                      (205 (ldc 0))       ;;STRING:: "clojure.core"
                                      (207 (ldc 15))      ;;STRING:: ">"
                                      (209 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (212 (checkcast (class "clojure.lang.Var")))
                                      (215 (putstatic (fieldCP "const__16" "clojure.pprint$round_str" (class "clojure.lang.Var"))))
                                      (218 (ldc 0))       ;;STRING:: "clojure.core"
                                      (220 (ldc 16))      ;;STRING:: "subs"
                                      (222 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (225 (checkcast (class "clojure.lang.Var")))
                                      (228 (putstatic (fieldCP "const__17" "clojure.pprint$round_str" (class "clojure.lang.Var"))))
                                      (231 (ldc 0))       ;;STRING:: "clojure.core"
                                      (233 (ldc 17))      ;;STRING:: "int"
                                      (235 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (238 (checkcast (class "clojure.lang.Var")))
                                      (241 (putstatic (fieldCP "const__18" "clojure.pprint$round_str" (class "clojure.lang.Var"))))
                                      (244 (bipush 53))
                                      (246 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (249 (putstatic (fieldCP "const__19" "clojure.pprint$round_str" (class "java.lang.Object"))))
                                      (252 (ldc 18))      ;;STRING:: "clojure.pprint"
                                      (254 (ldc 19))      ;;STRING:: "inc-s"
                                      (256 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (259 (checkcast (class "clojure.lang.Var")))
                                      (262 (putstatic (fieldCP "const__20" "clojure.pprint$round_str" (class "clojure.lang.Var"))))
                                      (265 (return))
                                      (endofcode 266))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 8) (max_locals . 17) (code_length . 653)
                                   (parsedcode
                                      (0 (aload_3)) 
                                      (1 (astore 5)) 
                                      (3 (aload 5)) 
                                      (5 (dup)) 
                                      (6 (ifnull 23)) ;;to TAG_0
                                      (9 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (12 (if_acmpeq 24)) ;;to TAG_1
                                      (15 (aload 5)) 
                                      (17 (aconst_null)) 
                                      (18 (astore 5)) 
                                      (20 (goto 26)) ;;to TAG_2
                                      (23 (pop)) ;;at TAG_0
                                      (24 (aload 4)) ;;at TAG_1
                                      (26 (dup)) ;;at TAG_2
                                      (27 (ifnull 626)) ;;to TAG_3
                                      (30 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (33 (if_acmpeq 627)) ;;to TAG_4
                                      (36 (aload_1)) 
                                      (37 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (40 (istore 5)) 
                                      (42 (aload 4)) 
                                      (44 (dup)) 
                                      (45 (ifnull 68)) ;;to TAG_5
                                      (48 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (51 (if_acmpeq 69)) ;;to TAG_6
                                      (54 (ldc2_w 3)) ;; LONG:: "2"
                                      (57 (aload 4)) 
                                      (59 (aconst_null)) 
                                      (60 (astore 4)) 
                                      (62 (invokestatic (methodCP "max" "clojure.lang.Numbers" (long (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (65 (goto 70)) ;;to TAG_7
                                      (68 (pop)) ;;at TAG_5
                                      (69 (aconst_null)) ;;at TAG_6
                                      (70 (astore 6)) ;;at TAG_7
                                      (72 (aload_3)) 
                                      (73 (dup)) 
                                      (74 (ifnull 97)) ;;to TAG_8
                                      (77 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (80 (if_acmpeq 98)) ;;to TAG_9
                                      (83 (aload_2)) 
                                      (84 (aload_3)) 
                                      (85 (aconst_null)) 
                                      (86 (astore_3)) 
                                      (87 (invokestatic (methodCP "add" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (90 (lconst_1)) 
                                      (91 (invokestatic (methodCP "add" "clojure.lang.Numbers" ((class "java.lang.Object") long) (class "java.lang.Number")))) 
                                      (94 (goto 152)) ;;to TAG_10
                                      (97 (pop)) ;;at TAG_8
                                      (98 (aload_2)) ;;at TAG_9
                                      (99 (lconst_0)) 
                                      (100 (invokestatic (methodCP "gte" "clojure.lang.Numbers" ((class "java.lang.Object") long) boolean))) 
                                      (103 (ifeq 125)) ;;to TAG_11
                                      (106 (aload_2)) 
                                      (107 (invokestatic (methodCP "inc" "clojure.lang.Numbers" ((class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (110 (aload 6)) 
                                      (112 (aconst_null)) 
                                      (113 (astore 6)) 
                                      (115 (invokestatic (methodCP "dec" "clojure.lang.Numbers" ((class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (118 (invokestatic (methodCP "max" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (121 (goto 152)) ;;to TAG_10
                                      (124 (pop)) 
                                      (125 (getstatic (fieldCP "const__9" "clojure.pprint$round_str" (class "clojure.lang.Keyword")))) ;;at TAG_11
                                      (128 (dup)) 
                                      (129 (ifnull 150)) ;;to TAG_12
                                      (132 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (135 (if_acmpeq 151))  ;;to TAG_13
                                      (138 (aload 6)) 
                                      (140 (aconst_null)) 
                                      (141 (astore 6)) 
                                      (143 (aload_2)) 
                                      (144 (invokestatic (methodCP "add" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (147 (goto 152)) ;;to TAG_10
                                      (150 (pop)) ;;at TAG_12
                                      (151 (aconst_null)) ;;at TAG_13
                                      (152 (astore 7)) ;;at TAG_10
                                      (154 (aload 7)) 
                                      (156 (lconst_0)) 
                                      (157 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") long) boolean))) 
                                      (160 (ifeq 219)) ;;to TAG_14
                                      (163 (iconst_4)) 
                                      (164 (anewarray (class "java.lang.Object"))) 
                                      (167 (dup)) 
                                      (168 (iconst_0)) 
                                      (169 (getstatic (fieldCP "const__11" "clojure.pprint$round_str" (class "clojure.lang.Var")))) 
                                      (172 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (175 (checkcast (class "clojure.lang.IFn"))) 
                                      (178 (ldc 14)) ;;STRING:: "0"
                                      (180 (aload_1)) 
                                      (181 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (186 (aastore)) 
                                      (187 (dup)) 
                                      (188 (iconst_1)) 
                                      (189 (aload_2)) 
                                      (190 (invokestatic (methodCP "inc" "clojure.lang.Numbers" ((class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (193 (aastore)) 
                                      (194 (dup)) 
                                      (195 (iconst_2)) 
                                      (196 (getstatic (fieldCP "const__4" "clojure.pprint$round_str" (class "java.lang.Object")))) 
                                      (199 (aastore)) 
                                      (200 (dup)) 
                                      (201 (iconst_3)) 
                                      (202 (iload 5)) 
                                      (204 (i2l)) 
                                      (205 (invokestatic (methodCP "inc" "clojure.lang.Numbers" (long) long))) 
                                      (208 (invokestatic (methodCP "num" "clojure.lang.Numbers" (long) (class "java.lang.Number")))) 
                                      (211 (aastore)) 
                                      (212 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (215 (goto 250)) ;;to TAG_15
                                      (218 (pop)) 
                                      (219 (iconst_4)) ;;at TAG_14
                                      (220 (anewarray (class "java.lang.Object"))) 
                                      (223 (dup)) 
                                      (224 (iconst_0)) 
                                      (225 (aload_1)) 
                                      (226 (aastore)) 
                                      (227 (dup)) 
                                      (228 (iconst_1)) 
                                      (229 (aload_2)) 
                                      (230 (aastore)) 
                                      (231 (dup)) 
                                      (232 (iconst_2)) 
                                      (233 (aload 7)) 
                                      (235 (aconst_null)) 
                                      (236 (astore 7)) 
                                      (238 (aastore)) 
                                      (239 (dup)) 
                                      (240 (iconst_3)) 
                                      (241 (iload 5)) 
                                      (243 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (246 (aastore)) 
                                      (247 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (250 (astore 8)) ;;at TAG_15
                                      (252 (aload 8)) 
                                      (254 (lconst_0)) 
                                      (255 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (258 (aconst_null)) 
                                      (259 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (262 (astore 9)) 
                                      (264 (aload 8)) 
                                      (266 (lconst_1)) 
                                      (267 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (270 (aconst_null)) 
                                      (271 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (274 (astore 10)) 
                                      (276 (aload 8)) 
                                      (278 (ldc2_w 3)) ;; LONG:: "2"
                                      (281 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (284 (aconst_null)) 
                                      (285 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (288 (astore 11)) 
                                      (290 (aload 8)) 
                                      (292 (aconst_null)) 
                                      (293 (astore 8)) 
                                      (295 (ldc2_w 12)) ;; LONG:: "3"
                                      (298 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (301 (aconst_null)) 
                                      (302 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (305 (astore 12)) 
                                      (307 (aload 11)) 
                                      (309 (dup)) 
                                      (310 (ifnull 597)) ;;to TAG_16
                                      (313 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (316 (if_acmpeq 598)) ;;to TAG_17
                                      (319 (aload 11)) 
                                      (321 (invokestatic (methodCP "isNeg" "clojure.lang.Numbers" ((class "java.lang.Object")) boolean))) 
                                      (324 (ifeq 334)) ;;to TAG_18
                                      (327 (getstatic (fieldCP "const__15" "clojure.pprint$round_str" (class "clojure.lang.AFn")))) 
                                      (330 (goto 594)) ;;to TAG_19
                                      (333 (pop)) 
                                      (334 (aload 12)) ;;at TAG_18
                                      (336 (aconst_null)) 
                                      (337 (astore 12)) 
                                      (339 (aload 11)) 
                                      (341 (invokestatic (methodCP "gt" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (344 (ifeq 569)) ;;to TAG_20
                                      (347 (aload 9)) 
                                      (349 (aload 11)) 
                                      (351 (checkcast (class "java.lang.Number"))) 
                                      (354 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (357 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (360 (astore 13)) 
                                      (362 (getstatic (fieldCP "const__17" "clojure.pprint$round_str" (class "clojure.lang.Var")))) 
                                      (365 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (368 (checkcast (class "clojure.lang.IFn"))) 
                                      (371 (aload 9)) 
                                      (373 (aconst_null)) 
                                      (374 (astore 9)) 
                                      (376 (getstatic (fieldCP "const__6" "clojure.pprint$round_str" (class "java.lang.Object")))) 
                                      (379 (aload 11)) 
                                      (381 (aconst_null)) 
                                      (382 (astore 11)) 
                                      (384 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (389 (astore 14)) 
                                      (391 (aload 13)) 
                                      (393 (aconst_null)) 
                                      (394 (astore 13)) 
                                      (396 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (399 (i2l)) 
                                      (400 (getstatic (fieldCP "const__19" "clojure.pprint$round_str" (class "java.lang.Object")))) 
                                      (403 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (406 (i2l)) 
                                      (407 (lcmp)) 
                                      (408 (iflt 536)) ;;to TAG_21
                                      (411 (getstatic (fieldCP "const__20" "clojure.pprint$round_str" (class "clojure.lang.Var")))) 
                                      (414 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (417 (checkcast (class "clojure.lang.IFn"))) 
                                      (420 (aload 14)) 
                                      (422 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (427 (astore 15)) 
                                      (429 (aload 15)) 
                                      (431 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (434 (i2l)) 
                                      (435 (aload 14)) 
                                      (437 (aconst_null)) 
                                      (438 (astore 14)) 
                                      (440 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (443 (i2l)) 
                                      (444 (invokestatic (methodCP "gt" "clojure.lang.Numbers" (long long) boolean))) 
                                      (447 (istore 16)) 
                                      (449 (iconst_3)) 
                                      (450 (anewarray (class "java.lang.Object"))) 
                                      (453 (dup)) 
                                      (454 (iconst_0)) 
                                      (455 (iload 16)) 
                                      (457 (ifeq 498)) ;;to TAG_22
                                      (460 (getstatic (fieldCP "const__17" "clojure.pprint$round_str" (class "clojure.lang.Var")))) 
                                      (463 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (466 (checkcast (class "clojure.lang.IFn"))) 
                                      (469 (aload 15)) 
                                      (471 (getstatic (fieldCP "const__6" "clojure.pprint$round_str" (class "java.lang.Object")))) 
                                      (474 (aload 15)) 
                                      (476 (aconst_null)) 
                                      (477 (astore 15)) 
                                      (479 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (482 (i2l)) 
                                      (483 (invokestatic (methodCP "dec" "clojure.lang.Numbers" (long) long))) 
                                      (486 (invokestatic (methodCP "num" "clojure.lang.Numbers" (long) (class "java.lang.Number")))) 
                                      (489 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (494 (goto 503)) ;;to TAG_23
                                      (497 (pop)) 
                                      (498 (aload 15)) ;;at TAG_22
                                      (500 (aconst_null)) 
                                      (501 (astore 15)) 
                                      (503 (aastore)) ;;at TAG_23
                                      (504 (dup)) 
                                      (505 (iconst_1)) 
                                      (506 (aload 10)) 
                                      (508 (aconst_null)) 
                                      (509 (astore 10)) 
                                      (511 (aastore)) 
                                      (512 (dup)) 
                                      (513 (iconst_2)) 
                                      (514 (iload 16)) 
                                      (516 (ifeq 525)) ;;to TAG_24
                                      (519 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (522 (goto 528)) ;;to TAG_25
                                      (525 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_24
                                      (528 (aastore)) ;;at TAG_25
                                      (529 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (532 (goto 565)) ;;to TAG_26
                                      (535 (pop)) 
                                      (536 (iconst_3)) ;;at TAG_21
                                      (537 (anewarray (class "java.lang.Object"))) 
                                      (540 (dup)) 
                                      (541 (iconst_0)) 
                                      (542 (aload 14)) 
                                      (544 (aconst_null)) 
                                      (545 (astore 14)) 
                                      (547 (aastore)) 
                                      (548 (dup)) 
                                      (549 (iconst_1)) 
                                      (550 (aload 10)) 
                                      (552 (aconst_null)) 
                                      (553 (astore 10)) 
                                      (555 (aastore)) 
                                      (556 (dup)) 
                                      (557 (iconst_2)) 
                                      (558 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (561 (aastore)) 
                                      (562 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (565 (goto 594)) ;;to TAG_19;;at TAG_26
                                      (568 (pop)) 
                                      (569 (iconst_3)) ;;at TAG_20
                                      (570 (anewarray (class "java.lang.Object"))) 
                                      (573 (dup)) 
                                      (574 (iconst_0)) 
                                      (575 (aload_1)) 
                                      (576 (aconst_null)) 
                                      (577 (astore_1)) 
                                      (578 (aastore)) 
                                      (579 (dup)) 
                                      (580 (iconst_1)) 
                                      (581 (aload_2)) 
                                      (582 (aconst_null)) 
                                      (583 (astore_2)) 
                                      (584 (aastore)) 
                                      (585 (dup)) 
                                      (586 (iconst_2)) 
                                      (587 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (590 (aastore)) 
                                      (591 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (594 (goto 623)) ;;to TAG_27;;at TAG_19
                                      (597 (pop)) ;;at TAG_16
                                      (598 (iconst_3)) ;;at TAG_17
                                      (599 (anewarray (class "java.lang.Object"))) 
                                      (602 (dup)) 
                                      (603 (iconst_0)) 
                                      (604 (aload_1)) 
                                      (605 (aconst_null)) 
                                      (606 (astore_1)) 
                                      (607 (aastore)) 
                                      (608 (dup)) 
                                      (609 (iconst_1)) 
                                      (610 (aload_2)) 
                                      (611 (aconst_null)) 
                                      (612 (astore_2)) 
                                      (613 (aastore)) 
                                      (614 (dup)) 
                                      (615 (iconst_2)) 
                                      (616 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (619 (aastore)) 
                                      (620 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (623 (goto 652)) ;;to TAG_28;;at TAG_27
                                      (626 (pop)) ;;at TAG_3
                                      (627 (iconst_3)) ;;at TAG_4
                                      (628 (anewarray (class "java.lang.Object"))) 
                                      (631 (dup)) 
                                      (632 (iconst_0)) 
                                      (633 (aload_1)) 
                                      (634 (aconst_null)) 
                                      (635 (astore_1)) 
                                      (636 (aastore)) 
                                      (637 (dup)) 
                                      (638 (iconst_1)) 
                                      (639 (aload_2)) 
                                      (640 (aconst_null)) 
                                      (641 (astore_2)) 
                                      (642 (aastore)) 
                                      (643 (dup)) 
                                      (644 (iconst_2)) 
                                      (645 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (648 (aastore)) 
                                      (649 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (652 (areturn)) ;;at TAG_28
                                      (endofcode 653))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$round_str-class-table*
  (make-static-class-decls 
   *clojure.pprint$round_str*))

(defconst *package-name-map* 
  ("clojure.pprint$round_str" . "clojure"))

