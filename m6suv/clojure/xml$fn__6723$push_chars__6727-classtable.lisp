; xml$fn__6723$push_chars__6727-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:59 CDT 2014.
;

(defconst *clojure.xml$fn__6723$push_chars__6727*
 (make-class-def
      '(class "clojure.xml$fn__6723$push_chars__6727"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "=")
                        (STRING  "clojure.xml")
                        (STRING  "*state*")
                        (STRING  "chars")
                        (STRING  "some")
                        (STRING  "complement")
                        (STRING  "str")
                        (STRING  "*sb*")
                        (STRING  "*current*"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "push_content" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 104)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "="
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Var"))))
                                      (13 (ldc 2))        ;;STRING:: "clojure.xml"
                                      (15 (ldc 3))        ;;STRING:: "*state*"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Var"))))
                                      (26 (aconst_null))
                                      (27 (ldc 4))        ;;STRING:: "chars"
                                      (29 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (32 (checkcast (class "clojure.lang.Keyword")))
                                      (35 (putstatic (fieldCP "const__2" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Keyword"))))
                                      (38 (ldc 0))        ;;STRING:: "clojure.core"
                                      (40 (ldc 5))        ;;STRING:: "some"
                                      (42 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (45 (checkcast (class "clojure.lang.Var")))
                                      (48 (putstatic (fieldCP "const__3" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Var"))))
                                      (51 (ldc 0))        ;;STRING:: "clojure.core"
                                      (53 (ldc 6))        ;;STRING:: "complement"
                                      (55 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (58 (checkcast (class "clojure.lang.Var")))
                                      (61 (putstatic (fieldCP "const__4" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Var"))))
                                      (64 (ldc 0))        ;;STRING:: "clojure.core"
                                      (66 (ldc 7))        ;;STRING:: "str"
                                      (68 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (71 (checkcast (class "clojure.lang.Var")))
                                      (74 (putstatic (fieldCP "const__5" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Var"))))
                                      (77 (ldc 2))        ;;STRING:: "clojure.xml"
                                      (79 (ldc 8))        ;;STRING:: "*sb*"
                                      (81 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (84 (checkcast (class "clojure.lang.Var")))
                                      (87 (putstatic (fieldCP "const__6" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Var"))))
                                      (90 (ldc 2))        ;;STRING:: "clojure.xml"
                                      (92 (ldc 9))        ;;STRING:: "*current*"
                                      (94 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (97 (checkcast (class "clojure.lang.Var")))
                                      (100 (putstatic (fieldCP "const__7" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Var"))))
                                      (103 (return))
                                      (endofcode 104))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "push_content" "clojure.xml$fn__6723$push_chars__6727" (class "java.lang.Object"))))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 149)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__1" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (getstatic (fieldCP "const__2" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Keyword")))) 
                                      (9 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (12 (istore_1)) 
                                      (13 (iload_1)) 
                                      (14 (ifeq 76)) ;;to TAG_0
                                      (17 (getstatic (fieldCP "const__3" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Var")))) 
                                      (20 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (23 (checkcast (class "clojure.lang.IFn"))) 
                                      (26 (getstatic (fieldCP "const__4" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Var")))) 
                                      (29 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (32 (checkcast (class "clojure.lang.IFn"))) 
                                      (35 (new (class "clojure.xml$fn__6723$push_chars__6727$fn__6728"))) 
                                      (38 (dup)) 
                                      (39 (invokespecial (methodCP "<init>" "clojure.xml$fn__6723$push_chars__6727$fn__6728" () void))) 
                                      (42 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (47 (getstatic (fieldCP "const__5" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Var")))) 
                                      (50 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (53 (checkcast (class "clojure.lang.IFn"))) 
                                      (56 (getstatic (fieldCP "const__6" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Var")))) 
                                      (59 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (62 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (67 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (72 (goto 89)) ;;to TAG_1
                                      (75 (pop)) 
                                      (76 (iload_1)) ;;at TAG_0
                                      (77 (ifeq 86))  ;;to TAG_2
                                      (80 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (83 (goto 89)) ;;to TAG_1
                                      (86 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_2
                                      (89 (dup)) ;;at TAG_1
                                      (90 (ifnull 146)) ;;to TAG_3
                                      (93 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (96 (if_acmpeq 147)) ;;to TAG_4
                                      (99 (getstatic (fieldCP "const__7" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Var")))) 
                                      (102 (aload_0)) 
                                      (103 (getfield (fieldCP "push_content" "clojure.xml$fn__6723$push_chars__6727" (class "java.lang.Object")))) 
                                      (106 (checkcast (class "clojure.lang.IFn"))) 
                                      (109 (getstatic (fieldCP "const__7" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Var")))) 
                                      (112 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (115 (getstatic (fieldCP "const__5" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Var")))) 
                                      (118 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (121 (checkcast (class "clojure.lang.IFn"))) 
                                      (124 (getstatic (fieldCP "const__6" "clojure.xml$fn__6723$push_chars__6727" (class "clojure.lang.Var")))) 
                                      (127 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (130 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (135 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (140 (invokevirtual (methodCP "set" "clojure.lang.Var" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (143 (goto 148)) ;;to TAG_5
                                      (146 (pop)) ;;at TAG_3
                                      (147 (aconst_null)) ;;at TAG_4
                                      (148 (areturn)) ;;at TAG_5
                                      (endofcode 149))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *xml$fn__6723$push_chars__6727-class-table*
  (make-static-class-decls 
   *clojure.xml$fn__6723$push_chars__6727*))

(defconst *package-name-map* 
  ("clojure.xml$fn__6723$push_chars__6727" . "clojure"))

