; core$sigs$asig__3862-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:45 CDT 2014.
;

(defconst *clojure.core$sigs$asig__3862*
 (make-class-def
      '(class "clojure.core$sigs$asig__3862"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "first")
                        (STRING  "&form")
                        (LONG 2)
                        (STRING  "next")
                        (STRING  "map?")
                        (STRING  "with-meta")
                        (STRING  "conj")
                        (STRING  "meta"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 100)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "first"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "&form"
                                      (16 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (19 (checkcast (class "clojure.lang.AFn")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.core$sigs$asig__3862" (class "clojure.lang.AFn"))))
                                      (25 (ldc2_w 3))     ;; LONG:: "2"
                                      (28 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (31 (putstatic (fieldCP "const__2" "clojure.core$sigs$asig__3862" (class "java.lang.Object"))))
                                      (34 (ldc 0))        ;;STRING:: "clojure.core"
                                      (36 (ldc 4))        ;;STRING:: "next"
                                      (38 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (41 (checkcast (class "clojure.lang.Var")))
                                      (44 (putstatic (fieldCP "const__3" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var"))))
                                      (47 (ldc 0))        ;;STRING:: "clojure.core"
                                      (49 (ldc 5))        ;;STRING:: "map?"
                                      (51 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (54 (checkcast (class "clojure.lang.Var")))
                                      (57 (putstatic (fieldCP "const__4" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var"))))
                                      (60 (ldc 0))        ;;STRING:: "clojure.core"
                                      (62 (ldc 6))        ;;STRING:: "with-meta"
                                      (64 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (67 (checkcast (class "clojure.lang.Var")))
                                      (70 (putstatic (fieldCP "const__5" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var"))))
                                      (73 (ldc 0))        ;;STRING:: "clojure.core"
                                      (75 (ldc 7))        ;;STRING:: "conj"
                                      (77 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (80 (checkcast (class "clojure.lang.Var")))
                                      (83 (putstatic (fieldCP "const__6" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var"))))
                                      (86 (ldc 0))        ;;STRING:: "clojure.core"
                                      (88 (ldc 8))        ;;STRING:: "meta"
                                      (90 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (93 (checkcast (class "clojure.lang.Var")))
                                      (96 (putstatic (fieldCP "const__7" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var"))))
                                      (99 (return))
                                      (endofcode 100))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 5) (code_length . 264)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_1)) 
                                      (10 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (15 (astore_2)) 
                                      (16 (getstatic (fieldCP "const__1" "clojure.core$sigs$asig__3862" (class "clojure.lang.AFn")))) 
                                      (19 (getstatic (fieldCP "const__0" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var")))) 
                                      (22 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (25 (checkcast (class "clojure.lang.IFn"))) 
                                      (28 (aload_2)) 
                                      (29 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (34 (invokestatic (methodCP "equals" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (37 (ifeq 63)) ;;to TAG_0
                                      (40 (aload_2)) 
                                      (41 (checkcast (class "clojure.lang.IPersistentVector"))) 
                                      (44 (ldc2_w 3)) ;; LONG:: "2"
                                      (47 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (50 (aload_2)) 
                                      (51 (aconst_null)) 
                                      (52 (astore_2)) 
                                      (53 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (56 (invokestatic (methodCP "subvec" "clojure.lang.RT" ((class "clojure.lang.IPersistentVector") int int) (class "clojure.lang.IPersistentVector")))) 
                                      (59 (goto 66))  ;;to TAG_1
                                      (62 (pop)) 
                                      (63 (aload_2)) ;;at TAG_0
                                      (64 (aconst_null)) 
                                      (65 (astore_2)) 
                                      (66 (astore_3)) ;;at TAG_1
                                      (67 (getstatic (fieldCP "const__3" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var")))) 
                                      (70 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (73 (checkcast (class "clojure.lang.IFn"))) 
                                      (76 (aload_1)) 
                                      (77 (aconst_null)) 
                                      (78 (astore_1)) 
                                      (79 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (84 (astore 4)) 
                                      (86 (getstatic (fieldCP "const__4" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var")))) 
                                      (89 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (92 (checkcast (class "clojure.lang.IFn"))) 
                                      (95 (getstatic (fieldCP "const__0" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var")))) 
                                      (98 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (101 (checkcast (class "clojure.lang.IFn"))) 
                                      (104 (aload 4)) 
                                      (106 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (111 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (116 (dup)) 
                                      (117 (ifnull 259)) ;;to TAG_2
                                      (120 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (123 (if_acmpeq 260)) ;;to TAG_3
                                      (126 (getstatic (fieldCP "const__3" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var")))) 
                                      (129 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (132 (checkcast (class "clojure.lang.IFn"))) 
                                      (135 (aload 4)) 
                                      (137 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (142 (dup)) 
                                      (143 (ifnull 252)) ;;to TAG_4
                                      (146 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (149 (if_acmpeq 253)) ;;to TAG_5
                                      (152 (getstatic (fieldCP "const__5" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var")))) 
                                      (155 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (158 (checkcast (class "clojure.lang.IFn"))) 
                                      (161 (aload_3)) 
                                      (162 (getstatic (fieldCP "const__6" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var")))) 
                                      (165 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (168 (checkcast (class "clojure.lang.IFn"))) 
                                      (171 (getstatic (fieldCP "const__7" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var")))) 
                                      (174 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (177 (checkcast (class "clojure.lang.IFn"))) 
                                      (180 (aload_3)) 
                                      (181 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (186 (dup)) 
                                      (187 (ifnull 216)) ;;to TAG_6
                                      (190 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (193 (if_acmpeq 217)) ;;to TAG_7
                                      (196 (getstatic (fieldCP "const__7" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var")))) 
                                      (199 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (202 (checkcast (class "clojure.lang.IFn"))) 
                                      (205 (aload_3)) 
                                      (206 (aconst_null)) 
                                      (207 (astore_3)) 
                                      (208 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (213 (goto 220)) ;;to TAG_8
                                      (216 (pop)) ;;at TAG_6
                                      (217 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentArrayMap" (class "clojure.lang.PersistentArrayMap")))) ;;at TAG_7
                                      (220 (getstatic (fieldCP "const__0" "clojure.core$sigs$asig__3862" (class "clojure.lang.Var")))) ;;at TAG_8
                                      (223 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (226 (checkcast (class "clojure.lang.IFn"))) 
                                      (229 (aload 4)) 
                                      (231 (aconst_null)) 
                                      (232 (astore 4)) 
                                      (234 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (239 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (244 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (249 (goto 256)) ;;to TAG_9
                                      (252 (pop)) ;;at TAG_4
                                      (253 (aload_3)) ;;at TAG_5
                                      (254 (aconst_null)) 
                                      (255 (astore_3)) 
                                      (256 (goto 263)) ;;to TAG_10;;at TAG_9
                                      (259 (pop)) ;;at TAG_2
                                      (260 (aload_3)) ;;at TAG_3
                                      (261 (aconst_null)) 
                                      (262 (astore_3)) 
                                      (263 (areturn)) ;;at TAG_10
                                      (endofcode 264))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$sigs$asig__3862-class-table*
  (make-static-class-decls 
   *clojure.core$sigs$asig__3862*))

(defconst *package-name-map* 
  ("clojure.core$sigs$asig__3862" . "clojure"))

