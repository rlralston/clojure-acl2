; pprint$inc_s-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:56 CDT 2014.
;

(defconst *clojure.pprint$inc_s*
 (make-class-def
      '(class "clojure.pprint$inc_s"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "dec")
                        (STRING  "count")
                        (STRING  "int")
                        (STRING  "neg?")
                        (STRING  "apply")
                        (STRING  "str")
                        (STRING  "repeat")
                        (STRING  "inc")
                        (STRING  "=")
                        (STRING  "else")
                        (STRING  "subs")
                        (STRING  "char")
                        (STRING  "-")
                        (STRING  "1")
                        (STRING  "0"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 184)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "dec"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$inc_s" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "count"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$inc_s" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "int"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.pprint$inc_s" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "neg?"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.pprint$inc_s" (class "clojure.lang.Var"))))
                                      (52 (ldc 0))        ;;STRING:: "clojure.core"
                                      (54 (ldc 5))        ;;STRING:: "apply"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.pprint$inc_s" (class "clojure.lang.Var"))))
                                      (65 (ldc 0))        ;;STRING:: "clojure.core"
                                      (67 (ldc 6))        ;;STRING:: "str"
                                      (69 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (72 (checkcast (class "clojure.lang.Var")))
                                      (75 (putstatic (fieldCP "const__5" "clojure.pprint$inc_s" (class "clojure.lang.Var"))))
                                      (78 (ldc 0))        ;;STRING:: "clojure.core"
                                      (80 (ldc 7))        ;;STRING:: "repeat"
                                      (82 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (85 (checkcast (class "clojure.lang.Var")))
                                      (88 (putstatic (fieldCP "const__6" "clojure.pprint$inc_s" (class "clojure.lang.Var"))))
                                      (91 (ldc 0))        ;;STRING:: "clojure.core"
                                      (93 (ldc 8))        ;;STRING:: "inc"
                                      (95 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (98 (checkcast (class "clojure.lang.Var")))
                                      (101 (putstatic (fieldCP "const__7" "clojure.pprint$inc_s" (class "clojure.lang.Var"))))
                                      (104 (ldc 0))       ;;STRING:: "clojure.core"
                                      (106 (ldc 9))       ;;STRING:: "="
                                      (108 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (111 (checkcast (class "clojure.lang.Var")))
                                      (114 (putstatic (fieldCP "const__8" "clojure.pprint$inc_s" (class "clojure.lang.Var"))))
                                      (117 (bipush 57))
                                      (119 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (122 (putstatic (fieldCP "const__9" "clojure.pprint$inc_s" (class "java.lang.Object"))))
                                      (125 (aconst_null))
                                      (126 (ldc 10))      ;;STRING:: "else"
                                      (128 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (131 (checkcast (class "clojure.lang.Keyword")))
                                      (134 (putstatic (fieldCP "const__10" "clojure.pprint$inc_s" (class "clojure.lang.Keyword"))))
                                      (137 (ldc 0))       ;;STRING:: "clojure.core"
                                      (139 (ldc 11))      ;;STRING:: "subs"
                                      (141 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (144 (checkcast (class "clojure.lang.Var")))
                                      (147 (putstatic (fieldCP "const__11" "clojure.pprint$inc_s" (class "clojure.lang.Var"))))
                                      (150 (lconst_0))
                                      (151 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (154 (putstatic (fieldCP "const__12" "clojure.pprint$inc_s" (class "java.lang.Object"))))
                                      (157 (ldc 0))       ;;STRING:: "clojure.core"
                                      (159 (ldc 12))      ;;STRING:: "char"
                                      (161 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (164 (checkcast (class "clojure.lang.Var")))
                                      (167 (putstatic (fieldCP "const__13" "clojure.pprint$inc_s" (class "clojure.lang.Var"))))
                                      (170 (ldc 0))       ;;STRING:: "clojure.core"
                                      (172 (ldc 13))      ;;STRING:: "-"
                                      (174 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (177 (checkcast (class "clojure.lang.Var")))
                                      (180 (putstatic (fieldCP "const__14" "clojure.pprint$inc_s" (class "clojure.lang.Var"))))
                                      (183 (return))
                                      (endofcode 184))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 9) (max_locals . 6) (code_length . 225)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (4 (i2l)) 
                                      (5 (invokestatic (methodCP "dec" "clojure.lang.Numbers" (long) long))) 
                                      (8 (lstore_2)) 
                                      (9 (lload_2)) 
                                      (10 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (13 (i2l)) 
                                      (14 (lstore 4)) 
                                      (16 (lload 4)) ;;at TAG_3
                                      (18 (lconst_0)) 
                                      (19 (lcmp)) 
                                      (20 (ifge 72)) ;;to TAG_0
                                      (23 (getstatic (fieldCP "const__4" "clojure.pprint$inc_s" (class "clojure.lang.Var")))) 
                                      (26 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (29 (checkcast (class "clojure.lang.IFn"))) 
                                      (32 (getstatic (fieldCP "const__5" "clojure.pprint$inc_s" (class "clojure.lang.Var")))) 
                                      (35 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (38 (ldc 14)) ;;STRING:: "1"
                                      (40 (getstatic (fieldCP "const__6" "clojure.pprint$inc_s" (class "clojure.lang.Var")))) 
                                      (43 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (46 (checkcast (class "clojure.lang.IFn"))) 
                                      (49 (lload_2)) 
                                      (50 (invokestatic (methodCP "inc" "clojure.lang.Numbers" (long) long))) 
                                      (53 (invokestatic (methodCP "num" "clojure.lang.Numbers" (long) (class "java.lang.Number")))) 
                                      (56 (ldc 15)) ;;STRING:: "0"
                                      (58 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (63 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (68 (goto 224)) ;;to TAG_1
                                      (71 (pop)) 
                                      (72 (getstatic (fieldCP "const__9" "clojure.pprint$inc_s" (class "java.lang.Object")))) ;;at TAG_0
                                      (75 (checkcast (class "java.lang.Character"))) 
                                      (78 (invokevirtual (methodCP "charValue" "java.lang.Character" () char))) 
                                      (81 (aload_1)) 
                                      (82 (checkcast (class "java.lang.String"))) 
                                      (85 (lload 4)) 
                                      (87 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (90 (invokevirtual (methodCP "charAt" "java.lang.String" (int) char))) 
                                      (93 (invokestatic (methodCP "equiv" "clojure.lang.Util" (char char) boolean))) 
                                      (96 (ifeq 113))  ;;to TAG_2
                                      (99 (lload 4)) 
                                      (101 (invokestatic (methodCP "dec" "clojure.lang.Numbers" (long) long))) 
                                      (104 (lstore 4)) 
                                      (106 (goto 16)) ;;to TAG_3
                                      (109 (goto 224)) ;;to TAG_1
                                      (112 (pop)) 
                                      (113 (getstatic (fieldCP "const__10" "clojure.pprint$inc_s" (class "clojure.lang.Keyword")))) ;;at TAG_2
                                      (116 (dup)) 
                                      (117 (ifnull 222)) ;;to TAG_4
                                      (120 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (123 (if_acmpeq 223)) ;;to TAG_5
                                      (126 (getstatic (fieldCP "const__4" "clojure.pprint$inc_s" (class "clojure.lang.Var")))) 
                                      (129 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (132 (checkcast (class "clojure.lang.IFn"))) 
                                      (135 (getstatic (fieldCP "const__5" "clojure.pprint$inc_s" (class "clojure.lang.Var")))) 
                                      (138 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (141 (getstatic (fieldCP "const__11" "clojure.pprint$inc_s" (class "clojure.lang.Var")))) 
                                      (144 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (147 (checkcast (class "clojure.lang.IFn"))) 
                                      (150 (aload_1)) 
                                      (151 (getstatic (fieldCP "const__12" "clojure.pprint$inc_s" (class "java.lang.Object")))) 
                                      (154 (lload 4)) 
                                      (156 (invokestatic (methodCP "num" "clojure.lang.Numbers" (long) (class "java.lang.Number")))) 
                                      (159 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (164 (aload_1)) 
                                      (165 (checkcast (class "java.lang.String"))) 
                                      (168 (lload 4)) 
                                      (170 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (173 (invokevirtual (methodCP "charAt" "java.lang.String" (int) char))) 
                                      (176 (invokestatic (methodCP "intCast" "clojure.lang.RT" (char) int))) 
                                      (179 (i2l)) 
                                      (180 (invokestatic (methodCP "inc" "clojure.lang.Numbers" (long) long))) 
                                      (183 (invokestatic (methodCP "charCast" "clojure.lang.RT" (long) char))) 
                                      (186 (invokestatic (methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character")))) 
                                      (189 (getstatic (fieldCP "const__6" "clojure.pprint$inc_s" (class "clojure.lang.Var")))) 
                                      (192 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (195 (checkcast (class "clojure.lang.IFn"))) 
                                      (198 (lload_2)) 
                                      (199 (lload 4)) 
                                      (201 (invokestatic (methodCP "minus" "clojure.lang.Numbers" (long long) long))) 
                                      (204 (invokestatic (methodCP "num" "clojure.lang.Numbers" (long) (class "java.lang.Number")))) 
                                      (207 (ldc 15)) ;;STRING:: "0"
                                      (209 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (214 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5)) 
                                      (219 (goto 224)) ;;to TAG_1
                                      (222 (pop)) ;;at TAG_4
                                      (223 (aconst_null)) ;;at TAG_5
                                      (224 (areturn)) ;;at TAG_1
                                      (endofcode 225))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$inc_s-class-table*
  (make-static-class-decls 
   *clojure.pprint$inc_s*))

(defconst *package-name-map* 
  ("clojure.pprint$inc_s" . "clojure"))

