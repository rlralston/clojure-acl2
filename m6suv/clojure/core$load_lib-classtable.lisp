; core$load_lib-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:44 CDT 2014.
;

(defconst *clojure.core$load_lib*
 (make-class-def
      '(class "clojure.core$load_lib"
            "clojure.lang.RestFn"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "throw-if")
                        (STRING  "pos?")
                        (STRING  "name")
                        (STRING  "int")
                        (STRING  "symbol")
                        (STRING  "str")
                        (STRING  "apply")
                        (STRING  "hash-map")
                        (STRING  "seq?")
                        (STRING  "seq")
                        (STRING  "get")
                        (STRING  "verbose")
                        (STRING  "use")
                        (STRING  "require")
                        (STRING  "reload-all")
                        (STRING  "reload")
                        (STRING  "as")
                        (STRING  "contains?")
                        (STRING  "deref")
                        (STRING  "*loaded-libs*")
                        (STRING  "load-all")
                        (STRING  "not")
                        (STRING  "load-one")
                        (STRING  "select-keys")
                        (STRING  "exclude")
                        (STRING  "only")
                        (STRING  "rename")
                        (STRING  "refer")
                        (STRING  "line")
                        (STRING  "column")
                        (STRING  "find-ns")
                        (STRING  "push-thread-bindings")
                        (STRING  "*loading-verbosely*")
                        (STRING  "printf")
                        (STRING  "ns-name")
                        (STRING  "*ns*")
                        (STRING  "alias")
                        (STRING  "<")
                        (STRING  "key")
                        (STRING  "print-str")
                        (STRING  "val")
                        (STRING  "unchecked-inc")
                        (STRING  "chunked-seq?")
                        (STRING  "chunk-first")
                        (STRING  "chunk-rest")
                        (STRING  "count")
                        (STRING  "first")
                        (STRING  "next")
                        (STRING  "mapcat")
                        (STRING  "pop-thread-bindings")
                        (STRING  "lib names inside prefix lists must not contain periods")
                        (STRING  "namespace \n%s\n not found")
                        (STRING  "(clojure.core/in-ns \n%s)\n")
                        (STRING  "(clojure.core/alias \n%s \n%s)\n")
                        (STRING  "(clojure.core/refer \n%s")
                        (STRING  " %s \n%s")
                        (STRING  ")\n"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__19" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__20" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__21" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__22" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__23" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__24" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__25" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__26" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__27" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__28" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__29" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__30" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__31" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__32" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__33" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__34" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__35" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__36" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__37" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__38" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__39" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__40" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__41" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__42" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__43" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__44" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__45" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__46" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__47" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__48" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 6) (max_locals . 0) (code_length . 742)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "throw-if"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "pos?"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "name"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "int"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (52 (bipush 46))
                                      (54 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (57 (putstatic (fieldCP "const__4" "clojure.core$load_lib" (class "java.lang.Object"))))
                                      (60 (ldc 0))        ;;STRING:: "clojure.core"
                                      (62 (ldc 5))        ;;STRING:: "symbol"
                                      (64 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (67 (checkcast (class "clojure.lang.Var")))
                                      (70 (putstatic (fieldCP "const__5" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (73 (ldc 0))        ;;STRING:: "clojure.core"
                                      (75 (ldc 6))        ;;STRING:: "str"
                                      (77 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (80 (checkcast (class "clojure.lang.Var")))
                                      (83 (putstatic (fieldCP "const__6" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (86 (ldc 0))        ;;STRING:: "clojure.core"
                                      (88 (ldc 7))        ;;STRING:: "apply"
                                      (90 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (93 (checkcast (class "clojure.lang.Var")))
                                      (96 (putstatic (fieldCP "const__7" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (99 (ldc 0))        ;;STRING:: "clojure.core"
                                      (101 (ldc 8))       ;;STRING:: "hash-map"
                                      (103 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (106 (checkcast (class "clojure.lang.Var")))
                                      (109 (putstatic (fieldCP "const__8" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (112 (ldc 0))       ;;STRING:: "clojure.core"
                                      (114 (ldc 9))       ;;STRING:: "seq?"
                                      (116 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (119 (checkcast (class "clojure.lang.Var")))
                                      (122 (putstatic (fieldCP "const__9" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (125 (ldc 0))       ;;STRING:: "clojure.core"
                                      (127 (ldc 10))      ;;STRING:: "seq"
                                      (129 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (132 (checkcast (class "clojure.lang.Var")))
                                      (135 (putstatic (fieldCP "const__10" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (138 (ldc 0))       ;;STRING:: "clojure.core"
                                      (140 (ldc 11))      ;;STRING:: "get"
                                      (142 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (145 (checkcast (class "clojure.lang.Var")))
                                      (148 (putstatic (fieldCP "const__11" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (151 (aconst_null))
                                      (152 (ldc 12))      ;;STRING:: "verbose"
                                      (154 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (157 (checkcast (class "clojure.lang.Keyword")))
                                      (160 (putstatic (fieldCP "const__12" "clojure.core$load_lib" (class "clojure.lang.Keyword"))))
                                      (163 (aconst_null))
                                      (164 (ldc 13))      ;;STRING:: "use"
                                      (166 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (169 (checkcast (class "clojure.lang.Keyword")))
                                      (172 (putstatic (fieldCP "const__13" "clojure.core$load_lib" (class "clojure.lang.Keyword"))))
                                      (175 (aconst_null))
                                      (176 (ldc 14))      ;;STRING:: "require"
                                      (178 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (181 (checkcast (class "clojure.lang.Keyword")))
                                      (184 (putstatic (fieldCP "const__14" "clojure.core$load_lib" (class "clojure.lang.Keyword"))))
                                      (187 (aconst_null))
                                      (188 (ldc 15))      ;;STRING:: "reload-all"
                                      (190 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (193 (checkcast (class "clojure.lang.Keyword")))
                                      (196 (putstatic (fieldCP "const__15" "clojure.core$load_lib" (class "clojure.lang.Keyword"))))
                                      (199 (aconst_null))
                                      (200 (ldc 16))      ;;STRING:: "reload"
                                      (202 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (205 (checkcast (class "clojure.lang.Keyword")))
                                      (208 (putstatic (fieldCP "const__16" "clojure.core$load_lib" (class "clojure.lang.Keyword"))))
                                      (211 (aconst_null))
                                      (212 (ldc 17))      ;;STRING:: "as"
                                      (214 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (217 (checkcast (class "clojure.lang.Keyword")))
                                      (220 (putstatic (fieldCP "const__17" "clojure.core$load_lib" (class "clojure.lang.Keyword"))))
                                      (223 (ldc 0))       ;;STRING:: "clojure.core"
                                      (225 (ldc 18))      ;;STRING:: "contains?"
                                      (227 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (230 (checkcast (class "clojure.lang.Var")))
                                      (233 (putstatic (fieldCP "const__18" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (236 (ldc 0))       ;;STRING:: "clojure.core"
                                      (238 (ldc 19))      ;;STRING:: "deref"
                                      (240 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (243 (checkcast (class "clojure.lang.Var")))
                                      (246 (putstatic (fieldCP "const__19" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (249 (ldc 0))       ;;STRING:: "clojure.core"
                                      (251 (ldc 20))      ;;STRING:: "*loaded-libs*"
                                      (253 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (256 (checkcast (class "clojure.lang.Var")))
                                      (259 (putstatic (fieldCP "const__20" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (262 (ldc 0))       ;;STRING:: "clojure.core"
                                      (264 (ldc 21))      ;;STRING:: "load-all"
                                      (266 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (269 (checkcast (class "clojure.lang.Var")))
                                      (272 (putstatic (fieldCP "const__21" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (275 (ldc 0))       ;;STRING:: "clojure.core"
                                      (277 (ldc 22))      ;;STRING:: "not"
                                      (279 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (282 (checkcast (class "clojure.lang.Var")))
                                      (285 (putstatic (fieldCP "const__22" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (288 (ldc 0))       ;;STRING:: "clojure.core"
                                      (290 (ldc 23))      ;;STRING:: "load-one"
                                      (292 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (295 (checkcast (class "clojure.lang.Var")))
                                      (298 (putstatic (fieldCP "const__23" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (301 (ldc 0))       ;;STRING:: "clojure.core"
                                      (303 (ldc 24))      ;;STRING:: "select-keys"
                                      (305 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (308 (checkcast (class "clojure.lang.Var")))
                                      (311 (putstatic (fieldCP "const__24" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (314 (iconst_4))
                                      (315 (anewarray (class "java.lang.Object")))
                                      (318 (dup))
                                      (319 (iconst_0))
                                      (320 (aconst_null))
                                      (321 (ldc 25))      ;;STRING:: "exclude"
                                      (323 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (326 (aastore))
                                      (327 (dup))
                                      (328 (iconst_1))
                                      (329 (aconst_null))
                                      (330 (ldc 26))      ;;STRING:: "only"
                                      (332 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (335 (aastore))
                                      (336 (dup))
                                      (337 (iconst_2))
                                      (338 (aconst_null))
                                      (339 (ldc 27))      ;;STRING:: "rename"
                                      (341 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (344 (aastore))
                                      (345 (dup))
                                      (346 (iconst_3))
                                      (347 (aconst_null))
                                      (348 (ldc 28))      ;;STRING:: "refer"
                                      (350 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (353 (aastore))
                                      (354 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (357 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (360 (checkcast (class "clojure.lang.IObj")))
                                      (363 (iconst_4))
                                      (364 (anewarray (class "java.lang.Object")))
                                      (367 (dup))
                                      (368 (iconst_0))
                                      (369 (aconst_null))
                                      (370 (ldc 29))      ;;STRING:: "line"
                                      (372 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (375 (aastore))
                                      (376 (dup))
                                      (377 (iconst_1))
                                      (378 (sipush 5370))
                                      (381 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (384 (aastore))
                                      (385 (dup))
                                      (386 (iconst_2))
                                      (387 (aconst_null))
                                      (388 (ldc 30))      ;;STRING:: "column"
                                      (390 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (393 (aastore))
                                      (394 (dup))
                                      (395 (iconst_3))
                                      (396 (bipush 40))
                                      (398 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (401 (aastore))
                                      (402 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (405 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (408 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (413 (putstatic (fieldCP "const__25" "clojure.core$load_lib" (class "java.lang.Object"))))
                                      (416 (ldc 0))       ;;STRING:: "clojure.core"
                                      (418 (ldc 31))      ;;STRING:: "find-ns"
                                      (420 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (423 (checkcast (class "clojure.lang.Var")))
                                      (426 (putstatic (fieldCP "const__26" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (429 (ldc 0))       ;;STRING:: "clojure.core"
                                      (431 (ldc 32))      ;;STRING:: "push-thread-bindings"
                                      (433 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (436 (checkcast (class "clojure.lang.Var")))
                                      (439 (putstatic (fieldCP "const__27" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (442 (ldc 0))       ;;STRING:: "clojure.core"
                                      (444 (ldc 33))      ;;STRING:: "*loading-verbosely*"
                                      (446 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (449 (checkcast (class "clojure.lang.Var")))
                                      (452 (putstatic (fieldCP "const__28" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (455 (ldc 0))       ;;STRING:: "clojure.core"
                                      (457 (ldc 34))      ;;STRING:: "printf"
                                      (459 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (462 (checkcast (class "clojure.lang.Var")))
                                      (465 (putstatic (fieldCP "const__29" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (468 (ldc 0))       ;;STRING:: "clojure.core"
                                      (470 (ldc 35))      ;;STRING:: "ns-name"
                                      (472 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (475 (checkcast (class "clojure.lang.Var")))
                                      (478 (putstatic (fieldCP "const__30" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (481 (ldc 0))       ;;STRING:: "clojure.core"
                                      (483 (ldc 36))      ;;STRING:: "*ns*"
                                      (485 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (488 (checkcast (class "clojure.lang.Var")))
                                      (491 (putstatic (fieldCP "const__31" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (494 (ldc 0))       ;;STRING:: "clojure.core"
                                      (496 (ldc 37))      ;;STRING:: "alias"
                                      (498 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (501 (checkcast (class "clojure.lang.Var")))
                                      (504 (putstatic (fieldCP "const__32" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (507 (aconst_null))
                                      (508 (ldc 28))      ;;STRING:: "refer"
                                      (510 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (513 (checkcast (class "clojure.lang.Keyword")))
                                      (516 (putstatic (fieldCP "const__33" "clojure.core$load_lib" (class "clojure.lang.Keyword"))))
                                      (519 (lconst_0))
                                      (520 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (523 (putstatic (fieldCP "const__34" "clojure.core$load_lib" (class "java.lang.Object"))))
                                      (526 (ldc 0))       ;;STRING:: "clojure.core"
                                      (528 (ldc_w 38))    ;;STRING:: "<"
                                      (531 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (534 (checkcast (class "clojure.lang.Var")))
                                      (537 (putstatic (fieldCP "const__35" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (540 (ldc 0))       ;;STRING:: "clojure.core"
                                      (542 (ldc_w 39))    ;;STRING:: "key"
                                      (545 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (548 (checkcast (class "clojure.lang.Var")))
                                      (551 (putstatic (fieldCP "const__36" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (554 (ldc 0))       ;;STRING:: "clojure.core"
                                      (556 (ldc_w 40))    ;;STRING:: "print-str"
                                      (559 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (562 (checkcast (class "clojure.lang.Var")))
                                      (565 (putstatic (fieldCP "const__37" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (568 (ldc 0))       ;;STRING:: "clojure.core"
                                      (570 (ldc_w 41))    ;;STRING:: "val"
                                      (573 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (576 (checkcast (class "clojure.lang.Var")))
                                      (579 (putstatic (fieldCP "const__38" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (582 (ldc 0))       ;;STRING:: "clojure.core"
                                      (584 (ldc_w 42))    ;;STRING:: "unchecked-inc"
                                      (587 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (590 (checkcast (class "clojure.lang.Var")))
                                      (593 (putstatic (fieldCP "const__39" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (596 (ldc 0))       ;;STRING:: "clojure.core"
                                      (598 (ldc_w 43))    ;;STRING:: "chunked-seq?"
                                      (601 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (604 (checkcast (class "clojure.lang.Var")))
                                      (607 (putstatic (fieldCP "const__40" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (610 (ldc 0))       ;;STRING:: "clojure.core"
                                      (612 (ldc_w 44))    ;;STRING:: "chunk-first"
                                      (615 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (618 (checkcast (class "clojure.lang.Var")))
                                      (621 (putstatic (fieldCP "const__41" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (624 (ldc 0))       ;;STRING:: "clojure.core"
                                      (626 (ldc_w 45))    ;;STRING:: "chunk-rest"
                                      (629 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (632 (checkcast (class "clojure.lang.Var")))
                                      (635 (putstatic (fieldCP "const__42" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (638 (ldc 0))       ;;STRING:: "clojure.core"
                                      (640 (ldc_w 46))    ;;STRING:: "count"
                                      (643 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (646 (checkcast (class "clojure.lang.Var")))
                                      (649 (putstatic (fieldCP "const__43" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (652 (ldc 0))       ;;STRING:: "clojure.core"
                                      (654 (ldc_w 47))    ;;STRING:: "first"
                                      (657 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (660 (checkcast (class "clojure.lang.Var")))
                                      (663 (putstatic (fieldCP "const__44" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (666 (ldc 0))       ;;STRING:: "clojure.core"
                                      (668 (ldc_w 48))    ;;STRING:: "next"
                                      (671 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (674 (checkcast (class "clojure.lang.Var")))
                                      (677 (putstatic (fieldCP "const__45" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (680 (ldc 0))       ;;STRING:: "clojure.core"
                                      (682 (ldc 28))      ;;STRING:: "refer"
                                      (684 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (687 (checkcast (class "clojure.lang.Var")))
                                      (690 (putstatic (fieldCP "const__46" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (693 (ldc 0))       ;;STRING:: "clojure.core"
                                      (695 (ldc_w 49))    ;;STRING:: "mapcat"
                                      (698 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (701 (checkcast (class "clojure.lang.Var")))
                                      (704 (putstatic (fieldCP "const__47" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (707 (ldc 0))       ;;STRING:: "clojure.core"
                                      (709 (ldc_w 50))    ;;STRING:: "pop-thread-bindings"
                                      (712 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (715 (checkcast (class "clojure.lang.Var")))
                                      (718 (putstatic (fieldCP "const__48" "clojure.core$load_lib" (class "clojure.lang.Var"))))
                                      (721 (new (class "clojure.lang.KeywordLookupSite")))
                                      (724 (dup))
                                      (725 (aconst_null))
                                      (726 (ldc 28))      ;;STRING:: "refer"
                                      (728 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (731 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (734 (dup))
                                      (735 (putstatic (fieldCP "__site__0__" "clojure.core$load_lib" (class "clojure.lang.KeywordLookupSite"))))
                                      (738 (putstatic (fieldCP "__thunk__0__" "clojure.core$load_lib" (class "clojure.lang.ILookupThunk"))))
                                      (741 (return))
                                      (endofcode 742))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.RestFn" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doInvoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 8) (max_locals . 30) (code_length . 1557)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_1)) 
                                      (10 (astore 4)) 
                                      (12 (aload 4)) 
                                      (14 (dup)) 
                                      (15 (ifnull 70))  ;;to TAG_0
                                      (18 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (21 (if_acmpeq 71)) ;;to TAG_1
                                      (24 (getstatic (fieldCP "const__2" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (27 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (30 (checkcast (class "clojure.lang.IFn"))) 
                                      (33 (aload_2)) 
                                      (34 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (39 (checkcast (class "java.lang.String"))) 
                                      (42 (getstatic (fieldCP "const__4" "clojure.core$load_lib" (class "java.lang.Object")))) 
                                      (45 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (48 (invokevirtual (methodCP "indexOf" "java.lang.String" (int) int))) 
                                      (51 (i2l)) 
                                      (52 (invokestatic (methodCP "isPos" "clojure.lang.Numbers" (long) boolean))) 
                                      (55 (ifeq 64)) ;;to TAG_2
                                      (58 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (61 (goto 67)) ;;to TAG_3
                                      (64 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_2
                                      (67 (goto 76)) ;;to TAG_4;;at TAG_3
                                      (70 (pop)) ;;at TAG_0
                                      (71 (aload 4)) ;;at TAG_1
                                      (73 (aconst_null)) 
                                      (74 (astore 4)) 
                                      (76 (ldc_w 51)) ;;at TAG_4;;STRING:: "lib names inside prefix lists must not contain periods"
                                      (79 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (84 (pop)) 
                                      (85 (aload_1)) 
                                      (86 (dup)) 
                                      (87 (ifnull 136)) ;;to TAG_5
                                      (90 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (93 (if_acmpeq 137)) ;;to TAG_6
                                      (96 (getstatic (fieldCP "const__5" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (99 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (102 (checkcast (class "clojure.lang.IFn"))) 
                                      (105 (getstatic (fieldCP "const__6" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (108 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (111 (checkcast (class "clojure.lang.IFn"))) 
                                      (114 (aload_1)) 
                                      (115 (aconst_null)) 
                                      (116 (astore_1)) 
                                      (117 (getstatic (fieldCP "const__4" "clojure.core$load_lib" (class "java.lang.Object")))) 
                                      (120 (aload_2)) 
                                      (121 (aconst_null)) 
                                      (122 (astore_2)) 
                                      (123 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (128 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (133 (goto 140)) ;;to TAG_7
                                      (136 (pop)) ;;at TAG_5
                                      (137 (aload_2)) ;;at TAG_6
                                      (138 (aconst_null)) 
                                      (139 (astore_2)) 
                                      (140 (astore 4)) ;;at TAG_7
                                      (142 (getstatic (fieldCP "const__7" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (145 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (148 (checkcast (class "clojure.lang.IFn"))) 
                                      (151 (getstatic (fieldCP "const__8" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (154 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (157 (aload_3)) 
                                      (158 (aconst_null)) 
                                      (159 (astore_3)) 
                                      (160 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (165 (astore 5)) 
                                      (167 (aload 5)) 
                                      (169 (astore 6)) 
                                      (171 (getstatic (fieldCP "const__9" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (174 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (177 (checkcast (class "clojure.lang.IFn"))) 
                                      (180 (aload 6)) 
                                      (182 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (187 (dup)) 
                                      (188 (ifnull 225)) ;;to TAG_8
                                      (191 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (194 (if_acmpeq 226)) ;;to TAG_9
                                      (197 (getstatic (fieldCP "const__10" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (200 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (203 (checkcast (class "clojure.lang.IFn"))) 
                                      (206 (aload 6)) 
                                      (208 (aconst_null)) 
                                      (209 (astore 6)) 
                                      (211 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (216 (checkcast (class "clojure.lang.ISeq"))) 
                                      (219 (invokestatic (methodCP "create" "clojure.lang.PersistentHashMap" ((class "clojure.lang.ISeq")) (class "clojure.lang.PersistentHashMap")))) 
                                      (222 (goto 231)) ;;to TAG_10
                                      (225 (pop)) ;;at TAG_8
                                      (226 (aload 6)) ;;at TAG_9
                                      (228 (aconst_null)) 
                                      (229 (astore 6)) 
                                      (231 (astore 7)) ;;at TAG_10
                                      (233 (aload 7)) 
                                      (235 (getstatic (fieldCP "const__12" "clojure.core$load_lib" (class "clojure.lang.Keyword")))) 
                                      (238 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (241 (astore 8)) 
                                      (243 (aload 7)) 
                                      (245 (getstatic (fieldCP "const__13" "clojure.core$load_lib" (class "clojure.lang.Keyword")))) 
                                      (248 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (251 (astore 9)) 
                                      (253 (aload 7)) 
                                      (255 (getstatic (fieldCP "const__14" "clojure.core$load_lib" (class "clojure.lang.Keyword")))) 
                                      (258 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (261 (astore 10)) 
                                      (263 (aload 7)) 
                                      (265 (getstatic (fieldCP "const__15" "clojure.core$load_lib" (class "clojure.lang.Keyword")))) 
                                      (268 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (271 (astore 11)) 
                                      (273 (aload 7)) 
                                      (275 (getstatic (fieldCP "const__16" "clojure.core$load_lib" (class "clojure.lang.Keyword")))) 
                                      (278 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (281 (astore 12)) 
                                      (283 (aload 7)) 
                                      (285 (aconst_null)) 
                                      (286 (astore 7)) 
                                      (288 (getstatic (fieldCP "const__17" "clojure.core$load_lib" (class "clojure.lang.Keyword")))) 
                                      (291 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (294 (astore 13)) 
                                      (296 (getstatic (fieldCP "const__18" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (299 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (302 (checkcast (class "clojure.lang.IFn"))) 
                                      (305 (getstatic (fieldCP "const__19" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (308 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (311 (checkcast (class "clojure.lang.IFn"))) 
                                      (314 (getstatic (fieldCP "const__20" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (317 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (320 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (325 (aload 4)) 
                                      (327 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (332 (astore 14)) 
                                      (334 (aload 11)) 
                                      (336 (aconst_null)) 
                                      (337 (astore 11)) 
                                      (339 (dup)) 
                                      (340 (ifnull 358)) ;;to TAG_11
                                      (343 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (346 (if_acmpeq 359)) ;;to TAG_12
                                      (349 (getstatic (fieldCP "const__21" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (352 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (355 (goto 466)) ;;to TAG_13
                                      (358 (pop)) ;;at TAG_11
                                      (359 (aload 12)) ;;at TAG_12
                                      (361 (aconst_null)) 
                                      (362 (astore 12)) 
                                      (364 (astore 15)) 
                                      (366 (aload 15)) 
                                      (368 (dup)) 
                                      (369 (ifnull 386)) ;;to TAG_14
                                      (372 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (375 (if_acmpeq 387)) ;;to TAG_15
                                      (378 (aload 15)) 
                                      (380 (aconst_null)) 
                                      (381 (astore 15)) 
                                      (383 (goto 445)) ;;to TAG_16
                                      (386 (pop)) ;;at TAG_14
                                      (387 (getstatic (fieldCP "const__22" "clojure.core$load_lib" (class "clojure.lang.Var")))) ;;at TAG_15
                                      (390 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (393 (checkcast (class "clojure.lang.IFn"))) 
                                      (396 (aload 10)) 
                                      (398 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (403 (astore 16)) 
                                      (405 (aload 16)) 
                                      (407 (dup)) 
                                      (408 (ifnull 425)) ;;to TAG_17
                                      (411 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (414 (if_acmpeq 426)) ;;to TAG_18
                                      (417 (aload 16)) 
                                      (419 (aconst_null)) 
                                      (420 (astore 16)) 
                                      (422 (goto 445)) ;;to TAG_16
                                      (425 (pop)) ;;at TAG_17
                                      (426 (getstatic (fieldCP "const__22" "clojure.core$load_lib" (class "clojure.lang.Var")))) ;;at TAG_18
                                      (429 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (432 (checkcast (class "clojure.lang.IFn"))) 
                                      (435 (aload 14)) 
                                      (437 (aconst_null)) 
                                      (438 (astore 14)) 
                                      (440 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (445 (dup)) ;;at TAG_16
                                      (446 (ifnull 464)) ;;to TAG_19
                                      (449 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (452 (if_acmpeq 465)) ;;to TAG_20
                                      (455 (getstatic (fieldCP "const__23" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (458 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (461 (goto 466)) ;;to TAG_13
                                      (464 (pop)) ;;at TAG_19
                                      (465 (aconst_null)) ;;at TAG_20
                                      (466 (astore 15)) ;;at TAG_13
                                      (468 (aload 13)) 
                                      (470 (astore 16)) 
                                      (472 (aload 16)) 
                                      (474 (dup)) 
                                      (475 (ifnull 492)) ;;to TAG_21
                                      (478 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (481 (if_acmpeq 493)) ;;to TAG_22
                                      (484 (aload 16)) 
                                      (486 (aconst_null)) 
                                      (487 (astore 16)) 
                                      (489 (goto 495)) ;;to TAG_23
                                      (492 (pop)) ;;at TAG_21
                                      (493 (aload 9)) ;;at TAG_22
                                      (495 (astore 16)) ;;at TAG_23
                                      (497 (getstatic (fieldCP "const__24" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (500 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (503 (checkcast (class "clojure.lang.IFn"))) 
                                      (506 (aload 5)) 
                                      (508 (aconst_null)) 
                                      (509 (astore 5)) 
                                      (511 (getstatic (fieldCP "const__25" "clojure.core$load_lib" (class "java.lang.Object")))) 
                                      (514 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (519 (astore 17)) 
                                      (521 (getstatic (fieldCP "const__22" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (524 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (527 (checkcast (class "clojure.lang.IFn"))) 
                                      (530 (getstatic (fieldCP "const__26" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (533 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (536 (checkcast (class "clojure.lang.IFn"))) 
                                      (539 (aload 4)) 
                                      (541 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (546 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (551 (astore 18)) 
                                      (553 (getstatic (fieldCP "const__27" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (556 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (559 (checkcast (class "clojure.lang.IFn"))) 
                                      (562 (getstatic (fieldCP "const__8" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (565 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (568 (checkcast (class "clojure.lang.IFn"))) 
                                      (571 (getstatic (fieldCP "const__28" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (574 (getstatic (fieldCP "const__28" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (577 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (580 (astore 19)) 
                                      (582 (aload 19)) 
                                      (584 (dup)) 
                                      (585 (ifnull 602)) ;;to TAG_24
                                      (588 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (591 (if_acmpeq 603)) ;;to TAG_25
                                      (594 (aload 19)) 
                                      (596 (aconst_null)) 
                                      (597 (astore 19)) 
                                      (599 (goto 608)) ;;to TAG_26
                                      (602 (pop)) ;;at TAG_24
                                      (603 (aload 8)) ;;at TAG_25
                                      (605 (aconst_null)) 
                                      (606 (astore 8)) 
                                      (608 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) ;;at TAG_26
                                      (613 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (618 (pop)) 
                                      (619 (aload 15)) ;;at TAG_64
                                      (621 (dup)) 
                                      (622 (ifnull 669)) ;;to TAG_27
                                      (625 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (628 (if_acmpeq 670)) ;;to TAG_28
                                      (631 (new (class "clojure.core$load_lib$fn__4967"))) 
                                      (634 (dup)) 
                                      (635 (aload 10)) 
                                      (637 (aconst_null)) 
                                      (638 (astore 10)) 
                                      (640 (aload 18)) 
                                      (642 (aconst_null)) 
                                      (643 (astore 18)) 
                                      (645 (aload 16)) 
                                      (647 (aload 15)) 
                                      (649 (aconst_null)) 
                                      (650 (astore 15)) 
                                      (652 (aload 4)) 
                                      (654 (invokespecial (methodCP "<init>" "clojure.core$load_lib$fn__4967" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (657 (checkcast (class "clojure.lang.IFn"))) 
                                      (660 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (665 (pop)) 
                                      (666 (goto 745)) ;;to TAG_29
                                      (669 (pop)) ;;at TAG_27
                                      (670 (getstatic (fieldCP "const__0" "clojure.core$load_lib" (class "clojure.lang.Var")))) ;;at TAG_28
                                      (673 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (676 (checkcast (class "clojure.lang.IFn"))) 
                                      (679 (aload 16)) 
                                      (681 (astore 20)) 
                                      (683 (aload 20)) 
                                      (685 (dup)) 
                                      (686 (ifnull 728)) ;;to TAG_30
                                      (689 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (692 (if_acmpeq 729)) ;;to TAG_31
                                      (695 (getstatic (fieldCP "const__22" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (698 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (701 (checkcast (class "clojure.lang.IFn"))) 
                                      (704 (getstatic (fieldCP "const__26" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (707 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (710 (checkcast (class "clojure.lang.IFn"))) 
                                      (713 (aload 4)) 
                                      (715 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (720 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (725 (goto 734)) ;;to TAG_32
                                      (728 (pop)) ;;at TAG_30
                                      (729 (aload 20)) ;;at TAG_31
                                      (731 (aconst_null)) 
                                      (732 (astore 20)) 
                                      (734 (ldc_w 52)) ;;at TAG_32;;STRING:: "namespace \n%s\n not found"
                                      (737 (aload 4)) 
                                      (739 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (744 (pop)) 
                                      (745 (aload 16)) ;;at TAG_29
                                      (747 (aconst_null)) 
                                      (748 (astore 16)) 
                                      (750 (astore 20)) 
                                      (752 (aload 20)) 
                                      (754 (dup)) 
                                      (755 (ifnull 773)) ;;to TAG_33
                                      (758 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (761 (if_acmpeq 774)) ;;to TAG_34
                                      (764 (getstatic (fieldCP "const__28" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (767 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (770 (goto 779)) ;;to TAG_35
                                      (773 (pop)) ;;at TAG_33
                                      (774 (aload 20)) ;;at TAG_34
                                      (776 (aconst_null)) 
                                      (777 (astore 20)) 
                                      (779 (dup)) ;;at TAG_35
                                      (780 (ifnull 830)) ;;to TAG_36
                                      (783 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (786 (if_acmpeq 831)) ;;to TAG_37
                                      (789 (getstatic (fieldCP "const__29" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (792 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (795 (checkcast (class "clojure.lang.IFn"))) 
                                      (798 (ldc_w 53)) ;;STRING:: "(clojure.core/in-ns \n%s)\n"
                                      (801 (getstatic (fieldCP "const__30" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (804 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (807 (checkcast (class "clojure.lang.IFn"))) 
                                      (810 (getstatic (fieldCP "const__31" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (813 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (816 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (821 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (826 (pop)) 
                                      (827 (goto 833)) ;;to TAG_38
                                      (830 (pop)) ;;at TAG_36
                                      (831 (aconst_null)) ;;at TAG_37
                                      (832 (pop)) 
                                      (833 (aload 13)) ;;at TAG_38
                                      (835 (dup)) 
                                      (836 (ifnull 914)) ;;to TAG_39
                                      (839 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (842 (if_acmpeq 915)) ;;to TAG_40
                                      (845 (getstatic (fieldCP "const__28" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (848 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (851 (dup)) 
                                      (852 (ifnull 886)) ;;to TAG_41
                                      (855 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (858 (if_acmpeq 887)) ;;to TAG_42
                                      (861 (getstatic (fieldCP "const__29" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (864 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (867 (checkcast (class "clojure.lang.IFn"))) 
                                      (870 (ldc_w 54)) ;;STRING:: "(clojure.core/alias \n%s \n%s)\n"
                                      (873 (aload 13)) 
                                      (875 (aload 4)) 
                                      (877 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (882 (pop)) 
                                      (883 (goto 889)) ;;to TAG_43
                                      (886 (pop)) ;;at TAG_41
                                      (887 (aconst_null)) ;;at TAG_42
                                      (888 (pop)) 
                                      (889 (getstatic (fieldCP "const__32" "clojure.core$load_lib" (class "clojure.lang.Var")))) ;;at TAG_43
                                      (892 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (895 (checkcast (class "clojure.lang.IFn"))) 
                                      (898 (aload 13)) 
                                      (900 (aconst_null)) 
                                      (901 (astore 13)) 
                                      (903 (aload 4)) 
                                      (905 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (910 (pop)) 
                                      (911 (goto 917)) ;;to TAG_44
                                      (914 (pop)) ;;at TAG_39
                                      (915 (aconst_null)) ;;at TAG_40
                                      (916 (pop)) 
                                      (917 (aload 9)) ;;at TAG_44
                                      (919 (aconst_null)) 
                                      (920 (astore 9)) 
                                      (922 (astore 20)) 
                                      (924 (aload 20)) 
                                      (926 (dup)) 
                                      (927 (ifnull 944)) ;;to TAG_45
                                      (930 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (933 (if_acmpeq 945)) ;;to TAG_46
                                      (936 (aload 20)) 
                                      (938 (aconst_null)) 
                                      (939 (astore 20)) 
                                      (941 (goto 987)) ;;to TAG_47
                                      (944 (pop)) ;;at TAG_45
                                      (945 (getstatic (fieldCP "__thunk__0__" "clojure.core$load_lib" (class "clojure.lang.ILookupThunk")))) ;;at TAG_46
                                      (948 (dup)) 
                                      (949 (aload 17)) 
                                      (951 (dup_x2)) 
                                      (952 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (957 (dup_x2)) 
                                      (958 (if_acmpeq 965)) ;;to TAG_48
                                      (961 (pop)) 
                                      (962 (goto 987)) ;;to TAG_47
                                      (965 (swap)) ;;at TAG_48
                                      (966 (pop)) 
                                      (967 (dup)) 
                                      (968 (getstatic (fieldCP "__site__0__" "clojure.core$load_lib" (class "clojure.lang.KeywordLookupSite")))) 
                                      (971 (swap)) 
                                      (972 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (977 (dup)) 
                                      (978 (putstatic (fieldCP "__thunk__0__" "clojure.core$load_lib" (class "clojure.lang.ILookupThunk")))) 
                                      (981 (swap)) 
                                      (982 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (987 (dup)) ;;at TAG_47
                                      (988 (ifnull 1512)) ;;to TAG_49
                                      (991 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (994 (if_acmpeq 1513)) ;;to TAG_50
                                      (997 (getstatic (fieldCP "const__28" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1000 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1003 (dup)) 
                                      (1004 (ifnull 1456)) ;;to TAG_51
                                      (1007 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (1010 (if_acmpeq 1457)) ;;to TAG_52
                                      (1013 (getstatic (fieldCP "const__29" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1016 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1019 (checkcast (class "clojure.lang.IFn"))) 
                                      (1022 (ldc_w 55)) ;;STRING:: "(clojure.core/refer \n%s"
                                      (1025 (aload 4)) 
                                      (1027 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (1032 (pop)) 
                                      (1033 (getstatic (fieldCP "const__10" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1036 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1039 (checkcast (class "clojure.lang.IFn"))) 
                                      (1042 (aload 17)) 
                                      (1044 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1049 (astore 20)) 
                                      (1051 (aconst_null)) 
                                      (1052 (astore 21)) 
                                      (1054 (lconst_0)) 
                                      (1055 (lstore 22)) 
                                      (1057 (lconst_0)) 
                                      (1058 (lstore 24)) 
                                      (1060 (lload 24)) ;;at TAG_54
                                      (1062 (lload 22)) 
                                      (1064 (lcmp)) 
                                      (1065 (ifge 1177)) ;;to TAG_53
                                      (1068 (aload 21)) 
                                      (1070 (checkcast (class "clojure.lang.Indexed"))) 
                                      (1073 (lload 24)) 
                                      (1075 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (1078 (invokeinterface (methodCP "nth" "clojure.lang.Indexed" (int) (class "java.lang.Object")) 2)) 
                                      (1083 (astore 26)) 
                                      (1085 (getstatic (fieldCP "const__29" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1088 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1091 (checkcast (class "clojure.lang.IFn"))) 
                                      (1094 (ldc_w 56)) ;;STRING:: " %s \n%s"
                                      (1097 (getstatic (fieldCP "const__36" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1100 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1103 (checkcast (class "clojure.lang.IFn"))) 
                                      (1106 (aload 26)) 
                                      (1108 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1113 (getstatic (fieldCP "const__37" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1116 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1119 (checkcast (class "clojure.lang.IFn"))) 
                                      (1122 (getstatic (fieldCP "const__38" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1125 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1128 (checkcast (class "clojure.lang.IFn"))) 
                                      (1131 (aload 26)) 
                                      (1133 (aconst_null)) 
                                      (1134 (astore 26)) 
                                      (1136 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1141 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1146 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (1151 (pop)) 
                                      (1152 (aload 20)) 
                                      (1154 (aload 21)) 
                                      (1156 (lload 22)) 
                                      (1158 (lload 24)) 
                                      (1160 (lconst_1)) 
                                      (1161 (ladd)) 
                                      (1162 (lstore 24)) 
                                      (1164 (lstore 22)) 
                                      (1166 (astore 21)) 
                                      (1168 (astore 20)) 
                                      (1170 (goto 1060)) ;;to TAG_54
                                      (1173 (goto 1435)) ;;to TAG_55
                                      (1176 (pop)) 
                                      (1177 (getstatic (fieldCP "const__10" "clojure.core$load_lib" (class "clojure.lang.Var")))) ;;at TAG_53
                                      (1180 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1183 (checkcast (class "clojure.lang.IFn"))) 
                                      (1186 (aload 20)) 
                                      (1188 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1193 (astore 26)) 
                                      (1195 (aload 26)) 
                                      (1197 (dup)) 
                                      (1198 (ifnull 1432)) ;;to TAG_56
                                      (1201 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (1204 (if_acmpeq 1433)) ;;to TAG_57
                                      (1207 (aload 26)) 
                                      (1209 (aconst_null)) 
                                      (1210 (astore 26)) 
                                      (1212 (astore 27)) 
                                      (1214 (getstatic (fieldCP "const__40" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1217 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1220 (checkcast (class "clojure.lang.IFn"))) 
                                      (1223 (aload 27)) 
                                      (1225 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1230 (dup)) 
                                      (1231 (ifnull 1310)) ;;to TAG_58
                                      (1234 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (1237 (if_acmpeq 1311)) ;;to TAG_59
                                      (1240 (getstatic (fieldCP "const__41" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1243 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1246 (checkcast (class "clojure.lang.IFn"))) 
                                      (1249 (aload 27)) 
                                      (1251 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1256 (astore 28)) 
                                      (1258 (getstatic (fieldCP "const__42" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1261 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1264 (checkcast (class "clojure.lang.IFn"))) 
                                      (1267 (aload 27)) 
                                      (1269 (aconst_null)) 
                                      (1270 (astore 27)) 
                                      (1272 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1277 (aload 28)) 
                                      (1279 (aload 28)) 
                                      (1281 (aconst_null)) 
                                      (1282 (astore 28)) 
                                      (1284 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (1287 (invokestatic (methodCP "intCast" "clojure.lang.RT" (int) int))) 
                                      (1290 (i2l)) 
                                      (1291 (lconst_0)) 
                                      (1292 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (1295 (i2l)) 
                                      (1296 (lstore 24)) 
                                      (1298 (lstore 22)) 
                                      (1300 (astore 21)) 
                                      (1302 (astore 20)) 
                                      (1304 (goto 1060)) ;;to TAG_54
                                      (1307 (goto 1429)) ;;to TAG_60
                                      (1310 (pop)) ;;at TAG_58
                                      (1311 (getstatic (fieldCP "const__44" "clojure.core$load_lib" (class "clojure.lang.Var")))) ;;at TAG_59
                                      (1314 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1317 (checkcast (class "clojure.lang.IFn"))) 
                                      (1320 (aload 27)) 
                                      (1322 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1327 (astore 28)) 
                                      (1329 (getstatic (fieldCP "const__29" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1332 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1335 (checkcast (class "clojure.lang.IFn"))) 
                                      (1338 (ldc_w 56)) ;;STRING:: " %s \n%s"
                                      (1341 (getstatic (fieldCP "const__36" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1344 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1347 (checkcast (class "clojure.lang.IFn"))) 
                                      (1350 (aload 28)) 
                                      (1352 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1357 (getstatic (fieldCP "const__37" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1360 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1363 (checkcast (class "clojure.lang.IFn"))) 
                                      (1366 (getstatic (fieldCP "const__38" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1369 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1372 (checkcast (class "clojure.lang.IFn"))) 
                                      (1375 (aload 28)) 
                                      (1377 (aconst_null)) 
                                      (1378 (astore 28)) 
                                      (1380 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1385 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1390 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (1395 (pop)) 
                                      (1396 (getstatic (fieldCP "const__45" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1399 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1402 (checkcast (class "clojure.lang.IFn"))) 
                                      (1405 (aload 27)) 
                                      (1407 (aconst_null)) 
                                      (1408 (astore 27)) 
                                      (1410 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1415 (aconst_null)) 
                                      (1416 (lconst_0)) 
                                      (1417 (lconst_0)) 
                                      (1418 (lstore 24)) 
                                      (1420 (lstore 22)) 
                                      (1422 (astore 21)) 
                                      (1424 (astore 20)) 
                                      (1426 (goto 1060)) ;;to TAG_54
                                      (1429 (goto 1435)) ;;to TAG_55;;at TAG_60
                                      (1432 (pop)) ;;at TAG_56
                                      (1433 (aconst_null)) ;;at TAG_57
                                      (1434 (pop)) 
                                      (1435 (getstatic (fieldCP "const__29" "clojure.core$load_lib" (class "clojure.lang.Var")))) ;;at TAG_55
                                      (1438 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1441 (checkcast (class "clojure.lang.IFn"))) 
                                      (1444 (ldc_w 57)) ;;STRING:: ")\n"
                                      (1447 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (1452 (pop)) 
                                      (1453 (goto 1459)) ;;to TAG_61
                                      (1456 (pop)) ;;at TAG_51
                                      (1457 (aconst_null)) ;;at TAG_52
                                      (1458 (pop)) 
                                      (1459 (getstatic (fieldCP "const__7" "clojure.core$load_lib" (class "clojure.lang.Var")))) ;;at TAG_61
                                      (1462 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1465 (checkcast (class "clojure.lang.IFn"))) 
                                      (1468 (getstatic (fieldCP "const__46" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1471 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1474 (aload 4)) 
                                      (1476 (aconst_null)) 
                                      (1477 (astore 4)) 
                                      (1479 (getstatic (fieldCP "const__47" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1482 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1485 (checkcast (class "clojure.lang.IFn"))) 
                                      (1488 (getstatic (fieldCP "const__10" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1491 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1494 (aload 17)) 
                                      (1496 (aconst_null)) 
                                      (1497 (astore 17)) 
                                      (1499 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (1504 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (1509 (goto 1514)) ;;to TAG_62
                                      (1512 (pop)) ;;at TAG_49
                                      (1513 (aconst_null)) ;;at TAG_50
                                      (1514 (astore 19)) ;;at TAG_62
                                      (1516 (getstatic (fieldCP "const__48" "clojure.core$load_lib" (class "clojure.lang.Var")))) ;;at TAG_65
                                      (1519 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1522 (checkcast (class "clojure.lang.IFn"))) 
                                      (1525 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (1530 (pop)) 
                                      (1531 (goto 1554)) ;;to TAG_63
                                      (1534 (astore 29)) ;;at TAG_66
                                      (1536 (getstatic (fieldCP "const__48" "clojure.core$load_lib" (class "clojure.lang.Var")))) 
                                      (1539 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1542 (checkcast (class "clojure.lang.IFn"))) 
                                      (1545 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (1550 (pop)) 
                                      (1551 (aload 29)) 
                                      (1553 (athrow)) 
                                      (1554 (aload 19)) ;;at TAG_63
                                      (1556 (areturn)) 
                                      (endofcode 1557))
                                   (Exceptions 
                                     (handler 619 1516  1534 (class "java.lang.Throwable")))
                                   (StackMap )))
                        (method "getRequiredArity"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iconst_2))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 28)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 27 (0 . 0) (20))))  ;;to TAG_0;;to TAG_1
                                      (20 (aload_2)) ;;at TAG_1
                                      (21 (putstatic (fieldCP "__thunk__0__" "clojure.core$load_lib" (class "clojure.lang.ILookupThunk")))) 
                                      (24 (goto 27))  ;;to TAG_0
                                      (27 (return)) ;;at TAG_0
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$load_lib-class-table*
  (make-static-class-decls 
   *clojure.core$load_lib*))

(defconst *package-name-map* 
  ("clojure.core$load_lib" . "clojure"))

