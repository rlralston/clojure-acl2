; core$load_all$fn__4959$fn__4962-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:44 CDT 2014.
;

(defconst *clojure.core$load_all$fn__4959$fn__4962*
 (make-class-def
      '(class "clojure.core$load_all$fn__4959$fn__4962"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "load-one")
                        (STRING  "deref")
                        (STRING  "*loaded-libs*")
                        (STRING  "pop-thread-bindings"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "need_ns" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "lib" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "require" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 53)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "load-one"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$load_all$fn__4959$fn__4962" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "deref"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$load_all$fn__4959$fn__4962" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "*loaded-libs*"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$load_all$fn__4959$fn__4962" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "pop-thread-bindings"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.core$load_all$fn__4959$fn__4962" (class "clojure.lang.Var"))))
                                      (52 (return))
                                      (endofcode 53))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 20)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "need_ns" "clojure.core$load_all$fn__4959$fn__4962" (class "java.lang.Object"))))
                                      (9 (aload_0))
                                      (10 (aload_2))
                                      (11 (putfield (fieldCP "lib" "clojure.core$load_all$fn__4959$fn__4962" (class "java.lang.Object"))))
                                      (14 (aload_0))
                                      (15 (aload_3))
                                      (16 (putfield (fieldCP "require" "clojure.core$load_all$fn__4959$fn__4962" (class "java.lang.Object"))))
                                      (19 (return))
                                      (endofcode 20))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 3) (code_length . 101)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$load_all$fn__4959$fn__4962" (class "clojure.lang.Var")))) ;;at TAG_1
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_0)) 
                                      (10 (getfield (fieldCP "lib" "clojure.core$load_all$fn__4959$fn__4962" (class "java.lang.Object")))) 
                                      (13 (aload_0)) 
                                      (14 (aconst_null)) 
                                      (15 (putfield (fieldCP "lib" "clojure.core$load_all$fn__4959$fn__4962" (class "java.lang.Object")))) 
                                      (18 (aload_0)) 
                                      (19 (getfield (fieldCP "need_ns" "clojure.core$load_all$fn__4959$fn__4962" (class "java.lang.Object")))) 
                                      (22 (aload_0)) 
                                      (23 (aconst_null)) 
                                      (24 (putfield (fieldCP "need_ns" "clojure.core$load_all$fn__4959$fn__4962" (class "java.lang.Object")))) 
                                      (27 (aload_0)) 
                                      (28 (getfield (fieldCP "require" "clojure.core$load_all$fn__4959$fn__4962" (class "java.lang.Object")))) 
                                      (31 (aload_0)) 
                                      (32 (aconst_null)) 
                                      (33 (putfield (fieldCP "require" "clojure.core$load_all$fn__4959$fn__4962" (class "java.lang.Object")))) 
                                      (36 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (41 (pop)) 
                                      (42 (getstatic (fieldCP "const__1" "clojure.core$load_all$fn__4959$fn__4962" (class "clojure.lang.Var")))) 
                                      (45 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (48 (checkcast (class "clojure.lang.IFn"))) 
                                      (51 (getstatic (fieldCP "const__2" "clojure.core$load_all$fn__4959$fn__4962" (class "clojure.lang.Var")))) 
                                      (54 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (57 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (62 (astore_1)) 
                                      (63 (getstatic (fieldCP "const__3" "clojure.core$load_all$fn__4959$fn__4962" (class "clojure.lang.Var")))) ;;at TAG_2
                                      (66 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (69 (checkcast (class "clojure.lang.IFn"))) 
                                      (72 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (77 (pop)) 
                                      (78 (goto 99)) ;;to TAG_0
                                      (81 (astore_2)) ;;at TAG_3
                                      (82 (getstatic (fieldCP "const__3" "clojure.core$load_all$fn__4959$fn__4962" (class "clojure.lang.Var")))) 
                                      (85 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (88 (checkcast (class "clojure.lang.IFn"))) 
                                      (91 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (96 (pop)) 
                                      (97 (aload_2)) 
                                      (98 (athrow)) 
                                      (99 (aload_1)) ;;at TAG_0
                                      (100 (areturn)) 
                                      (endofcode 101))
                                   (Exceptions 
                                     (handler 0 63  81 (class "java.lang.Throwable")))
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$load_all$fn__4959$fn__4962-class-table*
  (make-static-class-decls 
   *clojure.core$load_all$fn__4959$fn__4962*))

(defconst *package-name-map* 
  ("clojure.core$load_all$fn__4959$fn__4962" . "clojure"))

