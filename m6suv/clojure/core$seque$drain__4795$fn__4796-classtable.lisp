; core$seque$drain__4795$fn__4796-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:45 CDT 2014.
;

(defconst *clojure.core$seque$drain__4795$fn__4796*
 (make-class-def
      '(class "clojure.core$seque$drain__4795$fn__4796"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "identical?")
                        (STRING  "deref")
                        (STRING  "send-off")
                        (STRING  "cons"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "NIL" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "fill" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "q" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "drain" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "agt" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 53)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "identical?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$seque$drain__4795$fn__4796" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "deref"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$seque$drain__4795$fn__4796" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "send-off"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$seque$drain__4795$fn__4796" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "cons"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.core$seque$drain__4795$fn__4796" (class "clojure.lang.Var"))))
                                      (52 (return))
                                      (endofcode 53))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 6) (code_length . 32)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "NIL" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object"))))
                                      (9 (aload_0))
                                      (10 (aload_2))
                                      (11 (putfield (fieldCP "fill" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object"))))
                                      (14 (aload_0))
                                      (15 (aload_3))
                                      (16 (putfield (fieldCP "q" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object"))))
                                      (19 (aload_0))
                                      (20 (aload 4))
                                      (22 (putfield (fieldCP "drain" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object"))))
                                      (25 (aload_0))
                                      (26 (aload 5))
                                      (28 (putfield (fieldCP "agt" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object"))))
                                      (31 (return))
                                      (endofcode 32))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 142)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "q" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object")))) 
                                      (4 (checkcast (class "java.util.concurrent.BlockingQueue"))) 
                                      (7 (invokeinterface (methodCP "take" "java.util.concurrent.BlockingQueue" () (class "java.lang.Object")) 1)) 
                                      (12 (astore_1)) 
                                      (13 (aload_1)) 
                                      (14 (aload_0)) 
                                      (15 (getfield (fieldCP "q" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object")))) 
                                      (18 (aload_0)) 
                                      (19 (aconst_null)) 
                                      (20 (putfield (fieldCP "q" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object")))) 
                                      (23 (invokestatic (methodCP "identical" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (26 (ifeq 58)) ;;to TAG_0
                                      (29 (getstatic (fieldCP "const__1" "clojure.core$seque$drain__4795$fn__4796" (class "clojure.lang.Var")))) 
                                      (32 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (35 (checkcast (class "clojure.lang.IFn"))) 
                                      (38 (aload_0)) 
                                      (39 (getfield (fieldCP "agt" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object")))) 
                                      (42 (aload_0)) 
                                      (43 (aconst_null)) 
                                      (44 (putfield (fieldCP "agt" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object")))) 
                                      (47 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (52 (pop)) 
                                      (53 (aconst_null)) 
                                      (54 (goto 141)) ;;to TAG_1
                                      (57 (pop)) 
                                      (58 (getstatic (fieldCP "const__2" "clojure.core$seque$drain__4795$fn__4796" (class "clojure.lang.Var")))) ;;at TAG_0
                                      (61 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (64 (checkcast (class "clojure.lang.IFn"))) 
                                      (67 (aload_0)) 
                                      (68 (getfield (fieldCP "agt" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object")))) 
                                      (71 (aload_0)) 
                                      (72 (aconst_null)) 
                                      (73 (putfield (fieldCP "agt" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object")))) 
                                      (76 (aload_0)) 
                                      (77 (getfield (fieldCP "fill" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object")))) 
                                      (80 (aload_0)) 
                                      (81 (aconst_null)) 
                                      (82 (putfield (fieldCP "fill" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object")))) 
                                      (85 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (90 (pop)) 
                                      (91 (getstatic (fieldCP "const__3" "clojure.core$seque$drain__4795$fn__4796" (class "clojure.lang.Var")))) 
                                      (94 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (97 (checkcast (class "clojure.lang.IFn"))) 
                                      (100 (aload_1)) 
                                      (101 (aload_0)) 
                                      (102 (getfield (fieldCP "NIL" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object")))) 
                                      (105 (aload_0)) 
                                      (106 (aconst_null)) 
                                      (107 (putfield (fieldCP "NIL" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object")))) 
                                      (110 (invokestatic (methodCP "identical" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (113 (ifeq 121))  ;;to TAG_2
                                      (116 (aconst_null)) 
                                      (117 (goto 124)) ;;to TAG_3
                                      (120 (pop)) 
                                      (121 (aload_1)) ;;at TAG_2
                                      (122 (aconst_null)) 
                                      (123 (astore_1)) 
                                      (124 (aload_0)) ;;at TAG_3
                                      (125 (getfield (fieldCP "drain" "clojure.core$seque$drain__4795$fn__4796" (class "java.lang.Object")))) 
                                      (128 (checkcast (class "clojure.lang.IFn"))) 
                                      (131 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (136 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (141 (areturn)) ;;at TAG_1
                                      (endofcode 142))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$seque$drain__4795$fn__4796-class-table*
  (make-static-class-decls 
   *clojure.core$seque$drain__4795$fn__4796*))

(defconst *package-name-map* 
  ("clojure.core$seque$drain__4795$fn__4796" . "clojure"))

