; core$subseq-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:45 CDT 2014.
;

(defconst *clojure.core$subseq*
 (make-class-def
      '(class "clojure.core$subseq"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "mk-bound-fn")
                        (STRING  ">")
                        (STRING  ">=")
                        (STRING  "nth")
                        (STRING  "next")
                        (STRING  "take-while"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 86)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "mk-bound-fn"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$subseq" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: ">"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$subseq" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: ">="
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$subseq" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "nth"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.core$subseq" (class "clojure.lang.Var"))))
                                      (52 (lconst_0))
                                      (53 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (56 (putstatic (fieldCP "const__4" "clojure.core$subseq" (class "java.lang.Object"))))
                                      (59 (ldc 0))        ;;STRING:: "clojure.core"
                                      (61 (ldc 5))        ;;STRING:: "next"
                                      (63 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (66 (checkcast (class "clojure.lang.Var")))
                                      (69 (putstatic (fieldCP "const__5" "clojure.core$subseq" (class "clojure.lang.Var"))))
                                      (72 (ldc 0))        ;;STRING:: "clojure.core"
                                      (74 (ldc 6))        ;;STRING:: "take-while"
                                      (76 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (79 (checkcast (class "clojure.lang.Var")))
                                      (82 (putstatic (fieldCP "const__6" "clojure.core$subseq" (class "clojure.lang.Var"))))
                                      (85 (return))
                                      (endofcode 86))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 10) (code_length . 178)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (checkcast (class "clojure.lang.Sorted"))) 
                                      (4 (aload_3)) 
                                      (5 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (8 (checkcast (class "java.lang.Boolean"))) 
                                      (11 (invokevirtual (methodCP "booleanValue" "java.lang.Boolean" () boolean))) 
                                      (14 (invokeinterface (methodCP "seqFrom" "clojure.lang.Sorted" ((class "java.lang.Object") boolean) (class "clojure.lang.ISeq")) 3)) 
                                      (19 (astore 6)) 
                                      (21 (aload 6)) 
                                      (23 (dup)) 
                                      (24 (ifnull 175)) ;;to TAG_0
                                      (27 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (30 (if_acmpeq 176)) ;;to TAG_1
                                      (33 (aload 6)) 
                                      (35 (aconst_null)) 
                                      (36 (astore 6)) 
                                      (38 (astore 7)) 
                                      (40 (aload 7)) 
                                      (42 (lconst_0)) 
                                      (43 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (46 (aconst_null)) 
                                      (47 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (50 (astore 8)) 
                                      (52 (aload 7)) 
                                      (54 (aconst_null)) 
                                      (55 (astore 7)) 
                                      (57 (astore 9)) 
                                      (59 (getstatic (fieldCP "const__6" "clojure.core$subseq" (class "clojure.lang.Var")))) 
                                      (62 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (65 (checkcast (class "clojure.lang.IFn"))) 
                                      (68 (getstatic (fieldCP "const__0" "clojure.core$subseq" (class "clojure.lang.Var")))) 
                                      (71 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (74 (checkcast (class "clojure.lang.IFn"))) 
                                      (77 (aload_1)) 
                                      (78 (aload 4)) 
                                      (80 (aconst_null)) 
                                      (81 (astore 4)) 
                                      (83 (aload 5)) 
                                      (85 (aconst_null)) 
                                      (86 (astore 5)) 
                                      (88 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (93 (getstatic (fieldCP "const__0" "clojure.core$subseq" (class "clojure.lang.Var")))) 
                                      (96 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (99 (checkcast (class "clojure.lang.IFn"))) 
                                      (102 (aload_1)) 
                                      (103 (aconst_null)) 
                                      (104 (astore_1)) 
                                      (105 (aload_2)) 
                                      (106 (aconst_null)) 
                                      (107 (astore_2)) 
                                      (108 (aload_3)) 
                                      (109 (aconst_null)) 
                                      (110 (astore_3)) 
                                      (111 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (116 (checkcast (class "clojure.lang.IFn"))) 
                                      (119 (aload 8)) 
                                      (121 (aconst_null)) 
                                      (122 (astore 8)) 
                                      (124 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (129 (dup)) 
                                      (130 (ifnull 147))  ;;to TAG_2
                                      (133 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (136 (if_acmpeq 148)) ;;to TAG_3
                                      (139 (aload 9)) 
                                      (141 (aconst_null)) 
                                      (142 (astore 9)) 
                                      (144 (goto 167)) ;;to TAG_4
                                      (147 (pop)) ;;at TAG_2
                                      (148 (getstatic (fieldCP "const__5" "clojure.core$subseq" (class "clojure.lang.Var")))) ;;at TAG_3
                                      (151 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (154 (checkcast (class "clojure.lang.IFn"))) 
                                      (157 (aload 9)) 
                                      (159 (aconst_null)) 
                                      (160 (astore 9)) 
                                      (162 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (167 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) ;;at TAG_4
                                      (172 (goto 177)) ;;to TAG_5
                                      (175 (pop)) ;;at TAG_0
                                      (176 (aconst_null)) ;;at TAG_1
                                      (177 (areturn)) ;;at TAG_5
                                      (endofcode 178))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 9) (code_length . 233)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$subseq" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_1)) 
                                      (10 (aload_2)) 
                                      (11 (aload_3)) 
                                      (12 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (17 (astore 4)) 
                                      (19 (iconst_2)) 
                                      (20 (anewarray (class "java.lang.Object"))) 
                                      (23 (dup)) 
                                      (24 (iconst_0)) 
                                      (25 (getstatic (fieldCP "const__1" "clojure.core$subseq" (class "clojure.lang.Var")))) 
                                      (28 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (31 (aastore)) 
                                      (32 (dup)) 
                                      (33 (iconst_1)) 
                                      (34 (getstatic (fieldCP "const__2" "clojure.core$subseq" (class "clojure.lang.Var")))) 
                                      (37 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (40 (aastore)) 
                                      (41 (invokestatic (methodCP "set" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentSet")))) 
                                      (44 (checkcast (class "clojure.lang.IFn"))) 
                                      (47 (aload_2)) 
                                      (48 (aconst_null)) 
                                      (49 (astore_2)) 
                                      (50 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (55 (dup)) 
                                      (56 (ifnull 192)) ;;to TAG_0
                                      (59 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (62 (if_acmpeq 193))  ;;to TAG_1
                                      (65 (aload_1)) 
                                      (66 (aconst_null)) 
                                      (67 (astore_1)) 
                                      (68 (checkcast (class "clojure.lang.Sorted"))) 
                                      (71 (aload_3)) 
                                      (72 (aconst_null)) 
                                      (73 (astore_3)) 
                                      (74 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (77 (checkcast (class "java.lang.Boolean"))) 
                                      (80 (invokevirtual (methodCP "booleanValue" "java.lang.Boolean" () boolean))) 
                                      (83 (invokeinterface (methodCP "seqFrom" "clojure.lang.Sorted" ((class "java.lang.Object") boolean) (class "clojure.lang.ISeq")) 3)) 
                                      (88 (astore 5)) 
                                      (90 (aload 5)) 
                                      (92 (dup)) 
                                      (93 (ifnull 187)) ;;to TAG_2
                                      (96 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (99 (if_acmpeq 188)) ;;to TAG_3
                                      (102 (aload 5)) 
                                      (104 (aconst_null)) 
                                      (105 (astore 5)) 
                                      (107 (astore 6)) 
                                      (109 (aload 6)) 
                                      (111 (lconst_0)) 
                                      (112 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (115 (aconst_null)) 
                                      (116 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (119 (astore 7)) 
                                      (121 (aload 6)) 
                                      (123 (aconst_null)) 
                                      (124 (astore 6)) 
                                      (126 (astore 8)) 
                                      (128 (aload 4)) 
                                      (130 (aconst_null)) 
                                      (131 (astore 4)) 
                                      (133 (checkcast (class "clojure.lang.IFn"))) 
                                      (136 (aload 7)) 
                                      (138 (aconst_null)) 
                                      (139 (astore 7)) 
                                      (141 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (146 (dup)) 
                                      (147 (ifnull 164)) ;;to TAG_4
                                      (150 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (153 (if_acmpeq 165)) ;;to TAG_5
                                      (156 (aload 8)) 
                                      (158 (aconst_null)) 
                                      (159 (astore 8)) 
                                      (161 (goto 184)) ;;to TAG_6
                                      (164 (pop)) ;;at TAG_4
                                      (165 (getstatic (fieldCP "const__5" "clojure.core$subseq" (class "clojure.lang.Var")))) ;;at TAG_5
                                      (168 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (171 (checkcast (class "clojure.lang.IFn"))) 
                                      (174 (aload 8)) 
                                      (176 (aconst_null)) 
                                      (177 (astore 8)) 
                                      (179 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (184 (goto 189)) ;;to TAG_7;;at TAG_6
                                      (187 (pop)) ;;at TAG_2
                                      (188 (aconst_null)) ;;at TAG_3
                                      (189 (goto 232)) ;;to TAG_8;;at TAG_7
                                      (192 (pop)) ;;at TAG_0
                                      (193 (getstatic (fieldCP "const__6" "clojure.core$subseq" (class "clojure.lang.Var")))) ;;at TAG_1
                                      (196 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (199 (checkcast (class "clojure.lang.IFn"))) 
                                      (202 (aload 4)) 
                                      (204 (aconst_null)) 
                                      (205 (astore 4)) 
                                      (207 (aload_1)) 
                                      (208 (aconst_null)) 
                                      (209 (astore_1)) 
                                      (210 (checkcast (class "clojure.lang.Sorted"))) 
                                      (213 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (216 (checkcast (class "java.lang.Boolean"))) 
                                      (219 (invokevirtual (methodCP "booleanValue" "java.lang.Boolean" () boolean))) 
                                      (222 (invokeinterface (methodCP "seq" "clojure.lang.Sorted" (boolean) (class "clojure.lang.ISeq")) 2)) 
                                      (227 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (232 (areturn)) ;;at TAG_8
                                      (endofcode 233))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$subseq-class-table*
  (make-static-class-decls 
   *clojure.core$subseq*))

(defconst *package-name-map* 
  ("clojure.core$subseq" . "clojure"))

