; test$fn__7054-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:58 CDT 2014.
;

(defconst *clojure.test$fn__7054*
 (make-class-def
      '(class "clojure.test$fn__7054"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.test")
                        (STRING  "report")
                        (STRING  "file")
                        (STRING  "column")
                        (STRING  "line")
                        (STRING  "added")
                        (STRING  "dynamic")
                        (STRING  "doc")
                        (STRING  "1.1")
                        (STRING  "Generic reporting function, may be overridden to plug in\n   different report formats (e.g., TAP, JUnit).  Assertions such as\n   \nis\n call \nreport\n to indicate results.  The argument given to\n   \nreport\n will be a map with a :type key.  See the documentation at\n   the top of test_is.clj for more information on the types of\n   arguments for \nreport\n.")
                        (STRING  "clojure/test.clj")
                        (STRING  "clojure.core")
                        (STRING  "instance?")
                        (STRING  "deref")
                        (STRING  "type")
                        (STRING  "default")
                        (STRING  "global-hierarchy"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 0) (code_length . 387)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.test"
                                      (2 (ldc 1))         ;;STRING:: "report"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.test$fn__7054" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "file"
                                      (16 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (19 (checkcast (class "clojure.lang.Keyword")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.test$fn__7054" (class "clojure.lang.Keyword"))))
                                      (25 (aconst_null))
                                      (26 (ldc 3))        ;;STRING:: "column"
                                      (28 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (31 (checkcast (class "clojure.lang.Keyword")))
                                      (34 (putstatic (fieldCP "const__2" "clojure.test$fn__7054" (class "clojure.lang.Keyword"))))
                                      (37 (iconst_1))
                                      (38 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (41 (putstatic (fieldCP "const__3" "clojure.test$fn__7054" (class "java.lang.Object"))))
                                      (44 (aconst_null))
                                      (45 (ldc 4))        ;;STRING:: "line"
                                      (47 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (50 (checkcast (class "clojure.lang.Keyword")))
                                      (53 (putstatic (fieldCP "const__4" "clojure.test$fn__7054" (class "clojure.lang.Keyword"))))
                                      (56 (sipush 324))
                                      (59 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (62 (putstatic (fieldCP "const__5" "clojure.test$fn__7054" (class "java.lang.Object"))))
                                      (65 (aconst_null))
                                      (66 (ldc 5))        ;;STRING:: "added"
                                      (68 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (71 (checkcast (class "clojure.lang.Keyword")))
                                      (74 (putstatic (fieldCP "const__6" "clojure.test$fn__7054" (class "clojure.lang.Keyword"))))
                                      (77 (aconst_null))
                                      (78 (ldc 6))        ;;STRING:: "dynamic"
                                      (80 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (83 (checkcast (class "clojure.lang.Keyword")))
                                      (86 (putstatic (fieldCP "const__7" "clojure.test$fn__7054" (class "clojure.lang.Keyword"))))
                                      (89 (aconst_null))
                                      (90 (ldc 7))        ;;STRING:: "doc"
                                      (92 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (95 (checkcast (class "clojure.lang.Keyword")))
                                      (98 (putstatic (fieldCP "const__8" "clojure.test$fn__7054" (class "clojure.lang.Keyword"))))
                                      (101 (bipush 12))
                                      (103 (anewarray (class "java.lang.Object")))
                                      (106 (dup))
                                      (107 (iconst_0))
                                      (108 (aconst_null))
                                      (109 (ldc 6))       ;;STRING:: "dynamic"
                                      (111 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (114 (aastore))
                                      (115 (dup))
                                      (116 (iconst_1))
                                      (117 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (120 (aastore))
                                      (121 (dup))
                                      (122 (iconst_2))
                                      (123 (aconst_null))
                                      (124 (ldc 3))       ;;STRING:: "column"
                                      (126 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (129 (aastore))
                                      (130 (dup))
                                      (131 (iconst_3))
                                      (132 (iconst_1))
                                      (133 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (136 (aastore))
                                      (137 (dup))
                                      (138 (iconst_4))
                                      (139 (aconst_null))
                                      (140 (ldc 5))       ;;STRING:: "added"
                                      (142 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (145 (aastore))
                                      (146 (dup))
                                      (147 (iconst_5))
                                      (148 (ldc 8))       ;;STRING:: "1.1"
                                      (150 (aastore))
                                      (151 (dup))
                                      (152 (bipush 6))
                                      (154 (aconst_null))
                                      (155 (ldc 7))       ;;STRING:: "doc"
                                      (157 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (160 (aastore))
                                      (161 (dup))
                                      (162 (bipush 7))
                                      (164 (ldc 9))       ;;STRING:: "Generic reporting function, may be overridden to plug in\n   different report formats (e.g., TAP, JUnit).  Assertions such as\n   \nis\n call \nreport\n to indicate results.  The argument given to\n   \nreport\n will be a map with a :type key.  See the documentation at\n   the top of test_is.clj for more information on the types of\n   arguments for \nreport\n."
                                      (166 (aastore))
                                      (167 (dup))
                                      (168 (bipush 8))
                                      (170 (aconst_null))
                                      (171 (ldc 4))       ;;STRING:: "line"
                                      (173 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (176 (aastore))
                                      (177 (dup))
                                      (178 (bipush 9))
                                      (180 (sipush 324))
                                      (183 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (186 (aastore))
                                      (187 (dup))
                                      (188 (bipush 10))
                                      (190 (aconst_null))
                                      (191 (ldc 2))       ;;STRING:: "file"
                                      (193 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (196 (aastore))
                                      (197 (dup))
                                      (198 (bipush 11))
                                      (200 (ldc 10))      ;;STRING:: "clojure/test.clj"
                                      (202 (aastore))
                                      (203 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (206 (checkcast (class "clojure.lang.AFn")))
                                      (209 (putstatic (fieldCP "const__9" "clojure.test$fn__7054" (class "clojure.lang.AFn"))))
                                      (212 (ldc 11))      ;;STRING:: "clojure.core"
                                      (214 (ldc 12))      ;;STRING:: "instance?"
                                      (216 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (219 (checkcast (class "clojure.lang.Var")))
                                      (222 (putstatic (fieldCP "const__10" "clojure.test$fn__7054" (class "clojure.lang.Var"))))
                                      (225 (ldc 11))      ;;STRING:: "clojure.core"
                                      (227 (ldc 13))      ;;STRING:: "deref"
                                      (229 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (232 (checkcast (class "clojure.lang.Var")))
                                      (235 (putstatic (fieldCP "const__11" "clojure.test$fn__7054" (class "clojure.lang.Var"))))
                                      (238 (bipush 12))
                                      (240 (anewarray (class "java.lang.Object")))
                                      (243 (dup))
                                      (244 (iconst_0))
                                      (245 (aconst_null))
                                      (246 (ldc 6))       ;;STRING:: "dynamic"
                                      (248 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (251 (aastore))
                                      (252 (dup))
                                      (253 (iconst_1))
                                      (254 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (257 (aastore))
                                      (258 (dup))
                                      (259 (iconst_2))
                                      (260 (aconst_null))
                                      (261 (ldc 3))       ;;STRING:: "column"
                                      (263 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (266 (aastore))
                                      (267 (dup))
                                      (268 (iconst_3))
                                      (269 (iconst_1))
                                      (270 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (273 (aastore))
                                      (274 (dup))
                                      (275 (iconst_4))
                                      (276 (aconst_null))
                                      (277 (ldc 5))       ;;STRING:: "added"
                                      (279 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (282 (aastore))
                                      (283 (dup))
                                      (284 (iconst_5))
                                      (285 (ldc 8))       ;;STRING:: "1.1"
                                      (287 (aastore))
                                      (288 (dup))
                                      (289 (bipush 6))
                                      (291 (aconst_null))
                                      (292 (ldc 7))       ;;STRING:: "doc"
                                      (294 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (297 (aastore))
                                      (298 (dup))
                                      (299 (bipush 7))
                                      (301 (ldc 9))       ;;STRING:: "Generic reporting function, may be overridden to plug in\n   different report formats (e.g., TAP, JUnit).  Assertions such as\n   \nis\n call \nreport\n to indicate results.  The argument given to\n   \nreport\n will be a map with a :type key.  See the documentation at\n   the top of test_is.clj for more information on the types of\n   arguments for \nreport\n."
                                      (303 (aastore))
                                      (304 (dup))
                                      (305 (bipush 8))
                                      (307 (aconst_null))
                                      (308 (ldc 4))       ;;STRING:: "line"
                                      (310 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (313 (aastore))
                                      (314 (dup))
                                      (315 (bipush 9))
                                      (317 (sipush 324))
                                      (320 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (323 (aastore))
                                      (324 (dup))
                                      (325 (bipush 10))
                                      (327 (aconst_null))
                                      (328 (ldc 2))       ;;STRING:: "file"
                                      (330 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (333 (aastore))
                                      (334 (dup))
                                      (335 (bipush 11))
                                      (337 (ldc 10))      ;;STRING:: "clojure/test.clj"
                                      (339 (aastore))
                                      (340 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (343 (checkcast (class "clojure.lang.AFn")))
                                      (346 (putstatic (fieldCP "const__12" "clojure.test$fn__7054" (class "clojure.lang.AFn"))))
                                      (349 (aconst_null))
                                      (350 (ldc 14))      ;;STRING:: "type"
                                      (352 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (355 (checkcast (class "clojure.lang.Keyword")))
                                      (358 (putstatic (fieldCP "const__13" "clojure.test$fn__7054" (class "clojure.lang.Keyword"))))
                                      (361 (aconst_null))
                                      (362 (ldc 15))      ;;STRING:: "default"
                                      (364 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (367 (checkcast (class "clojure.lang.Keyword")))
                                      (370 (putstatic (fieldCP "const__14" "clojure.test$fn__7054" (class "clojure.lang.Keyword"))))
                                      (373 (ldc 11))      ;;STRING:: "clojure.core"
                                      (375 (ldc 16))      ;;STRING:: "global-hierarchy"
                                      (377 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (380 (checkcast (class "clojure.lang.Var")))
                                      (383 (putstatic (fieldCP "const__15" "clojure.test$fn__7054" (class "clojure.lang.Var"))))
                                      (386 (return))
                                      (endofcode 387))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 8) (max_locals . 3) (code_length . 112)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.test$fn__7054" (class "clojure.lang.Var")))) 
                                      (3 (iconst_1)) 
                                      (4 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" (boolean) (class "clojure.lang.Var")))) 
                                      (7 (dup)) 
                                      (8 (getstatic (fieldCP "const__9" "clojure.test$fn__7054" (class "clojure.lang.AFn")))) 
                                      (11 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (14 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (17 (astore_1)) 
                                      (18 (aload_1)) 
                                      (19 (checkcast (class "clojure.lang.Var"))) 
                                      (22 (invokevirtual (methodCP "hasRoot" "clojure.lang.Var" () boolean))) 
                                      (25 (istore_2)) 
                                      (26 (iload_2)) 
                                      (27 (ifeq 54)) ;;to TAG_0
                                      (30 (getstatic (fieldCP "const__11" "clojure.test$fn__7054" (class "clojure.lang.Var")))) 
                                      (33 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (36 (checkcast (class "clojure.lang.IFn"))) 
                                      (39 (aload_1)) 
                                      (40 (aconst_null)) 
                                      (41 (astore_1)) 
                                      (42 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (47 (instanceof (class "clojure.lang.MultiFn"))) 
                                      (50 (goto 55)) ;;to TAG_1
                                      (53 (pop)) 
                                      (54 (iload_2)) ;;at TAG_0
                                      (55 (ifeq 63))  ;;to TAG_2;;at TAG_1
                                      (58 (aconst_null)) 
                                      (59 (goto 111)) ;;to TAG_3
                                      (62 (pop)) 
                                      (63 (getstatic (fieldCP "const__0" "clojure.test$fn__7054" (class "clojure.lang.Var")))) ;;at TAG_2
                                      (66 (iconst_1)) 
                                      (67 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" (boolean) (class "clojure.lang.Var")))) 
                                      (70 (dup)) 
                                      (71 (getstatic (fieldCP "const__12" "clojure.test$fn__7054" (class "clojure.lang.AFn")))) 
                                      (74 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (77 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (80 (dup)) 
                                      (81 (new (class "clojure.lang.MultiFn"))) 
                                      (84 (dup)) 
                                      (85 (ldc 1)) ;;STRING:: "report"
                                      (87 (checkcast (class "java.lang.String"))) 
                                      (90 (getstatic (fieldCP "const__13" "clojure.test$fn__7054" (class "clojure.lang.Keyword")))) 
                                      (93 (checkcast (class "clojure.lang.IFn"))) 
                                      (96 (getstatic (fieldCP "const__14" "clojure.test$fn__7054" (class "clojure.lang.Keyword")))) 
                                      (99 (getstatic (fieldCP "const__15" "clojure.test$fn__7054" (class "clojure.lang.Var")))) 
                                      (102 (checkcast (class "clojure.lang.IRef"))) 
                                      (105 (invokespecial (methodCP "<init>" "clojure.lang.MultiFn" ((class "java.lang.String") (class "clojure.lang.IFn") (class "java.lang.Object") (class "clojure.lang.IRef")) void))) 
                                      (108 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (111 (areturn)) ;;at TAG_3
                                      (endofcode 112))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *test$fn__7054-class-table*
  (make-static-class-decls 
   *clojure.test$fn__7054*))

(defconst *package-name-map* 
  ("clojure.test$fn__7054" . "clojure"))

