; RT-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:53 CDT 2014.
;

(include-book "../../model-translation")

(defconst *clojure.lang.RT*
 (make-class-def
      '(class "clojure.lang.RT"
            "java.lang.Object"
            (constant_pool
                        (STRING  "__init")
                        (STRING  "true")
                        (STRING  "false")
                        (STRING  "unknown")
                        (STRING  "--")
                        (STRING  "Context classloader is not a DynamicClassLoader")
                        (STRING  "Could not locate Clojure resource on classpath: ")
                        (STRING  "No need to call RT.init() anymore")
                        (STRING  "jar")
                        (STRING  "/")
                        (STRING  ".class")
                        (STRING  ".clj")
                        (STRING  "Could not locate %s or %s on classpath: ")
                        (STRING  "clojure/core")
                        (STRING  "user")
                        (STRING  "clojure.core")
                        (STRING  "in-ns")
                        (STRING  "refer")
                        (STRING  "user.clj")
                        (STRING  "Don\nt know how to create ISeq from: ")
                        (STRING  "count not supported on this type: ")
                        (STRING  "contains? not supported on type: ")
                        (STRING  "Malformed keyword argslist")
                        (STRING  "nth not supported on this type: ")
                        (LONG 65535)
                        (STRING  "Value out of range for char: ")
                        (FLOAT "65535.0")
                        (DOUBLE "65535.0")
                        (LONG -128)
                        (LONG 127)
                        (STRING  "Value out of range for byte: ")
                        (FLOAT "-128.0")
                        (FLOAT "127.0")
                        (DOUBLE "-128.0")
                        (DOUBLE "127.0")
                        (LONG -32768)
                        (LONG 32767)
                        (STRING  "Value out of range for short: ")
                        (FLOAT "-32768.0")
                        (FLOAT "32767.0")
                        (DOUBLE "-32768.0")
                        (DOUBLE "32767.0")
                        (FLOAT "-2.14748365E9")
                        (FLOAT "2.14748365E9")
                        (STRING  "Value out of range for int: ")
                        (DOUBLE "-2.147483648E9")
                        (DOUBLE "2.147483647E9")
                        (STRING  "Value out of range for long: ")
                        (FLOAT "-9.223372E18")
                        (FLOAT "9.223372E18")
                        (DOUBLE "-9.223372036854776E18")
                        (DOUBLE "9.223372036854776E18")
                        (DOUBLE "-3.4028234663852886E38")
                        (DOUBLE "3.4028234663852886E38")
                        (STRING  "Value out of range for float: ")
                        (STRING  "Unable to convert: ")
                        (STRING  " to Object[]")
                        (STRING  "#^")
                        (STRING  "nil")
                        (STRING  "\\n")
                        (STRING  "\\t")
                        (STRING  "\\r")
                        (STRING  "\\\"")
                        (STRING  "\\\\")
                        (STRING  "\\f")
                        (STRING  "\\b")
                        (STRING  ", ")
                        (STRING  "#{")
                        (STRING  " ")
                        (STRING  "newline")
                        (STRING  "tab")
                        (STRING  "space")
                        (STRING  "backspace")
                        (STRING  "formfeed")
                        (STRING  "return")
                        (STRING  "#=")
                        (STRING  "BIGINT")
                        (STRING  "#=(var ")
                        (STRING  ")")
                        (STRING  "#\"")
                        (STRING  "\"")
                        (STRING  "null")
                        (STRING  "Missing argument")
                        (STRING  "~}")
                        (STRING  "Missing ~}")
                        (STRING  "Unsupported ~ directive: ")
                        (STRING  "Boolean")
                        (STRING  "Byte")
                        (STRING  "Character")
                        (STRING  "Class")
                        (STRING  "ClassLoader")
                        (STRING  "Compiler")
                        (STRING  "Double")
                        (STRING  "Enum")
                        (STRING  "Float")
                        (STRING  "InheritableThreadLocal")
                        (STRING  "Integer")
                        (STRING  "Long")
                        (STRING  "Math")
                        (STRING  "Number")
                        (STRING  "Object")
                        (STRING  "Package")
                        (STRING  "Process")
                        (STRING  "ProcessBuilder")
                        (STRING  "Runtime")
                        (STRING  "RuntimePermission")
                        (STRING  "SecurityManager")
                        (STRING  "Short")
                        (STRING  "StackTraceElement")
                        (STRING  "StrictMath")
                        (STRING  "String")
                        (STRING  "StringBuffer")
                        (STRING  "StringBuilder")
                        (STRING  "System")
                        (STRING  "Thread")
                        (STRING  "ThreadGroup")
                        (STRING  "ThreadLocal")
                        (STRING  "Throwable")
                        (STRING  "Void")
                        (STRING  "Appendable")
                        (STRING  "CharSequence")
                        (STRING  "Cloneable")
                        (STRING  "Comparable")
                        (STRING  "Iterable")
                        (STRING  "Readable")
                        (STRING  "Runnable")
                        (STRING  "Callable")
                        (STRING  "BigInteger")
                        (STRING  "BigDecimal")
                        (STRING  "ArithmeticException")
                        (STRING  "ArrayIndexOutOfBoundsException")
                        (STRING  "ArrayStoreException")
                        (STRING  "ClassCastException")
                        (STRING  "ClassNotFoundException")
                        (STRING  "CloneNotSupportedException")
                        (STRING  "EnumConstantNotPresentException")
                        (STRING  "Exception")
                        (STRING  "IllegalAccessException")
                        (STRING  "IllegalArgumentException")
                        (STRING  "IllegalMonitorStateException")
                        (STRING  "IllegalStateException")
                        (STRING  "IllegalThreadStateException")
                        (STRING  "IndexOutOfBoundsException")
                        (STRING  "InstantiationException")
                        (STRING  "InterruptedException")
                        (STRING  "NegativeArraySizeException")
                        (STRING  "NoSuchFieldException")
                        (STRING  "NoSuchMethodException")
                        (STRING  "NullPointerException")
                        (STRING  "NumberFormatException")
                        (STRING  "RuntimeException")
                        (STRING  "SecurityException")
                        (STRING  "StringIndexOutOfBoundsException")
                        (STRING  "TypeNotPresentException")
                        (STRING  "UnsupportedOperationException")
                        (STRING  "AbstractMethodError")
                        (STRING  "AssertionError")
                        (STRING  "ClassCircularityError")
                        (STRING  "ClassFormatError")
                        (STRING  "Error")
                        (STRING  "ExceptionInInitializerError")
                        (STRING  "IllegalAccessError")
                        (STRING  "IncompatibleClassChangeError")
                        (STRING  "InstantiationError")
                        (STRING  "InternalError")
                        (STRING  "LinkageError")
                        (STRING  "NoClassDefFoundError")
                        (STRING  "NoSuchFieldError")
                        (STRING  "NoSuchMethodError")
                        (STRING  "OutOfMemoryError")
                        (STRING  "StackOverflowError")
                        (STRING  "ThreadDeath")
                        (STRING  "UnknownError")
                        (STRING  "UnsatisfiedLinkError")
                        (STRING  "UnsupportedClassVersionError")
                        (STRING  "VerifyError")
                        (STRING  "VirtualMachineError")
                        (STRING  "Thread$UncaughtExceptionHandler")
                        (STRING  "Thread$State")
                        (STRING  "Deprecated")
                        (STRING  "Override")
                        (STRING  "SuppressWarnings")
                        (STRING  "UTF-8")
                        (STRING  "*out*")
                        (STRING  "*in*")
                        (STRING  "*err*")
                        (STRING  "tag")
                        (STRING  "const")
                        (STRING  "*agent*")
                        (STRING  "clojure.read.eval")
                        (STRING  "*read-eval*")
                        (STRING  "*data-readers*")
                        (STRING  "*default-data-reader-fn*")
                        (STRING  "default-data-readers")
                        (STRING  "*assert*")
                        (STRING  "*math-context*")
                        (STRING  "line")
                        (STRING  "column")
                        (STRING  "file")
                        (STRING  "declared")
                        (STRING  "doc")
                        (STRING  "*use-context-classloader*")
                        (STRING  "*unchecked-math*")
                        (STRING  "load-file")
                        (STRING  "ns")
                        (STRING  "identical?")
                        (STRING  "*command-line-args*")
                        (STRING  "*ns*")
                        (STRING  "*flush-on-newline*")
                        (STRING  "*print-meta*")
                        (STRING  "*print-readably*")
                        (STRING  "*print-dup*")
                        (STRING  "*warn-on-reflection*")
                        (STRING  "*allow-unresolved-vars*")
                        (STRING  "*fn-loader*")
                        (STRING  "print-initialized")
                        (STRING  "pr-on")
                        (STRING  "arglists")
                        (STRING  "name")
                        (STRING  "java.io.Writer")
                        (STRING  "clojure.lang.Namespace")
                        (STRING  "The agent currently running an action on this thread, else nil")
                        (STRING  "clojure.lang.Agent")
                        (STRING  "java.math.MathContext")
                        (STRING  "Sets *ns* to the namespace named by the symbol, creating it if needed.")
                        (STRING  "Sequentially read and evaluate the set of forms contained in the file."))
            (fields
                        (field "T" (class "java.lang.Boolean") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "F" (class "java.lang.Boolean") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "LOADER_SUFFIX" (class "java.lang.String") (accessflags  *class*  *final*  *public*  *static* ) 0)
                        (field "DEFAULT_IMPORTS" (class "clojure.lang.IPersistentMap") (accessflags  *class*  *final*  *static* ) -1)
                        (field "UTF8" (class "java.nio.charset.Charset") (accessflags  *class*  *public*  *static* ) -1)
                        (field "CLOJURE_NS" (class "clojure.lang.Namespace") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "OUT" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "IN" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "ERR" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "TAG_KEY" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *static* ) -1)
                        (field "CONST_KEY" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *static* ) -1)
                        (field "AGENT" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "readeval" (class "java.lang.Object") (accessflags  *class*  *static* ) -1)
                        (field "READEVAL" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "DATA_READERS" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "DEFAULT_DATA_READER_FN" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "DEFAULT_DATA_READERS" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "ASSERT" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "MATH_CONTEXT" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "LINE_KEY" (class "clojure.lang.Keyword") (accessflags  *class*  *static* ) -1)
                        (field "COLUMN_KEY" (class "clojure.lang.Keyword") (accessflags  *class*  *static* ) -1)
                        (field "FILE_KEY" (class "clojure.lang.Keyword") (accessflags  *class*  *static* ) -1)
                        (field "DECLARED_KEY" (class "clojure.lang.Keyword") (accessflags  *class*  *static* ) -1)
                        (field "DOC_KEY" (class "clojure.lang.Keyword") (accessflags  *class*  *static* ) -1)
                        (field "USE_CONTEXT_CLASSLOADER" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "UNCHECKED_MATH" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "LOAD_FILE" (class "clojure.lang.Symbol") (accessflags  *class*  *final*  *static* ) -1)
                        (field "IN_NAMESPACE" (class "clojure.lang.Symbol") (accessflags  *class*  *final*  *static* ) -1)
                        (field "NAMESPACE" (class "clojure.lang.Symbol") (accessflags  *class*  *final*  *static* ) -1)
                        (field "IDENTICAL" (class "clojure.lang.Symbol") (accessflags  *class*  *final*  *static* ) -1)
                        (field "CMD_LINE_ARGS" (class "clojure.lang.Var") (accessflags  *class*  *final*  *static* ) -1)
                        (field "CURRENT_NS" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "FLUSH_ON_NEWLINE" (class "clojure.lang.Var") (accessflags  *class*  *final*  *static* ) -1)
                        (field "PRINT_META" (class "clojure.lang.Var") (accessflags  *class*  *final*  *static* ) -1)
                        (field "PRINT_READABLY" (class "clojure.lang.Var") (accessflags  *class*  *final*  *static* ) -1)
                        (field "PRINT_DUP" (class "clojure.lang.Var") (accessflags  *class*  *final*  *static* ) -1)
                        (field "WARN_ON_REFLECTION" (class "clojure.lang.Var") (accessflags  *class*  *final*  *static* ) -1)
                        (field "ALLOW_UNRESOLVED_VARS" (class "clojure.lang.Var") (accessflags  *class*  *final*  *static* ) -1)
                        (field "IN_NS_VAR" (class "clojure.lang.Var") (accessflags  *class*  *final*  *static* ) -1)
                        (field "NS_VAR" (class "clojure.lang.Var") (accessflags  *class*  *final*  *static* ) -1)
                        (field "FN_LOADER_VAR" (class "clojure.lang.Var") (accessflags  *class*  *final*  *static* ) -1)
                        (field "PRINT_INITIALIZED" (class "clojure.lang.Var") (accessflags  *class*  *final*  *static* ) -1)
                        (field "PR_ON" (class "clojure.lang.Var") (accessflags  *class*  *final*  *static* ) -1)
                        (field "inNamespace" (class "clojure.lang.IFn") (accessflags  *class*  *final*  *static* ) -1)
                        (field "bootNamespace" (class "clojure.lang.IFn") (accessflags  *class*  *final*  *static* ) -1)
                        (field "EMPTY_ARRAY" (array (class "java.lang.Object")) (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "DEFAULT_COMPARATOR" (class "java.util.Comparator") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "id" (class "java.util.concurrent.atomic.AtomicInteger") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
                    (methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "readTrueFalseUnknown"
                              (parameters (class "java.lang.String"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 33)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ldc 1)) ;;STRING:: "true"
                                      (3 (invokevirtual (methodCP "equals" "java.lang.String" ((class "java.lang.Object")) boolean))) 
                                      (6 (ifeq 13))  ;;to TAG_0
                                      (9 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (12 (areturn)) 
                                      (13 (aload_0)) ;;at TAG_0
                                      (14 (ldc 2)) ;;STRING:: "false"
                                      (16 (invokevirtual (methodCP "equals" "java.lang.String" ((class "java.lang.Object")) boolean))) 
                                      (19 (ifeq 26)) ;;to TAG_1
                                      (22 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (25 (areturn)) 
                                      (26 (aconst_null)) ;;at TAG_1
                                      (27 (ldc 3)) ;;STRING:: "unknown"
                                      (29 (invokestatic (methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword")))) 
                                      (32 (areturn)) 
                                      (endofcode 33))
                                   (Exceptions )
                                   (StackMap )))
                        (method "processCommandLine"
                              (parameters (array (class "java.lang.String")))
                              (returntype . (class "java.util.List"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 49)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokestatic (methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List")))) 
                                      (4 (astore_1)) 
                                      (5 (aload_1)) 
                                      (6 (ldc 4)) ;;STRING:: "--"
                                      (8 (invokeinterface (methodCP "indexOf" "java.util.List" ((class "java.lang.Object")) int) 2)) 
                                      (13 (istore_2)) 
                                      (14 (iload_2)) 
                                      (15 (iflt 47))  ;;to TAG_0
                                      (18 (getstatic (fieldCP "CMD_LINE_ARGS" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (21 (aload_1)) 
                                      (22 (iload_2)) 
                                      (23 (iconst_1)) 
                                      (24 (iadd)) 
                                      (25 (aload_0)) 
                                      (26 (arraylength)) 
                                      (27 (invokeinterface (methodCP "subList" "java.util.List" (int int) (class "java.util.List")) 3)) 
                                      (32 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (35 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (38 (aload_1)) 
                                      (39 (iconst_0)) 
                                      (40 (iload_2)) 
                                      (41 (invokeinterface (methodCP "subList" "java.util.List" (int int) (class "java.util.List")) 3)) 
                                      (46 (areturn)) 
                                      (47 (aload_1)) ;;at TAG_0
                                      (48 (areturn)) 
                                      (endofcode 49))
                                   (Exceptions )
                                   (StackMap )))
                        (method "errPrintWriter"
                              (parameters )
                              (returntype . (class "java.io.PrintWriter"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 31)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "ERR" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "java.io.Writer"))) 
                                      (9 (astore_0)) 
                                      (10 (aload_0)) 
                                      (11 (instanceof (class "java.io.PrintWriter"))) 
                                      (14 (ifeq 22))  ;;to TAG_0
                                      (17 (aload_0)) 
                                      (18 (checkcast (class "java.io.PrintWriter"))) 
                                      (21 (areturn)) 
                                      (22 (new (class "java.io.PrintWriter"))) ;;at TAG_0
                                      (25 (dup)) 
                                      (26 (aload_0)) 
                                      (27 (invokespecial (methodCP "<init>" "java.io.PrintWriter" ((class "java.io.Writer")) void))) 
                                      (30 (areturn)) 
                                      (endofcode 31))
                                   (Exceptions )
                                   (StackMap )))
                        (method "addURL"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 62)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "java.lang.String"))) 
                                      (4 (ifeq 21)) ;;to TAG_0
                                      (7 (new (class "java.net.URL"))) 
                                      (10 (dup)) 
                                      (11 (aload_0)) 
                                      (12 (checkcast (class "java.lang.String"))) 
                                      (15 (invokespecial (methodCP "<init>" "java.net.URL" ((class "java.lang.String")) void))) 
                                      (18 (goto 25)) ;;to TAG_1
                                      (21 (aload_0)) ;;at TAG_0
                                      (22 (checkcast (class "java.net.URL"))) 
                                      (25 (astore_1)) ;;at TAG_1
                                      (26 (invokestatic (methodCP "currentThread" "java.lang.Thread" () (class "java.lang.Thread")))) 
                                      (29 (invokevirtual (methodCP "getContextClassLoader" "java.lang.Thread" () (class "java.lang.ClassLoader")))) 
                                      (32 (astore_2)) 
                                      (33 (aload_2)) 
                                      (34 (instanceof (class "clojure.lang.DynamicClassLoader"))) 
                                      (37 (ifeq 51))  ;;to TAG_2
                                      (40 (aload_2)) 
                                      (41 (checkcast (class "clojure.lang.DynamicClassLoader"))) 
                                      (44 (aload_1)) 
                                      (45 (invokevirtual (methodCP "addURL" "clojure.lang.DynamicClassLoader" ((class "java.net.URL")) void))) 
                                      (48 (goto 61)) ;;to TAG_3
                                      (51 (new (class "java.lang.IllegalAccessError"))) ;;at TAG_2
                                      (54 (dup)) 
                                      (55 (ldc 5)) ;;STRING:: "Context classloader is not a DynamicClassLoader"
                                      (57 (invokespecial (methodCP "<init>" "java.lang.IllegalAccessError" ((class "java.lang.String")) void))) 
                                      (60 (athrow)) 
                                      (61 (return)) ;;at TAG_3
                                      (endofcode 62))
                                   (Exceptions )
                                   (StackMap )))
                        (method "keyword"
                              (parameters (class "java.lang.String") (class "java.lang.String"))
                              (returntype . (class "clojure.lang.Keyword"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 9)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokestatic
                    (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (5 (invokestatic
                    (methodCP "intern" "clojure.lang.Keyword" ((class "clojure.lang.Symbol")) (class "clojure.lang.Keyword"))))
                                      (8 (areturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "var"
                              (parameters (class "java.lang.String") (class "java.lang.String"))
                              (returntype . (class "clojure.lang.Var"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 17)
                                   (parsedcode
                                      (0 (aconst_null))
                                      (1 (aload_0))
                                      (2 (invokestatic
                    (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (5 (invokestatic
                    (methodCP "findOrCreate" "clojure.lang.Namespace" ((class "clojure.lang.Symbol")) (class "clojure.lang.Namespace"))))
                                      (8 (aconst_null))
                                      (9 (aload_1))
                                      (10 (invokestatic
                    (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (13 (invokestatic
                    (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol")) (class "clojure.lang.Var"))))
                                      (16 (areturn))
                                      (endofcode 17))
                                   (Exceptions )
                                   (StackMap )))
                        (method "var"
                              (parameters (class "java.lang.String") (class "java.lang.String") (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.Var"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 18)
                                   (parsedcode
                                      (0 (aconst_null))
                                      (1 (aload_0))
                                      (2 (invokestatic
                    (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (5 (invokestatic
                    (methodCP "findOrCreate" "clojure.lang.Namespace" ((class "clojure.lang.Symbol")) (class "clojure.lang.Namespace"))))
                                      (8 (aconst_null))
                                      (9 (aload_1))
                                      (10 (invokestatic
                    (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (13 (aload_2))
                                      (14 (invokestatic
                    (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var"))))
                                      (17 (areturn))
                                      (endofcode 18))
                                   (Exceptions )
                                   (StackMap )))
                        (method "loadResourceScript"
                              (parameters (class "java.lang.String"))
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iconst_1))
                                      (2 (invokestatic
                    (methodCP "loadResourceScript" "clojure.lang.RT" ((class "java.lang.String") boolean) void)))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "maybeLoadResourceScript"
                              (parameters (class "java.lang.String"))
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iconst_0))
                                      (2 (invokestatic
                    (methodCP "loadResourceScript" "clojure.lang.RT" ((class "java.lang.String") boolean) void)))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "loadResourceScript"
                              (parameters (class "java.lang.String") boolean)
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 9)
                                   (parsedcode
                                      (0 (ldc_w ))
                                      (3 (aload_0))
                                      (4 (iload_1))
                                      (5 (invokestatic
                    (methodCP "loadResourceScript" "clojure.lang.RT" ((class "java.lang.Class") (class "java.lang.String") boolean) void)))
                                      (8 (return))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "loadResourceScript"
                              (parameters (class "java.lang.Class") (class "java.lang.String"))
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 7)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (iconst_1))
                                      (3 (invokestatic
                    (methodCP "loadResourceScript" "clojure.lang.RT" ((class "java.lang.Class") (class "java.lang.String") boolean) void)))
                                      (6 (return))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap )))
                        (method "loadResourceScript"
                              (parameters (class "java.lang.Class") (class "java.lang.String") boolean)
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 8) (code_length . 115)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (bipush 47)) 
                                      (3 (invokevirtual (methodCP "lastIndexOf" "java.lang.String" (int) int))) 
                                      (6 (istore_3)) 
                                      (7 (iload_3)) 
                                      (8 (iflt 21)) ;;to TAG_0
                                      (11 (aload_1)) 
                                      (12 (iload_3)) 
                                      (13 (iconst_1)) 
                                      (14 (iadd)) 
                                      (15 (invokevirtual (methodCP "substring" "java.lang.String" (int) (class "java.lang.String")))) 
                                      (18 (goto 22))  ;;to TAG_1
                                      (21 (aload_1)) ;;at TAG_0
                                      (22 (astore 4)) ;;at TAG_1
                                      (24 (invokestatic (methodCP "baseLoader" "clojure.lang.RT" () (class "java.lang.ClassLoader")))) 
                                      (27 (aload_1)) 
                                      (28 (invokestatic (methodCP "resourceAsStream" "clojure.lang.RT" ((class "java.lang.ClassLoader") (class "java.lang.String")) (class "java.io.InputStream")))) 
                                      (31 (astore 5)) 
                                      (33 (aload 5)) 
                                      (35 (ifnull 83)) ;;to TAG_2
                                      (38 (new (class "java.io.InputStreamReader"))) ;;at TAG_6
                                      (41 (dup)) 
                                      (42 (aload 5)) 
                                      (44 (getstatic (fieldCP "UTF8" "clojure.lang.RT" (class "java.nio.charset.Charset")))) 
                                      (47 (invokespecial (methodCP "<init>" "java.io.InputStreamReader" ((class "java.io.InputStream") (class "java.nio.charset.Charset")) void))) 
                                      (50 (aload_1)) 
                                      (51 (aload 4)) 
                                      (53 (invokestatic (methodCP "load" "clojure.lang.Compiler" ((class "java.io.Reader") (class "java.lang.String") (class "java.lang.String")) (class "java.lang.Object")))) 
                                      (56 (pop)) 
                                      (57 (jsr 71)) ;;to TAG_3
                                      (60 (goto 80)) ;;to TAG_4;;at TAG_7
                                      (63 (astore 6)) ;;at TAG_8
                                      (65 (jsr 71)) ;;to TAG_3
                                      (68 (aload 6)) ;;at TAG_9
                                      (70 (athrow)) 
                                      (71 (astore 7)) ;;at TAG_3
                                      (73 (aload 5)) 
                                      (75 (invokevirtual (methodCP "close" "java.io.InputStream" () void))) 
                                      (78 (ret 7)) 
                                      (80 (goto 114)) ;;to TAG_5;;at TAG_4
                                      (83 (iload_2)) ;;at TAG_2
                                      (84 (ifeq 114)) ;;to TAG_5
                                      (87 (new (class "java.io.FileNotFoundException"))) 
                                      (90 (dup)) 
                                      (91 (new (class "java.lang.StringBuilder"))) 
                                      (94 (dup)) 
                                      (95 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (98 (ldc 6)) ;;STRING:: "Could not locate Clojure resource on classpath: "
                                      (100 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (103 (aload_1)) 
                                      (104 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (107 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (110 (invokespecial (methodCP "<init>" "java.io.FileNotFoundException" ((class "java.lang.String")) void))) 
                                      (113 (athrow)) 
                                      (114 (return)) ;;at TAG_5
                                      (endofcode 115))
                                   (Exceptions 
                                     (handler 38 60  63 (class "java.lang.Throwable"))
                                     (handler 63 68  63 (class "java.lang.Throwable")))
                                   (StackMap )))
                        (method "init"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 9)
                                   (parsedcode
                                      (0 (invokestatic
                    (methodCP "errPrintWriter" "clojure.lang.RT" () (class "java.io.PrintWriter"))))
                                      (3 (ldc 7))         ;;STRING:: "No need to call RT.init() anymore"
                                      (5 (invokevirtual
                    (methodCP "println" "java.io.PrintWriter" ((class "java.lang.String")) void)))
                                      (8 (return))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "lastModified"
                              (parameters (class "java.net.URL") (class "java.lang.String"))
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 38)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "getProtocol" "java.net.URL" () (class "java.lang.String")))) 
                                      (4 (ldc 8)) ;;STRING:: "jar"
                                      (6 (invokevirtual (methodCP "equals" "java.lang.String" ((class "java.lang.Object")) boolean))) 
                                      (9 (ifeq 30))  ;;to TAG_0
                                      (12 (aload_0)) 
                                      (13 (invokevirtual (methodCP "openConnection" "java.net.URL" () (class "java.net.URLConnection")))) 
                                      (16 (checkcast (class "java.net.JarURLConnection"))) 
                                      (19 (invokevirtual (methodCP "getJarFile" "java.net.JarURLConnection" () (class "java.util.jar.JarFile")))) 
                                      (22 (aload_1)) 
                                      (23 (invokevirtual (methodCP "getEntry" "java.util.jar.JarFile" ((class "java.lang.String")) (class "java.util.zip.ZipEntry")))) 
                                      (26 (invokevirtual (methodCP "getTime" "java.util.zip.ZipEntry" () long))) 
                                      (29 (lreturn)) 
                                      (30 (aload_0)) ;;at TAG_0
                                      (31 (invokevirtual (methodCP "openConnection" "java.net.URL" () (class "java.net.URLConnection")))) 
                                      (34 (invokevirtual (methodCP "getLastModified" "java.net.URLConnection" () long))) 
                                      (37 (lreturn)) 
                                      (endofcode 38))
                                   (Exceptions )
                                   (StackMap )))
                        (method "compile"
                              (parameters (class "java.lang.String"))
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 6) (max_locals . 4) (code_length . 90)
                                   (parsedcode
                                      (0 (invokestatic (methodCP "baseLoader" "clojure.lang.RT" () (class "java.lang.ClassLoader")))) 
                                      (3 (aload_0)) 
                                      (4 (invokestatic (methodCP "resourceAsStream" "clojure.lang.RT" ((class "java.lang.ClassLoader") (class "java.lang.String")) (class "java.io.InputStream")))) 
                                      (7 (astore_1)) 
                                      (8 (aload_1)) 
                                      (9 (ifnull 62)) ;;to TAG_0
                                      (12 (new (class "java.io.InputStreamReader"))) ;;at TAG_4
                                      (15 (dup)) 
                                      (16 (aload_1)) 
                                      (17 (getstatic (fieldCP "UTF8" "clojure.lang.RT" (class "java.nio.charset.Charset")))) 
                                      (20 (invokespecial (methodCP "<init>" "java.io.InputStreamReader" ((class "java.io.InputStream") (class "java.nio.charset.Charset")) void))) 
                                      (23 (aload_0)) 
                                      (24 (aload_0)) 
                                      (25 (iconst_1)) 
                                      (26 (aload_0)) 
                                      (27 (ldc 9)) ;;STRING:: "/"
                                      (29 (invokevirtual (methodCP "lastIndexOf" "java.lang.String" ((class "java.lang.String")) int))) 
                                      (32 (iadd)) 
                                      (33 (invokevirtual (methodCP "substring" "java.lang.String" (int) (class "java.lang.String")))) 
                                      (36 (invokestatic (methodCP "compile" "clojure.lang.Compiler" ((class "java.io.Reader") (class "java.lang.String") (class "java.lang.String")) (class "java.lang.Object")))) 
                                      (39 (pop)) 
                                      (40 (jsr 52)) ;;to TAG_1
                                      (43 (goto 59))  ;;to TAG_2;;at TAG_5
                                      (46 (astore_2)) ;;at TAG_6
                                      (47 (jsr 52)) ;;to TAG_1
                                      (50 (aload_2)) ;;at TAG_7
                                      (51 (athrow)) 
                                      (52 (astore_3)) ;;at TAG_1
                                      (53 (aload_1)) 
                                      (54 (invokevirtual (methodCP "close" "java.io.InputStream" () void))) 
                                      (57 (ret 3)) 
                                      (59 (goto 89)) ;;to TAG_3;;at TAG_2
                                      (62 (new (class "java.io.FileNotFoundException"))) ;;at TAG_0
                                      (65 (dup)) 
                                      (66 (new (class "java.lang.StringBuilder"))) 
                                      (69 (dup)) 
                                      (70 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (73 (ldc 6)) ;;STRING:: "Could not locate Clojure resource on classpath: "
                                      (75 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (78 (aload_0)) 
                                      (79 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (82 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (85 (invokespecial (methodCP "<init>" "java.io.FileNotFoundException" ((class "java.lang.String")) void))) 
                                      (88 (athrow)) 
                                      (89 (return)) ;;at TAG_3
                                      (endofcode 90))
                                   (Exceptions 
                                     (handler 12 43  46 (class "java.lang.Throwable"))
                                     (handler 46 50  46 (class "java.lang.Throwable")))
                                   (StackMap )))
                        (method "load"
                              (parameters (class "java.lang.String"))
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iconst_1))
                                      (2 (invokestatic
                    (methodCP "load" "clojure.lang.RT" ((class "java.lang.String") boolean) void)))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "load"
                              (parameters (class "java.lang.String") boolean)
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 7) (max_locals . 9) (code_length . 287)
                                   (parsedcode
                                      (0 (new (class "java.lang.StringBuilder"))) 
                                      (3 (dup)) 
                                      (4 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (7 (aload_0)) 
                                      (8 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (11 (ldc 0)) ;;STRING:: "__init"
                                      (13 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (16 (ldc 10)) ;;STRING:: ".class"
                                      (18 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (21 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (24 (astore_2)) 
                                      (25 (new (class "java.lang.StringBuilder"))) 
                                      (28 (dup)) 
                                      (29 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (32 (aload_0)) 
                                      (33 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (36 (ldc 11)) ;;STRING:: ".clj"
                                      (38 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (41 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (44 (astore_3)) 
                                      (45 (invokestatic (methodCP "baseLoader" "clojure.lang.RT" () (class "java.lang.ClassLoader")))) 
                                      (48 (aload_2)) 
                                      (49 (invokestatic (methodCP "getResource" "clojure.lang.RT" ((class "java.lang.ClassLoader") (class "java.lang.String")) (class "java.net.URL")))) 
                                      (52 (astore 4)) 
                                      (54 (invokestatic (methodCP "baseLoader" "clojure.lang.RT" () (class "java.lang.ClassLoader")))) 
                                      (57 (aload_3)) 
                                      (58 (invokestatic (methodCP "getResource" "clojure.lang.RT" ((class "java.lang.ClassLoader") (class "java.lang.String")) (class "java.net.URL")))) 
                                      (61 (astore 5)) 
                                      (63 (iconst_0)) 
                                      (64 (istore 6)) 
                                      (66 (aload 4)) 
                                      (68 (ifnull 92)) ;;to TAG_0
                                      (71 (aload 5)) 
                                      (73 (ifnull 97))  ;;to TAG_1
                                      (76 (aload 4)) 
                                      (78 (aload_2)) 
                                      (79 (invokestatic (methodCP "lastModified" "clojure.lang.RT" ((class "java.net.URL") (class "java.lang.String")) long))) 
                                      (82 (aload 5)) 
                                      (84 (aload_3)) 
                                      (85 (invokestatic (methodCP "lastModified" "clojure.lang.RT" ((class "java.net.URL") (class "java.lang.String")) long))) 
                                      (88 (lcmp)) 
                                      (89 (ifgt 97))  ;;to TAG_1
                                      (92 (aload 4)) ;;at TAG_0
                                      (94 (ifnonnull 213)) ;;to TAG_2
                                      (97 (bipush 6)) ;;at TAG_1
                                      (99 (anewarray (class "java.lang.Object"))) 
                                      (102 (dup)) 
                                      (103 (iconst_0)) 
                                      (104 (getstatic (fieldCP "CURRENT_NS" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (107 (aastore)) 
                                      (108 (dup)) 
                                      (109 (iconst_1)) 
                                      (110 (getstatic (fieldCP "CURRENT_NS" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (113 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (116 (aastore)) 
                                      (117 (dup)) 
                                      (118 (iconst_2)) 
                                      (119 (getstatic (fieldCP "WARN_ON_REFLECTION" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (122 (aastore)) 
                                      (123 (dup)) 
                                      (124 (iconst_3)) 
                                      (125 (getstatic (fieldCP "WARN_ON_REFLECTION" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (128 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (131 (aastore)) 
                                      (132 (dup)) 
                                      (133 (iconst_4)) 
                                      (134 (getstatic (fieldCP "UNCHECKED_MATH" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (137 (aastore)) 
                                      (138 (dup)) 
                                      (139 (iconst_5)) 
                                      (140 (getstatic (fieldCP "UNCHECKED_MATH" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (143 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (146 (aastore)) 
                                      (147 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (150 (invokestatic (methodCP "pushThreadBindings" "clojure.lang.Var" ((class "clojure.lang.Associative")) void))) 
                                      (153 (new (class "java.lang.StringBuilder"))) 
                                      (156 (dup)) 
                                      (157 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (160 (aload_0)) 
                                      (161 (bipush 47)) 
                                      (163 (bipush 46)) 
                                      (165 (invokevirtual (methodCP "replace" "java.lang.String" (char char) (class "java.lang.String")))) 
                                      (168 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (171 (ldc 0)) ;;STRING:: "__init"
                                      (173 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (176 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (179 (invokestatic (methodCP "loadClassForName" "clojure.lang.RT" ((class "java.lang.String")) (class "java.lang.Class")))) 
                                      (182 (ifnull 189)) ;;to TAG_3
                                      (185 (iconst_1)) 
                                      (186 (goto 190)) ;;to TAG_4
                                      (189 (iconst_0)) ;;at TAG_3
                                      (190 (istore 6)) ;;at TAG_4
                                      (192 (jsr 206)) ;;to TAG_5
                                      (195 (goto 213)) ;;to TAG_2;;at TAG_9
                                      (198 (astore 7)) ;;at TAG_10
                                      (200 (jsr 206)) ;;to TAG_5
                                      (203 (aload 7)) ;;at TAG_11
                                      (205 (athrow)) 
                                      (206 (astore 8)) ;;at TAG_5
                                      (208 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) 
                                      (211 (ret 8)) 
                                      (213 (iload 6)) ;;at TAG_2
                                      (215 (ifne 252)) ;;to TAG_6
                                      (218 (aload 5)) 
                                      (220 (ifnull 252)) ;;to TAG_6
                                      (223 (getstatic (fieldCP "COMPILE_FILES" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (226 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (229 (invokestatic (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean))) 
                                      (232 (ifeq 242)) ;;to TAG_7
                                      (235 (aload_3)) 
                                      (236 (invokestatic (methodCP "compile" "clojure.lang.RT" ((class "java.lang.String")) void))) 
                                      (239 (goto 286)) ;;to TAG_8
                                      (242 (ldc_w )) ;;at TAG_7
                                      (245 (aload_3)) 
                                      (246 (invokestatic (methodCP "loadResourceScript" "clojure.lang.RT" ((class "java.lang.Class") (class "java.lang.String")) void))) 
                                      (249 (goto 286)) ;;to TAG_8
                                      (252 (iload 6)) ;;at TAG_6
                                      (254 (ifne 286)) ;;to TAG_8
                                      (257 (iload_1)) 
                                      (258 (ifeq 286)) ;;to TAG_8
                                      (261 (new (class "java.io.FileNotFoundException"))) 
                                      (264 (dup)) 
                                      (265 (ldc 12)) ;;STRING:: "Could not locate %s or %s on classpath: "
                                      (267 (iconst_2)) 
                                      (268 (anewarray (class "java.lang.Object"))) 
                                      (271 (dup)) 
                                      (272 (iconst_0)) 
                                      (273 (aload_2)) 
                                      (274 (aastore)) 
                                      (275 (dup)) 
                                      (276 (iconst_1)) 
                                      (277 (aload_3)) 
                                      (278 (aastore)) 
                                      (279 (invokestatic (methodCP "format" "java.lang.String" ((class "java.lang.String") (array (class "java.lang.Object"))) (class "java.lang.String")))) 
                                      (282 (invokespecial (methodCP "<init>" "java.io.FileNotFoundException" ((class "java.lang.String")) void))) 
                                      (285 (athrow)) 
                                      (286 (return)) ;;at TAG_8
                                      (endofcode 287))
                                   (Exceptions 
                                     (handler 97 195  198 (class "java.lang.Throwable"))
                                     (handler 198 203  198 (class "java.lang.Throwable")))
                                   (StackMap )))
                        (method "doInit"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 6) (code_length . 128)
                                   (parsedcode
                                      (0 (ldc 13)) ;;STRING:: "clojure/core"
                                      (2 (invokestatic (methodCP "load" "clojure.lang.RT" ((class "java.lang.String")) void))) 
                                      (5 (bipush 6)) 
                                      (7 (anewarray (class "java.lang.Object"))) 
                                      (10 (dup)) 
                                      (11 (iconst_0)) 
                                      (12 (getstatic (fieldCP "CURRENT_NS" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (15 (aastore)) 
                                      (16 (dup)) 
                                      (17 (iconst_1)) 
                                      (18 (getstatic (fieldCP "CURRENT_NS" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (21 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (24 (aastore)) 
                                      (25 (dup)) 
                                      (26 (iconst_2)) 
                                      (27 (getstatic (fieldCP "WARN_ON_REFLECTION" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (30 (aastore)) 
                                      (31 (dup)) 
                                      (32 (iconst_3)) 
                                      (33 (getstatic (fieldCP "WARN_ON_REFLECTION" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (36 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (39 (aastore)) 
                                      (40 (dup)) 
                                      (41 (iconst_4)) 
                                      (42 (getstatic (fieldCP "UNCHECKED_MATH" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (45 (aastore)) 
                                      (46 (dup)) 
                                      (47 (iconst_5)) 
                                      (48 (getstatic (fieldCP "UNCHECKED_MATH" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (51 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (54 (aastore)) 
                                      (55 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (58 (invokestatic (methodCP "pushThreadBindings" "clojure.lang.Var" ((class "clojure.lang.Associative")) void))) 
                                      (61 (ldc 14)) ;;at TAG_2;;STRING:: "user"
                                      (63 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (66 (astore_0)) 
                                      (67 (ldc 15)) ;;STRING:: "clojure.core"
                                      (69 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (72 (astore_1)) 
                                      (73 (ldc 15)) ;;STRING:: "clojure.core"
                                      (75 (ldc 16)) ;;STRING:: "in-ns"
                                      (77 (invokestatic (methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var")))) 
                                      (80 (astore_2)) 
                                      (81 (ldc 15)) ;;STRING:: "clojure.core"
                                      (83 (ldc 17)) ;;STRING:: "refer"
                                      (85 (invokestatic (methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var")))) 
                                      (88 (astore_3)) 
                                      (89 (aload_2)) 
                                      (90 (aload_0)) 
                                      (91 (invokevirtual (methodCP "invoke" "clojure.lang.Var" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (94 (pop)) 
                                      (95 (aload_3)) 
                                      (96 (aload_1)) 
                                      (97 (invokevirtual (methodCP "invoke" "clojure.lang.Var" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (100 (pop)) 
                                      (101 (ldc 18)) ;;STRING:: "user.clj"
                                      (103 (invokestatic (methodCP "maybeLoadResourceScript" "clojure.lang.RT" ((class "java.lang.String")) void))) 
                                      (106 (jsr 120)) ;;to TAG_0
                                      (109 (goto 127)) ;;to TAG_1;;at TAG_3
                                      (112 (astore 4)) ;;at TAG_4
                                      (114 (jsr 120)) ;;to TAG_0
                                      (117 (aload 4)) ;;at TAG_5
                                      (119 (athrow)) 
                                      (120 (astore 5)) ;;at TAG_0
                                      (122 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) 
                                      (125 (ret 5)) 
                                      (127 (return)) ;;at TAG_1
                                      (endofcode 128))
                                   (Exceptions 
                                     (handler 61 109  112 (class "java.lang.Throwable"))
                                     (handler 112 117  112 (class "java.lang.Throwable")))
                                   (StackMap )))
                        (method "nextID"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 0) (code_length . 7)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "id" "clojure.lang.RT" (class "java.util.concurrent.atomic.AtomicInteger"))))
                                      (3 (invokevirtual
                    (methodCP "getAndIncrement" "java.util.concurrent.atomic.AtomicInteger" () int)))
                                      (6 (ireturn))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap )))
                        (method "loadLibrary"
                              (parameters (class "java.lang.String"))
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokestatic
                    (methodCP "loadLibrary" "java.lang.System" ((class "java.lang.String")) void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "seq"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 32)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "clojure.lang.ASeq"))) 
                                      (4 (ifeq 12))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "clojure.lang.ASeq"))) 
                                      (11 (areturn)) 
                                      (12 (aload_0)) ;;at TAG_0
                                      (13 (instanceof (class "clojure.lang.LazySeq"))) 
                                      (16 (ifeq 27)) ;;to TAG_1
                                      (19 (aload_0)) 
                                      (20 (checkcast (class "clojure.lang.LazySeq"))) 
                                      (23 (invokevirtual (methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq")))) 
                                      (26 (areturn)) 
                                      (27 (aload_0)) ;;at TAG_1
                                      (28 (invokestatic (methodCP "seqFrom" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (31 (areturn)) 
                                      (endofcode 32))
                                   (Exceptions )
                                   (StackMap )))
                        (method "seqFrom"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 133)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "clojure.lang.Seqable"))) 
                                      (4 (ifeq 17)) ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "clojure.lang.Seqable"))) 
                                      (11 (invokeinterface (methodCP "seq" "clojure.lang.Seqable" () (class "clojure.lang.ISeq")) 1)) 
                                      (16 (areturn)) 
                                      (17 (aload_0)) ;;at TAG_0
                                      (18 (ifnonnull 23)) ;;to TAG_1
                                      (21 (aconst_null)) 
                                      (22 (areturn)) 
                                      (23 (aload_0)) ;;at TAG_1
                                      (24 (instanceof (class "java.lang.Iterable"))) 
                                      (27 (ifeq 43))  ;;to TAG_2
                                      (30 (aload_0)) 
                                      (31 (checkcast (class "java.lang.Iterable"))) 
                                      (34 (invokeinterface (methodCP "iterator" "java.lang.Iterable" () (class "java.util.Iterator")) 1)) 
                                      (39 (invokestatic (methodCP "create" "clojure.lang.IteratorSeq" ((class "java.util.Iterator")) (class "clojure.lang.IteratorSeq")))) 
                                      (42 (areturn)) 
                                      (43 (aload_0)) ;;at TAG_2
                                      (44 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (47 (invokevirtual (methodCP "isArray" "java.lang.Class" () boolean))) 
                                      (50 (ifeq 58)) ;;to TAG_3
                                      (53 (aload_0)) 
                                      (54 (invokestatic (methodCP "createFromObject" "clojure.lang.ArraySeq" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (57 (areturn)) 
                                      (58 (aload_0)) ;;at TAG_3
                                      (59 (instanceof (class "java.lang.CharSequence"))) 
                                      (62 (ifeq 73)) ;;to TAG_4
                                      (65 (aload_0)) 
                                      (66 (checkcast (class "java.lang.CharSequence"))) 
                                      (69 (invokestatic (methodCP "create" "clojure.lang.StringSeq" ((class "java.lang.CharSequence")) (class "clojure.lang.StringSeq")))) 
                                      (72 (areturn)) 
                                      (73 (aload_0)) ;;at TAG_4
                                      (74 (instanceof (class "java.util.Map"))) 
                                      (77 (ifeq 93)) ;;to TAG_5
                                      (80 (aload_0)) 
                                      (81 (checkcast (class "java.util.Map"))) 
                                      (84 (invokeinterface (methodCP "entrySet" "java.util.Map" () (class "java.util.Set")) 1)) 
                                      (89 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (92 (areturn)) 
                                      (93 (aload_0)) ;;at TAG_5
                                      (94 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (97 (astore_1)) 
                                      (98 (aload_1)) 
                                      (99 (invokevirtual (methodCP "getSuperclass" "java.lang.Class" () (class "java.lang.Class")))) 
                                      (102 (astore_2)) 
                                      (103 (new (class "java.lang.IllegalArgumentException"))) 
                                      (106 (dup)) 
                                      (107 (new (class "java.lang.StringBuilder"))) 
                                      (110 (dup)) 
                                      (111 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (114 (ldc 19)) ;;STRING:: "Don\nt know how to create ISeq from: "
                                      (116 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (119 (aload_1)) 
                                      (120 (invokevirtual (methodCP "getName" "java.lang.Class" () (class "java.lang.String")))) 
                                      (123 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (126 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (129 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (132 (athrow)) 
                                      (endofcode 133))
                                   (Exceptions )
                                   (StackMap )))
                        (method "seqOrElse"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (4 (ifnonnull 11))  ;;to TAG_0
                                      (7 (aconst_null)) 
                                      (8 (goto 12)) ;;to TAG_1
                                      (11 (aload_0)) ;;at TAG_0
                                      (12 (areturn)) ;;at TAG_1
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "keys"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokestatic
                    (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (4 (invokestatic
                    (methodCP "create" "clojure.lang.APersistentMap$KeySeq" ((class "clojure.lang.ISeq")) (class "clojure.lang.APersistentMap$KeySeq"))))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "vals"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokestatic
                    (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (4 (invokestatic
                    (methodCP "create" "clojure.lang.APersistentMap$ValSeq" ((class "clojure.lang.ISeq")) (class "clojure.lang.APersistentMap$ValSeq"))))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "meta"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.IPersistentMap"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 19)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "clojure.lang.IMeta"))) 
                                      (4 (ifeq 17))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "clojure.lang.IMeta"))) 
                                      (11 (invokeinterface (methodCP "meta" "clojure.lang.IMeta" () (class "clojure.lang.IPersistentMap")) 1)) 
                                      (16 (areturn)) 
                                      (17 (aconst_null)) ;;at TAG_0
                                      (18 (areturn)) 
                                      (endofcode 19))
                                   (Exceptions )
                                   (StackMap )))
                        (method "count"
                              (parameters (class "java.lang.Object"))
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 28)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "clojure.lang.Counted"))) 
                                      (4 (ifeq 17))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "clojure.lang.Counted"))) 
                                      (11 (invokeinterface (methodCP "count" "clojure.lang.Counted" () int) 1)) 
                                      (16 (ireturn)) 
                                      (17 (aload_0)) ;;at TAG_0
                                      (18 (aconst_null)) 
                                      (19 (dup)) 
                                      (20 (astore_0)) 
                                      (21 (invokestatic (methodCP "ret1" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (24 (invokestatic (methodCP "countFrom" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (27 (ireturn)) 
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap )))
                        (method "countFrom"
                              (parameters (class "java.lang.Object"))
                              (returntype . int)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 156)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 6)) ;;to TAG_0
                                      (4 (iconst_0)) 
                                      (5 (ireturn)) 
                                      (6 (aload_0)) ;;at TAG_0
                                      (7 (instanceof (class "clojure.lang.IPersistentCollection"))) 
                                      (10 (ifeq 57))  ;;to TAG_1
                                      (13 (aload_0)) 
                                      (14 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (17 (astore_1)) 
                                      (18 (aconst_null)) 
                                      (19 (astore_0)) 
                                      (20 (iconst_0)) 
                                      (21 (istore_2)) 
                                      (22 (aload_1)) ;;at TAG_4
                                      (23 (ifnull 55)) ;;to TAG_2
                                      (26 (aload_1)) 
                                      (27 (instanceof (class "clojure.lang.Counted"))) 
                                      (30 (ifeq 42)) ;;to TAG_3
                                      (33 (iload_2)) 
                                      (34 (aload_1)) 
                                      (35 (invokeinterface (methodCP "count" "clojure.lang.ISeq" () int) 1)) 
                                      (40 (iadd)) 
                                      (41 (ireturn)) 
                                      (42 (iinc 2 1)) ;;at TAG_3
                                      (45 (aload_1)) 
                                      (46 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (51 (astore_1)) 
                                      (52 (goto 22)) ;;to TAG_4
                                      (55 (iload_2)) ;;at TAG_2
                                      (56 (ireturn)) 
                                      (57 (aload_0)) ;;at TAG_1
                                      (58 (instanceof (class "java.lang.CharSequence"))) 
                                      (61 (ifeq 74)) ;;to TAG_5
                                      (64 (aload_0)) 
                                      (65 (checkcast (class "java.lang.CharSequence"))) 
                                      (68 (invokeinterface (methodCP "length" "java.lang.CharSequence" () int) 1)) 
                                      (73 (ireturn)) 
                                      (74 (aload_0)) ;;at TAG_5
                                      (75 (instanceof (class "java.util.Collection"))) 
                                      (78 (ifeq 91)) ;;to TAG_6
                                      (81 (aload_0)) 
                                      (82 (checkcast (class "java.util.Collection"))) 
                                      (85 (invokeinterface (methodCP "size" "java.util.Collection" () int) 1)) 
                                      (90 (ireturn)) 
                                      (91 (aload_0)) ;;at TAG_6
                                      (92 (instanceof (class "java.util.Map"))) 
                                      (95 (ifeq 108)) ;;to TAG_7
                                      (98 (aload_0)) 
                                      (99 (checkcast (class "java.util.Map"))) 
                                      (102 (invokeinterface (methodCP "size" "java.util.Map" () int) 1)) 
                                      (107 (ireturn)) 
                                      (108 (aload_0)) ;;at TAG_7
                                      (109 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (112 (invokevirtual (methodCP "isArray" "java.lang.Class" () boolean))) 
                                      (115 (ifeq 123)) ;;to TAG_8
                                      (118 (aload_0)) 
                                      (119 (invokestatic (methodCP "getLength" "java.lang.reflect.Array" ((class "java.lang.Object")) int))) 
                                      (122 (ireturn)) 
                                      (123 (new (class "java.lang.UnsupportedOperationException"))) ;;at TAG_8
                                      (126 (dup)) 
                                      (127 (new (class "java.lang.StringBuilder"))) 
                                      (130 (dup)) 
                                      (131 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (134 (ldc 20)) ;;STRING:: "count not supported on this type: "
                                      (136 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (139 (aload_0)) 
                                      (140 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (143 (invokevirtual (methodCP "getSimpleName" "java.lang.Class" () (class "java.lang.String")))) 
                                      (146 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (149 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (152 (invokespecial (methodCP "<init>" "java.lang.UnsupportedOperationException" ((class "java.lang.String")) void))) 
                                      (155 (athrow)) 
                                      (endofcode 156))
                                   (Exceptions )
                                   (StackMap )))
                        (method "conj"
                              (parameters (class "clojure.lang.IPersistentCollection") (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.IPersistentCollection"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 21)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 13))  ;;to TAG_0
                                      (4 (new (class "clojure.lang.PersistentList"))) 
                                      (7 (dup)) 
                                      (8 (aload_1)) 
                                      (9 (invokespecial (methodCP "<init>" "clojure.lang.PersistentList" ((class "java.lang.Object")) void))) 
                                      (12 (areturn)) 
                                      (13 (aload_0)) ;;at TAG_0
                                      (14 (aload_1)) 
                                      (15 (invokeinterface (methodCP "cons" "clojure.lang.IPersistentCollection" ((class "java.lang.Object")) (class "clojure.lang.IPersistentCollection")) 2)) 
                                      (20 (areturn)) 
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap )))
                        (method "cons"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 46)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (ifnonnull 13))  ;;to TAG_0
                                      (4 (new (class "clojure.lang.PersistentList"))) 
                                      (7 (dup)) 
                                      (8 (aload_0)) 
                                      (9 (invokespecial (methodCP "<init>" "clojure.lang.PersistentList" ((class "java.lang.Object")) void))) 
                                      (12 (areturn)) 
                                      (13 (aload_1)) ;;at TAG_0
                                      (14 (instanceof (class "clojure.lang.ISeq"))) 
                                      (17 (ifeq 33)) ;;to TAG_1
                                      (20 (new (class "clojure.lang.Cons"))) 
                                      (23 (dup)) 
                                      (24 (aload_0)) 
                                      (25 (aload_1)) 
                                      (26 (checkcast (class "clojure.lang.ISeq"))) 
                                      (29 (invokespecial (methodCP "<init>" "clojure.lang.Cons" ((class "java.lang.Object") (class "clojure.lang.ISeq")) void))) 
                                      (32 (areturn)) 
                                      (33 (new (class "clojure.lang.Cons"))) ;;at TAG_1
                                      (36 (dup)) 
                                      (37 (aload_0)) 
                                      (38 (aload_1)) 
                                      (39 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (42 (invokespecial (methodCP "<init>" "clojure.lang.Cons" ((class "java.lang.Object") (class "clojure.lang.ISeq")) void))) 
                                      (45 (areturn)) 
                                      (endofcode 46))
                                   (Exceptions )
                                   (StackMap )))
                        (method "first"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 35)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "clojure.lang.ISeq"))) 
                                      (4 (ifeq 17))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "clojure.lang.ISeq"))) 
                                      (11 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (16 (areturn)) 
                                      (17 (aload_0)) ;;at TAG_0
                                      (18 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (21 (astore_1)) 
                                      (22 (aload_1)) 
                                      (23 (ifnonnull 28)) ;;to TAG_1
                                      (26 (aconst_null)) 
                                      (27 (areturn)) 
                                      (28 (aload_1)) ;;at TAG_1
                                      (29 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (34 (areturn)) 
                                      (endofcode 35))
                                   (Exceptions )
                                   (StackMap )))
                        (method "second"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokestatic
                    (methodCP "next" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (4 (invokestatic
                    (methodCP "first" "clojure.lang.RT" ((class "java.lang.Object")) (class "java.lang.Object"))))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "third"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokestatic
                    (methodCP "next" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (4 (invokestatic
                    (methodCP "next" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (7 (invokestatic
                    (methodCP "first" "clojure.lang.RT" ((class "java.lang.Object")) (class "java.lang.Object"))))
                                      (10 (areturn))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "fourth"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 14)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokestatic
                    (methodCP "next" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (4 (invokestatic
                    (methodCP "next" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (7 (invokestatic
                    (methodCP "next" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (10 (invokestatic
                    (methodCP "first" "clojure.lang.RT" ((class "java.lang.Object")) (class "java.lang.Object"))))
                                      (13 (areturn))
                                      (endofcode 14))
                                   (Exceptions )
                                   (StackMap )))
                        (method "next"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 35)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "clojure.lang.ISeq"))) 
                                      (4 (ifeq 17))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "clojure.lang.ISeq"))) 
                                      (11 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (16 (areturn)) 
                                      (17 (aload_0)) ;;at TAG_0
                                      (18 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (21 (astore_1)) 
                                      (22 (aload_1)) 
                                      (23 (ifnonnull 28)) ;;to TAG_1
                                      (26 (aconst_null)) 
                                      (27 (areturn)) 
                                      (28 (aload_1)) ;;at TAG_1
                                      (29 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (34 (areturn)) 
                                      (endofcode 35))
                                   (Exceptions )
                                   (StackMap )))
                        (method "more"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 37)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "clojure.lang.ISeq"))) 
                                      (4 (ifeq 17))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "clojure.lang.ISeq"))) 
                                      (11 (invokeinterface (methodCP "more" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (16 (areturn)) 
                                      (17 (aload_0)) ;;at TAG_0
                                      (18 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (21 (astore_1)) 
                                      (22 (aload_1)) 
                                      (23 (ifnonnull 30)) ;;to TAG_1
                                      (26 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentList" (class "clojure.lang.PersistentList$EmptyList")))) 
                                      (29 (areturn)) 
                                      (30 (aload_1)) ;;at TAG_1
                                      (31 (invokeinterface (methodCP "more" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (36 (areturn)) 
                                      (endofcode 37))
                                   (Exceptions )
                                   (StackMap )))
                        (method "peek"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 6))  ;;to TAG_0
                                      (4 (aconst_null)) 
                                      (5 (areturn)) 
                                      (6 (aload_0)) ;;at TAG_0
                                      (7 (checkcast (class "clojure.lang.IPersistentStack"))) 
                                      (10 (invokeinterface (methodCP "peek" "clojure.lang.IPersistentStack" () (class "java.lang.Object")) 1)) 
                                      (15 (areturn)) 
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "pop"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 6))  ;;to TAG_0
                                      (4 (aconst_null)) 
                                      (5 (areturn)) 
                                      (6 (aload_0)) ;;at TAG_0
                                      (7 (checkcast (class "clojure.lang.IPersistentStack"))) 
                                      (10 (invokeinterface (methodCP "pop" "clojure.lang.IPersistentStack" () (class "clojure.lang.IPersistentStack")) 1)) 
                                      (15 (areturn)) 
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "get"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 24)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "clojure.lang.ILookup"))) 
                                      (4 (ifeq 18))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "clojure.lang.ILookup"))) 
                                      (11 (aload_1)) 
                                      (12 (invokeinterface (methodCP "valAt" "clojure.lang.ILookup" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (17 (areturn)) 
                                      (18 (aload_0)) ;;at TAG_0
                                      (19 (aload_1)) 
                                      (20 (invokestatic (methodCP "getFrom" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (23 (areturn)) 
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getFrom"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 100)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 6)) ;;to TAG_0
                                      (4 (aconst_null)) 
                                      (5 (areturn)) 
                                      (6 (aload_0)) ;;at TAG_0
                                      (7 (instanceof (class "java.util.Map"))) 
                                      (10 (ifeq 26)) ;;to TAG_1
                                      (13 (aload_0)) 
                                      (14 (checkcast (class "java.util.Map"))) 
                                      (17 (astore_2)) 
                                      (18 (aload_2)) 
                                      (19 (aload_1)) 
                                      (20 (invokeinterface (methodCP "get" "java.util.Map" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (25 (areturn)) 
                                      (26 (aload_0)) ;;at TAG_1
                                      (27 (instanceof (class "clojure.lang.IPersistentSet"))) 
                                      (30 (ifeq 46))  ;;to TAG_2
                                      (33 (aload_0)) 
                                      (34 (checkcast (class "clojure.lang.IPersistentSet"))) 
                                      (37 (astore_2)) 
                                      (38 (aload_2)) 
                                      (39 (aload_1)) 
                                      (40 (invokeinterface (methodCP "get" "clojure.lang.IPersistentSet" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (45 (areturn)) 
                                      (46 (aload_1)) ;;at TAG_2
                                      (47 (instanceof (class "java.lang.Number"))) 
                                      (50 (ifeq 98)) ;;to TAG_3
                                      (53 (aload_0)) 
                                      (54 (instanceof (class "java.lang.String"))) 
                                      (57 (ifne 70)) ;;to TAG_4
                                      (60 (aload_0)) 
                                      (61 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (64 (invokevirtual (methodCP "isArray" "java.lang.Class" () boolean))) 
                                      (67 (ifeq 98)) ;;to TAG_3
                                      (70 (aload_1)) ;;at TAG_4
                                      (71 (checkcast (class "java.lang.Number"))) 
                                      (74 (invokevirtual (methodCP "intValue" "java.lang.Number" () int))) 
                                      (77 (istore_2)) 
                                      (78 (iload_2)) 
                                      (79 (iflt 96)) ;;to TAG_5
                                      (82 (iload_2)) 
                                      (83 (aload_0)) 
                                      (84 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (87 (if_icmpge 96)) ;;to TAG_5
                                      (90 (aload_0)) 
                                      (91 (iload_2)) 
                                      (92 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (95 (areturn)) 
                                      (96 (aconst_null)) ;;at TAG_5
                                      (97 (areturn)) 
                                      (98 (aconst_null)) ;;at TAG_3
                                      (99 (areturn)) 
                                      (endofcode 100))
                                   (Exceptions )
                                   (StackMap )))
                        (method "get"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 26)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "clojure.lang.ILookup"))) 
                                      (4 (ifeq 19))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "clojure.lang.ILookup"))) 
                                      (11 (aload_1)) 
                                      (12 (aload_2)) 
                                      (13 (invokeinterface (methodCP "valAt" "clojure.lang.ILookup" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (18 (areturn)) 
                                      (19 (aload_0)) ;;at TAG_0
                                      (20 (aload_1)) 
                                      (21 (aload_2)) 
                                      (22 (invokestatic (methodCP "getFrom" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (25 (areturn)) 
                                      (endofcode 26))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getFrom"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 126)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 6)) ;;to TAG_0
                                      (4 (aload_2)) 
                                      (5 (areturn)) 
                                      (6 (aload_0)) ;;at TAG_0
                                      (7 (instanceof (class "java.util.Map"))) 
                                      (10 (ifeq 38))  ;;to TAG_1
                                      (13 (aload_0)) 
                                      (14 (checkcast (class "java.util.Map"))) 
                                      (17 (astore_3)) 
                                      (18 (aload_3)) 
                                      (19 (aload_1)) 
                                      (20 (invokeinterface (methodCP "containsKey" "java.util.Map" ((class "java.lang.Object")) boolean) 2)) 
                                      (25 (ifeq 36)) ;;to TAG_2
                                      (28 (aload_3)) 
                                      (29 (aload_1)) 
                                      (30 (invokeinterface (methodCP "get" "java.util.Map" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (35 (areturn)) 
                                      (36 (aload_2)) ;;at TAG_2
                                      (37 (areturn)) 
                                      (38 (aload_0)) ;;at TAG_1
                                      (39 (instanceof (class "clojure.lang.IPersistentSet"))) 
                                      (42 (ifeq 70)) ;;to TAG_3
                                      (45 (aload_0)) 
                                      (46 (checkcast (class "clojure.lang.IPersistentSet"))) 
                                      (49 (astore_3)) 
                                      (50 (aload_3)) 
                                      (51 (aload_1)) 
                                      (52 (invokeinterface (methodCP "contains" "clojure.lang.IPersistentSet" ((class "java.lang.Object")) boolean) 2)) 
                                      (57 (ifeq 68)) ;;to TAG_4
                                      (60 (aload_3)) 
                                      (61 (aload_1)) 
                                      (62 (invokeinterface (methodCP "get" "clojure.lang.IPersistentSet" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (67 (areturn)) 
                                      (68 (aload_2)) ;;at TAG_4
                                      (69 (areturn)) 
                                      (70 (aload_1)) ;;at TAG_3
                                      (71 (instanceof (class "java.lang.Number"))) 
                                      (74 (ifeq 124)) ;;to TAG_5
                                      (77 (aload_0)) 
                                      (78 (instanceof (class "java.lang.String"))) 
                                      (81 (ifne 94)) ;;to TAG_6
                                      (84 (aload_0)) 
                                      (85 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (88 (invokevirtual (methodCP "isArray" "java.lang.Class" () boolean))) 
                                      (91 (ifeq 124)) ;;to TAG_5
                                      (94 (aload_1)) ;;at TAG_6
                                      (95 (checkcast (class "java.lang.Number"))) 
                                      (98 (invokevirtual (methodCP "intValue" "java.lang.Number" () int))) 
                                      (101 (istore_3)) 
                                      (102 (iload_3)) 
                                      (103 (iflt 122)) ;;to TAG_7
                                      (106 (iload_3)) 
                                      (107 (aload_0)) 
                                      (108 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (111 (if_icmpge 122)) ;;to TAG_7
                                      (114 (aload_0)) 
                                      (115 (iload_3)) 
                                      (116 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (119 (goto 123)) ;;to TAG_8
                                      (122 (aload_2)) ;;at TAG_7
                                      (123 (areturn)) ;;at TAG_8
                                      (124 (aload_2)) ;;at TAG_5
                                      (125 (areturn)) 
                                      (endofcode 126))
                                   (Exceptions )
                                   (StackMap )))
                        (method "assoc"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.Associative"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 6) (max_locals . 3) (code_length . 36)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 24))  ;;to TAG_0
                                      (4 (new (class "clojure.lang.PersistentArrayMap"))) 
                                      (7 (dup)) 
                                      (8 (iconst_2)) 
                                      (9 (anewarray (class "java.lang.Object"))) 
                                      (12 (dup)) 
                                      (13 (iconst_0)) 
                                      (14 (aload_1)) 
                                      (15 (aastore)) 
                                      (16 (dup)) 
                                      (17 (iconst_1)) 
                                      (18 (aload_2)) 
                                      (19 (aastore)) 
                                      (20 (invokespecial (methodCP "<init>" "clojure.lang.PersistentArrayMap" ((array (class "java.lang.Object"))) void))) 
                                      (23 (areturn)) 
                                      (24 (aload_0)) ;;at TAG_0
                                      (25 (checkcast (class "clojure.lang.Associative"))) 
                                      (28 (aload_1)) 
                                      (29 (aload_2)) 
                                      (30 (invokeinterface (methodCP "assoc" "clojure.lang.Associative" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.Associative")) 3)) 
                                      (35 (areturn)) 
                                      (endofcode 36))
                                   (Exceptions )
                                   (StackMap )))
                        (method "contains"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 218)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 8)) ;;to TAG_0
                                      (4 (getstatic (fieldCP "F" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (7 (areturn)) 
                                      (8 (aload_0)) ;;at TAG_0
                                      (9 (instanceof (class "clojure.lang.Associative"))) 
                                      (12 (ifeq 38))  ;;to TAG_1
                                      (15 (aload_0)) 
                                      (16 (checkcast (class "clojure.lang.Associative"))) 
                                      (19 (aload_1)) 
                                      (20 (invokeinterface (methodCP "containsKey" "clojure.lang.Associative" ((class "java.lang.Object")) boolean) 2)) 
                                      (25 (ifeq 34)) ;;to TAG_2
                                      (28 (getstatic (fieldCP "T" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (31 (goto 37)) ;;to TAG_3
                                      (34 (getstatic (fieldCP "F" "clojure.lang.RT" (class "java.lang.Boolean")))) ;;at TAG_2
                                      (37 (areturn)) ;;at TAG_3
                                      (38 (aload_0)) ;;at TAG_1
                                      (39 (instanceof (class "clojure.lang.IPersistentSet"))) 
                                      (42 (ifeq 68)) ;;to TAG_4
                                      (45 (aload_0)) 
                                      (46 (checkcast (class "clojure.lang.IPersistentSet"))) 
                                      (49 (aload_1)) 
                                      (50 (invokeinterface (methodCP "contains" "clojure.lang.IPersistentSet" ((class "java.lang.Object")) boolean) 2)) 
                                      (55 (ifeq 64)) ;;to TAG_5
                                      (58 (getstatic (fieldCP "T" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (61 (goto 67)) ;;to TAG_6
                                      (64 (getstatic (fieldCP "F" "clojure.lang.RT" (class "java.lang.Boolean")))) ;;at TAG_5
                                      (67 (areturn)) ;;at TAG_6
                                      (68 (aload_0)) ;;at TAG_4
                                      (69 (instanceof (class "java.util.Map"))) 
                                      (72 (ifeq 100)) ;;to TAG_7
                                      (75 (aload_0)) 
                                      (76 (checkcast (class "java.util.Map"))) 
                                      (79 (astore_2)) 
                                      (80 (aload_2)) 
                                      (81 (aload_1)) 
                                      (82 (invokeinterface (methodCP "containsKey" "java.util.Map" ((class "java.lang.Object")) boolean) 2)) 
                                      (87 (ifeq 96)) ;;to TAG_8
                                      (90 (getstatic (fieldCP "T" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (93 (goto 99)) ;;to TAG_9
                                      (96 (getstatic (fieldCP "F" "clojure.lang.RT" (class "java.lang.Boolean")))) ;;at TAG_8
                                      (99 (areturn)) ;;at TAG_9
                                      (100 (aload_0)) ;;at TAG_7
                                      (101 (instanceof (class "java.util.Set"))) 
                                      (104 (ifeq 132)) ;;to TAG_10
                                      (107 (aload_0)) 
                                      (108 (checkcast (class "java.util.Set"))) 
                                      (111 (astore_2)) 
                                      (112 (aload_2)) 
                                      (113 (aload_1)) 
                                      (114 (invokeinterface (methodCP "contains" "java.util.Set" ((class "java.lang.Object")) boolean) 2)) 
                                      (119 (ifeq 128)) ;;to TAG_11
                                      (122 (getstatic (fieldCP "T" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (125 (goto 131)) ;;to TAG_12
                                      (128 (getstatic (fieldCP "F" "clojure.lang.RT" (class "java.lang.Boolean")))) ;;at TAG_11
                                      (131 (areturn)) ;;at TAG_12
                                      (132 (aload_1)) ;;at TAG_10
                                      (133 (instanceof (class "java.lang.Number"))) 
                                      (136 (ifeq 185)) ;;to TAG_13
                                      (139 (aload_0)) 
                                      (140 (instanceof (class "java.lang.String"))) 
                                      (143 (ifne 156)) ;;to TAG_14
                                      (146 (aload_0)) 
                                      (147 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (150 (invokevirtual (methodCP "isArray" "java.lang.Class" () boolean))) 
                                      (153 (ifeq 185)) ;;to TAG_13
                                      (156 (aload_1)) ;;at TAG_14
                                      (157 (checkcast (class "java.lang.Number"))) 
                                      (160 (invokevirtual (methodCP "intValue" "java.lang.Number" () int))) 
                                      (163 (istore_2)) 
                                      (164 (iload_2)) 
                                      (165 (iflt 180)) ;;to TAG_15
                                      (168 (iload_2)) 
                                      (169 (aload_0)) 
                                      (170 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (173 (if_icmpge 180)) ;;to TAG_15
                                      (176 (iconst_1)) 
                                      (177 (goto 181)) ;;to TAG_16
                                      (180 (iconst_0)) ;;at TAG_15
                                      (181 (invokestatic (methodCP "valueOf" "java.lang.Boolean" (boolean) (class "java.lang.Boolean")))) ;;at TAG_16
                                      (184 (areturn)) 
                                      (185 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_13
                                      (188 (dup)) 
                                      (189 (new (class "java.lang.StringBuilder"))) 
                                      (192 (dup)) 
                                      (193 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (196 (ldc 21)) ;;STRING:: "contains? not supported on type: "
                                      (198 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (201 (aload_0)) 
                                      (202 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (205 (invokevirtual (methodCP "getName" "java.lang.Class" () (class "java.lang.String")))) 
                                      (208 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (211 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (214 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (217 (athrow)) 
                                      (endofcode 218))
                                   (Exceptions )
                                   (StackMap )))
                        (method "find"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 3) (code_length . 57)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 6)) ;;to TAG_0
                                      (4 (aconst_null)) 
                                      (5 (areturn)) 
                                      (6 (aload_0)) ;;at TAG_0
                                      (7 (instanceof (class "clojure.lang.Associative"))) 
                                      (10 (ifeq 24)) ;;to TAG_1
                                      (13 (aload_0)) 
                                      (14 (checkcast (class "clojure.lang.Associative"))) 
                                      (17 (aload_1)) 
                                      (18 (invokeinterface (methodCP "entryAt" "clojure.lang.Associative" ((class "java.lang.Object")) (class "clojure.lang.IMapEntry")) 2)) 
                                      (23 (areturn)) 
                                      (24 (aload_0)) ;;at TAG_1
                                      (25 (checkcast (class "java.util.Map"))) 
                                      (28 (astore_2)) 
                                      (29 (aload_2)) 
                                      (30 (aload_1)) 
                                      (31 (invokeinterface (methodCP "containsKey" "java.util.Map" ((class "java.lang.Object")) boolean) 2)) 
                                      (36 (ifeq 55))  ;;to TAG_2
                                      (39 (new (class "clojure.lang.MapEntry"))) 
                                      (42 (dup)) 
                                      (43 (aload_1)) 
                                      (44 (aload_2)) 
                                      (45 (aload_1)) 
                                      (46 (invokeinterface (methodCP "get" "java.util.Map" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (51 (invokespecial (methodCP "<init>" "clojure.lang.MapEntry" ((class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (54 (areturn)) 
                                      (55 (aconst_null)) ;;at TAG_2
                                      (56 (areturn)) 
                                      (endofcode 57))
                                   (Exceptions )
                                   (StackMap )))
                        (method "findKey"
                              (parameters (class "clojure.lang.Keyword") (class "clojure.lang.ISeq"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 45)
                                   (parsedcode
                                      (0 (aload_1)) ;;at TAG_3
                                      (1 (ifnull 43)) ;;to TAG_0
                                      (4 (aload_1)) 
                                      (5 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (10 (astore_2)) 
                                      (11 (aload_2)) 
                                      (12 (ifnonnull 21)) ;;to TAG_1
                                      (15 (ldc 22)) ;;STRING:: "Malformed keyword argslist"
                                      (17 (invokestatic (methodCP "runtimeException" "clojure.lang.Util" ((class "java.lang.String")) (class "java.lang.RuntimeException")))) 
                                      (20 (athrow)) 
                                      (21 (aload_1)) ;;at TAG_1
                                      (22 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (27 (aload_0)) 
                                      (28 (if_acmpne 33))  ;;to TAG_2
                                      (31 (aload_2)) 
                                      (32 (areturn)) 
                                      (33 (aload_2)) ;;at TAG_2
                                      (34 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (39 (astore_1)) 
                                      (40 (goto 0)) ;;to TAG_3
                                      (43 (aconst_null)) ;;at TAG_0
                                      (44 (areturn)) 
                                      (endofcode 45))
                                   (Exceptions )
                                   (StackMap )))
                        (method "dissoc"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 17)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 6))  ;;to TAG_0
                                      (4 (aconst_null)) 
                                      (5 (areturn)) 
                                      (6 (aload_0)) ;;at TAG_0
                                      (7 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (10 (aload_1)) 
                                      (11 (invokeinterface (methodCP "without" "clojure.lang.IPersistentMap" ((class "java.lang.Object")) (class "clojure.lang.IPersistentMap")) 2)) 
                                      (16 (areturn)) 
                                      (endofcode 17))
                                   (Exceptions )
                                   (StackMap )))
                        (method "nth"
                              (parameters (class "java.lang.Object") int)
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 30)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "clojure.lang.Indexed"))) 
                                      (4 (ifeq 18))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "clojure.lang.Indexed"))) 
                                      (11 (iload_1)) 
                                      (12 (invokeinterface (methodCP "nth" "clojure.lang.Indexed" (int) (class "java.lang.Object")) 2)) 
                                      (17 (areturn)) 
                                      (18 (aload_0)) ;;at TAG_0
                                      (19 (aconst_null)) 
                                      (20 (dup)) 
                                      (21 (astore_0)) 
                                      (22 (invokestatic (methodCP "ret1" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (25 (iload_1)) 
                                      (26 (invokestatic (methodCP "nthFrom" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (29 (areturn)) 
                                      (endofcode 30))
                                   (Exceptions )
                                   (StackMap )))
                        (method "nthFrom"
                              (parameters (class "java.lang.Object") int)
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 221)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 6)) ;;to TAG_0
                                      (4 (aconst_null)) 
                                      (5 (areturn)) 
                                      (6 (aload_0)) ;;at TAG_0
                                      (7 (instanceof (class "java.lang.CharSequence"))) 
                                      (10 (ifeq 27))  ;;to TAG_1
                                      (13 (aload_0)) 
                                      (14 (checkcast (class "java.lang.CharSequence"))) 
                                      (17 (iload_1)) 
                                      (18 (invokeinterface (methodCP "charAt" "java.lang.CharSequence" (int) char) 2)) 
                                      (23 (invokestatic (methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character")))) 
                                      (26 (areturn)) 
                                      (27 (aload_0)) ;;at TAG_1
                                      (28 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (31 (invokevirtual (methodCP "isArray" "java.lang.Class" () boolean))) 
                                      (34 (ifeq 53)) ;;to TAG_2
                                      (37 (aload_0)) 
                                      (38 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (41 (invokevirtual (methodCP "getComponentType" "java.lang.Class" () (class "java.lang.Class")))) 
                                      (44 (aload_0)) 
                                      (45 (iload_1)) 
                                      (46 (invokestatic (methodCP "get" "java.lang.reflect.Array" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (49 (invokestatic (methodCP "prepRet" "clojure.lang.Reflector" ((class "java.lang.Class") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (52 (areturn)) 
                                      (53 (aload_0)) ;;at TAG_2
                                      (54 (instanceof (class "java.util.RandomAccess"))) 
                                      (57 (ifeq 71)) ;;to TAG_3
                                      (60 (aload_0)) 
                                      (61 (checkcast (class "java.util.List"))) 
                                      (64 (iload_1)) 
                                      (65 (invokeinterface (methodCP "get" "java.util.List" (int) (class "java.lang.Object")) 2)) 
                                      (70 (areturn)) 
                                      (71 (aload_0)) ;;at TAG_3
                                      (72 (instanceof (class "java.util.regex.Matcher"))) 
                                      (75 (ifeq 87)) ;;to TAG_4
                                      (78 (aload_0)) 
                                      (79 (checkcast (class "java.util.regex.Matcher"))) 
                                      (82 (iload_1)) 
                                      (83 (invokevirtual (methodCP "group" "java.util.regex.Matcher" (int) (class "java.lang.String")))) 
                                      (86 (areturn)) 
                                      (87 (aload_0)) ;;at TAG_4
                                      (88 (instanceof (class "java.util.Map$Entry"))) 
                                      (91 (ifeq 130)) ;;to TAG_5
                                      (94 (aload_0)) 
                                      (95 (checkcast (class "java.util.Map$Entry"))) 
                                      (98 (astore_2)) 
                                      (99 (iload_1)) 
                                      (100 (ifne 110)) ;;to TAG_6
                                      (103 (aload_2)) 
                                      (104 (invokeinterface (methodCP "getKey" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (109 (areturn)) 
                                      (110 (iload_1)) ;;at TAG_6
                                      (111 (iconst_1)) 
                                      (112 (if_icmpne 122)) ;;to TAG_7
                                      (115 (aload_2)) 
                                      (116 (invokeinterface (methodCP "getValue" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (121 (areturn)) 
                                      (122 (new (class "java.lang.IndexOutOfBoundsException"))) ;;at TAG_7
                                      (125 (dup)) 
                                      (126 (invokespecial (methodCP "<init>" "java.lang.IndexOutOfBoundsException" () void))) 
                                      (129 (athrow)) 
                                      (130 (aload_0)) ;;at TAG_5
                                      (131 (instanceof (class "clojure.lang.Sequential"))) 
                                      (134 (ifeq 188)) ;;to TAG_8
                                      (137 (aload_0)) 
                                      (138 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (141 (astore_2)) 
                                      (142 (aconst_null)) 
                                      (143 (astore_0)) 
                                      (144 (iconst_0)) 
                                      (145 (istore_3)) 
                                      (146 (iload_3)) ;;at TAG_11
                                      (147 (iload_1)) 
                                      (148 (if_icmpgt 180)) ;;to TAG_9
                                      (151 (aload_2)) 
                                      (152 (ifnull 180)) ;;to TAG_9
                                      (155 (iload_3)) 
                                      (156 (iload_1)) 
                                      (157 (if_icmpne 167)) ;;to TAG_10
                                      (160 (aload_2)) 
                                      (161 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (166 (areturn)) 
                                      (167 (iinc 3 1)) ;;at TAG_10
                                      (170 (aload_2)) 
                                      (171 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (176 (astore_2)) 
                                      (177 (goto 146)) ;;to TAG_11
                                      (180 (new (class "java.lang.IndexOutOfBoundsException"))) ;;at TAG_9
                                      (183 (dup)) 
                                      (184 (invokespecial (methodCP "<init>" "java.lang.IndexOutOfBoundsException" () void))) 
                                      (187 (athrow)) 
                                      (188 (new (class "java.lang.UnsupportedOperationException"))) ;;at TAG_8
                                      (191 (dup)) 
                                      (192 (new (class "java.lang.StringBuilder"))) 
                                      (195 (dup)) 
                                      (196 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (199 (ldc 23)) ;;STRING:: "nth not supported on this type: "
                                      (201 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (204 (aload_0)) 
                                      (205 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (208 (invokevirtual (methodCP "getSimpleName" "java.lang.Class" () (class "java.lang.String")))) 
                                      (211 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (214 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (217 (invokespecial (methodCP "<init>" "java.lang.UnsupportedOperationException" ((class "java.lang.String")) void))) 
                                      (220 (athrow)) 
                                      (endofcode 221))
                                   (Exceptions )
                                   (StackMap )))
                        (method "nth"
                              (parameters (class "java.lang.Object") int (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 28)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "clojure.lang.Indexed"))) 
                                      (4 (ifeq 21))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "clojure.lang.Indexed"))) 
                                      (11 (astore_3)) 
                                      (12 (aload_3)) 
                                      (13 (iload_1)) 
                                      (14 (aload_2)) 
                                      (15 (invokeinterface (methodCP "nth" "clojure.lang.Indexed" (int (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (20 (areturn)) 
                                      (21 (aload_0)) ;;at TAG_0
                                      (22 (iload_1)) 
                                      (23 (aload_2)) 
                                      (24 (invokestatic (methodCP "nthFrom" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (27 (areturn)) 
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap )))
                        (method "nthFrom"
                              (parameters (class "java.lang.Object") int (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 5) (code_length . 268)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 6)) ;;to TAG_0
                                      (4 (aload_2)) 
                                      (5 (areturn)) 
                                      (6 (iload_1)) ;;at TAG_0
                                      (7 (ifge 12))  ;;to TAG_1
                                      (10 (aload_2)) 
                                      (11 (areturn)) 
                                      (12 (aload_0)) ;;at TAG_1
                                      (13 (instanceof (class "java.lang.CharSequence"))) 
                                      (16 (ifeq 47)) ;;to TAG_2
                                      (19 (aload_0)) 
                                      (20 (checkcast (class "java.lang.CharSequence"))) 
                                      (23 (astore_3)) 
                                      (24 (iload_1)) 
                                      (25 (aload_3)) 
                                      (26 (invokeinterface (methodCP "length" "java.lang.CharSequence" () int) 1)) 
                                      (31 (if_icmpge 45)) ;;to TAG_3
                                      (34 (aload_3)) 
                                      (35 (iload_1)) 
                                      (36 (invokeinterface (methodCP "charAt" "java.lang.CharSequence" (int) char) 2)) 
                                      (41 (invokestatic (methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character")))) 
                                      (44 (areturn)) 
                                      (45 (aload_2)) ;;at TAG_3
                                      (46 (areturn)) 
                                      (47 (aload_0)) ;;at TAG_2
                                      (48 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (51 (invokevirtual (methodCP "isArray" "java.lang.Class" () boolean))) 
                                      (54 (ifeq 83)) ;;to TAG_4
                                      (57 (iload_1)) 
                                      (58 (aload_0)) 
                                      (59 (invokestatic (methodCP "getLength" "java.lang.reflect.Array" ((class "java.lang.Object")) int))) 
                                      (62 (if_icmpge 81)) ;;to TAG_5
                                      (65 (aload_0)) 
                                      (66 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (69 (invokevirtual (methodCP "getComponentType" "java.lang.Class" () (class "java.lang.Class")))) 
                                      (72 (aload_0)) 
                                      (73 (iload_1)) 
                                      (74 (invokestatic (methodCP "get" "java.lang.reflect.Array" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (77 (invokestatic (methodCP "prepRet" "clojure.lang.Reflector" ((class "java.lang.Class") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (80 (areturn)) 
                                      (81 (aload_2)) ;;at TAG_5
                                      (82 (areturn)) 
                                      (83 (aload_0)) ;;at TAG_4
                                      (84 (instanceof (class "java.util.RandomAccess"))) 
                                      (87 (ifeq 115)) ;;to TAG_6
                                      (90 (aload_0)) 
                                      (91 (checkcast (class "java.util.List"))) 
                                      (94 (astore_3)) 
                                      (95 (iload_1)) 
                                      (96 (aload_3)) 
                                      (97 (invokeinterface (methodCP "size" "java.util.List" () int) 1)) 
                                      (102 (if_icmpge 113)) ;;to TAG_7
                                      (105 (aload_3)) 
                                      (106 (iload_1)) 
                                      (107 (invokeinterface (methodCP "get" "java.util.List" (int) (class "java.lang.Object")) 2)) 
                                      (112 (areturn)) 
                                      (113 (aload_2)) ;;at TAG_7
                                      (114 (areturn)) 
                                      (115 (aload_0)) ;;at TAG_6
                                      (116 (instanceof (class "java.util.regex.Matcher"))) 
                                      (119 (ifeq 143)) ;;to TAG_8
                                      (122 (aload_0)) 
                                      (123 (checkcast (class "java.util.regex.Matcher"))) 
                                      (126 (astore_3)) 
                                      (127 (iload_1)) 
                                      (128 (aload_3)) 
                                      (129 (invokevirtual (methodCP "groupCount" "java.util.regex.Matcher" () int))) 
                                      (132 (if_icmpge 141)) ;;to TAG_9
                                      (135 (aload_3)) 
                                      (136 (iload_1)) 
                                      (137 (invokevirtual (methodCP "group" "java.util.regex.Matcher" (int) (class "java.lang.String")))) 
                                      (140 (areturn)) 
                                      (141 (aload_2)) ;;at TAG_9
                                      (142 (areturn)) 
                                      (143 (aload_0)) ;;at TAG_8
                                      (144 (instanceof (class "java.util.Map$Entry"))) 
                                      (147 (ifeq 180)) ;;to TAG_10
                                      (150 (aload_0)) 
                                      (151 (checkcast (class "java.util.Map$Entry"))) 
                                      (154 (astore_3)) 
                                      (155 (iload_1)) 
                                      (156 (ifne 166)) ;;to TAG_11
                                      (159 (aload_3)) 
                                      (160 (invokeinterface (methodCP "getKey" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (165 (areturn)) 
                                      (166 (iload_1)) ;;at TAG_11
                                      (167 (iconst_1)) 
                                      (168 (if_icmpne 178)) ;;to TAG_12
                                      (171 (aload_3)) 
                                      (172 (invokeinterface (methodCP "getValue" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (177 (areturn)) 
                                      (178 (aload_2)) ;;at TAG_12
                                      (179 (areturn)) 
                                      (180 (aload_0)) ;;at TAG_10
                                      (181 (instanceof (class "clojure.lang.Sequential"))) 
                                      (184 (ifeq 235)) ;;to TAG_13
                                      (187 (aload_0)) 
                                      (188 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (191 (astore_3)) 
                                      (192 (aconst_null)) 
                                      (193 (astore_0)) 
                                      (194 (iconst_0)) 
                                      (195 (istore 4)) 
                                      (197 (iload 4)) ;;at TAG_16
                                      (199 (iload_1)) 
                                      (200 (if_icmpgt 233)) ;;to TAG_14
                                      (203 (aload_3)) 
                                      (204 (ifnull 233)) ;;to TAG_14
                                      (207 (iload 4)) 
                                      (209 (iload_1)) 
                                      (210 (if_icmpne 220)) ;;to TAG_15
                                      (213 (aload_3)) 
                                      (214 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (219 (areturn)) 
                                      (220 (iinc 4 1)) ;;at TAG_15
                                      (223 (aload_3)) 
                                      (224 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (229 (astore_3)) 
                                      (230 (goto 197)) ;;to TAG_16
                                      (233 (aload_2)) ;;at TAG_14
                                      (234 (areturn)) 
                                      (235 (new (class "java.lang.UnsupportedOperationException"))) ;;at TAG_13
                                      (238 (dup)) 
                                      (239 (new (class "java.lang.StringBuilder"))) 
                                      (242 (dup)) 
                                      (243 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (246 (ldc 23)) ;;STRING:: "nth not supported on this type: "
                                      (248 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (251 (aload_0)) 
                                      (252 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (255 (invokevirtual (methodCP "getSimpleName" "java.lang.Class" () (class "java.lang.String")))) 
                                      (258 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (261 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (264 (invokespecial (methodCP "<init>" "java.lang.UnsupportedOperationException" ((class "java.lang.String")) void))) 
                                      (267 (athrow)) 
                                      (endofcode 268))
                                   (Exceptions )
                                   (StackMap )))
                        (method "assocN"
                              (parameters int (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 48)
                                   (parsedcode
                                      (0 (aload_2)) 
                                      (1 (ifnonnull 6)) ;;to TAG_0
                                      (4 (aconst_null)) 
                                      (5 (areturn)) 
                                      (6 (aload_2)) ;;at TAG_0
                                      (7 (instanceof (class "clojure.lang.IPersistentVector"))) 
                                      (10 (ifeq 25)) ;;to TAG_1
                                      (13 (aload_2)) 
                                      (14 (checkcast (class "clojure.lang.IPersistentVector"))) 
                                      (17 (iload_0)) 
                                      (18 (aload_1)) 
                                      (19 (invokeinterface (methodCP "assocN" "clojure.lang.IPersistentVector" (int (class "java.lang.Object")) (class "clojure.lang.IPersistentVector")) 3)) 
                                      (24 (areturn)) 
                                      (25 (aload_2)) ;;at TAG_1
                                      (26 (instanceof (array (class "java.lang.Object")))) 
                                      (29 (ifeq 46))  ;;to TAG_2
                                      (32 (aload_2)) 
                                      (33 (checkcast (array (class "java.lang.Object")))) 
                                      (36 (checkcast (array (class "java.lang.Object")))) 
                                      (39 (astore_3)) 
                                      (40 (aload_3)) 
                                      (41 (iload_0)) 
                                      (42 (aload_1)) 
                                      (43 (aastore)) 
                                      (44 (aload_3)) 
                                      (45 (areturn)) 
                                      (46 (aconst_null)) ;;at TAG_2
                                      (47 (areturn)) 
                                      (endofcode 48))
                                   (Exceptions )
                                   (StackMap )))
                        (method "hasTag"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (aload_0))
                                      (2 (invokestatic
                    (methodCP "meta" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.IPersistentMap"))))
                                      (5 (getstatic (fieldCP "TAG_KEY" "clojure.lang.RT" (class "clojure.lang.Keyword"))))
                                      (8 (invokestatic
                    (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (11 (invokestatic
                    (methodCP "equals" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean)))
                                      (14 (ireturn))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "box"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (areturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "box"
                              (parameters char)
                              (returntype . (class "java.lang.Character"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (invokestatic
                    (methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "box"
                              (parameters boolean)
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 14)
                                   (parsedcode
                                      (0 (iload_0)) 
                                      (1 (ifeq 10))  ;;to TAG_0
                                      (4 (getstatic (fieldCP "T" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (7 (goto 13)) ;;to TAG_1
                                      (10 (getstatic (fieldCP "F" "clojure.lang.RT" (class "java.lang.Boolean")))) ;;at TAG_0
                                      (13 (areturn)) ;;at TAG_1
                                      (endofcode 14))
                                   (Exceptions )
                                   (StackMap )))
                        (method "box"
                              (parameters (class "java.lang.Boolean"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (areturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "box"
                              (parameters byte)
                              (returntype . (class "java.lang.Number"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (invokestatic
                    (methodCP "valueOf" "java.lang.Byte" (byte) (class "java.lang.Byte"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "box"
                              (parameters short)
                              (returntype . (class "java.lang.Number"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (invokestatic
                    (methodCP "valueOf" "java.lang.Short" (short) (class "java.lang.Short"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "box"
                              (parameters int)
                              (returntype . (class "java.lang.Number"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (invokestatic
                    (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "box"
                              (parameters long)
                              (returntype . (class "java.lang.Number"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 5)
                                   (parsedcode
                                      (0 (lload_0))
                                      (1 (invokestatic
                    (methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "box"
                              (parameters float)
                              (returntype . (class "java.lang.Number"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (fload_0))
                                      (1 (invokestatic
                    (methodCP "valueOf" "java.lang.Float" (float) (class "java.lang.Float"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "box"
                              (parameters double)
                              (returntype . (class "java.lang.Number"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 5)
                                   (parsedcode
                                      (0 (dload_0))
                                      (1 (invokestatic
                    (methodCP "valueOf" "java.lang.Double" (double) (class "java.lang.Double"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "charCast"
                              (parameters (class "java.lang.Object"))
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 68)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "java.lang.Character"))) 
                                      (4 (ifeq 15)) ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "java.lang.Character"))) 
                                      (11 (invokevirtual (methodCP "charValue" "java.lang.Character" () char))) 
                                      (14 (ireturn)) 
                                      (15 (aload_0)) ;;at TAG_0
                                      (16 (checkcast (class "java.lang.Number"))) 
                                      (19 (invokevirtual (methodCP "longValue" "java.lang.Number" () long))) 
                                      (22 (lstore_1)) 
                                      (23 (lload_1)) 
                                      (24 (lconst_0)) 
                                      (25 (lcmp)) 
                                      (26 (iflt 37)) ;;to TAG_1
                                      (29 (lload_1)) 
                                      (30 (ldc2_w 24)) ;; LONG:: "65535"
                                      (33 (lcmp)) 
                                      (34 (ifle 64))  ;;to TAG_2
                                      (37 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_1
                                      (40 (dup)) 
                                      (41 (new (class "java.lang.StringBuilder"))) 
                                      (44 (dup)) 
                                      (45 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (48 (ldc 25)) ;;STRING:: "Value out of range for char: "
                                      (50 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (53 (aload_0)) 
                                      (54 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (57 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (60 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (63 (athrow)) 
                                      (64 (lload_1)) ;;at TAG_2
                                      (65 (l2i)) 
                                      (66 (i2c)) 
                                      (67 (ireturn)) 
                                      (endofcode 68))
                                   (Exceptions )
                                   (StackMap )))
                        (method "charCast"
                              (parameters byte)
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 37)
                                   (parsedcode
                                      (0 (iload_0)) 
                                      (1 (i2c)) 
                                      (2 (istore_1)) 
                                      (3 (iload_1)) 
                                      (4 (iload_0)) 
                                      (5 (if_icmpeq 35))  ;;to TAG_0
                                      (8 (new (class "java.lang.IllegalArgumentException"))) 
                                      (11 (dup)) 
                                      (12 (new (class "java.lang.StringBuilder"))) 
                                      (15 (dup)) 
                                      (16 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (19 (ldc 25)) ;;STRING:: "Value out of range for char: "
                                      (21 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (24 (iload_0)) 
                                      (25 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder")))) 
                                      (28 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (31 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (34 (athrow)) 
                                      (35 (iload_1)) ;;at TAG_0
                                      (36 (ireturn)) 
                                      (endofcode 37))
                                   (Exceptions )
                                   (StackMap )))
                        (method "charCast"
                              (parameters short)
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 37)
                                   (parsedcode
                                      (0 (iload_0)) 
                                      (1 (i2c)) 
                                      (2 (istore_1)) 
                                      (3 (iload_1)) 
                                      (4 (iload_0)) 
                                      (5 (if_icmpeq 35))  ;;to TAG_0
                                      (8 (new (class "java.lang.IllegalArgumentException"))) 
                                      (11 (dup)) 
                                      (12 (new (class "java.lang.StringBuilder"))) 
                                      (15 (dup)) 
                                      (16 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (19 (ldc 25)) ;;STRING:: "Value out of range for char: "
                                      (21 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (24 (iload_0)) 
                                      (25 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder")))) 
                                      (28 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (31 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (34 (athrow)) 
                                      (35 (iload_1)) ;;at TAG_0
                                      (36 (ireturn)) 
                                      (endofcode 37))
                                   (Exceptions )
                                   (StackMap )))
                        (method "charCast"
                              (parameters char)
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "charCast"
                              (parameters int)
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 37)
                                   (parsedcode
                                      (0 (iload_0)) 
                                      (1 (i2c)) 
                                      (2 (istore_1)) 
                                      (3 (iload_1)) 
                                      (4 (iload_0)) 
                                      (5 (if_icmpeq 35))  ;;to TAG_0
                                      (8 (new (class "java.lang.IllegalArgumentException"))) 
                                      (11 (dup)) 
                                      (12 (new (class "java.lang.StringBuilder"))) 
                                      (15 (dup)) 
                                      (16 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (19 (ldc 25)) ;;STRING:: "Value out of range for char: "
                                      (21 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (24 (iload_0)) 
                                      (25 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder")))) 
                                      (28 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (31 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (34 (athrow)) 
                                      (35 (iload_1)) ;;at TAG_0
                                      (36 (ireturn)) 
                                      (endofcode 37))
                                   (Exceptions )
                                   (StackMap )))
                        (method "charCast"
                              (parameters long)
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 3) (code_length . 40)
                                   (parsedcode
                                      (0 (lload_0)) 
                                      (1 (l2i)) 
                                      (2 (i2c)) 
                                      (3 (istore_2)) 
                                      (4 (iload_2)) 
                                      (5 (i2l)) 
                                      (6 (lload_0)) 
                                      (7 (lcmp)) 
                                      (8 (ifeq 38))  ;;to TAG_0
                                      (11 (new (class "java.lang.IllegalArgumentException"))) 
                                      (14 (dup)) 
                                      (15 (new (class "java.lang.StringBuilder"))) 
                                      (18 (dup)) 
                                      (19 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (22 (ldc 25)) ;;STRING:: "Value out of range for char: "
                                      (24 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (27 (lload_0)) 
                                      (28 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (long) (class "java.lang.StringBuilder")))) 
                                      (31 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (34 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (37 (athrow)) 
                                      (38 (iload_2)) ;;at TAG_0
                                      (39 (ireturn)) 
                                      (endofcode 40))
                                   (Exceptions )
                                   (StackMap )))
                        (method "charCast"
                              (parameters float)
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 1) (code_length . 44)
                                   (parsedcode
                                      (0 (fload_0)) 
                                      (1 (fconst_0)) 
                                      (2 (fcmpl)) 
                                      (3 (iflt 17))  ;;to TAG_0
                                      (6 (fload_0)) 
                                      (7 (ldc 26)) ;;FLOAT:: "65535.0"
                                      (9 (fcmpg)) 
                                      (10 (ifgt 17))  ;;to TAG_0
                                      (13 (fload_0)) 
                                      (14 (f2i)) 
                                      (15 (i2c)) 
                                      (16 (ireturn)) 
                                      (17 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_0
                                      (20 (dup)) 
                                      (21 (new (class "java.lang.StringBuilder"))) 
                                      (24 (dup)) 
                                      (25 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (28 (ldc 25)) ;;STRING:: "Value out of range for char: "
                                      (30 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (33 (fload_0)) 
                                      (34 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (float) (class "java.lang.StringBuilder")))) 
                                      (37 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (40 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (43 (athrow)) 
                                      (endofcode 44))
                                   (Exceptions )
                                   (StackMap )))
                        (method "charCast"
                              (parameters double)
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 45)
                                   (parsedcode
                                      (0 (dload_0)) 
                                      (1 (dconst_0)) 
                                      (2 (dcmpl)) 
                                      (3 (iflt 18))  ;;to TAG_0
                                      (6 (dload_0)) 
                                      (7 (ldc2_w 27)) ;; DOUBLE:: "65535.0"
                                      (10 (dcmpg)) 
                                      (11 (ifgt 18))  ;;to TAG_0
                                      (14 (dload_0)) 
                                      (15 (d2i)) 
                                      (16 (i2c)) 
                                      (17 (ireturn)) 
                                      (18 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_0
                                      (21 (dup)) 
                                      (22 (new (class "java.lang.StringBuilder"))) 
                                      (25 (dup)) 
                                      (26 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (29 (ldc 25)) ;;STRING:: "Value out of range for char: "
                                      (31 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (34 (dload_0)) 
                                      (35 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (double) (class "java.lang.StringBuilder")))) 
                                      (38 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (41 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (44 (athrow)) 
                                      (endofcode 45))
                                   (Exceptions )
                                   (StackMap )))
                        (method "booleanCast"
                              (parameters (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 25)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "java.lang.Boolean"))) 
                                      (4 (ifeq 15)) ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "java.lang.Boolean"))) 
                                      (11 (invokevirtual (methodCP "booleanValue" "java.lang.Boolean" () boolean))) 
                                      (14 (ireturn)) 
                                      (15 (aload_0)) ;;at TAG_0
                                      (16 (ifnull 23)) ;;to TAG_1
                                      (19 (iconst_1)) 
                                      (20 (goto 24))  ;;to TAG_2
                                      (23 (iconst_0)) ;;at TAG_1
                                      (24 (ireturn)) ;;at TAG_2
                                      (endofcode 25))
                                   (Exceptions )
                                   (StackMap )))
                        (method "booleanCast"
                              (parameters boolean)
                              (returntype . boolean)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "byteCast"
                              (parameters (class "java.lang.Object"))
                              (returntype . byte)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 67)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "java.lang.Byte"))) 
                                      (4 (ifeq 15)) ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "java.lang.Byte"))) 
                                      (11 (invokevirtual (methodCP "byteValue" "java.lang.Byte" () byte))) 
                                      (14 (ireturn)) 
                                      (15 (aload_0)) ;;at TAG_0
                                      (16 (invokestatic (methodCP "longCast" "clojure.lang.RT" ((class "java.lang.Object")) long))) 
                                      (19 (lstore_1)) 
                                      (20 (lload_1)) 
                                      (21 (ldc2_w 28)) ;; LONG:: "-128"
                                      (24 (lcmp)) 
                                      (25 (iflt 36)) ;;to TAG_1
                                      (28 (lload_1)) 
                                      (29 (ldc2_w 29)) ;; LONG:: "127"
                                      (32 (lcmp)) 
                                      (33 (ifle 63))  ;;to TAG_2
                                      (36 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_1
                                      (39 (dup)) 
                                      (40 (new (class "java.lang.StringBuilder"))) 
                                      (43 (dup)) 
                                      (44 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (47 (ldc 30)) ;;STRING:: "Value out of range for byte: "
                                      (49 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (52 (aload_0)) 
                                      (53 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (56 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (59 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (62 (athrow)) 
                                      (63 (lload_1)) ;;at TAG_2
                                      (64 (l2i)) 
                                      (65 (i2b)) 
                                      (66 (ireturn)) 
                                      (endofcode 67))
                                   (Exceptions )
                                   (StackMap )))
                        (method "byteCast"
                              (parameters byte)
                              (returntype . byte)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "byteCast"
                              (parameters short)
                              (returntype . byte)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 37)
                                   (parsedcode
                                      (0 (iload_0)) 
                                      (1 (i2b)) 
                                      (2 (istore_1)) 
                                      (3 (iload_1)) 
                                      (4 (iload_0)) 
                                      (5 (if_icmpeq 35))  ;;to TAG_0
                                      (8 (new (class "java.lang.IllegalArgumentException"))) 
                                      (11 (dup)) 
                                      (12 (new (class "java.lang.StringBuilder"))) 
                                      (15 (dup)) 
                                      (16 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (19 (ldc 30)) ;;STRING:: "Value out of range for byte: "
                                      (21 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (24 (iload_0)) 
                                      (25 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder")))) 
                                      (28 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (31 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (34 (athrow)) 
                                      (35 (iload_1)) ;;at TAG_0
                                      (36 (ireturn)) 
                                      (endofcode 37))
                                   (Exceptions )
                                   (StackMap )))
                        (method "byteCast"
                              (parameters int)
                              (returntype . byte)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 37)
                                   (parsedcode
                                      (0 (iload_0)) 
                                      (1 (i2b)) 
                                      (2 (istore_1)) 
                                      (3 (iload_1)) 
                                      (4 (iload_0)) 
                                      (5 (if_icmpeq 35))  ;;to TAG_0
                                      (8 (new (class "java.lang.IllegalArgumentException"))) 
                                      (11 (dup)) 
                                      (12 (new (class "java.lang.StringBuilder"))) 
                                      (15 (dup)) 
                                      (16 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (19 (ldc 30)) ;;STRING:: "Value out of range for byte: "
                                      (21 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (24 (iload_0)) 
                                      (25 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder")))) 
                                      (28 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (31 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (34 (athrow)) 
                                      (35 (iload_1)) ;;at TAG_0
                                      (36 (ireturn)) 
                                      (endofcode 37))
                                   (Exceptions )
                                   (StackMap )))
                        (method "byteCast"
                              (parameters long)
                              (returntype . byte)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 3) (code_length . 40)
                                   (parsedcode
                                      (0 (lload_0)) 
                                      (1 (l2i)) 
                                      (2 (i2b)) 
                                      (3 (istore_2)) 
                                      (4 (iload_2)) 
                                      (5 (i2l)) 
                                      (6 (lload_0)) 
                                      (7 (lcmp)) 
                                      (8 (ifeq 38))  ;;to TAG_0
                                      (11 (new (class "java.lang.IllegalArgumentException"))) 
                                      (14 (dup)) 
                                      (15 (new (class "java.lang.StringBuilder"))) 
                                      (18 (dup)) 
                                      (19 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (22 (ldc 30)) ;;STRING:: "Value out of range for byte: "
                                      (24 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (27 (lload_0)) 
                                      (28 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (long) (class "java.lang.StringBuilder")))) 
                                      (31 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (34 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (37 (athrow)) 
                                      (38 (iload_2)) ;;at TAG_0
                                      (39 (ireturn)) 
                                      (endofcode 40))
                                   (Exceptions )
                                   (StackMap )))
                        (method "byteCast"
                              (parameters float)
                              (returntype . byte)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 1) (code_length . 45)
                                   (parsedcode
                                      (0 (fload_0)) 
                                      (1 (ldc 31)) ;;FLOAT:: "-128.0"
                                      (3 (fcmpl)) 
                                      (4 (iflt 18))  ;;to TAG_0
                                      (7 (fload_0)) 
                                      (8 (ldc 32)) ;;FLOAT:: "127.0"
                                      (10 (fcmpg)) 
                                      (11 (ifgt 18))  ;;to TAG_0
                                      (14 (fload_0)) 
                                      (15 (f2i)) 
                                      (16 (i2b)) 
                                      (17 (ireturn)) 
                                      (18 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_0
                                      (21 (dup)) 
                                      (22 (new (class "java.lang.StringBuilder"))) 
                                      (25 (dup)) 
                                      (26 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (29 (ldc 30)) ;;STRING:: "Value out of range for byte: "
                                      (31 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (34 (fload_0)) 
                                      (35 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (float) (class "java.lang.StringBuilder")))) 
                                      (38 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (41 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (44 (athrow)) 
                                      (endofcode 45))
                                   (Exceptions )
                                   (StackMap )))
                        (method "byteCast"
                              (parameters double)
                              (returntype . byte)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 47)
                                   (parsedcode
                                      (0 (dload_0)) 
                                      (1 (ldc2_w 33)) ;; DOUBLE:: "-128.0"
                                      (4 (dcmpl)) 
                                      (5 (iflt 20))  ;;to TAG_0
                                      (8 (dload_0)) 
                                      (9 (ldc2_w 34)) ;; DOUBLE:: "127.0"
                                      (12 (dcmpg)) 
                                      (13 (ifgt 20))  ;;to TAG_0
                                      (16 (dload_0)) 
                                      (17 (d2i)) 
                                      (18 (i2b)) 
                                      (19 (ireturn)) 
                                      (20 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_0
                                      (23 (dup)) 
                                      (24 (new (class "java.lang.StringBuilder"))) 
                                      (27 (dup)) 
                                      (28 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (31 (ldc 30)) ;;STRING:: "Value out of range for byte: "
                                      (33 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (36 (dload_0)) 
                                      (37 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (double) (class "java.lang.StringBuilder")))) 
                                      (40 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (43 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (46 (athrow)) 
                                      (endofcode 47))
                                   (Exceptions )
                                   (StackMap )))
                        (method "shortCast"
                              (parameters (class "java.lang.Object"))
                              (returntype . short)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 68)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "java.lang.Short"))) 
                                      (4 (ifeq 15)) ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "java.lang.Short"))) 
                                      (11 (invokevirtual (methodCP "shortValue" "java.lang.Short" () short))) 
                                      (14 (ireturn)) 
                                      (15 (aload_0)) ;;at TAG_0
                                      (16 (invokestatic (methodCP "longCast" "clojure.lang.RT" ((class "java.lang.Object")) long))) 
                                      (19 (lstore_1)) 
                                      (20 (lload_1)) 
                                      (21 (ldc2_w 35)) ;; LONG:: "-32768"
                                      (24 (lcmp)) 
                                      (25 (iflt 36)) ;;to TAG_1
                                      (28 (lload_1)) 
                                      (29 (ldc2_w 36)) ;; LONG:: "32767"
                                      (32 (lcmp)) 
                                      (33 (ifle 64))  ;;to TAG_2
                                      (36 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_1
                                      (39 (dup)) 
                                      (40 (new (class "java.lang.StringBuilder"))) 
                                      (43 (dup)) 
                                      (44 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (47 (ldc_w 37)) ;;STRING:: "Value out of range for short: "
                                      (50 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (53 (aload_0)) 
                                      (54 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (57 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (60 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (63 (athrow)) 
                                      (64 (lload_1)) ;;at TAG_2
                                      (65 (l2i)) 
                                      (66 (i2s)) 
                                      (67 (ireturn)) 
                                      (endofcode 68))
                                   (Exceptions )
                                   (StackMap )))
                        (method "shortCast"
                              (parameters byte)
                              (returntype . short)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2s))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "shortCast"
                              (parameters short)
                              (returntype . short)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "shortCast"
                              (parameters int)
                              (returntype . short)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 38)
                                   (parsedcode
                                      (0 (iload_0)) 
                                      (1 (i2s)) 
                                      (2 (istore_1)) 
                                      (3 (iload_1)) 
                                      (4 (iload_0)) 
                                      (5 (if_icmpeq 36))  ;;to TAG_0
                                      (8 (new (class "java.lang.IllegalArgumentException"))) 
                                      (11 (dup)) 
                                      (12 (new (class "java.lang.StringBuilder"))) 
                                      (15 (dup)) 
                                      (16 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (19 (ldc_w 37)) ;;STRING:: "Value out of range for short: "
                                      (22 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (25 (iload_0)) 
                                      (26 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder")))) 
                                      (29 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (32 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (35 (athrow)) 
                                      (36 (iload_1)) ;;at TAG_0
                                      (37 (ireturn)) 
                                      (endofcode 38))
                                   (Exceptions )
                                   (StackMap )))
                        (method "shortCast"
                              (parameters long)
                              (returntype . short)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 3) (code_length . 41)
                                   (parsedcode
                                      (0 (lload_0)) 
                                      (1 (l2i)) 
                                      (2 (i2s)) 
                                      (3 (istore_2)) 
                                      (4 (iload_2)) 
                                      (5 (i2l)) 
                                      (6 (lload_0)) 
                                      (7 (lcmp)) 
                                      (8 (ifeq 39))  ;;to TAG_0
                                      (11 (new (class "java.lang.IllegalArgumentException"))) 
                                      (14 (dup)) 
                                      (15 (new (class "java.lang.StringBuilder"))) 
                                      (18 (dup)) 
                                      (19 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (22 (ldc_w 37)) ;;STRING:: "Value out of range for short: "
                                      (25 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (28 (lload_0)) 
                                      (29 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (long) (class "java.lang.StringBuilder")))) 
                                      (32 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (35 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (38 (athrow)) 
                                      (39 (iload_2)) ;;at TAG_0
                                      (40 (ireturn)) 
                                      (endofcode 41))
                                   (Exceptions )
                                   (StackMap )))
                        (method "shortCast"
                              (parameters float)
                              (returntype . short)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 1) (code_length . 48)
                                   (parsedcode
                                      (0 (fload_0)) 
                                      (1 (ldc_w 38)) ;;FLOAT:: "-32768.0"
                                      (4 (fcmpl)) 
                                      (5 (iflt 20))  ;;to TAG_0
                                      (8 (fload_0)) 
                                      (9 (ldc_w 39)) ;;FLOAT:: "32767.0"
                                      (12 (fcmpg)) 
                                      (13 (ifgt 20))  ;;to TAG_0
                                      (16 (fload_0)) 
                                      (17 (f2i)) 
                                      (18 (i2s)) 
                                      (19 (ireturn)) 
                                      (20 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_0
                                      (23 (dup)) 
                                      (24 (new (class "java.lang.StringBuilder"))) 
                                      (27 (dup)) 
                                      (28 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (31 (ldc_w 37)) ;;STRING:: "Value out of range for short: "
                                      (34 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (37 (fload_0)) 
                                      (38 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (float) (class "java.lang.StringBuilder")))) 
                                      (41 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (44 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (47 (athrow)) 
                                      (endofcode 48))
                                   (Exceptions )
                                   (StackMap )))
                        (method "shortCast"
                              (parameters double)
                              (returntype . short)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 48)
                                   (parsedcode
                                      (0 (dload_0)) 
                                      (1 (ldc2_w 40)) ;; DOUBLE:: "-32768.0"
                                      (4 (dcmpl)) 
                                      (5 (iflt 20))  ;;to TAG_0
                                      (8 (dload_0)) 
                                      (9 (ldc2_w 41)) ;; DOUBLE:: "32767.0"
                                      (12 (dcmpg)) 
                                      (13 (ifgt 20))  ;;to TAG_0
                                      (16 (dload_0)) 
                                      (17 (d2i)) 
                                      (18 (i2s)) 
                                      (19 (ireturn)) 
                                      (20 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_0
                                      (23 (dup)) 
                                      (24 (new (class "java.lang.StringBuilder"))) 
                                      (27 (dup)) 
                                      (28 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (31 (ldc_w 37)) ;;STRING:: "Value out of range for short: "
                                      (34 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (37 (dload_0)) 
                                      (38 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (double) (class "java.lang.StringBuilder")))) 
                                      (41 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (44 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (47 (athrow)) 
                                      (endofcode 48))
                                   (Exceptions )
                                   (StackMap )))
                        (method "intCast"
                              (parameters (class "java.lang.Object"))
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 40)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "java.lang.Integer"))) 
                                      (4 (ifeq 15))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "java.lang.Integer"))) 
                                      (11 (invokevirtual (methodCP "intValue" "java.lang.Integer" () int))) 
                                      (14 (ireturn)) 
                                      (15 (aload_0)) ;;at TAG_0
                                      (16 (instanceof (class "java.lang.Number"))) 
                                      (19 (ifeq 32)) ;;to TAG_1
                                      (22 (aload_0)) 
                                      (23 (invokestatic (methodCP "longCast" "clojure.lang.RT" ((class "java.lang.Object")) long))) 
                                      (26 (lstore_1)) 
                                      (27 (lload_1)) 
                                      (28 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (31 (ireturn)) 
                                      (32 (aload_0)) ;;at TAG_1
                                      (33 (checkcast (class "java.lang.Character"))) 
                                      (36 (invokevirtual (methodCP "charValue" "java.lang.Character" () char))) 
                                      (39 (ireturn)) 
                                      (endofcode 40))
                                   (Exceptions )
                                   (StackMap )))
                        (method "intCast"
                              (parameters char)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "intCast"
                              (parameters byte)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "intCast"
                              (parameters short)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "intCast"
                              (parameters int)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "intCast"
                              (parameters float)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 1) (code_length . 47)
                                   (parsedcode
                                      (0 (fload_0)) 
                                      (1 (ldc_w 42)) ;;FLOAT:: "-2.14748365E9"
                                      (4 (fcmpg)) 
                                      (5 (iflt 16))  ;;to TAG_0
                                      (8 (fload_0)) 
                                      (9 (ldc_w 43)) ;;FLOAT:: "2.14748365E9"
                                      (12 (fcmpl)) 
                                      (13 (ifle 44)) ;;to TAG_1
                                      (16 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_0
                                      (19 (dup)) 
                                      (20 (new (class "java.lang.StringBuilder"))) 
                                      (23 (dup)) 
                                      (24 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (27 (ldc_w 44)) ;;STRING:: "Value out of range for int: "
                                      (30 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (33 (fload_0)) 
                                      (34 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (float) (class "java.lang.StringBuilder")))) 
                                      (37 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (40 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (43 (athrow)) 
                                      (44 (fload_0)) ;;at TAG_1
                                      (45 (f2i)) 
                                      (46 (ireturn)) 
                                      (endofcode 47))
                                   (Exceptions )
                                   (StackMap )))
                        (method "intCast"
                              (parameters long)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 3) (code_length . 40)
                                   (parsedcode
                                      (0 (lload_0)) 
                                      (1 (l2i)) 
                                      (2 (istore_2)) 
                                      (3 (iload_2)) 
                                      (4 (i2l)) 
                                      (5 (lload_0)) 
                                      (6 (lcmp)) 
                                      (7 (ifeq 38))  ;;to TAG_0
                                      (10 (new (class "java.lang.IllegalArgumentException"))) 
                                      (13 (dup)) 
                                      (14 (new (class "java.lang.StringBuilder"))) 
                                      (17 (dup)) 
                                      (18 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (21 (ldc_w 44)) ;;STRING:: "Value out of range for int: "
                                      (24 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (27 (lload_0)) 
                                      (28 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (long) (class "java.lang.StringBuilder")))) 
                                      (31 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (34 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (37 (athrow)) 
                                      (38 (iload_2)) ;;at TAG_0
                                      (39 (ireturn)) 
                                      (endofcode 40))
                                   (Exceptions )
                                   (StackMap )))
                        (method "intCast"
                              (parameters double)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 47)
                                   (parsedcode
                                      (0 (dload_0)) 
                                      (1 (ldc2_w 45)) ;; DOUBLE:: "-2.147483648E9"
                                      (4 (dcmpg)) 
                                      (5 (iflt 16))  ;;to TAG_0
                                      (8 (dload_0)) 
                                      (9 (ldc2_w 46)) ;; DOUBLE:: "2.147483647E9"
                                      (12 (dcmpl)) 
                                      (13 (ifle 44)) ;;to TAG_1
                                      (16 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_0
                                      (19 (dup)) 
                                      (20 (new (class "java.lang.StringBuilder"))) 
                                      (23 (dup)) 
                                      (24 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (27 (ldc_w 44)) ;;STRING:: "Value out of range for int: "
                                      (30 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (33 (dload_0)) 
                                      (34 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (double) (class "java.lang.StringBuilder")))) 
                                      (37 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (40 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (43 (athrow)) 
                                      (44 (dload_0)) ;;at TAG_1
                                      (45 (d2i)) 
                                      (46 (ireturn)) 
                                      (endofcode 47))
                                   (Exceptions )
                                   (StackMap )))
                        (method "longCast"
                              (parameters (class "java.lang.Object"))
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 197)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "java.lang.Integer"))) 
                                      (4 (ifne 14)) ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (instanceof (class "java.lang.Long"))) 
                                      (11 (ifeq 22))  ;;to TAG_1
                                      (14 (aload_0)) ;;at TAG_0
                                      (15 (checkcast (class "java.lang.Number"))) 
                                      (18 (invokevirtual (methodCP "longValue" "java.lang.Number" () long))) 
                                      (21 (lreturn)) 
                                      (22 (aload_0)) ;;at TAG_1
                                      (23 (instanceof (class "clojure.lang.BigInt"))) 
                                      (26 (ifeq 74)) ;;to TAG_2
                                      (29 (aload_0)) 
                                      (30 (checkcast (class "clojure.lang.BigInt"))) 
                                      (33 (astore_1)) 
                                      (34 (aload_1)) 
                                      (35 (getfield (fieldCP "bipart" "clojure.lang.BigInt" (class "java.math.BigInteger")))) 
                                      (38 (ifnonnull 46)) ;;to TAG_3
                                      (41 (aload_1)) 
                                      (42 (getfield (fieldCP "lpart" "clojure.lang.BigInt" long))) 
                                      (45 (lreturn)) 
                                      (46 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_3
                                      (49 (dup)) 
                                      (50 (new (class "java.lang.StringBuilder"))) 
                                      (53 (dup)) 
                                      (54 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (57 (ldc_w 47)) ;;STRING:: "Value out of range for long: "
                                      (60 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (63 (aload_0)) 
                                      (64 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (67 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (70 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (73 (athrow)) 
                                      (74 (aload_0)) ;;at TAG_2
                                      (75 (instanceof (class "java.math.BigInteger"))) 
                                      (78 (ifeq 128)) ;;to TAG_4
                                      (81 (aload_0)) 
                                      (82 (checkcast (class "java.math.BigInteger"))) 
                                      (85 (astore_1)) 
                                      (86 (aload_1)) 
                                      (87 (invokevirtual (methodCP "bitLength" "java.math.BigInteger" () int))) 
                                      (90 (bipush 64)) 
                                      (92 (if_icmpge 100)) ;;to TAG_5
                                      (95 (aload_1)) 
                                      (96 (invokevirtual (methodCP "longValue" "java.math.BigInteger" () long))) 
                                      (99 (lreturn)) 
                                      (100 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_5
                                      (103 (dup)) 
                                      (104 (new (class "java.lang.StringBuilder"))) 
                                      (107 (dup)) 
                                      (108 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (111 (ldc_w 47)) ;;STRING:: "Value out of range for long: "
                                      (114 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (117 (aload_0)) 
                                      (118 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (121 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (124 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (127 (athrow)) 
                                      (128 (aload_0)) ;;at TAG_4
                                      (129 (instanceof (class "java.lang.Byte"))) 
                                      (132 (ifne 142)) ;;to TAG_6
                                      (135 (aload_0)) 
                                      (136 (instanceof (class "java.lang.Short"))) 
                                      (139 (ifeq 150)) ;;to TAG_7
                                      (142 (aload_0)) ;;at TAG_6
                                      (143 (checkcast (class "java.lang.Number"))) 
                                      (146 (invokevirtual (methodCP "longValue" "java.lang.Number" () long))) 
                                      (149 (lreturn)) 
                                      (150 (aload_0)) ;;at TAG_7
                                      (151 (instanceof (class "clojure.lang.Ratio"))) 
                                      (154 (ifeq 168)) ;;to TAG_8
                                      (157 (aload_0)) 
                                      (158 (checkcast (class "clojure.lang.Ratio"))) 
                                      (161 (invokevirtual (methodCP "bigIntegerValue" "clojure.lang.Ratio" () (class "java.math.BigInteger")))) 
                                      (164 (invokestatic (methodCP "longCast" "clojure.lang.RT" ((class "java.lang.Object")) long))) 
                                      (167 (lreturn)) 
                                      (168 (aload_0)) ;;at TAG_8
                                      (169 (instanceof (class "java.lang.Character"))) 
                                      (172 (ifeq 186)) ;;to TAG_9
                                      (175 (aload_0)) 
                                      (176 (checkcast (class "java.lang.Character"))) 
                                      (179 (invokevirtual (methodCP "charValue" "java.lang.Character" () char))) 
                                      (182 (invokestatic (methodCP "longCast" "clojure.lang.RT" (int) long))) 
                                      (185 (lreturn)) 
                                      (186 (aload_0)) ;;at TAG_9
                                      (187 (checkcast (class "java.lang.Number"))) 
                                      (190 (invokevirtual (methodCP "doubleValue" "java.lang.Number" () double))) 
                                      (193 (invokestatic (methodCP "longCast" "clojure.lang.RT" (double) long))) 
                                      (196 (lreturn)) 
                                      (endofcode 197))
                                   (Exceptions )
                                   (StackMap )))
                        (method "longCast"
                              (parameters byte)
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2l))
                                      (2 (lreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "longCast"
                              (parameters short)
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2l))
                                      (2 (lreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "longCast"
                              (parameters int)
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2l))
                                      (2 (lreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "longCast"
                              (parameters float)
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 1) (code_length . 47)
                                   (parsedcode
                                      (0 (fload_0)) 
                                      (1 (ldc_w 48)) ;;FLOAT:: "-9.223372E18"
                                      (4 (fcmpg)) 
                                      (5 (iflt 16))  ;;to TAG_0
                                      (8 (fload_0)) 
                                      (9 (ldc_w 49)) ;;FLOAT:: "9.223372E18"
                                      (12 (fcmpl)) 
                                      (13 (ifle 44)) ;;to TAG_1
                                      (16 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_0
                                      (19 (dup)) 
                                      (20 (new (class "java.lang.StringBuilder"))) 
                                      (23 (dup)) 
                                      (24 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (27 (ldc_w 47)) ;;STRING:: "Value out of range for long: "
                                      (30 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (33 (fload_0)) 
                                      (34 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (float) (class "java.lang.StringBuilder")))) 
                                      (37 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (40 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (43 (athrow)) 
                                      (44 (fload_0)) ;;at TAG_1
                                      (45 (f2l)) 
                                      (46 (lreturn)) 
                                      (endofcode 47))
                                   (Exceptions )
                                   (StackMap )))
                        (method "longCast"
                              (parameters long)
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 2)
                                   (parsedcode
                                      (0 (lload_0))
                                      (1 (lreturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "longCast"
                              (parameters double)
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 47)
                                   (parsedcode
                                      (0 (dload_0)) 
                                      (1 (ldc2_w 50)) ;; DOUBLE:: "-9.223372036854776E18"
                                      (4 (dcmpg)) 
                                      (5 (iflt 16))  ;;to TAG_0
                                      (8 (dload_0)) 
                                      (9 (ldc2_w 51)) ;; DOUBLE:: "9.223372036854776E18"
                                      (12 (dcmpl)) 
                                      (13 (ifle 44)) ;;to TAG_1
                                      (16 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_0
                                      (19 (dup)) 
                                      (20 (new (class "java.lang.StringBuilder"))) 
                                      (23 (dup)) 
                                      (24 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (27 (ldc_w 47)) ;;STRING:: "Value out of range for long: "
                                      (30 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (33 (dload_0)) 
                                      (34 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (double) (class "java.lang.StringBuilder")))) 
                                      (37 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (40 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (43 (athrow)) 
                                      (44 (dload_0)) ;;at TAG_1
                                      (45 (d2l)) 
                                      (46 (lreturn)) 
                                      (endofcode 47))
                                   (Exceptions )
                                   (StackMap )))
                        (method "floatCast"
                              (parameters (class "java.lang.Object"))
                              (returntype . float)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 70)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "java.lang.Float"))) 
                                      (4 (ifeq 15)) ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "java.lang.Float"))) 
                                      (11 (invokevirtual (methodCP "floatValue" "java.lang.Float" () float))) 
                                      (14 (freturn)) 
                                      (15 (aload_0)) ;;at TAG_0
                                      (16 (checkcast (class "java.lang.Number"))) 
                                      (19 (invokevirtual (methodCP "doubleValue" "java.lang.Number" () double))) 
                                      (22 (dstore_1)) 
                                      (23 (dload_1)) 
                                      (24 (ldc2_w 52)) ;; DOUBLE:: "-3.4028234663852886E38"
                                      (27 (dcmpg)) 
                                      (28 (iflt 39)) ;;to TAG_1
                                      (31 (dload_1)) 
                                      (32 (ldc2_w 53)) ;; DOUBLE:: "3.4028234663852886E38"
                                      (35 (dcmpl)) 
                                      (36 (ifle 67))  ;;to TAG_2
                                      (39 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_1
                                      (42 (dup)) 
                                      (43 (new (class "java.lang.StringBuilder"))) 
                                      (46 (dup)) 
                                      (47 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (50 (ldc_w 54)) ;;STRING:: "Value out of range for float: "
                                      (53 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (56 (aload_0)) 
                                      (57 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (60 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (63 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (66 (athrow)) 
                                      (67 (dload_1)) ;;at TAG_2
                                      (68 (d2f)) 
                                      (69 (freturn)) 
                                      (endofcode 70))
                                   (Exceptions )
                                   (StackMap )))
                        (method "floatCast"
                              (parameters byte)
                              (returntype . float)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2f))
                                      (2 (freturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "floatCast"
                              (parameters short)
                              (returntype . float)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2f))
                                      (2 (freturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "floatCast"
                              (parameters int)
                              (returntype . float)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2f))
                                      (2 (freturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "floatCast"
                              (parameters float)
                              (returntype . float)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (fload_0))
                                      (1 (freturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "floatCast"
                              (parameters long)
                              (returntype . float)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 3)
                                   (parsedcode
                                      (0 (lload_0))
                                      (1 (l2f))
                                      (2 (freturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "floatCast"
                              (parameters double)
                              (returntype . float)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 47)
                                   (parsedcode
                                      (0 (dload_0)) 
                                      (1 (ldc2_w 52)) ;; DOUBLE:: "-3.4028234663852886E38"
                                      (4 (dcmpg)) 
                                      (5 (iflt 16))  ;;to TAG_0
                                      (8 (dload_0)) 
                                      (9 (ldc2_w 53)) ;; DOUBLE:: "3.4028234663852886E38"
                                      (12 (dcmpl)) 
                                      (13 (ifle 44)) ;;to TAG_1
                                      (16 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_0
                                      (19 (dup)) 
                                      (20 (new (class "java.lang.StringBuilder"))) 
                                      (23 (dup)) 
                                      (24 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (27 (ldc_w 54)) ;;STRING:: "Value out of range for float: "
                                      (30 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (33 (dload_0)) 
                                      (34 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (double) (class "java.lang.StringBuilder")))) 
                                      (37 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (40 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (43 (athrow)) 
                                      (44 (dload_0)) ;;at TAG_1
                                      (45 (d2f)) 
                                      (46 (freturn)) 
                                      (endofcode 47))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doubleCast"
                              (parameters (class "java.lang.Object"))
                              (returntype . double)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (checkcast (class "java.lang.Number")))
                                      (4 (invokevirtual
                    (methodCP "doubleValue" "java.lang.Number" () double)))
                                      (7 (dreturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doubleCast"
                              (parameters byte)
                              (returntype . double)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2d))
                                      (2 (dreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doubleCast"
                              (parameters short)
                              (returntype . double)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2d))
                                      (2 (dreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doubleCast"
                              (parameters int)
                              (returntype . double)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2d))
                                      (2 (dreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doubleCast"
                              (parameters float)
                              (returntype . double)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (fload_0))
                                      (1 (f2d))
                                      (2 (dreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doubleCast"
                              (parameters long)
                              (returntype . double)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 3)
                                   (parsedcode
                                      (0 (lload_0))
                                      (1 (l2d))
                                      (2 (dreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doubleCast"
                              (parameters double)
                              (returntype . double)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 2)
                                   (parsedcode
                                      (0 (dload_0))
                                      (1 (dreturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedByteCast"
                              (parameters (class "java.lang.Object"))
                              (returntype . byte)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (checkcast (class "java.lang.Number")))
                                      (4 (invokevirtual
                    (methodCP "byteValue" "java.lang.Number" () byte)))
                                      (7 (ireturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedByteCast"
                              (parameters byte)
                              (returntype . byte)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedByteCast"
                              (parameters short)
                              (returntype . byte)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2b))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedByteCast"
                              (parameters int)
                              (returntype . byte)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2b))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedByteCast"
                              (parameters long)
                              (returntype . byte)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 4)
                                   (parsedcode
                                      (0 (lload_0))
                                      (1 (l2i))
                                      (2 (i2b))
                                      (3 (ireturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedByteCast"
                              (parameters float)
                              (returntype . byte)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 4)
                                   (parsedcode
                                      (0 (fload_0))
                                      (1 (f2i))
                                      (2 (i2b))
                                      (3 (ireturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedByteCast"
                              (parameters double)
                              (returntype . byte)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 4)
                                   (parsedcode
                                      (0 (dload_0))
                                      (1 (d2i))
                                      (2 (i2b))
                                      (3 (ireturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedShortCast"
                              (parameters (class "java.lang.Object"))
                              (returntype . short)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (checkcast (class "java.lang.Number")))
                                      (4 (invokevirtual
                    (methodCP "shortValue" "java.lang.Number" () short)))
                                      (7 (ireturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedShortCast"
                              (parameters byte)
                              (returntype . short)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2s))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedShortCast"
                              (parameters short)
                              (returntype . short)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedShortCast"
                              (parameters int)
                              (returntype . short)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2s))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedShortCast"
                              (parameters long)
                              (returntype . short)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 4)
                                   (parsedcode
                                      (0 (lload_0))
                                      (1 (l2i))
                                      (2 (i2s))
                                      (3 (ireturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedShortCast"
                              (parameters float)
                              (returntype . short)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 4)
                                   (parsedcode
                                      (0 (fload_0))
                                      (1 (f2i))
                                      (2 (i2s))
                                      (3 (ireturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedShortCast"
                              (parameters double)
                              (returntype . short)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 4)
                                   (parsedcode
                                      (0 (dload_0))
                                      (1 (d2i))
                                      (2 (i2s))
                                      (3 (ireturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedCharCast"
                              (parameters (class "java.lang.Object"))
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 25)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "java.lang.Character"))) 
                                      (4 (ifeq 15))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "java.lang.Character"))) 
                                      (11 (invokevirtual (methodCP "charValue" "java.lang.Character" () char))) 
                                      (14 (ireturn)) 
                                      (15 (aload_0)) ;;at TAG_0
                                      (16 (checkcast (class "java.lang.Number"))) 
                                      (19 (invokevirtual (methodCP "longValue" "java.lang.Number" () long))) 
                                      (22 (l2i)) 
                                      (23 (i2c)) 
                                      (24 (ireturn)) 
                                      (endofcode 25))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedCharCast"
                              (parameters byte)
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2c))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedCharCast"
                              (parameters short)
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2c))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedCharCast"
                              (parameters char)
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedCharCast"
                              (parameters int)
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2c))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedCharCast"
                              (parameters long)
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 4)
                                   (parsedcode
                                      (0 (lload_0))
                                      (1 (l2i))
                                      (2 (i2c))
                                      (3 (ireturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedCharCast"
                              (parameters float)
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 4)
                                   (parsedcode
                                      (0 (fload_0))
                                      (1 (f2i))
                                      (2 (i2c))
                                      (3 (ireturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedCharCast"
                              (parameters double)
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 4)
                                   (parsedcode
                                      (0 (dload_0))
                                      (1 (d2i))
                                      (2 (i2c))
                                      (3 (ireturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedIntCast"
                              (parameters (class "java.lang.Object"))
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 23)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "java.lang.Number"))) 
                                      (4 (ifeq 15))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "java.lang.Number"))) 
                                      (11 (invokevirtual (methodCP "intValue" "java.lang.Number" () int))) 
                                      (14 (ireturn)) 
                                      (15 (aload_0)) ;;at TAG_0
                                      (16 (checkcast (class "java.lang.Character"))) 
                                      (19 (invokevirtual (methodCP "charValue" "java.lang.Character" () char))) 
                                      (22 (ireturn)) 
                                      (endofcode 23))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedIntCast"
                              (parameters byte)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedIntCast"
                              (parameters short)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedIntCast"
                              (parameters char)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedIntCast"
                              (parameters int)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedIntCast"
                              (parameters long)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 3)
                                   (parsedcode
                                      (0 (lload_0))
                                      (1 (l2i))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedIntCast"
                              (parameters float)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (fload_0))
                                      (1 (f2i))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedIntCast"
                              (parameters double)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 3)
                                   (parsedcode
                                      (0 (dload_0))
                                      (1 (d2i))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedLongCast"
                              (parameters (class "java.lang.Object"))
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (checkcast (class "java.lang.Number")))
                                      (4 (invokevirtual
                    (methodCP "longValue" "java.lang.Number" () long)))
                                      (7 (lreturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedLongCast"
                              (parameters byte)
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2l))
                                      (2 (lreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedLongCast"
                              (parameters short)
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2l))
                                      (2 (lreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedLongCast"
                              (parameters int)
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2l))
                                      (2 (lreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedLongCast"
                              (parameters long)
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 2)
                                   (parsedcode
                                      (0 (lload_0))
                                      (1 (lreturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedLongCast"
                              (parameters float)
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (fload_0))
                                      (1 (f2l))
                                      (2 (lreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedLongCast"
                              (parameters double)
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 3)
                                   (parsedcode
                                      (0 (dload_0))
                                      (1 (d2l))
                                      (2 (lreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedFloatCast"
                              (parameters (class "java.lang.Object"))
                              (returntype . float)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (checkcast (class "java.lang.Number")))
                                      (4 (invokevirtual
                    (methodCP "floatValue" "java.lang.Number" () float)))
                                      (7 (freturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedFloatCast"
                              (parameters byte)
                              (returntype . float)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2f))
                                      (2 (freturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedFloatCast"
                              (parameters short)
                              (returntype . float)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2f))
                                      (2 (freturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedFloatCast"
                              (parameters int)
                              (returntype . float)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2f))
                                      (2 (freturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedFloatCast"
                              (parameters long)
                              (returntype . float)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 3)
                                   (parsedcode
                                      (0 (lload_0))
                                      (1 (l2f))
                                      (2 (freturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedFloatCast"
                              (parameters float)
                              (returntype . float)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (fload_0))
                                      (1 (freturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedFloatCast"
                              (parameters double)
                              (returntype . float)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 3)
                                   (parsedcode
                                      (0 (dload_0))
                                      (1 (d2f))
                                      (2 (freturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedDoubleCast"
                              (parameters (class "java.lang.Object"))
                              (returntype . double)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (checkcast (class "java.lang.Number")))
                                      (4 (invokevirtual
                    (methodCP "doubleValue" "java.lang.Number" () double)))
                                      (7 (dreturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedDoubleCast"
                              (parameters byte)
                              (returntype . double)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2d))
                                      (2 (dreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedDoubleCast"
                              (parameters short)
                              (returntype . double)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2d))
                                      (2 (dreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedDoubleCast"
                              (parameters int)
                              (returntype . double)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (iload_0))
                                      (1 (i2d))
                                      (2 (dreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedDoubleCast"
                              (parameters long)
                              (returntype . double)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 3)
                                   (parsedcode
                                      (0 (lload_0))
                                      (1 (l2d))
                                      (2 (dreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedDoubleCast"
                              (parameters float)
                              (returntype . double)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (fload_0))
                                      (1 (f2d))
                                      (2 (dreturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "uncheckedDoubleCast"
                              (parameters double)
                              (returntype . double)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 2)
                                   (parsedcode
                                      (0 (dload_0))
                                      (1 (dreturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "map"
                              (parameters (array (class "java.lang.Object")))
                              (returntype . (class "clojure.lang.IPersistentMap"))
                              (accessflags  *class*  *public*  *static*  *transient* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 25)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 8))  ;;to TAG_0
                                      (4 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentArrayMap" (class "clojure.lang.PersistentArrayMap")))) 
                                      (7 (areturn)) 
                                      (8 (aload_0)) ;;at TAG_0
                                      (9 (arraylength)) 
                                      (10 (bipush 16)) 
                                      (12 (if_icmpgt 20)) ;;to TAG_1
                                      (15 (aload_0)) 
                                      (16 (invokestatic (methodCP "createWithCheck" "clojure.lang.PersistentArrayMap" ((array (class "java.lang.Object"))) (class "clojure.lang.PersistentArrayMap")))) 
                                      (19 (areturn)) 
                                      (20 (aload_0)) ;;at TAG_1
                                      (21 (invokestatic (methodCP "createWithCheck" "clojure.lang.PersistentHashMap" ((array (class "java.lang.Object"))) (class "clojure.lang.PersistentHashMap")))) 
                                      (24 (areturn)) 
                                      (endofcode 25))
                                   (Exceptions )
                                   (StackMap )))
                        (method "mapUniqueKeys"
                              (parameters (array (class "java.lang.Object")))
                              (returntype . (class "clojure.lang.IPersistentMap"))
                              (accessflags  *class*  *public*  *static*  *transient* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 29)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 8))  ;;to TAG_0
                                      (4 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentArrayMap" (class "clojure.lang.PersistentArrayMap")))) 
                                      (7 (areturn)) 
                                      (8 (aload_0)) ;;at TAG_0
                                      (9 (arraylength)) 
                                      (10 (bipush 16)) 
                                      (12 (if_icmpgt 24)) ;;to TAG_1
                                      (15 (new (class "clojure.lang.PersistentArrayMap"))) 
                                      (18 (dup)) 
                                      (19 (aload_0)) 
                                      (20 (invokespecial (methodCP "<init>" "clojure.lang.PersistentArrayMap" ((array (class "java.lang.Object"))) void))) 
                                      (23 (areturn)) 
                                      (24 (aload_0)) ;;at TAG_1
                                      (25 (invokestatic (methodCP "create" "clojure.lang.PersistentHashMap" ((array (class "java.lang.Object"))) (class "clojure.lang.PersistentHashMap")))) 
                                      (28 (areturn)) 
                                      (endofcode 29))
                                   (Exceptions )
                                   (StackMap )))
                        (method "set"
                              (parameters (array (class "java.lang.Object")))
                              (returntype . (class "clojure.lang.IPersistentSet"))
                              (accessflags  *class*  *public*  *static*  *transient* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokestatic
                    (methodCP "createWithCheck" "clojure.lang.PersistentHashSet" ((array (class "java.lang.Object"))) (class "clojure.lang.PersistentHashSet"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "vector"
                              (parameters (array (class "java.lang.Object")))
                              (returntype . (class "clojure.lang.IPersistentVector"))
                              (accessflags  *class*  *public*  *static*  *transient* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokestatic
                    (methodCP "createOwning" "clojure.lang.LazilyPersistentVector" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "subvec"
                              (parameters (class "clojure.lang.IPersistentVector") int int)
                              (returntype . (class "clojure.lang.IPersistentVector"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 6) (max_locals . 3) (code_length . 48)
                                   (parsedcode
                                      (0 (iload_2)) 
                                      (1 (iload_1)) 
                                      (2 (if_icmplt 19)) ;;to TAG_0
                                      (5 (iload_1)) 
                                      (6 (iflt 19)) ;;to TAG_0
                                      (9 (iload_2)) 
                                      (10 (aload_0)) 
                                      (11 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (16 (if_icmple 27)) ;;to TAG_1
                                      (19 (new (class "java.lang.IndexOutOfBoundsException"))) ;;at TAG_0
                                      (22 (dup)) 
                                      (23 (invokespecial (methodCP "<init>" "java.lang.IndexOutOfBoundsException" () void))) 
                                      (26 (athrow)) 
                                      (27 (iload_1)) ;;at TAG_1
                                      (28 (iload_2)) 
                                      (29 (if_icmpne 36))  ;;to TAG_2
                                      (32 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) 
                                      (35 (areturn)) 
                                      (36 (new (class "clojure.lang.APersistentVector$SubVector"))) ;;at TAG_2
                                      (39 (dup)) 
                                      (40 (aconst_null)) 
                                      (41 (aload_0)) 
                                      (42 (iload_1)) 
                                      (43 (iload_2)) 
                                      (44 (invokespecial (methodCP "<init>" "clojure.lang.APersistentVector$SubVector" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.IPersistentVector") int int) void))) 
                                      (47 (areturn)) 
                                      (endofcode 48))
                                   (Exceptions )
                                   (StackMap )))
                        (method "list"
                              (parameters )
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 0) (code_length . 2)
                                   (parsedcode
                                      (0 (aconst_null))
                                      (1 (areturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "list"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 9)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.PersistentList")))
                                      (3 (dup))
                                      (4 (aload_0))
                                      (5 (invokespecial
                    (methodCP "<init>" "clojure.lang.PersistentList" ((class "java.lang.Object")) void)))
                                      (8 (areturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "list"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 7)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aconst_null))
                                      (3 (invokestatic
                    (methodCP "listStar" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object") (class "clojure.lang.ISeq")) (class "clojure.lang.ISeq"))))
                                      (6 (areturn))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap )))
                        (method "list"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aload_2))
                                      (3 (aconst_null))
                                      (4 (invokestatic
                    (methodCP "listStar" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "clojure.lang.ISeq")) (class "clojure.lang.ISeq"))))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "list"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 4) (code_length . 9)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aload_2))
                                      (3 (aload_3))
                                      (4 (aconst_null))
                                      (5 (invokestatic
                    (methodCP "listStar" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "clojure.lang.ISeq")) (class "clojure.lang.ISeq"))))
                                      (8 (areturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "list"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 6) (max_locals . 5) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aload_2))
                                      (3 (aload_3))
                                      (4 (aload 4))
                                      (6 (aconst_null))
                                      (7 (invokestatic
                    (methodCP "listStar" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "clojure.lang.ISeq")) (class "clojure.lang.ISeq"))))
                                      (10 (areturn))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "listStar"
                              (parameters (class "java.lang.Object") (class "clojure.lang.ISeq"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokestatic
                    (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "listStar"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "clojure.lang.ISeq"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aload_2))
                                      (3 (invokestatic
                    (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (6 (invokestatic
                    (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "listStar"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "clojure.lang.ISeq"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 14)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aload_2))
                                      (3 (aload_3))
                                      (4 (invokestatic
                    (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (7 (invokestatic
                    (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (10 (invokestatic
                    (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (13 (areturn))
                                      (endofcode 14))
                                   (Exceptions )
                                   (StackMap )))
                        (method "listStar"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "clojure.lang.ISeq"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 5) (code_length . 19)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aload_2))
                                      (3 (aload_3))
                                      (4 (aload 4))
                                      (6 (invokestatic
                    (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (9 (invokestatic
                    (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (12 (invokestatic
                    (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (15 (invokestatic
                    (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (18 (areturn))
                                      (endofcode 19))
                                   (Exceptions )
                                   (StackMap )))
                        (method "listStar"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "clojure.lang.ISeq"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 6) (max_locals . 6) (code_length . 24)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aload_2))
                                      (3 (aload_3))
                                      (4 (aload 4))
                                      (6 (aload 5))
                                      (8 (invokestatic
                    (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (11 (invokestatic
                    (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (14 (invokestatic
                    (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (17 (invokestatic
                    (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (20 (invokestatic
                    (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (23 (areturn))
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap )))
                        (method "arrayToList"
                              (parameters (array (class "java.lang.Object")))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 27)
                                   (parsedcode
                                      (0 (aconst_null)) 
                                      (1 (astore_1)) 
                                      (2 (aload_0)) 
                                      (3 (arraylength)) 
                                      (4 (iconst_1)) 
                                      (5 (isub)) 
                                      (6 (istore_2)) 
                                      (7 (iload_2)) ;;at TAG_1
                                      (8 (iflt 25))  ;;to TAG_0
                                      (11 (aload_0)) 
                                      (12 (iload_2)) 
                                      (13 (aaload)) 
                                      (14 (aload_1)) 
                                      (15 (invokestatic (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (18 (astore_1)) 
                                      (19 (iinc 2 -1)) 
                                      (22 (goto 7)) ;;to TAG_1
                                      (25 (aload_1)) ;;at TAG_0
                                      (26 (areturn)) 
                                      (endofcode 27))
                                   (Exceptions )
                                   (StackMap )))
                        (method "object_array"
                              (parameters (class "java.lang.Object"))
                              (returntype . (array (class "java.lang.Object")))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 5) (code_length . 71)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "java.lang.Number"))) 
                                      (4 (ifeq 18)) ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "java.lang.Number"))) 
                                      (11 (invokevirtual (methodCP "intValue" "java.lang.Number" () int))) 
                                      (14 (anewarray (class "java.lang.Object"))) 
                                      (17 (areturn)) 
                                      (18 (aload_0)) ;;at TAG_0
                                      (19 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (22 (astore_1)) 
                                      (23 (aload_1)) 
                                      (24 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (27 (istore_2)) 
                                      (28 (iload_2)) 
                                      (29 (anewarray (class "java.lang.Object"))) 
                                      (32 (astore_3)) 
                                      (33 (iconst_0)) 
                                      (34 (istore 4)) 
                                      (36 (iload 4)) ;;at TAG_2
                                      (38 (iload_2)) 
                                      (39 (if_icmpge 69)) ;;to TAG_1
                                      (42 (aload_1)) 
                                      (43 (ifnull 69)) ;;to TAG_1
                                      (46 (aload_3)) 
                                      (47 (iload 4)) 
                                      (49 (aload_1)) 
                                      (50 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (55 (aastore)) 
                                      (56 (iinc 4 1)) 
                                      (59 (aload_1)) 
                                      (60 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (65 (astore_1)) 
                                      (66 (goto 36))  ;;to TAG_2
                                      (69 (aload_3)) ;;at TAG_1
                                      (70 (areturn)) 
                                      (endofcode 71))
                                   (Exceptions )
                                   (StackMap )))
                        (method "toArray"
                              (parameters (class "java.lang.Object"))
                              (returntype . (array (class "java.lang.Object")))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 196)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 8)) ;;to TAG_0
                                      (4 (getstatic (fieldCP "EMPTY_ARRAY" "clojure.lang.RT" (array (class "java.lang.Object"))))) 
                                      (7 (areturn)) 
                                      (8 (aload_0)) ;;at TAG_0
                                      (9 (instanceof (array (class "java.lang.Object")))) 
                                      (12 (ifeq 23))  ;;to TAG_1
                                      (15 (aload_0)) 
                                      (16 (checkcast (array (class "java.lang.Object")))) 
                                      (19 (checkcast (array (class "java.lang.Object")))) 
                                      (22 (areturn)) 
                                      (23 (aload_0)) ;;at TAG_1
                                      (24 (instanceof (class "java.util.Collection"))) 
                                      (27 (ifeq 40)) ;;to TAG_2
                                      (30 (aload_0)) 
                                      (31 (checkcast (class "java.util.Collection"))) 
                                      (34 (invokeinterface (methodCP "toArray" "java.util.Collection" () (array (class "java.lang.Object"))) 1)) 
                                      (39 (areturn)) 
                                      (40 (aload_0)) ;;at TAG_2
                                      (41 (instanceof (class "java.util.Map"))) 
                                      (44 (ifeq 62)) ;;to TAG_3
                                      (47 (aload_0)) 
                                      (48 (checkcast (class "java.util.Map"))) 
                                      (51 (invokeinterface (methodCP "entrySet" "java.util.Map" () (class "java.util.Set")) 1)) 
                                      (56 (invokeinterface (methodCP "toArray" "java.util.Set" () (array (class "java.lang.Object"))) 1)) 
                                      (61 (areturn)) 
                                      (62 (aload_0)) ;;at TAG_3
                                      (63 (instanceof (class "java.lang.String"))) 
                                      (66 (ifeq 108)) ;;to TAG_4
                                      (69 (aload_0)) 
                                      (70 (checkcast (class "java.lang.String"))) 
                                      (73 (invokevirtual (methodCP "toCharArray" "java.lang.String" () (array char)))) 
                                      (76 (astore_1)) 
                                      (77 (aload_1)) 
                                      (78 (arraylength)) 
                                      (79 (anewarray (class "java.lang.Object"))) 
                                      (82 (astore_2)) 
                                      (83 (iconst_0)) 
                                      (84 (istore_3)) 
                                      (85 (iload_3)) ;;at TAG_6
                                      (86 (aload_1)) 
                                      (87 (arraylength)) 
                                      (88 (if_icmpge 106)) ;;to TAG_5
                                      (91 (aload_2)) 
                                      (92 (iload_3)) 
                                      (93 (aload_1)) 
                                      (94 (iload_3)) 
                                      (95 (caload)) 
                                      (96 (invokestatic (methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character")))) 
                                      (99 (aastore)) 
                                      (100 (iinc 3 1)) 
                                      (103 (goto 85)) ;;to TAG_6
                                      (106 (aload_2)) ;;at TAG_5
                                      (107 (areturn)) 
                                      (108 (aload_0)) ;;at TAG_4
                                      (109 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (112 (invokevirtual (methodCP "isArray" "java.lang.Class" () boolean))) 
                                      (115 (ifeq 163)) ;;to TAG_7
                                      (118 (aload_0)) 
                                      (119 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (122 (astore_1)) 
                                      (123 (aload_1)) 
                                      (124 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (127 (anewarray (class "java.lang.Object"))) 
                                      (130 (astore_2)) 
                                      (131 (iconst_0)) 
                                      (132 (istore_3)) 
                                      (133 (iload_3)) ;;at TAG_9
                                      (134 (aload_2)) 
                                      (135 (arraylength)) 
                                      (136 (if_icmpge 161)) ;;to TAG_8
                                      (139 (aload_2)) 
                                      (140 (iload_3)) 
                                      (141 (aload_1)) 
                                      (142 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (147 (aastore)) 
                                      (148 (iinc 3 1)) 
                                      (151 (aload_1)) 
                                      (152 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (157 (astore_1)) 
                                      (158 (goto 133)) ;;to TAG_9
                                      (161 (aload_2)) ;;at TAG_8
                                      (162 (areturn)) 
                                      (163 (new (class "java.lang.StringBuilder"))) ;;at TAG_7
                                      (166 (dup)) 
                                      (167 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (170 (ldc_w 55)) ;;STRING:: "Unable to convert: "
                                      (173 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (176 (aload_0)) 
                                      (177 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (180 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (183 (ldc_w 56)) ;;STRING:: " to Object[]"
                                      (186 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (189 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (192 (invokestatic (methodCP "runtimeException" "clojure.lang.Util" ((class "java.lang.String")) (class "java.lang.RuntimeException")))) 
                                      (195 (athrow)) 
                                      (endofcode 196))
                                   (Exceptions )
                                   (StackMap )))
                        (method "seqToArray"
                              (parameters (class "clojure.lang.ISeq"))
                              (returntype . (array (class "java.lang.Object")))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 40)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokestatic (methodCP "length" "clojure.lang.RT" ((class "clojure.lang.ISeq")) int))) 
                                      (4 (istore_1)) 
                                      (5 (iload_1)) 
                                      (6 (anewarray (class "java.lang.Object"))) 
                                      (9 (astore_2)) 
                                      (10 (iconst_0)) 
                                      (11 (istore_3)) 
                                      (12 (aload_0)) ;;at TAG_1
                                      (13 (ifnull 38))  ;;to TAG_0
                                      (16 (aload_2)) 
                                      (17 (iload_3)) 
                                      (18 (aload_0)) 
                                      (19 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (24 (aastore)) 
                                      (25 (iinc 3 1)) 
                                      (28 (aload_0)) 
                                      (29 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (34 (astore_0)) 
                                      (35 (goto 12)) ;;to TAG_1
                                      (38 (aload_2)) ;;at TAG_0
                                      (39 (areturn)) 
                                      (endofcode 40))
                                   (Exceptions )
                                   (StackMap )))
                        (method "seqToPassedArray"
                              (parameters (class "clojure.lang.ISeq") (array (class "java.lang.Object")))
                              (returntype . (array (class "java.lang.Object")))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 5) (code_length . 73)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (astore_2)) 
                                      (2 (aload_0)) 
                                      (3 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (6 (istore_3)) 
                                      (7 (iload_3)) 
                                      (8 (aload_2)) 
                                      (9 (arraylength)) 
                                      (10 (if_icmple 31)) ;;to TAG_0
                                      (13 (aload_1)) 
                                      (14 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (17 (invokevirtual (methodCP "getComponentType" "java.lang.Class" () (class "java.lang.Class")))) 
                                      (20 (iload_3)) 
                                      (21 (invokestatic (methodCP "newInstance" "java.lang.reflect.Array" ((class "java.lang.Class") int) (class "java.lang.Object")))) 
                                      (24 (checkcast (array (class "java.lang.Object")))) 
                                      (27 (checkcast (array (class "java.lang.Object")))) 
                                      (30 (astore_2)) 
                                      (31 (iconst_0)) ;;at TAG_0
                                      (32 (istore 4)) 
                                      (34 (aload_0)) ;;at TAG_2
                                      (35 (ifnull 61)) ;;to TAG_1
                                      (38 (aload_2)) 
                                      (39 (iload 4)) 
                                      (41 (aload_0)) 
                                      (42 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (47 (aastore)) 
                                      (48 (iinc 4 1)) 
                                      (51 (aload_0)) 
                                      (52 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (57 (astore_0)) 
                                      (58 (goto 34))  ;;to TAG_2
                                      (61 (iload_3)) ;;at TAG_1
                                      (62 (aload_1)) 
                                      (63 (arraylength)) 
                                      (64 (if_icmpge 71)) ;;to TAG_3
                                      (67 (aload_2)) 
                                      (68 (iload_3)) 
                                      (69 (aconst_null)) 
                                      (70 (aastore)) 
                                      (71 (aload_2)) ;;at TAG_3
                                      (72 (areturn)) 
                                      (endofcode 73))
                                   (Exceptions )
                                   (StackMap )))
                        (method "seqToTypedArray"
                              (parameters (class "clojure.lang.ISeq"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 26)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnull 16))  ;;to TAG_0
                                      (4 (aload_0)) 
                                      (5 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (10 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (13 (goto 19)) ;;to TAG_1
                                      (16 (ldc_w )) ;;at TAG_0
                                      (19 (astore_1)) ;;at TAG_1
                                      (20 (aload_1)) 
                                      (21 (aload_0)) 
                                      (22 (invokestatic (methodCP "seqToTypedArray" "clojure.lang.RT" ((class "java.lang.Class") (class "clojure.lang.ISeq")) (class "java.lang.Object")))) 
                                      (25 (areturn)) 
                                      (endofcode 26))
                                   (Exceptions )
                                   (StackMap )))
                        (method "seqToTypedArray"
                              (parameters (class "java.lang.Class") (class "clojure.lang.ISeq"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 271)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (aload_1)) 
                                      (2 (invokestatic (methodCP "length" "clojure.lang.RT" ((class "clojure.lang.ISeq")) int))) 
                                      (5 (invokestatic (methodCP "newInstance" "java.lang.reflect.Array" ((class "java.lang.Class") int) (class "java.lang.Object")))) 
                                      (8 (astore_2)) 
                                      (9 (aload_0)) 
                                      (10 (getstatic (fieldCP "TYPE" "java.lang.Integer" (class "java.lang.Class")))) 
                                      (13 (if_acmpne 55)) ;;to TAG_0
                                      (16 (iconst_0)) 
                                      (17 (istore_3)) 
                                      (18 (aload_1)) ;;at TAG_2
                                      (19 (ifnull 52))  ;;to TAG_1
                                      (22 (aload_2)) 
                                      (23 (iload_3)) 
                                      (24 (aload_1)) 
                                      (25 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (30 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (33 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (36 (invokestatic (methodCP "set" "java.lang.reflect.Array" ((class "java.lang.Object") int (class "java.lang.Object")) void))) 
                                      (39 (iinc 3 1)) 
                                      (42 (aload_1)) 
                                      (43 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (48 (astore_1)) 
                                      (49 (goto 18)) ;;to TAG_2
                                      (52 (goto 269)) ;;to TAG_3;;at TAG_1
                                      (55 (aload_0)) ;;at TAG_0
                                      (56 (getstatic (fieldCP "TYPE" "java.lang.Byte" (class "java.lang.Class")))) 
                                      (59 (if_acmpne 101)) ;;to TAG_4
                                      (62 (iconst_0)) 
                                      (63 (istore_3)) 
                                      (64 (aload_1)) ;;at TAG_6
                                      (65 (ifnull 98)) ;;to TAG_5
                                      (68 (aload_2)) 
                                      (69 (iload_3)) 
                                      (70 (aload_1)) 
                                      (71 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (76 (invokestatic (methodCP "byteCast" "clojure.lang.RT" ((class "java.lang.Object")) byte))) 
                                      (79 (invokestatic (methodCP "valueOf" "java.lang.Byte" (byte) (class "java.lang.Byte")))) 
                                      (82 (invokestatic (methodCP "set" "java.lang.reflect.Array" ((class "java.lang.Object") int (class "java.lang.Object")) void))) 
                                      (85 (iinc 3 1)) 
                                      (88 (aload_1)) 
                                      (89 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (94 (astore_1)) 
                                      (95 (goto 64)) ;;to TAG_6
                                      (98 (goto 269)) ;;to TAG_3;;at TAG_5
                                      (101 (aload_0)) ;;at TAG_4
                                      (102 (getstatic (fieldCP "TYPE" "java.lang.Float" (class "java.lang.Class")))) 
                                      (105 (if_acmpne 147)) ;;to TAG_7
                                      (108 (iconst_0)) 
                                      (109 (istore_3)) 
                                      (110 (aload_1)) ;;at TAG_9
                                      (111 (ifnull 144)) ;;to TAG_8
                                      (114 (aload_2)) 
                                      (115 (iload_3)) 
                                      (116 (aload_1)) 
                                      (117 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (122 (invokestatic (methodCP "floatCast" "clojure.lang.RT" ((class "java.lang.Object")) float))) 
                                      (125 (invokestatic (methodCP "valueOf" "java.lang.Float" (float) (class "java.lang.Float")))) 
                                      (128 (invokestatic (methodCP "set" "java.lang.reflect.Array" ((class "java.lang.Object") int (class "java.lang.Object")) void))) 
                                      (131 (iinc 3 1)) 
                                      (134 (aload_1)) 
                                      (135 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (140 (astore_1)) 
                                      (141 (goto 110)) ;;to TAG_9
                                      (144 (goto 269)) ;;to TAG_3;;at TAG_8
                                      (147 (aload_0)) ;;at TAG_7
                                      (148 (getstatic (fieldCP "TYPE" "java.lang.Short" (class "java.lang.Class")))) 
                                      (151 (if_acmpne 193)) ;;to TAG_10
                                      (154 (iconst_0)) 
                                      (155 (istore_3)) 
                                      (156 (aload_1)) ;;at TAG_12
                                      (157 (ifnull 190)) ;;to TAG_11
                                      (160 (aload_2)) 
                                      (161 (iload_3)) 
                                      (162 (aload_1)) 
                                      (163 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (168 (invokestatic (methodCP "shortCast" "clojure.lang.RT" ((class "java.lang.Object")) short))) 
                                      (171 (invokestatic (methodCP "valueOf" "java.lang.Short" (short) (class "java.lang.Short")))) 
                                      (174 (invokestatic (methodCP "set" "java.lang.reflect.Array" ((class "java.lang.Object") int (class "java.lang.Object")) void))) 
                                      (177 (iinc 3 1)) 
                                      (180 (aload_1)) 
                                      (181 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (186 (astore_1)) 
                                      (187 (goto 156)) ;;to TAG_12
                                      (190 (goto 269)) ;;to TAG_3;;at TAG_11
                                      (193 (aload_0)) ;;at TAG_10
                                      (194 (getstatic (fieldCP "TYPE" "java.lang.Character" (class "java.lang.Class")))) 
                                      (197 (if_acmpne 239)) ;;to TAG_13
                                      (200 (iconst_0)) 
                                      (201 (istore_3)) 
                                      (202 (aload_1)) ;;at TAG_15
                                      (203 (ifnull 236)) ;;to TAG_14
                                      (206 (aload_2)) 
                                      (207 (iload_3)) 
                                      (208 (aload_1)) 
                                      (209 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (214 (invokestatic (methodCP "charCast" "clojure.lang.RT" ((class "java.lang.Object")) char))) 
                                      (217 (invokestatic (methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character")))) 
                                      (220 (invokestatic (methodCP "set" "java.lang.reflect.Array" ((class "java.lang.Object") int (class "java.lang.Object")) void))) 
                                      (223 (iinc 3 1)) 
                                      (226 (aload_1)) 
                                      (227 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (232 (astore_1)) 
                                      (233 (goto 202)) ;;to TAG_15
                                      (236 (goto 269)) ;;to TAG_3;;at TAG_14
                                      (239 (iconst_0)) ;;at TAG_13
                                      (240 (istore_3)) 
                                      (241 (aload_1)) ;;at TAG_16
                                      (242 (ifnull 269)) ;;to TAG_3
                                      (245 (aload_2)) 
                                      (246 (iload_3)) 
                                      (247 (aload_1)) 
                                      (248 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (253 (invokestatic (methodCP "set" "java.lang.reflect.Array" ((class "java.lang.Object") int (class "java.lang.Object")) void))) 
                                      (256 (iinc 3 1)) 
                                      (259 (aload_1)) 
                                      (260 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (265 (astore_1)) 
                                      (266 (goto 241)) ;;to TAG_16
                                      (269 (aload_2)) ;;at TAG_3
                                      (270 (areturn)) 
                                      (endofcode 271))
                                   (Exceptions )
                                   (StackMap )))
                        (method "length"
                              (parameters (class "clojure.lang.ISeq"))
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 23)
                                   (parsedcode
                                      (0 (iconst_0)) 
                                      (1 (istore_1)) 
                                      (2 (aload_0)) 
                                      (3 (astore_2)) 
                                      (4 (aload_2)) ;;at TAG_1
                                      (5 (ifnull 21))  ;;to TAG_0
                                      (8 (iinc 1 1)) 
                                      (11 (aload_2)) 
                                      (12 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (17 (astore_2)) 
                                      (18 (goto 4)) ;;to TAG_1
                                      (21 (iload_1)) ;;at TAG_0
                                      (22 (ireturn)) 
                                      (endofcode 23))
                                   (Exceptions )
                                   (StackMap )))
                        (method "boundedLength"
                              (parameters (class "clojure.lang.ISeq") int)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 28)
                                   (parsedcode
                                      (0 (iconst_0)) 
                                      (1 (istore_2)) 
                                      (2 (aload_0)) 
                                      (3 (astore_3)) 
                                      (4 (aload_3)) ;;at TAG_1
                                      (5 (ifnull 26))  ;;to TAG_0
                                      (8 (iload_2)) 
                                      (9 (iload_1)) 
                                      (10 (if_icmpgt 26))  ;;to TAG_0
                                      (13 (iinc 2 1)) 
                                      (16 (aload_3)) 
                                      (17 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (22 (astore_3)) 
                                      (23 (goto 4)) ;;to TAG_1
                                      (26 (iload_2)) ;;at TAG_0
                                      (27 (ireturn)) 
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap )))
                        (method "readRet"
                              (parameters int)
                              (returntype . (class "java.lang.Character"))
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 13)
                                   (parsedcode
                                      (0 (iload_0)) 
                                      (1 (iconst_m1)) 
                                      (2 (if_icmpne 7))  ;;to TAG_0
                                      (5 (aconst_null)) 
                                      (6 (areturn)) 
                                      (7 (iload_0)) ;;at TAG_0
                                      (8 (i2c)) 
                                      (9 (invokestatic (methodCP "box" "clojure.lang.RT" (char) (class "java.lang.Character")))) 
                                      (12 (areturn)) 
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "readChar"
                              (parameters (class "java.io.Reader"))
                              (returntype . (class "java.lang.Character"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                    (methodCP "read" "java.io.Reader" () int)))
                                      (4 (istore_1))
                                      (5 (iload_1))
                                      (6 (invokestatic
                    (methodCP "readRet" "clojure.lang.RT" (int) (class "java.lang.Character"))))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "peekChar"
                              (parameters (class "java.io.Reader"))
                              (returntype . (class "java.lang.Character"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 42)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "java.io.PushbackReader"))) 
                                      (4 (ifeq 23))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (invokevirtual (methodCP "read" "java.io.Reader" () int))) 
                                      (11 (istore_1)) 
                                      (12 (aload_0)) 
                                      (13 (checkcast (class "java.io.PushbackReader"))) 
                                      (16 (iload_1)) 
                                      (17 (invokevirtual (methodCP "unread" "java.io.PushbackReader" (int) void))) 
                                      (20 (goto 37)) ;;to TAG_1
                                      (23 (aload_0)) ;;at TAG_0
                                      (24 (iconst_1)) 
                                      (25 (invokevirtual (methodCP "mark" "java.io.Reader" (int) void))) 
                                      (28 (aload_0)) 
                                      (29 (invokevirtual (methodCP "read" "java.io.Reader" () int))) 
                                      (32 (istore_1)) 
                                      (33 (aload_0)) 
                                      (34 (invokevirtual (methodCP "reset" "java.io.Reader" () void))) 
                                      (37 (iload_1)) ;;at TAG_1
                                      (38 (invokestatic (methodCP "readRet" "clojure.lang.RT" (int) (class "java.lang.Character")))) 
                                      (41 (areturn)) 
                                      (endofcode 42))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getLineNumber"
                              (parameters (class "java.io.Reader"))
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 17)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "clojure.lang.LineNumberingPushbackReader"))) 
                                      (4 (ifeq 15))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "clojure.lang.LineNumberingPushbackReader"))) 
                                      (11 (invokevirtual (methodCP "getLineNumber" "clojure.lang.LineNumberingPushbackReader" () int))) 
                                      (14 (ireturn)) 
                                      (15 (iconst_0)) ;;at TAG_0
                                      (16 (ireturn)) 
                                      (endofcode 17))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getColumnNumber"
                              (parameters (class "java.io.Reader"))
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 17)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "clojure.lang.LineNumberingPushbackReader"))) 
                                      (4 (ifeq 15))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "clojure.lang.LineNumberingPushbackReader"))) 
                                      (11 (invokevirtual (methodCP "getColumnNumber" "clojure.lang.LineNumberingPushbackReader" () int))) 
                                      (14 (ireturn)) 
                                      (15 (iconst_0)) ;;at TAG_0
                                      (16 (ireturn)) 
                                      (endofcode 17))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getLineNumberingReader"
                              (parameters (class "java.io.Reader"))
                              (returntype . (class "clojure.lang.LineNumberingPushbackReader"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 21)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokestatic (methodCP "isLineNumberingReader" "clojure.lang.RT" ((class "java.io.Reader")) boolean))) 
                                      (4 (ifeq 12))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "clojure.lang.LineNumberingPushbackReader"))) 
                                      (11 (areturn)) 
                                      (12 (new (class "clojure.lang.LineNumberingPushbackReader"))) ;;at TAG_0
                                      (15 (dup)) 
                                      (16 (aload_0)) 
                                      (17 (invokespecial (methodCP "<init>" "clojure.lang.LineNumberingPushbackReader" ((class "java.io.Reader")) void))) 
                                      (20 (areturn)) 
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isLineNumberingReader"
                              (parameters (class "java.io.Reader"))
                              (returntype . boolean)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (instanceof (class "clojure.lang.LineNumberingPushbackReader")))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isReduced"
                              (parameters (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (instanceof (class "clojure.lang.Reduced")))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "resolveClassNameInContext"
                              (parameters (class "java.lang.String"))
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (areturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "suppressRead"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 0) (code_length . 2)
                                   (parsedcode
                                      (0 (iconst_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "printString"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 24)
                                   (parsedcode
                                      (0 (new (class "java.io.StringWriter"))) ;;at TAG_0
                                      (3 (dup)) 
                                      (4 (invokespecial (methodCP "<init>" "java.io.StringWriter" () void))) 
                                      (7 (astore_1)) 
                                      (8 (aload_0)) 
                                      (9 (aload_1)) 
                                      (10 (invokestatic (methodCP "print" "clojure.lang.RT" ((class "java.lang.Object") (class "java.io.Writer")) void))) 
                                      (13 (aload_1)) 
                                      (14 (invokevirtual (methodCP "toString" "java.io.StringWriter" () (class "java.lang.String")))) 
                                      (17 (areturn)) ;;at TAG_1
                                      (18 (astore_1)) ;;at TAG_2
                                      (19 (aload_1)) 
                                      (20 (invokestatic (methodCP "sneakyThrow" "clojure.lang.Util" ((class "java.lang.Throwable")) (class "java.lang.RuntimeException")))) 
                                      (23 (athrow)) 
                                      (endofcode 24))
                                   (Exceptions 
                                     (handler 0 17  18 (class "java.lang.Exception")))
                                   (StackMap )))
                        (method "readString"
                              (parameters (class "java.lang.String"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 3) (code_length . 30)
                                   (parsedcode
                                      (0 (new (class "java.io.PushbackReader"))) 
                                      (3 (dup)) 
                                      (4 (new (class "java.io.StringReader"))) 
                                      (7 (dup)) 
                                      (8 (aload_0)) 
                                      (9 (invokespecial (methodCP "<init>" "java.io.StringReader" ((class "java.lang.String")) void))) 
                                      (12 (invokespecial (methodCP "<init>" "java.io.PushbackReader" ((class "java.io.Reader")) void))) 
                                      (15 (astore_1)) 
                                      (16 (aload_1)) ;;at TAG_0
                                      (17 (iconst_1)) 
                                      (18 (aconst_null)) 
                                      (19 (iconst_0)) 
                                      (20 (invokestatic (methodCP "read" "clojure.lang.LispReader" ((class "java.io.PushbackReader") boolean (class "java.lang.Object") boolean) (class "java.lang.Object")))) 
                                      (23 (areturn)) ;;at TAG_1
                                      (24 (astore_2)) ;;at TAG_2
                                      (25 (aload_2)) 
                                      (26 (invokestatic (methodCP "sneakyThrow" "clojure.lang.Util" ((class "java.lang.Throwable")) (class "java.lang.RuntimeException")))) 
                                      (29 (athrow)) 
                                      (endofcode 30))
                                   (Exceptions 
                                     (handler 16 23  24 (class "java.lang.Exception")))
                                   (StackMap )))
                        (method "print"
                              (parameters (class "java.lang.Object") (class "java.io.Writer"))
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 6) (code_length . 1053)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "PRINT_INITIALIZED" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "isBound" "clojure.lang.Var" () boolean))) 
                                      (6 (ifeq 33))  ;;to TAG_0
                                      (9 (getstatic (fieldCP "PRINT_INITIALIZED" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (12 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (15 (invokestatic (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean))) 
                                      (18 (ifeq 33))  ;;to TAG_0
                                      (21 (getstatic (fieldCP "PR_ON" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (24 (aload_0)) 
                                      (25 (aload_1)) 
                                      (26 (invokevirtual (methodCP "invoke" "clojure.lang.Var" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (29 (pop)) 
                                      (30 (goto 1052)) ;;to TAG_1
                                      (33 (getstatic (fieldCP "PRINT_READABLY" "clojure.lang.RT" (class "clojure.lang.Var")))) ;;at TAG_0
                                      (36 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (39 (invokestatic (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean))) 
                                      (42 (istore_2)) 
                                      (43 (aload_0)) 
                                      (44 (instanceof (class "clojure.lang.Obj"))) 
                                      (47 (ifeq 159)) ;;to TAG_2
                                      (50 (aload_0)) 
                                      (51 (checkcast (class "clojure.lang.Obj"))) 
                                      (54 (astore_3)) 
                                      (55 (aload_3)) 
                                      (56 (invokevirtual (methodCP "meta" "clojure.lang.Obj" () (class "clojure.lang.IPersistentMap")))) 
                                      (59 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (62 (ifle 159)) ;;to TAG_2
                                      (65 (iload_2)) 
                                      (66 (ifeq 81)) ;;to TAG_3
                                      (69 (getstatic (fieldCP "PRINT_META" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (72 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (75 (invokestatic (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean))) 
                                      (78 (ifne 93)) ;;to TAG_4
                                      (81 (getstatic (fieldCP "PRINT_DUP" "clojure.lang.RT" (class "clojure.lang.Var")))) ;;at TAG_3
                                      (84 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (87 (invokestatic (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean))) 
                                      (90 (ifeq 159)) ;;to TAG_2
                                      (93 (aload_3)) ;;at TAG_4
                                      (94 (invokevirtual (methodCP "meta" "clojure.lang.Obj" () (class "clojure.lang.IPersistentMap")))) 
                                      (97 (astore 4)) 
                                      (99 (aload_1)) 
                                      (100 (ldc_w 57)) ;;STRING:: "#^"
                                      (103 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (106 (aload 4)) 
                                      (108 (invokeinterface (methodCP "count" "clojure.lang.IPersistentMap" () int) 1)) 
                                      (113 (iconst_1)) 
                                      (114 (if_icmpne 147)) ;;to TAG_5
                                      (117 (aload 4)) 
                                      (119 (getstatic (fieldCP "TAG_KEY" "clojure.lang.RT" (class "clojure.lang.Keyword")))) 
                                      (122 (invokeinterface (methodCP "containsKey" "clojure.lang.IPersistentMap" ((class "java.lang.Object")) boolean) 2)) 
                                      (127 (ifeq 147)) ;;to TAG_5
                                      (130 (aload 4)) 
                                      (132 (getstatic (fieldCP "TAG_KEY" "clojure.lang.RT" (class "clojure.lang.Keyword")))) 
                                      (135 (invokeinterface (methodCP "valAt" "clojure.lang.IPersistentMap" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (140 (aload_1)) 
                                      (141 (invokestatic (methodCP "print" "clojure.lang.RT" ((class "java.lang.Object") (class "java.io.Writer")) void))) 
                                      (144 (goto 153)) ;;to TAG_6
                                      (147 (aload 4)) ;;at TAG_5
                                      (149 (aload_1)) 
                                      (150 (invokestatic (methodCP "print" "clojure.lang.RT" ((class "java.lang.Object") (class "java.io.Writer")) void))) 
                                      (153 (aload_1)) ;;at TAG_6
                                      (154 (bipush 32)) 
                                      (156 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (159 (aload_0)) ;;at TAG_2
                                      (160 (ifnonnull 173)) ;;to TAG_7
                                      (163 (aload_1)) 
                                      (164 (ldc_w 58)) ;;STRING:: "nil"
                                      (167 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (170 (goto 1052)) ;;to TAG_1
                                      (173 (aload_0)) ;;at TAG_7
                                      (174 (instanceof (class "clojure.lang.ISeq"))) 
                                      (177 (ifne 187)) ;;to TAG_8
                                      (180 (aload_0)) 
                                      (181 (instanceof (class "clojure.lang.IPersistentList"))) 
                                      (184 (ifeq 210)) ;;to TAG_9
                                      (187 (aload_1)) ;;at TAG_8
                                      (188 (bipush 40)) 
                                      (190 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (193 (aload_0)) 
                                      (194 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (197 (aload_1)) 
                                      (198 (invokestatic (methodCP "printInnerSeq" "clojure.lang.RT" ((class "clojure.lang.ISeq") (class "java.io.Writer")) void))) 
                                      (201 (aload_1)) 
                                      (202 (bipush 41)) 
                                      (204 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (207 (goto 1052)) ;;to TAG_1
                                      (210 (aload_0)) ;;at TAG_9
                                      (211 (instanceof (class "java.lang.String"))) 
                                      (214 (ifeq 419)) ;;to TAG_10
                                      (217 (aload_0)) 
                                      (218 (checkcast (class "java.lang.String"))) 
                                      (221 (astore_3)) 
                                      (222 (iload_2)) 
                                      (223 (ifne 234)) ;;to TAG_11
                                      (226 (aload_1)) 
                                      (227 (aload_3)) 
                                      (228 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (231 (goto 416)) ;;to TAG_12
                                      (234 (aload_1)) ;;at TAG_11
                                      (235 (bipush 34)) 
                                      (237 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (240 (iconst_0)) 
                                      (241 (istore 4)) 
                                      (243 (iload 4)) ;;at TAG_23
                                      (245 (aload_3)) 
                                      (246 (invokevirtual (methodCP "length" "java.lang.String" () int))) 
                                      (249 (if_icmpge 410)) ;;to TAG_13
                                      (252 (aload_3)) 
                                      (253 (iload 4)) 
                                      (255 (invokevirtual (methodCP "charAt" "java.lang.String" (int) char))) 
                                      (258 (istore 5)) 
                                      (260 (iload 5)) 
                                      (262 (lookupswitch (lookupswitchinfo 398 7 ((8 . 388) (9 . 338) (10 . 328) (12 . 378) (13 . 348) (34 . 358) (92 . 368))))) ;;to TAG_20;;to TAG_21;;to TAG_14;;to TAG_15;;to TAG_16;;to TAG_17;;to TAG_18;;to TAG_19
                                      (328 (aload_1)) ;;at TAG_17
                                      (329 (ldc_w 59)) ;;STRING:: "\\n"
                                      (332 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (335 (goto 404)) ;;to TAG_22
                                      (338 (aload_1)) ;;at TAG_16
                                      (339 (ldc_w 60)) ;;STRING:: "\\t"
                                      (342 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (345 (goto 404)) ;;to TAG_22
                                      (348 (aload_1)) ;;at TAG_19
                                      (349 (ldc_w 61)) ;;STRING:: "\\r"
                                      (352 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (355 (goto 404)) ;;to TAG_22
                                      (358 (aload_1)) ;;at TAG_20
                                      (359 (ldc_w 62)) ;;STRING:: "\\\""
                                      (362 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (365 (goto 404)) ;;to TAG_22
                                      (368 (aload_1)) ;;at TAG_21
                                      (369 (ldc_w 63)) ;;STRING:: "\\\\"
                                      (372 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (375 (goto 404)) ;;to TAG_22
                                      (378 (aload_1)) ;;at TAG_18
                                      (379 (ldc_w 64)) ;;STRING:: "\\f"
                                      (382 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (385 (goto 404)) ;;to TAG_22
                                      (388 (aload_1)) ;;at TAG_15
                                      (389 (ldc_w 65)) ;;STRING:: "\\b"
                                      (392 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (395 (goto 404)) ;;to TAG_22
                                      (398 (aload_1)) ;;at TAG_14
                                      (399 (iload 5)) 
                                      (401 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (404 (iinc 4 1)) ;;at TAG_22
                                      (407 (goto 243)) ;;to TAG_23
                                      (410 (aload_1)) ;;at TAG_13
                                      (411 (bipush 34)) 
                                      (413 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (416 (goto 1052)) ;;to TAG_1;;at TAG_12
                                      (419 (aload_0)) ;;at TAG_10
                                      (420 (instanceof (class "clojure.lang.IPersistentMap"))) 
                                      (423 (ifeq 515)) ;;to TAG_24
                                      (426 (aload_1)) 
                                      (427 (bipush 123)) 
                                      (429 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (432 (aload_0)) 
                                      (433 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (436 (astore_3)) 
                                      (437 (aload_3)) ;;at TAG_27
                                      (438 (ifnull 506)) ;;to TAG_25
                                      (441 (aload_3)) 
                                      (442 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (447 (checkcast (class "clojure.lang.IMapEntry"))) 
                                      (450 (astore 4)) 
                                      (452 (aload 4)) 
                                      (454 (invokeinterface (methodCP "key" "clojure.lang.IMapEntry" () (class "java.lang.Object")) 1)) 
                                      (459 (aload_1)) 
                                      (460 (invokestatic (methodCP "print" "clojure.lang.RT" ((class "java.lang.Object") (class "java.io.Writer")) void))) 
                                      (463 (aload_1)) 
                                      (464 (bipush 32)) 
                                      (466 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (469 (aload 4)) 
                                      (471 (invokeinterface (methodCP "val" "clojure.lang.IMapEntry" () (class "java.lang.Object")) 1)) 
                                      (476 (aload_1)) 
                                      (477 (invokestatic (methodCP "print" "clojure.lang.RT" ((class "java.lang.Object") (class "java.io.Writer")) void))) 
                                      (480 (aload_3)) 
                                      (481 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (486 (ifnull 496)) ;;to TAG_26
                                      (489 (aload_1)) 
                                      (490 (ldc_w 66)) ;;STRING:: ", "
                                      (493 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (496 (aload_3)) ;;at TAG_26
                                      (497 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (502 (astore_3)) 
                                      (503 (goto 437)) ;;to TAG_27
                                      (506 (aload_1)) ;;at TAG_25
                                      (507 (bipush 125)) 
                                      (509 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (512 (goto 1052)) ;;to TAG_1
                                      (515 (aload_0)) ;;at TAG_24
                                      (516 (instanceof (class "clojure.lang.IPersistentVector"))) 
                                      (519 (ifeq 593)) ;;to TAG_28
                                      (522 (aload_0)) 
                                      (523 (checkcast (class "clojure.lang.IPersistentVector"))) 
                                      (526 (astore_3)) 
                                      (527 (aload_1)) 
                                      (528 (bipush 91)) 
                                      (530 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (533 (iconst_0)) 
                                      (534 (istore 4)) 
                                      (536 (iload 4)) ;;at TAG_31
                                      (538 (aload_3)) 
                                      (539 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (544 (if_icmpge 584)) ;;to TAG_29
                                      (547 (aload_3)) 
                                      (548 (iload 4)) 
                                      (550 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (555 (aload_1)) 
                                      (556 (invokestatic (methodCP "print" "clojure.lang.RT" ((class "java.lang.Object") (class "java.io.Writer")) void))) 
                                      (559 (iload 4)) 
                                      (561 (aload_3)) 
                                      (562 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (567 (iconst_1)) 
                                      (568 (isub)) 
                                      (569 (if_icmpge 578)) ;;to TAG_30
                                      (572 (aload_1)) 
                                      (573 (bipush 32)) 
                                      (575 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (578 (iinc 4 1)) ;;at TAG_30
                                      (581 (goto 536)) ;;to TAG_31
                                      (584 (aload_1)) ;;at TAG_29
                                      (585 (bipush 93)) 
                                      (587 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (590 (goto 1052)) ;;to TAG_1
                                      (593 (aload_0)) ;;at TAG_28
                                      (594 (instanceof (class "clojure.lang.IPersistentSet"))) 
                                      (597 (ifeq 661)) ;;to TAG_32
                                      (600 (aload_1)) 
                                      (601 (ldc_w 67)) ;;STRING:: "#{"
                                      (604 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (607 (aload_0)) 
                                      (608 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (611 (astore_3)) 
                                      (612 (aload_3)) ;;at TAG_35
                                      (613 (ifnull 652)) ;;to TAG_33
                                      (616 (aload_3)) 
                                      (617 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (622 (aload_1)) 
                                      (623 (invokestatic (methodCP "print" "clojure.lang.RT" ((class "java.lang.Object") (class "java.io.Writer")) void))) 
                                      (626 (aload_3)) 
                                      (627 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (632 (ifnull 642)) ;;to TAG_34
                                      (635 (aload_1)) 
                                      (636 (ldc_w 68)) ;;STRING:: " "
                                      (639 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (642 (aload_3)) ;;at TAG_34
                                      (643 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (648 (astore_3)) 
                                      (649 (goto 612)) ;;to TAG_35
                                      (652 (aload_1)) ;;at TAG_33
                                      (653 (bipush 125)) 
                                      (655 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (658 (goto 1052)) ;;to TAG_1
                                      (661 (aload_0)) ;;at TAG_32
                                      (662 (instanceof (class "java.lang.Character"))) 
                                      (665 (ifeq 820)) ;;to TAG_36
                                      (668 (aload_0)) 
                                      (669 (checkcast (class "java.lang.Character"))) 
                                      (672 (invokevirtual (methodCP "charValue" "java.lang.Character" () char))) 
                                      (675 (istore_3)) 
                                      (676 (iload_2)) 
                                      (677 (ifne 688)) ;;to TAG_37
                                      (680 (aload_1)) 
                                      (681 (iload_3)) 
                                      (682 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (685 (goto 817)) ;;to TAG_38
                                      (688 (aload_1)) ;;at TAG_37
                                      (689 (bipush 92)) 
                                      (691 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (694 (iload_3)) 
                                      (695 (lookupswitch (lookupswitchinfo 812 6 ((8 . 782) (9 . 762) (10 . 752) (12 . 792) (13 . 802) (32 . 772))))) ;;to TAG_39;;to TAG_40;;to TAG_41;;to TAG_42;;to TAG_43;;to TAG_44;;to TAG_45
                                      (752 (aload_1)) ;;at TAG_42
                                      (753 (ldc_w 69)) ;;STRING:: "newline"
                                      (756 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (759 (goto 817)) ;;to TAG_38
                                      (762 (aload_1)) ;;at TAG_41
                                      (763 (ldc_w 70)) ;;STRING:: "tab"
                                      (766 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (769 (goto 817)) ;;to TAG_38
                                      (772 (aload_1)) ;;at TAG_45
                                      (773 (ldc_w 71)) ;;STRING:: "space"
                                      (776 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (779 (goto 817)) ;;to TAG_38
                                      (782 (aload_1)) ;;at TAG_40
                                      (783 (ldc_w 72)) ;;STRING:: "backspace"
                                      (786 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (789 (goto 817)) ;;to TAG_38
                                      (792 (aload_1)) ;;at TAG_43
                                      (793 (ldc_w 73)) ;;STRING:: "formfeed"
                                      (796 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (799 (goto 817)) ;;to TAG_38
                                      (802 (aload_1)) ;;at TAG_44
                                      (803 (ldc_w 74)) ;;STRING:: "return"
                                      (806 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (809 (goto 817)) ;;to TAG_38
                                      (812 (aload_1)) ;;at TAG_39
                                      (813 (iload_3)) 
                                      (814 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (817 (goto 1052)) ;;to TAG_1;;at TAG_38
                                      (820 (aload_0)) ;;at TAG_36
                                      (821 (instanceof (class "java.lang.Class"))) 
                                      (824 (ifeq 848)) ;;to TAG_46
                                      (827 (aload_1)) 
                                      (828 (ldc_w 75)) ;;STRING:: "#="
                                      (831 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (834 (aload_1)) 
                                      (835 (aload_0)) 
                                      (836 (checkcast (class "java.lang.Class"))) 
                                      (839 (invokevirtual (methodCP "getName" "java.lang.Class" () (class "java.lang.String")))) 
                                      (842 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (845 (goto 1052)) ;;to TAG_1
                                      (848 (aload_0)) ;;at TAG_46
                                      (849 (instanceof (class "java.math.BigDecimal"))) 
                                      (852 (ifeq 876)) ;;to TAG_47
                                      (855 (iload_2)) 
                                      (856 (ifeq 876)) ;;to TAG_47
                                      (859 (aload_1)) 
                                      (860 (aload_0)) 
                                      (861 (invokevirtual (methodCP "toString" "java.lang.Object" () (class "java.lang.String")))) 
                                      (864 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (867 (aload_1)) 
                                      (868 (bipush 77)) 
                                      (870 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (873 (goto 1052)) ;;to TAG_1
                                      (876 (aload_0)) ;;at TAG_47
                                      (877 (instanceof (class "clojure.lang.BigInt"))) 
                                      (880 (ifeq 904)) ;;to TAG_48
                                      (883 (iload_2)) 
                                      (884 (ifeq 904)) ;;to TAG_48
                                      (887 (aload_1)) 
                                      (888 (aload_0)) 
                                      (889 (invokevirtual (methodCP "toString" "java.lang.Object" () (class "java.lang.String")))) 
                                      (892 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (895 (aload_1)) 
                                      (896 (bipush 78)) 
                                      (898 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (901 (goto 1052)) ;;to TAG_1
                                      (904 (aload_0)) ;;at TAG_48
                                      (905 (instanceof (class "java.math.BigInteger"))) 
                                      (908 (ifeq 933)) ;;to TAG_49
                                      (911 (iload_2)) 
                                      (912 (ifeq 933)) ;;to TAG_49
                                      (915 (aload_1)) 
                                      (916 (aload_0)) 
                                      (917 (invokevirtual (methodCP "toString" "java.lang.Object" () (class "java.lang.String")))) 
                                      (920 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (923 (aload_1)) 
                                      (924 (ldc_w 76)) ;;STRING:: "BIGINT"
                                      (927 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (930 (goto 1052)) ;;to TAG_1
                                      (933 (aload_0)) ;;at TAG_49
                                      (934 (instanceof (class "clojure.lang.Var"))) 
                                      (937 (ifeq 996)) ;;to TAG_50
                                      (940 (aload_0)) 
                                      (941 (checkcast (class "clojure.lang.Var"))) 
                                      (944 (astore_3)) 
                                      (945 (aload_1)) 
                                      (946 (new (class "java.lang.StringBuilder"))) 
                                      (949 (dup)) 
                                      (950 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (953 (ldc_w 77)) ;;STRING:: "#=(var "
                                      (956 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (959 (aload_3)) 
                                      (960 (getfield (fieldCP "ns" "clojure.lang.Var" (class "clojure.lang.Namespace")))) 
                                      (963 (getfield (fieldCP "name" "clojure.lang.Namespace" (class "clojure.lang.Symbol")))) 
                                      (966 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (969 (ldc 9)) ;;STRING:: "/"
                                      (971 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (974 (aload_3)) 
                                      (975 (getfield (fieldCP "sym" "clojure.lang.Var" (class "clojure.lang.Symbol")))) 
                                      (978 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (981 (ldc_w 78)) ;;STRING:: ")"
                                      (984 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (987 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (990 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (993 (goto 1052)) ;;to TAG_1
                                      (996 (aload_0)) ;;at TAG_50
                                      (997 (instanceof (class "java.util.regex.Pattern"))) 
                                      (1000 (ifeq 1044)) ;;to TAG_51
                                      (1003 (aload_0)) 
                                      (1004 (checkcast (class "java.util.regex.Pattern"))) 
                                      (1007 (astore_3)) 
                                      (1008 (aload_1)) 
                                      (1009 (new (class "java.lang.StringBuilder"))) 
                                      (1012 (dup)) 
                                      (1013 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (1016 (ldc_w 79)) ;;STRING:: "#\""
                                      (1019 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (1022 (aload_3)) 
                                      (1023 (invokevirtual (methodCP "pattern" "java.util.regex.Pattern" () (class "java.lang.String")))) 
                                      (1026 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (1029 (ldc_w 80)) ;;STRING:: "\""
                                      (1032 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (1035 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (1038 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (1041 (goto 1052)) ;;to TAG_1
                                      (1044 (aload_1)) ;;at TAG_51
                                      (1045 (aload_0)) 
                                      (1046 (invokevirtual (methodCP "toString" "java.lang.Object" () (class "java.lang.String")))) 
                                      (1049 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (1052 (return)) ;;at TAG_1
                                      (endofcode 1053))
                                   (Exceptions )
                                   (StackMap )))
                        (method "printInnerSeq"
                              (parameters (class "clojure.lang.ISeq") (class "java.io.Writer"))
                              (returntype . void)
                              (accessflags  *class*  *private*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 42)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (astore_2)) 
                                      (2 (aload_2)) ;;at TAG_2
                                      (3 (ifnull 41)) ;;to TAG_0
                                      (6 (aload_2)) 
                                      (7 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (12 (aload_1)) 
                                      (13 (invokestatic (methodCP "print" "clojure.lang.RT" ((class "java.lang.Object") (class "java.io.Writer")) void))) 
                                      (16 (aload_2)) 
                                      (17 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (22 (ifnull 31)) ;;to TAG_1
                                      (25 (aload_1)) 
                                      (26 (bipush 32)) 
                                      (28 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (31 (aload_2)) ;;at TAG_1
                                      (32 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (37 (astore_2)) 
                                      (38 (goto 2))  ;;to TAG_2
                                      (41 (return)) ;;at TAG_0
                                      (endofcode 42))
                                   (Exceptions )
                                   (StackMap )))
                        (method "formatAesthetic"
                              (parameters (class "java.io.Writer") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 23)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (ifnonnull 14))  ;;to TAG_0
                                      (4 (aload_0)) 
                                      (5 (ldc_w 81)) ;;STRING:: "null"
                                      (8 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (11 (goto 22)) ;;to TAG_1
                                      (14 (aload_0)) ;;at TAG_0
                                      (15 (aload_1)) 
                                      (16 (invokevirtual (methodCP "toString" "java.lang.Object" () (class "java.lang.String")))) 
                                      (19 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (22 (return)) ;;at TAG_1
                                      (endofcode 23))
                                   (Exceptions )
                                   (StackMap )))
                        (method "formatStandard"
                              (parameters (class "java.io.Writer") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 183)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (ifnonnull 14)) ;;to TAG_0
                                      (4 (aload_0)) 
                                      (5 (ldc_w 81)) ;;STRING:: "null"
                                      (8 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (11 (goto 182))  ;;to TAG_1
                                      (14 (aload_1)) ;;at TAG_0
                                      (15 (instanceof (class "java.lang.String"))) 
                                      (18 (ifeq 44)) ;;to TAG_2
                                      (21 (aload_0)) 
                                      (22 (bipush 34)) 
                                      (24 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (27 (aload_0)) 
                                      (28 (aload_1)) 
                                      (29 (checkcast (class "java.lang.String"))) 
                                      (32 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (35 (aload_0)) 
                                      (36 (bipush 34)) 
                                      (38 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (41 (goto 182))  ;;to TAG_1
                                      (44 (aload_1)) ;;at TAG_2
                                      (45 (instanceof (class "java.lang.Character"))) 
                                      (48 (ifeq 174)) ;;to TAG_3
                                      (51 (aload_0)) 
                                      (52 (bipush 92)) 
                                      (54 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (57 (aload_1)) 
                                      (58 (checkcast (class "java.lang.Character"))) 
                                      (61 (invokevirtual (methodCP "charValue" "java.lang.Character" () char))) 
                                      (64 (istore_2)) 
                                      (65 (iload_2)) 
                                      (66 (lookupswitch (lookupswitchinfo 166 5 ((8 . 146) (9 . 126) (10 . 116) (12 . 156) (32 . 136))))) ;;to TAG_4;;to TAG_5;;to TAG_6;;to TAG_7;;to TAG_8;;to TAG_9
                                      (116 (aload_0)) ;;at TAG_7
                                      (117 (ldc_w 69)) ;;STRING:: "newline"
                                      (120 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (123 (goto 171)) ;;to TAG_10
                                      (126 (aload_0)) ;;at TAG_6
                                      (127 (ldc_w 70)) ;;STRING:: "tab"
                                      (130 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (133 (goto 171)) ;;to TAG_10
                                      (136 (aload_0)) ;;at TAG_9
                                      (137 (ldc_w 71)) ;;STRING:: "space"
                                      (140 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (143 (goto 171)) ;;to TAG_10
                                      (146 (aload_0)) ;;at TAG_5
                                      (147 (ldc_w 72)) ;;STRING:: "backspace"
                                      (150 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (153 (goto 171)) ;;to TAG_10
                                      (156 (aload_0)) ;;at TAG_8
                                      (157 (ldc_w 73)) ;;STRING:: "formfeed"
                                      (160 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (163 (goto 171)) ;;to TAG_10
                                      (166 (aload_0)) ;;at TAG_4
                                      (167 (iload_2)) 
                                      (168 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (171 (goto 182))  ;;to TAG_1;;at TAG_10
                                      (174 (aload_0)) ;;at TAG_3
                                      (175 (aload_1)) 
                                      (176 (invokevirtual (methodCP "toString" "java.lang.Object" () (class "java.lang.String")))) 
                                      (179 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (182 (return)) ;;at TAG_1
                                      (endofcode 183))
                                   (Exceptions )
                                   (StackMap )))
                        (method "format"
                              (parameters (class "java.lang.Object") (class "java.lang.String") (array (class "java.lang.Object")))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static*  *transient* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 64)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 15)) ;;to TAG_0
                                      (4 (new (class "java.io.StringWriter"))) 
                                      (7 (dup)) 
                                      (8 (invokespecial (methodCP "<init>" "java.io.StringWriter" () void))) 
                                      (11 (astore_3)) 
                                      (12 (goto 43)) ;;to TAG_1
                                      (15 (aload_0)) ;;at TAG_0
                                      (16 (getstatic (fieldCP "T" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (19 (invokestatic (methodCP "equals" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (22 (ifeq 38))  ;;to TAG_2
                                      (25 (getstatic (fieldCP "OUT" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (28 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (31 (checkcast (class "java.io.Writer"))) 
                                      (34 (astore_3)) 
                                      (35 (goto 43)) ;;to TAG_1
                                      (38 (aload_0)) ;;at TAG_2
                                      (39 (checkcast (class "java.io.Writer"))) 
                                      (42 (astore_3)) 
                                      (43 (aload_3)) ;;at TAG_1
                                      (44 (aload_1)) 
                                      (45 (aload_2)) 
                                      (46 (invokestatic (methodCP "create" "clojure.lang.ArraySeq" ((array (class "java.lang.Object"))) (class "clojure.lang.ArraySeq")))) 
                                      (49 (invokestatic (methodCP "doFormat" "clojure.lang.RT" ((class "java.io.Writer") (class "java.lang.String") (class "clojure.lang.ISeq")) (class "clojure.lang.ISeq")))) 
                                      (52 (pop)) 
                                      (53 (aload_0)) 
                                      (54 (ifnonnull 62)) ;;to TAG_3
                                      (57 (aload_3)) 
                                      (58 (invokevirtual (methodCP "toString" "java.lang.Object" () (class "java.lang.String")))) 
                                      (61 (areturn)) 
                                      (62 (aconst_null)) ;;at TAG_3
                                      (63 (areturn)) 
                                      (endofcode 64))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doFormat"
                              (parameters (class "java.io.Writer") (class "java.lang.String") (class "clojure.lang.ISeq"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 9) (code_length . 338)
                                   (parsedcode
                                      (0 (iconst_0)) 
                                      (1 (istore_3)) 
                                      (2 (iload_3)) ;;at TAG_18
                                      (3 (aload_1)) 
                                      (4 (invokevirtual (methodCP "length" "java.lang.String" () int))) 
                                      (7 (if_icmpge 336)) ;;to TAG_0
                                      (10 (aload_1)) 
                                      (11 (iload_3)) 
                                      (12 (iinc 3 1)) 
                                      (15 (invokevirtual (methodCP "charAt" "java.lang.String" (int) char))) 
                                      (18 (istore 4)) 
                                      (20 (iload 4)) 
                                      (22 (invokestatic (methodCP "toLowerCase" "java.lang.Character" (char) char))) 
                                      (25 (lookupswitch (lookupswitchinfo 327 1 ((126 . 44))))) ;;to TAG_1;;to TAG_2
                                      (44 (aload_1)) ;;at TAG_2
                                      (45 (iload_3)) 
                                      (46 (iinc 3 1)) 
                                      (49 (invokevirtual (methodCP "charAt" "java.lang.String" (int) char))) 
                                      (52 (istore 5)) 
                                      (54 (iload 5)) 
                                      (56 (invokestatic (methodCP "toLowerCase" "java.lang.Character" (char) char))) 
                                      (59 (lookupswitch (lookupswitchinfo 295 7 ((37 . 124) (94 . 280) (97 . 142) (115 . 173) (116 . 133) (123 . 204) (126 . 286))))) ;;to TAG_5;;to TAG_6;;to TAG_7;;to TAG_8;;to TAG_9;;to TAG_10;;to TAG_3;;to TAG_4
                                      (124 (aload_0)) ;;at TAG_4
                                      (125 (bipush 10)) 
                                      (127 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (130 (goto 324)) ;;to TAG_11
                                      (133 (aload_0)) ;;at TAG_8
                                      (134 (bipush 9)) 
                                      (136 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (139 (goto 324)) ;;to TAG_11
                                      (142 (aload_2)) ;;at TAG_6
                                      (143 (ifnonnull 157)) ;;to TAG_12
                                      (146 (new (class "java.lang.IllegalArgumentException"))) 
                                      (149 (dup)) 
                                      (150 (ldc_w 82)) ;;STRING:: "Missing argument"
                                      (153 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (156 (athrow)) 
                                      (157 (aload_0)) ;;at TAG_12
                                      (158 (aload_2)) 
                                      (159 (invokestatic (methodCP "first" "clojure.lang.RT" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (162 (invokestatic (methodCP "formatAesthetic" "clojure.lang.RT" ((class "java.io.Writer") (class "java.lang.Object")) void))) 
                                      (165 (aload_2)) 
                                      (166 (invokestatic (methodCP "next" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (169 (astore_2)) 
                                      (170 (goto 324)) ;;to TAG_11
                                      (173 (aload_2)) ;;at TAG_7
                                      (174 (ifnonnull 188))  ;;to TAG_13
                                      (177 (new (class "java.lang.IllegalArgumentException"))) 
                                      (180 (dup)) 
                                      (181 (ldc_w 82)) ;;STRING:: "Missing argument"
                                      (184 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (187 (athrow)) 
                                      (188 (aload_0)) ;;at TAG_13
                                      (189 (aload_2)) 
                                      (190 (invokestatic (methodCP "first" "clojure.lang.RT" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (193 (invokestatic (methodCP "formatStandard" "clojure.lang.RT" ((class "java.io.Writer") (class "java.lang.Object")) void))) 
                                      (196 (aload_2)) 
                                      (197 (invokestatic (methodCP "next" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (200 (astore_2)) 
                                      (201 (goto 324)) ;;to TAG_11
                                      (204 (aload_1)) ;;at TAG_9
                                      (205 (ldc_w 83)) ;;STRING:: "~}"
                                      (208 (iload_3)) 
                                      (209 (invokevirtual (methodCP "indexOf" "java.lang.String" ((class "java.lang.String") int) int))) 
                                      (212 (istore 6)) 
                                      (214 (iload 6)) 
                                      (216 (iconst_m1)) 
                                      (217 (if_icmpne 231)) ;;to TAG_14
                                      (220 (new (class "java.lang.IllegalArgumentException"))) 
                                      (223 (dup)) 
                                      (224 (ldc_w 84)) ;;STRING:: "Missing ~}"
                                      (227 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (230 (athrow)) 
                                      (231 (aload_1)) ;;at TAG_14
                                      (232 (iload_3)) 
                                      (233 (iload 6)) 
                                      (235 (invokevirtual (methodCP "substring" "java.lang.String" (int int) (class "java.lang.String")))) 
                                      (238 (astore 7)) 
                                      (240 (aload_2)) 
                                      (241 (invokestatic (methodCP "first" "clojure.lang.RT" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (244 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (247 (astore 8)) 
                                      (249 (aload 8)) ;;at TAG_16
                                      (251 (ifnull 267)) ;;to TAG_15
                                      (254 (aload_0)) 
                                      (255 (aload 7)) 
                                      (257 (aload 8)) 
                                      (259 (invokestatic (methodCP "doFormat" "clojure.lang.RT" ((class "java.io.Writer") (class "java.lang.String") (class "clojure.lang.ISeq")) (class "clojure.lang.ISeq")))) 
                                      (262 (astore 8)) 
                                      (264 (goto 249)) ;;to TAG_16
                                      (267 (aload_2)) ;;at TAG_15
                                      (268 (invokestatic (methodCP "next" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (271 (astore_2)) 
                                      (272 (iload 6)) 
                                      (274 (iconst_2)) 
                                      (275 (iadd)) 
                                      (276 (istore_3)) 
                                      (277 (goto 324)) ;;to TAG_11
                                      (280 (aload_2)) ;;at TAG_5
                                      (281 (ifnonnull 324)) ;;to TAG_11
                                      (284 (aconst_null)) 
                                      (285 (areturn)) 
                                      (286 (aload_0)) ;;at TAG_10
                                      (287 (bipush 126)) 
                                      (289 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (292 (goto 324)) ;;to TAG_11
                                      (295 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_3
                                      (298 (dup)) 
                                      (299 (new (class "java.lang.StringBuilder"))) 
                                      (302 (dup)) 
                                      (303 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (306 (ldc_w 85)) ;;STRING:: "Unsupported ~ directive: "
                                      (309 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (312 (iload 5)) 
                                      (314 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (char) (class "java.lang.StringBuilder")))) 
                                      (317 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (320 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (323 (athrow)) 
                                      (324 (goto 333)) ;;to TAG_17;;at TAG_11
                                      (327 (aload_0)) ;;at TAG_1
                                      (328 (iload 4)) 
                                      (330 (invokevirtual (methodCP "write" "java.io.Writer" (int) void))) 
                                      (333 (goto 2)) ;;to TAG_18;;at TAG_17
                                      (336 (aload_2)) ;;at TAG_0
                                      (337 (areturn)) 
                                      (endofcode 338))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setValues"
                              (parameters (array (class "java.lang.Object")))
                              (returntype . (array (class "java.lang.Object")))
                              (accessflags  *class*  *public*  *static*  *transient* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 9)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (arraylength)) 
                                      (2 (ifle 7))  ;;to TAG_0
                                      (5 (aload_0)) 
                                      (6 (areturn)) 
                                      (7 (aconst_null)) ;;at TAG_0
                                      (8 (areturn)) 
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "makeClassLoader"
                              (parameters )
                              (returntype . (class "java.lang.ClassLoader"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 14)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.RT$4")))
                                      (3 (dup))
                                      (4 (invokespecial
                    (methodCP "<init>" "clojure.lang.RT$4" () void)))
                                      (7 (invokestatic
                    (methodCP "doPrivileged" "java.security.AccessController" ((class "java.security.PrivilegedAction")) (class "java.lang.Object"))))
                                      (10 (checkcast (class "java.lang.ClassLoader")))
                                      (13 (areturn))
                                      (endofcode 14))
                                   (Exceptions )
                                   (StackMap )))
                        (method "baseLoader"
                              (parameters )
                              (returntype . (class "java.lang.ClassLoader"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 0) (code_length . 45)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "LOADER" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "isBound" "clojure.lang.Var" () boolean))) 
                                      (6 (ifeq 19))  ;;to TAG_0
                                      (9 (getstatic (fieldCP "LOADER" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (12 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (15 (checkcast (class "java.lang.ClassLoader"))) 
                                      (18 (areturn)) 
                                      (19 (getstatic (fieldCP "USE_CONTEXT_CLASSLOADER" "clojure.lang.RT" (class "clojure.lang.Var")))) ;;at TAG_0
                                      (22 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (25 (invokestatic (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean))) 
                                      (28 (ifeq 38)) ;;to TAG_1
                                      (31 (invokestatic (methodCP "currentThread" "java.lang.Thread" () (class "java.lang.Thread")))) 
                                      (34 (invokevirtual (methodCP "getContextClassLoader" "java.lang.Thread" () (class "java.lang.ClassLoader")))) 
                                      (37 (areturn)) 
                                      (38 (ldc_w )) ;;at TAG_1
                                      (41 (invokevirtual (methodCP "getClassLoader" "java.lang.Class" () (class "java.lang.ClassLoader")))) 
                                      (44 (areturn)) 
                                      (endofcode 45))
                                   (Exceptions )
                                   (StackMap )))
                        (method "resourceAsStream"
                              (parameters (class "java.lang.ClassLoader") (class "java.lang.String"))
                              (returntype . (class "java.io.InputStream"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 9))  ;;to TAG_0
                                      (4 (aload_1)) 
                                      (5 (invokestatic (methodCP "getSystemResourceAsStream" "java.lang.ClassLoader" ((class "java.lang.String")) (class "java.io.InputStream")))) 
                                      (8 (areturn)) 
                                      (9 (aload_0)) ;;at TAG_0
                                      (10 (aload_1)) 
                                      (11 (invokevirtual (methodCP "getResourceAsStream" "java.lang.ClassLoader" ((class "java.lang.String")) (class "java.io.InputStream")))) 
                                      (14 (areturn)) 
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getResource"
                              (parameters (class "java.lang.ClassLoader") (class "java.lang.String"))
                              (returntype . (class "java.net.URL"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ifnonnull 9))  ;;to TAG_0
                                      (4 (aload_1)) 
                                      (5 (invokestatic (methodCP "getSystemResource" "java.lang.ClassLoader" ((class "java.lang.String")) (class "java.net.URL")))) 
                                      (8 (areturn)) 
                                      (9 (aload_0)) ;;at TAG_0
                                      (10 (aload_1)) 
                                      (11 (invokevirtual (methodCP "getResource" "java.lang.ClassLoader" ((class "java.lang.String")) (class "java.net.URL")))) 
                                      (14 (areturn)) 
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "classForName"
                              (parameters (class "java.lang.String"))
                              (returntype . (class "java.lang.Class"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0)) ;;at TAG_0
                                      (1 (iconst_1)) 
                                      (2 (invokestatic (methodCP "baseLoader" "clojure.lang.RT" () (class "java.lang.ClassLoader")))) 
                                      (5 (invokestatic (methodCP "forName" "java.lang.Class" ((class "java.lang.String") boolean (class "java.lang.ClassLoader")) (class "java.lang.Class")))) 
                                      (8 (areturn)) ;;at TAG_1
                                      (9 (astore_1)) ;;at TAG_2
                                      (10 (aload_1)) 
                                      (11 (invokestatic (methodCP "sneakyThrow" "clojure.lang.Util" ((class "java.lang.Throwable")) (class "java.lang.RuntimeException")))) 
                                      (14 (athrow)) 
                                      (endofcode 15))
                                   (Exceptions 
                                     (handler 0 8  9 (class "java.lang.ClassNotFoundException")))
                                   (StackMap )))
                        (method "classForNameNonLoading"
                              (parameters (class "java.lang.String"))
                              (returntype . (class "java.lang.Class"))
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0)) ;;at TAG_0
                                      (1 (iconst_0)) 
                                      (2 (invokestatic (methodCP "baseLoader" "clojure.lang.RT" () (class "java.lang.ClassLoader")))) 
                                      (5 (invokestatic (methodCP "forName" "java.lang.Class" ((class "java.lang.String") boolean (class "java.lang.ClassLoader")) (class "java.lang.Class")))) 
                                      (8 (areturn)) ;;at TAG_1
                                      (9 (astore_1)) ;;at TAG_2
                                      (10 (aload_1)) 
                                      (11 (invokestatic (methodCP "sneakyThrow" "clojure.lang.Util" ((class "java.lang.Throwable")) (class "java.lang.RuntimeException")))) 
                                      (14 (athrow)) 
                                      (endofcode 15))
                                   (Exceptions 
                                     (handler 0 8  9 (class "java.lang.ClassNotFoundException")))
                                   (StackMap )))
                        (method "loadClassForName"
                              (parameters (class "java.lang.String"))
                              (returntype . (class "java.lang.Class"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 24)
                                   (parsedcode
                                      (0 (aload_0)) ;;at TAG_1
                                      (1 (iconst_0)) 
                                      (2 (invokestatic (methodCP "baseLoader" "clojure.lang.RT" () (class "java.lang.ClassLoader")))) 
                                      (5 (invokestatic (methodCP "forName" "java.lang.Class" ((class "java.lang.String") boolean (class "java.lang.ClassLoader")) (class "java.lang.Class")))) 
                                      (8 (pop)) 
                                      (9 (goto 15)) ;;to TAG_0;;at TAG_2
                                      (12 (astore_1)) ;;at TAG_3
                                      (13 (aconst_null)) 
                                      (14 (areturn)) 
                                      (15 (aload_0)) ;;at TAG_0
                                      (16 (iconst_1)) 
                                      (17 (invokestatic (methodCP "baseLoader" "clojure.lang.RT" () (class "java.lang.ClassLoader")))) 
                                      (20 (invokestatic (methodCP "forName" "java.lang.Class" ((class "java.lang.String") boolean (class "java.lang.ClassLoader")) (class "java.lang.Class")))) 
                                      (23 (areturn)) 
                                      (endofcode 24))
                                   (Exceptions 
                                     (handler 0 9  12 (class "java.lang.ClassNotFoundException")))
                                   (StackMap )))
                        (method "aget"
                              (parameters (array float) int)
                              (returntype . float)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 4)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (faload))
                                      (3 (freturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aset"
                              (parameters (array float) int float)
                              (returntype . float)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (fload_2))
                                      (3 (fastore))
                                      (4 (fload_2))
                                      (5 (freturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "alength"
                              (parameters (array float))
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (arraylength))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aclone"
                              (parameters (array float))
                              (returntype . (array float))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                    (methodCP "clone" "float[]" () (class "java.lang.Object"))))
                                      (4 (checkcast (array float)))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aget"
                              (parameters (array double) int)
                              (returntype . double)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 4)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (daload))
                                      (3 (dreturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aset"
                              (parameters (array double) int double)
                              (returntype . double)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (dload_2))
                                      (3 (dastore))
                                      (4 (dload_2))
                                      (5 (dreturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "alength"
                              (parameters (array double))
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (arraylength))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aclone"
                              (parameters (array double))
                              (returntype . (array double))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                    (methodCP "clone" "double[]" () (class "java.lang.Object"))))
                                      (4 (checkcast (array double)))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aget"
                              (parameters (array int) int)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 4)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (iaload))
                                      (3 (ireturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aset"
                              (parameters (array int) int int)
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (iload_2))
                                      (3 (iastore))
                                      (4 (iload_2))
                                      (5 (ireturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "alength"
                              (parameters (array int))
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (arraylength))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aclone"
                              (parameters (array int))
                              (returntype . (array int))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                    (methodCP "clone" "int[]" () (class "java.lang.Object"))))
                                      (4 (checkcast (array int)))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aget"
                              (parameters (array long) int)
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 4)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (laload))
                                      (3 (lreturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aset"
                              (parameters (array long) int long)
                              (returntype . long)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (lload_2))
                                      (3 (lastore))
                                      (4 (lload_2))
                                      (5 (lreturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "alength"
                              (parameters (array long))
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (arraylength))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aclone"
                              (parameters (array long))
                              (returntype . (array long))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                    (methodCP "clone" "long[]" () (class "java.lang.Object"))))
                                      (4 (checkcast (array long)))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aget"
                              (parameters (array char) int)
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 4)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (caload))
                                      (3 (ireturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aset"
                              (parameters (array char) int char)
                              (returntype . char)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (iload_2))
                                      (3 (castore))
                                      (4 (iload_2))
                                      (5 (ireturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "alength"
                              (parameters (array char))
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (arraylength))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aclone"
                              (parameters (array char))
                              (returntype . (array char))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                    (methodCP "clone" "char[]" () (class "java.lang.Object"))))
                                      (4 (checkcast (array char)))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aget"
                              (parameters (array byte) int)
                              (returntype . byte)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 4)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (baload))
                                      (3 (ireturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aset"
                              (parameters (array byte) int byte)
                              (returntype . byte)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (iload_2))
                                      (3 (bastore))
                                      (4 (iload_2))
                                      (5 (ireturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "alength"
                              (parameters (array byte))
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (arraylength))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aclone"
                              (parameters (array byte))
                              (returntype . (array byte))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                    (methodCP "clone" "byte[]" () (class "java.lang.Object"))))
                                      (4 (checkcast (array byte)))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aget"
                              (parameters (array short) int)
                              (returntype . short)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 4)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (saload))
                                      (3 (ireturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aset"
                              (parameters (array short) int short)
                              (returntype . short)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (iload_2))
                                      (3 (sastore))
                                      (4 (iload_2))
                                      (5 (ireturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "alength"
                              (parameters (array short))
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (arraylength))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aclone"
                              (parameters (array short))
                              (returntype . (array short))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                    (methodCP "clone" "short[]" () (class "java.lang.Object"))))
                                      (4 (checkcast (array short)))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aget"
                              (parameters (array boolean) int)
                              (returntype . boolean)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 4)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (baload))
                                      (3 (ireturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aset"
                              (parameters (array boolean) int boolean)
                              (returntype . boolean)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (iload_2))
                                      (3 (bastore))
                                      (4 (iload_2))
                                      (5 (ireturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "alength"
                              (parameters (array boolean))
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (arraylength))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aclone"
                              (parameters (array boolean))
                              (returntype . (array boolean))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                    (methodCP "clone" "boolean[]" () (class "java.lang.Object"))))
                                      (4 (checkcast (array boolean)))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aget"
                              (parameters (array (class "java.lang.Object")) int)
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 4)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (aaload))
                                      (3 (areturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aset"
                              (parameters (array (class "java.lang.Object")) int (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (aload_2))
                                      (3 (aastore))
                                      (4 (aload_2))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "alength"
                              (parameters (array (class "java.lang.Object")))
                              (returntype . int)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 3)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (arraylength))
                                      (2 (ireturn))
                                      (endofcode 3))
                                   (Exceptions )
                                   (StackMap )))
                        (method "aclone"
                              (parameters (array (class "java.lang.Object")))
                              (returntype . (array (class "java.lang.Object")))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                    (methodCP "clone" "java.lang.Object[]" () (class "java.lang.Object"))))
                                      (4 (checkcast (array (class "java.lang.Object"))))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 8) (max_locals . 5) (code_length . 2688)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (3 (putstatic (fieldCP "T" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (6 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (9 (putstatic (fieldCP "F" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (12 (sipush 192)) 
                                      (15 (anewarray (class "java.lang.Object"))) 
                                      (18 (dup)) 
                                      (19 (iconst_0)) 
                                      (20 (ldc_w 86)) ;;STRING:: "Boolean"
                                      (23 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (26 (aastore)) 
                                      (27 (dup)) 
                                      (28 (iconst_1)) 
                                      (29 (ldc_w )) 
                                      (32 (aastore)) 
                                      (33 (dup)) 
                                      (34 (iconst_2)) 
                                      (35 (ldc_w 87)) ;;STRING:: "Byte"
                                      (38 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (41 (aastore)) 
                                      (42 (dup)) 
                                      (43 (iconst_3)) 
                                      (44 (ldc_w )) 
                                      (47 (aastore)) 
                                      (48 (dup)) 
                                      (49 (iconst_4)) 
                                      (50 (ldc_w 88)) ;;STRING:: "Character"
                                      (53 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (56 (aastore)) 
                                      (57 (dup)) 
                                      (58 (iconst_5)) 
                                      (59 (ldc_w )) 
                                      (62 (aastore)) 
                                      (63 (dup)) 
                                      (64 (bipush 6)) 
                                      (66 (ldc_w 89)) ;;STRING:: "Class"
                                      (69 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (72 (aastore)) 
                                      (73 (dup)) 
                                      (74 (bipush 7)) 
                                      (76 (ldc_w )) 
                                      (79 (aastore)) 
                                      (80 (dup)) 
                                      (81 (bipush 8)) 
                                      (83 (ldc_w 90)) ;;STRING:: "ClassLoader"
                                      (86 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (89 (aastore)) 
                                      (90 (dup)) 
                                      (91 (bipush 9)) 
                                      (93 (ldc_w )) 
                                      (96 (aastore)) 
                                      (97 (dup)) 
                                      (98 (bipush 10)) 
                                      (100 (ldc_w 91)) ;;STRING:: "Compiler"
                                      (103 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (106 (aastore)) 
                                      (107 (dup)) 
                                      (108 (bipush 11)) 
                                      (110 (ldc_w )) 
                                      (113 (aastore)) 
                                      (114 (dup)) 
                                      (115 (bipush 12)) 
                                      (117 (ldc_w 92)) ;;STRING:: "Double"
                                      (120 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (123 (aastore)) 
                                      (124 (dup)) 
                                      (125 (bipush 13)) 
                                      (127 (ldc_w )) 
                                      (130 (aastore)) 
                                      (131 (dup)) 
                                      (132 (bipush 14)) 
                                      (134 (ldc_w 93)) ;;STRING:: "Enum"
                                      (137 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (140 (aastore)) 
                                      (141 (dup)) 
                                      (142 (bipush 15)) 
                                      (144 (ldc_w )) 
                                      (147 (aastore)) 
                                      (148 (dup)) 
                                      (149 (bipush 16)) 
                                      (151 (ldc_w 94)) ;;STRING:: "Float"
                                      (154 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (157 (aastore)) 
                                      (158 (dup)) 
                                      (159 (bipush 17)) 
                                      (161 (ldc_w )) 
                                      (164 (aastore)) 
                                      (165 (dup)) 
                                      (166 (bipush 18)) 
                                      (168 (ldc_w 95)) ;;STRING:: "InheritableThreadLocal"
                                      (171 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (174 (aastore)) 
                                      (175 (dup)) 
                                      (176 (bipush 19)) 
                                      (178 (ldc_w )) 
                                      (181 (aastore)) 
                                      (182 (dup)) 
                                      (183 (bipush 20)) 
                                      (185 (ldc_w 96)) ;;STRING:: "Integer"
                                      (188 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (191 (aastore)) 
                                      (192 (dup)) 
                                      (193 (bipush 21)) 
                                      (195 (ldc_w )) 
                                      (198 (aastore)) 
                                      (199 (dup)) 
                                      (200 (bipush 22)) 
                                      (202 (ldc_w 97)) ;;STRING:: "Long"
                                      (205 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (208 (aastore)) 
                                      (209 (dup)) 
                                      (210 (bipush 23)) 
                                      (212 (ldc_w )) 
                                      (215 (aastore)) 
                                      (216 (dup)) 
                                      (217 (bipush 24)) 
                                      (219 (ldc_w 98)) ;;STRING:: "Math"
                                      (222 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (225 (aastore)) 
                                      (226 (dup)) 
                                      (227 (bipush 25)) 
                                      (229 (ldc_w )) 
                                      (232 (aastore)) 
                                      (233 (dup)) 
                                      (234 (bipush 26)) 
                                      (236 (ldc_w 99)) ;;STRING:: "Number"
                                      (239 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (242 (aastore)) 
                                      (243 (dup)) 
                                      (244 (bipush 27)) 
                                      (246 (ldc_w )) 
                                      (249 (aastore)) 
                                      (250 (dup)) 
                                      (251 (bipush 28)) 
                                      (253 (ldc_w 100)) ;;STRING:: "Object"
                                      (256 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (259 (aastore)) 
                                      (260 (dup)) 
                                      (261 (bipush 29)) 
                                      (263 (ldc_w )) 
                                      (266 (aastore)) 
                                      (267 (dup)) 
                                      (268 (bipush 30)) 
                                      (270 (ldc_w 101)) ;;STRING:: "Package"
                                      (273 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (276 (aastore)) 
                                      (277 (dup)) 
                                      (278 (bipush 31)) 
                                      (280 (ldc_w )) 
                                      (283 (aastore)) 
                                      (284 (dup)) 
                                      (285 (bipush 32)) 
                                      (287 (ldc_w 102)) ;;STRING:: "Process"
                                      (290 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (293 (aastore)) 
                                      (294 (dup)) 
                                      (295 (bipush 33)) 
                                      (297 (ldc_w )) 
                                      (300 (aastore)) 
                                      (301 (dup)) 
                                      (302 (bipush 34)) 
                                      (304 (ldc_w 103)) ;;STRING:: "ProcessBuilder"
                                      (307 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (310 (aastore)) 
                                      (311 (dup)) 
                                      (312 (bipush 35)) 
                                      (314 (ldc_w )) 
                                      (317 (aastore)) 
                                      (318 (dup)) 
                                      (319 (bipush 36)) 
                                      (321 (ldc_w 104)) ;;STRING:: "Runtime"
                                      (324 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (327 (aastore)) 
                                      (328 (dup)) 
                                      (329 (bipush 37)) 
                                      (331 (ldc_w )) 
                                      (334 (aastore)) 
                                      (335 (dup)) 
                                      (336 (bipush 38)) 
                                      (338 (ldc_w 105)) ;;STRING:: "RuntimePermission"
                                      (341 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (344 (aastore)) 
                                      (345 (dup)) 
                                      (346 (bipush 39)) 
                                      (348 (ldc_w )) 
                                      (351 (aastore)) 
                                      (352 (dup)) 
                                      (353 (bipush 40)) 
                                      (355 (ldc_w 106)) ;;STRING:: "SecurityManager"
                                      (358 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (361 (aastore)) 
                                      (362 (dup)) 
                                      (363 (bipush 41)) 
                                      (365 (ldc_w )) 
                                      (368 (aastore)) 
                                      (369 (dup)) 
                                      (370 (bipush 42)) 
                                      (372 (ldc_w 107)) ;;STRING:: "Short"
                                      (375 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (378 (aastore)) 
                                      (379 (dup)) 
                                      (380 (bipush 43)) 
                                      (382 (ldc_w )) 
                                      (385 (aastore)) 
                                      (386 (dup)) 
                                      (387 (bipush 44)) 
                                      (389 (ldc_w 108)) ;;STRING:: "StackTraceElement"
                                      (392 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (395 (aastore)) 
                                      (396 (dup)) 
                                      (397 (bipush 45)) 
                                      (399 (ldc_w )) 
                                      (402 (aastore)) 
                                      (403 (dup)) 
                                      (404 (bipush 46)) 
                                      (406 (ldc_w 109)) ;;STRING:: "StrictMath"
                                      (409 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (412 (aastore)) 
                                      (413 (dup)) 
                                      (414 (bipush 47)) 
                                      (416 (ldc_w )) 
                                      (419 (aastore)) 
                                      (420 (dup)) 
                                      (421 (bipush 48)) 
                                      (423 (ldc_w 110)) ;;STRING:: "String"
                                      (426 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (429 (aastore)) 
                                      (430 (dup)) 
                                      (431 (bipush 49)) 
                                      (433 (ldc_w )) 
                                      (436 (aastore)) 
                                      (437 (dup)) 
                                      (438 (bipush 50)) 
                                      (440 (ldc_w 111)) ;;STRING:: "StringBuffer"
                                      (443 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (446 (aastore)) 
                                      (447 (dup)) 
                                      (448 (bipush 51)) 
                                      (450 (ldc_w )) 
                                      (453 (aastore)) 
                                      (454 (dup)) 
                                      (455 (bipush 52)) 
                                      (457 (ldc_w 112)) ;;STRING:: "StringBuilder"
                                      (460 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (463 (aastore)) 
                                      (464 (dup)) 
                                      (465 (bipush 53)) 
                                      (467 (ldc_w )) 
                                      (470 (aastore)) 
                                      (471 (dup)) 
                                      (472 (bipush 54)) 
                                      (474 (ldc_w 113)) ;;STRING:: "System"
                                      (477 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (480 (aastore)) 
                                      (481 (dup)) 
                                      (482 (bipush 55)) 
                                      (484 (ldc_w )) 
                                      (487 (aastore)) 
                                      (488 (dup)) 
                                      (489 (bipush 56)) 
                                      (491 (ldc_w 114)) ;;STRING:: "Thread"
                                      (494 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (497 (aastore)) 
                                      (498 (dup)) 
                                      (499 (bipush 57)) 
                                      (501 (ldc_w )) 
                                      (504 (aastore)) 
                                      (505 (dup)) 
                                      (506 (bipush 58)) 
                                      (508 (ldc_w 115)) ;;STRING:: "ThreadGroup"
                                      (511 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (514 (aastore)) 
                                      (515 (dup)) 
                                      (516 (bipush 59)) 
                                      (518 (ldc_w )) 
                                      (521 (aastore)) 
                                      (522 (dup)) 
                                      (523 (bipush 60)) 
                                      (525 (ldc_w 116)) ;;STRING:: "ThreadLocal"
                                      (528 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (531 (aastore)) 
                                      (532 (dup)) 
                                      (533 (bipush 61)) 
                                      (535 (ldc_w )) 
                                      (538 (aastore)) 
                                      (539 (dup)) 
                                      (540 (bipush 62)) 
                                      (542 (ldc_w 117)) ;;STRING:: "Throwable"
                                      (545 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (548 (aastore)) 
                                      (549 (dup)) 
                                      (550 (bipush 63)) 
                                      (552 (ldc_w )) 
                                      (555 (aastore)) 
                                      (556 (dup)) 
                                      (557 (bipush 64)) 
                                      (559 (ldc_w 118)) ;;STRING:: "Void"
                                      (562 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (565 (aastore)) 
                                      (566 (dup)) 
                                      (567 (bipush 65)) 
                                      (569 (ldc_w )) 
                                      (572 (aastore)) 
                                      (573 (dup)) 
                                      (574 (bipush 66)) 
                                      (576 (ldc_w 119)) ;;STRING:: "Appendable"
                                      (579 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (582 (aastore)) 
                                      (583 (dup)) 
                                      (584 (bipush 67)) 
                                      (586 (ldc_w )) 
                                      (589 (aastore)) 
                                      (590 (dup)) 
                                      (591 (bipush 68)) 
                                      (593 (ldc_w 120)) ;;STRING:: "CharSequence"
                                      (596 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (599 (aastore)) 
                                      (600 (dup)) 
                                      (601 (bipush 69)) 
                                      (603 (ldc_w )) 
                                      (606 (aastore)) 
                                      (607 (dup)) 
                                      (608 (bipush 70)) 
                                      (610 (ldc_w 121)) ;;STRING:: "Cloneable"
                                      (613 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (616 (aastore)) 
                                      (617 (dup)) 
                                      (618 (bipush 71)) 
                                      (620 (ldc_w )) 
                                      (623 (aastore)) 
                                      (624 (dup)) 
                                      (625 (bipush 72)) 
                                      (627 (ldc_w 122)) ;;STRING:: "Comparable"
                                      (630 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (633 (aastore)) 
                                      (634 (dup)) 
                                      (635 (bipush 73)) 
                                      (637 (ldc_w )) 
                                      (640 (aastore)) 
                                      (641 (dup)) 
                                      (642 (bipush 74)) 
                                      (644 (ldc_w 123)) ;;STRING:: "Iterable"
                                      (647 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (650 (aastore)) 
                                      (651 (dup)) 
                                      (652 (bipush 75)) 
                                      (654 (ldc_w )) 
                                      (657 (aastore)) 
                                      (658 (dup)) 
                                      (659 (bipush 76)) 
                                      (661 (ldc_w 124)) ;;STRING:: "Readable"
                                      (664 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (667 (aastore)) 
                                      (668 (dup)) 
                                      (669 (bipush 77)) 
                                      (671 (ldc_w )) 
                                      (674 (aastore)) 
                                      (675 (dup)) 
                                      (676 (bipush 78)) 
                                      (678 (ldc_w 125)) ;;STRING:: "Runnable"
                                      (681 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (684 (aastore)) 
                                      (685 (dup)) 
                                      (686 (bipush 79)) 
                                      (688 (ldc_w )) 
                                      (691 (aastore)) 
                                      (692 (dup)) 
                                      (693 (bipush 80)) 
                                      (695 (ldc_w 126)) ;;STRING:: "Callable"
                                      (698 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (701 (aastore)) 
                                      (702 (dup)) 
                                      (703 (bipush 81)) 
                                      (705 (ldc_w )) 
                                      (708 (aastore)) 
                                      (709 (dup)) 
                                      (710 (bipush 82)) 
                                      (712 (ldc_w 127)) ;;STRING:: "BigInteger"
                                      (715 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (718 (aastore)) 
                                      (719 (dup)) 
                                      (720 (bipush 83)) 
                                      (722 (ldc_w )) 
                                      (725 (aastore)) 
                                      (726 (dup)) 
                                      (727 (bipush 84)) 
                                      (729 (ldc_w 128)) ;;STRING:: "BigDecimal"
                                      (732 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (735 (aastore)) 
                                      (736 (dup)) 
                                      (737 (bipush 85)) 
                                      (739 (ldc_w )) 
                                      (742 (aastore)) 
                                      (743 (dup)) 
                                      (744 (bipush 86)) 
                                      (746 (ldc_w 129)) ;;STRING:: "ArithmeticException"
                                      (749 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (752 (aastore)) 
                                      (753 (dup)) 
                                      (754 (bipush 87)) 
                                      (756 (ldc_w )) 
                                      (759 (aastore)) 
                                      (760 (dup)) 
                                      (761 (bipush 88)) 
                                      (763 (ldc_w 130)) ;;STRING:: "ArrayIndexOutOfBoundsException"
                                      (766 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (769 (aastore)) 
                                      (770 (dup)) 
                                      (771 (bipush 89)) 
                                      (773 (ldc_w )) 
                                      (776 (aastore)) 
                                      (777 (dup)) 
                                      (778 (bipush 90)) 
                                      (780 (ldc_w 131)) ;;STRING:: "ArrayStoreException"
                                      (783 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (786 (aastore)) 
                                      (787 (dup)) 
                                      (788 (bipush 91)) 
                                      (790 (ldc_w )) 
                                      (793 (aastore)) 
                                      (794 (dup)) 
                                      (795 (bipush 92)) 
                                      (797 (ldc_w 132)) ;;STRING:: "ClassCastException"
                                      (800 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (803 (aastore)) 
                                      (804 (dup)) 
                                      (805 (bipush 93)) 
                                      (807 (ldc_w )) 
                                      (810 (aastore)) 
                                      (811 (dup)) 
                                      (812 (bipush 94)) 
                                      (814 (ldc_w 133)) ;;STRING:: "ClassNotFoundException"
                                      (817 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (820 (aastore)) 
                                      (821 (dup)) 
                                      (822 (bipush 95)) 
                                      (824 (ldc_w )) 
                                      (827 (aastore)) 
                                      (828 (dup)) 
                                      (829 (bipush 96)) 
                                      (831 (ldc_w 134)) ;;STRING:: "CloneNotSupportedException"
                                      (834 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (837 (aastore)) 
                                      (838 (dup)) 
                                      (839 (bipush 97)) 
                                      (841 (ldc_w )) 
                                      (844 (aastore)) 
                                      (845 (dup)) 
                                      (846 (bipush 98)) 
                                      (848 (ldc_w 135)) ;;STRING:: "EnumConstantNotPresentException"
                                      (851 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (854 (aastore)) 
                                      (855 (dup)) 
                                      (856 (bipush 99)) 
                                      (858 (ldc_w )) 
                                      (861 (aastore)) 
                                      (862 (dup)) 
                                      (863 (bipush 100)) 
                                      (865 (ldc_w 136)) ;;STRING:: "Exception"
                                      (868 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (871 (aastore)) 
                                      (872 (dup)) 
                                      (873 (bipush 101)) 
                                      (875 (ldc_w )) 
                                      (878 (aastore)) 
                                      (879 (dup)) 
                                      (880 (bipush 102)) 
                                      (882 (ldc_w 137)) ;;STRING:: "IllegalAccessException"
                                      (885 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (888 (aastore)) 
                                      (889 (dup)) 
                                      (890 (bipush 103)) 
                                      (892 (ldc_w )) 
                                      (895 (aastore)) 
                                      (896 (dup)) 
                                      (897 (bipush 104)) 
                                      (899 (ldc_w 138)) ;;STRING:: "IllegalArgumentException"
                                      (902 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (905 (aastore)) 
                                      (906 (dup)) 
                                      (907 (bipush 105)) 
                                      (909 (ldc_w )) 
                                      (912 (aastore)) 
                                      (913 (dup)) 
                                      (914 (bipush 106)) 
                                      (916 (ldc_w 139)) ;;STRING:: "IllegalMonitorStateException"
                                      (919 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (922 (aastore)) 
                                      (923 (dup)) 
                                      (924 (bipush 107)) 
                                      (926 (ldc_w )) 
                                      (929 (aastore)) 
                                      (930 (dup)) 
                                      (931 (bipush 108)) 
                                      (933 (ldc_w 140)) ;;STRING:: "IllegalStateException"
                                      (936 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (939 (aastore)) 
                                      (940 (dup)) 
                                      (941 (bipush 109)) 
                                      (943 (ldc_w )) 
                                      (946 (aastore)) 
                                      (947 (dup)) 
                                      (948 (bipush 110)) 
                                      (950 (ldc_w 141)) ;;STRING:: "IllegalThreadStateException"
                                      (953 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (956 (aastore)) 
                                      (957 (dup)) 
                                      (958 (bipush 111)) 
                                      (960 (ldc_w )) 
                                      (963 (aastore)) 
                                      (964 (dup)) 
                                      (965 (bipush 112)) 
                                      (967 (ldc_w 142)) ;;STRING:: "IndexOutOfBoundsException"
                                      (970 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (973 (aastore)) 
                                      (974 (dup)) 
                                      (975 (bipush 113)) 
                                      (977 (ldc_w )) 
                                      (980 (aastore)) 
                                      (981 (dup)) 
                                      (982 (bipush 114)) 
                                      (984 (ldc_w 143)) ;;STRING:: "InstantiationException"
                                      (987 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (990 (aastore)) 
                                      (991 (dup)) 
                                      (992 (bipush 115)) 
                                      (994 (ldc_w )) 
                                      (997 (aastore)) 
                                      (998 (dup)) 
                                      (999 (bipush 116)) 
                                      (1001 (ldc_w 144)) ;;STRING:: "InterruptedException"
                                      (1004 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1007 (aastore)) 
                                      (1008 (dup)) 
                                      (1009 (bipush 117)) 
                                      (1011 (ldc_w )) 
                                      (1014 (aastore)) 
                                      (1015 (dup)) 
                                      (1016 (bipush 118)) 
                                      (1018 (ldc_w 145)) ;;STRING:: "NegativeArraySizeException"
                                      (1021 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1024 (aastore)) 
                                      (1025 (dup)) 
                                      (1026 (bipush 119)) 
                                      (1028 (ldc_w )) 
                                      (1031 (aastore)) 
                                      (1032 (dup)) 
                                      (1033 (bipush 120)) 
                                      (1035 (ldc_w 146)) ;;STRING:: "NoSuchFieldException"
                                      (1038 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1041 (aastore)) 
                                      (1042 (dup)) 
                                      (1043 (bipush 121)) 
                                      (1045 (ldc_w )) 
                                      (1048 (aastore)) 
                                      (1049 (dup)) 
                                      (1050 (bipush 122)) 
                                      (1052 (ldc_w 147)) ;;STRING:: "NoSuchMethodException"
                                      (1055 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1058 (aastore)) 
                                      (1059 (dup)) 
                                      (1060 (bipush 123)) 
                                      (1062 (ldc_w )) 
                                      (1065 (aastore)) 
                                      (1066 (dup)) 
                                      (1067 (bipush 124)) 
                                      (1069 (ldc_w 148)) ;;STRING:: "NullPointerException"
                                      (1072 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1075 (aastore)) 
                                      (1076 (dup)) 
                                      (1077 (bipush 125)) 
                                      (1079 (ldc_w )) 
                                      (1082 (aastore)) 
                                      (1083 (dup)) 
                                      (1084 (bipush 126)) 
                                      (1086 (ldc_w 149)) ;;STRING:: "NumberFormatException"
                                      (1089 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1092 (aastore)) 
                                      (1093 (dup)) 
                                      (1094 (bipush 127)) 
                                      (1096 (ldc_w )) 
                                      (1099 (aastore)) 
                                      (1100 (dup)) 
                                      (1101 (sipush 128)) 
                                      (1104 (ldc_w 150)) ;;STRING:: "RuntimeException"
                                      (1107 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1110 (aastore)) 
                                      (1111 (dup)) 
                                      (1112 (sipush 129)) 
                                      (1115 (ldc_w )) 
                                      (1118 (aastore)) 
                                      (1119 (dup)) 
                                      (1120 (sipush 130)) 
                                      (1123 (ldc_w 151)) ;;STRING:: "SecurityException"
                                      (1126 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1129 (aastore)) 
                                      (1130 (dup)) 
                                      (1131 (sipush 131)) 
                                      (1134 (ldc_w )) 
                                      (1137 (aastore)) 
                                      (1138 (dup)) 
                                      (1139 (sipush 132)) 
                                      (1142 (ldc_w 152)) ;;STRING:: "StringIndexOutOfBoundsException"
                                      (1145 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1148 (aastore)) 
                                      (1149 (dup)) 
                                      (1150 (sipush 133)) 
                                      (1153 (ldc_w )) 
                                      (1156 (aastore)) 
                                      (1157 (dup)) 
                                      (1158 (sipush 134)) 
                                      (1161 (ldc_w 153)) ;;STRING:: "TypeNotPresentException"
                                      (1164 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1167 (aastore)) 
                                      (1168 (dup)) 
                                      (1169 (sipush 135)) 
                                      (1172 (ldc_w )) 
                                      (1175 (aastore)) 
                                      (1176 (dup)) 
                                      (1177 (sipush 136)) 
                                      (1180 (ldc_w 154)) ;;STRING:: "UnsupportedOperationException"
                                      (1183 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1186 (aastore)) 
                                      (1187 (dup)) 
                                      (1188 (sipush 137)) 
                                      (1191 (ldc_w )) 
                                      (1194 (aastore)) 
                                      (1195 (dup)) 
                                      (1196 (sipush 138)) 
                                      (1199 (ldc_w 155)) ;;STRING:: "AbstractMethodError"
                                      (1202 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1205 (aastore)) 
                                      (1206 (dup)) 
                                      (1207 (sipush 139)) 
                                      (1210 (ldc_w )) 
                                      (1213 (aastore)) 
                                      (1214 (dup)) 
                                      (1215 (sipush 140)) 
                                      (1218 (ldc_w 156)) ;;STRING:: "AssertionError"
                                      (1221 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1224 (aastore)) 
                                      (1225 (dup)) 
                                      (1226 (sipush 141)) 
                                      (1229 (ldc_w )) 
                                      (1232 (aastore)) 
                                      (1233 (dup)) 
                                      (1234 (sipush 142)) 
                                      (1237 (ldc_w 157)) ;;STRING:: "ClassCircularityError"
                                      (1240 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1243 (aastore)) 
                                      (1244 (dup)) 
                                      (1245 (sipush 143)) 
                                      (1248 (ldc_w )) 
                                      (1251 (aastore)) 
                                      (1252 (dup)) 
                                      (1253 (sipush 144)) 
                                      (1256 (ldc_w 158)) ;;STRING:: "ClassFormatError"
                                      (1259 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1262 (aastore)) 
                                      (1263 (dup)) 
                                      (1264 (sipush 145)) 
                                      (1267 (ldc_w )) 
                                      (1270 (aastore)) 
                                      (1271 (dup)) 
                                      (1272 (sipush 146)) 
                                      (1275 (ldc_w 159)) ;;STRING:: "Error"
                                      (1278 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1281 (aastore)) 
                                      (1282 (dup)) 
                                      (1283 (sipush 147)) 
                                      (1286 (ldc_w )) 
                                      (1289 (aastore)) 
                                      (1290 (dup)) 
                                      (1291 (sipush 148)) 
                                      (1294 (ldc_w 160)) ;;STRING:: "ExceptionInInitializerError"
                                      (1297 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1300 (aastore)) 
                                      (1301 (dup)) 
                                      (1302 (sipush 149)) 
                                      (1305 (ldc_w )) 
                                      (1308 (aastore)) 
                                      (1309 (dup)) 
                                      (1310 (sipush 150)) 
                                      (1313 (ldc_w 161)) ;;STRING:: "IllegalAccessError"
                                      (1316 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1319 (aastore)) 
                                      (1320 (dup)) 
                                      (1321 (sipush 151)) 
                                      (1324 (ldc_w )) 
                                      (1327 (aastore)) 
                                      (1328 (dup)) 
                                      (1329 (sipush 152)) 
                                      (1332 (ldc_w 162)) ;;STRING:: "IncompatibleClassChangeError"
                                      (1335 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1338 (aastore)) 
                                      (1339 (dup)) 
                                      (1340 (sipush 153)) 
                                      (1343 (ldc_w )) 
                                      (1346 (aastore)) 
                                      (1347 (dup)) 
                                      (1348 (sipush 154)) 
                                      (1351 (ldc_w 163)) ;;STRING:: "InstantiationError"
                                      (1354 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1357 (aastore)) 
                                      (1358 (dup)) 
                                      (1359 (sipush 155)) 
                                      (1362 (ldc_w )) 
                                      (1365 (aastore)) 
                                      (1366 (dup)) 
                                      (1367 (sipush 156)) 
                                      (1370 (ldc_w 164)) ;;STRING:: "InternalError"
                                      (1373 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1376 (aastore)) 
                                      (1377 (dup)) 
                                      (1378 (sipush 157)) 
                                      (1381 (ldc_w )) 
                                      (1384 (aastore)) 
                                      (1385 (dup)) 
                                      (1386 (sipush 158)) 
                                      (1389 (ldc_w 165)) ;;STRING:: "LinkageError"
                                      (1392 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1395 (aastore)) 
                                      (1396 (dup)) 
                                      (1397 (sipush 159)) 
                                      (1400 (ldc_w )) 
                                      (1403 (aastore)) 
                                      (1404 (dup)) 
                                      (1405 (sipush 160)) 
                                      (1408 (ldc_w 166)) ;;STRING:: "NoClassDefFoundError"
                                      (1411 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1414 (aastore)) 
                                      (1415 (dup)) 
                                      (1416 (sipush 161)) 
                                      (1419 (ldc_w )) 
                                      (1422 (aastore)) 
                                      (1423 (dup)) 
                                      (1424 (sipush 162)) 
                                      (1427 (ldc_w 167)) ;;STRING:: "NoSuchFieldError"
                                      (1430 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1433 (aastore)) 
                                      (1434 (dup)) 
                                      (1435 (sipush 163)) 
                                      (1438 (ldc_w )) 
                                      (1441 (aastore)) 
                                      (1442 (dup)) 
                                      (1443 (sipush 164)) 
                                      (1446 (ldc_w 168)) ;;STRING:: "NoSuchMethodError"
                                      (1449 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1452 (aastore)) 
                                      (1453 (dup)) 
                                      (1454 (sipush 165)) 
                                      (1457 (ldc_w )) 
                                      (1460 (aastore)) 
                                      (1461 (dup)) 
                                      (1462 (sipush 166)) 
                                      (1465 (ldc_w 169)) ;;STRING:: "OutOfMemoryError"
                                      (1468 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1471 (aastore)) 
                                      (1472 (dup)) 
                                      (1473 (sipush 167)) 
                                      (1476 (ldc_w )) 
                                      (1479 (aastore)) 
                                      (1480 (dup)) 
                                      (1481 (sipush 168)) 
                                      (1484 (ldc_w 170)) ;;STRING:: "StackOverflowError"
                                      (1487 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1490 (aastore)) 
                                      (1491 (dup)) 
                                      (1492 (sipush 169)) 
                                      (1495 (ldc_w )) 
                                      (1498 (aastore)) 
                                      (1499 (dup)) 
                                      (1500 (sipush 170)) 
                                      (1503 (ldc_w 171)) ;;STRING:: "ThreadDeath"
                                      (1506 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1509 (aastore)) 
                                      (1510 (dup)) 
                                      (1511 (sipush 171)) 
                                      (1514 (ldc_w )) 
                                      (1517 (aastore)) 
                                      (1518 (dup)) 
                                      (1519 (sipush 172)) 
                                      (1522 (ldc_w 172)) ;;STRING:: "UnknownError"
                                      (1525 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1528 (aastore)) 
                                      (1529 (dup)) 
                                      (1530 (sipush 173)) 
                                      (1533 (ldc_w )) 
                                      (1536 (aastore)) 
                                      (1537 (dup)) 
                                      (1538 (sipush 174)) 
                                      (1541 (ldc_w 173)) ;;STRING:: "UnsatisfiedLinkError"
                                      (1544 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1547 (aastore)) 
                                      (1548 (dup)) 
                                      (1549 (sipush 175)) 
                                      (1552 (ldc_w )) 
                                      (1555 (aastore)) 
                                      (1556 (dup)) 
                                      (1557 (sipush 176)) 
                                      (1560 (ldc_w 174)) ;;STRING:: "UnsupportedClassVersionError"
                                      (1563 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1566 (aastore)) 
                                      (1567 (dup)) 
                                      (1568 (sipush 177)) 
                                      (1571 (ldc_w )) 
                                      (1574 (aastore)) 
                                      (1575 (dup)) 
                                      (1576 (sipush 178)) 
                                      (1579 (ldc_w 175)) ;;STRING:: "VerifyError"
                                      (1582 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1585 (aastore)) 
                                      (1586 (dup)) 
                                      (1587 (sipush 179)) 
                                      (1590 (ldc_w )) 
                                      (1593 (aastore)) 
                                      (1594 (dup)) 
                                      (1595 (sipush 180)) 
                                      (1598 (ldc_w 176)) ;;STRING:: "VirtualMachineError"
                                      (1601 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1604 (aastore)) 
                                      (1605 (dup)) 
                                      (1606 (sipush 181)) 
                                      (1609 (ldc_w )) 
                                      (1612 (aastore)) 
                                      (1613 (dup)) 
                                      (1614 (sipush 182)) 
                                      (1617 (ldc_w 177)) ;;STRING:: "Thread$UncaughtExceptionHandler"
                                      (1620 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1623 (aastore)) 
                                      (1624 (dup)) 
                                      (1625 (sipush 183)) 
                                      (1628 (ldc_w )) 
                                      (1631 (aastore)) 
                                      (1632 (dup)) 
                                      (1633 (sipush 184)) 
                                      (1636 (ldc_w 178)) ;;STRING:: "Thread$State"
                                      (1639 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1642 (aastore)) 
                                      (1643 (dup)) 
                                      (1644 (sipush 185)) 
                                      (1647 (ldc_w )) 
                                      (1650 (aastore)) 
                                      (1651 (dup)) 
                                      (1652 (sipush 186)) 
                                      (1655 (ldc_w 179)) ;;STRING:: "Deprecated"
                                      (1658 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1661 (aastore)) 
                                      (1662 (dup)) 
                                      (1663 (sipush 187)) 
                                      (1666 (ldc_w )) 
                                      (1669 (aastore)) 
                                      (1670 (dup)) 
                                      (1671 (sipush 188)) 
                                      (1674 (ldc_w 180)) ;;STRING:: "Override"
                                      (1677 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1680 (aastore)) 
                                      (1681 (dup)) 
                                      (1682 (sipush 189)) 
                                      (1685 (ldc_w )) 
                                      (1688 (aastore)) 
                                      (1689 (dup)) 
                                      (1690 (sipush 190)) 
                                      (1693 (ldc_w 181)) ;;STRING:: "SuppressWarnings"
                                      (1696 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1699 (aastore)) 
                                      (1700 (dup)) 
                                      (1701 (sipush 191)) 
                                      (1704 (ldc_w )) 
                                      (1707 (aastore)) 
                                      (1708 (invokestatic (methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (1711 (putstatic (fieldCP "DEFAULT_IMPORTS" "clojure.lang.RT" (class "clojure.lang.IPersistentMap")))) 
                                      (1714 (ldc_w 182)) ;;STRING:: "UTF-8"
                                      (1717 (invokestatic (methodCP "forName" "java.nio.charset.Charset" ((class "java.lang.String")) (class "java.nio.charset.Charset")))) 
                                      (1720 (putstatic (fieldCP "UTF8" "clojure.lang.RT" (class "java.nio.charset.Charset")))) 
                                      (1723 (ldc 15)) ;;STRING:: "clojure.core"
                                      (1725 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1728 (invokestatic (methodCP "findOrCreate" "clojure.lang.Namespace" ((class "clojure.lang.Symbol")) (class "clojure.lang.Namespace")))) 
                                      (1731 (putstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (1734 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (1737 (ldc_w 183)) ;;STRING:: "*out*"
                                      (1740 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1743 (new (class "java.io.OutputStreamWriter"))) 
                                      (1746 (dup)) 
                                      (1747 (getstatic (fieldCP "out" "java.lang.System" (class "java.io.PrintStream")))) 
                                      (1750 (invokespecial (methodCP "<init>" "java.io.OutputStreamWriter" ((class "java.io.OutputStream")) void))) 
                                      (1753 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (1756 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (1759 (putstatic (fieldCP "OUT" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (1762 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (1765 (ldc_w 184)) ;;STRING:: "*in*"
                                      (1768 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1771 (new (class "clojure.lang.LineNumberingPushbackReader"))) 
                                      (1774 (dup)) 
                                      (1775 (new (class "java.io.InputStreamReader"))) 
                                      (1778 (dup)) 
                                      (1779 (getstatic (fieldCP "in" "java.lang.System" (class "java.io.InputStream")))) 
                                      (1782 (invokespecial (methodCP "<init>" "java.io.InputStreamReader" ((class "java.io.InputStream")) void))) 
                                      (1785 (invokespecial (methodCP "<init>" "clojure.lang.LineNumberingPushbackReader" ((class "java.io.Reader")) void))) 
                                      (1788 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (1791 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (1794 (putstatic (fieldCP "IN" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (1797 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (1800 (ldc_w 185)) ;;STRING:: "*err*"
                                      (1803 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1806 (new (class "java.io.PrintWriter"))) 
                                      (1809 (dup)) 
                                      (1810 (new (class "java.io.OutputStreamWriter"))) 
                                      (1813 (dup)) 
                                      (1814 (getstatic (fieldCP "err" "java.lang.System" (class "java.io.PrintStream")))) 
                                      (1817 (invokespecial (methodCP "<init>" "java.io.OutputStreamWriter" ((class "java.io.OutputStream")) void))) 
                                      (1820 (iconst_1)) 
                                      (1821 (invokespecial (methodCP "<init>" "java.io.PrintWriter" ((class "java.io.Writer") boolean) void))) 
                                      (1824 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (1827 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (1830 (putstatic (fieldCP "ERR" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (1833 (aconst_null)) 
                                      (1834 (ldc_w 186)) ;;STRING:: "tag"
                                      (1837 (invokestatic (methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword")))) 
                                      (1840 (putstatic (fieldCP "TAG_KEY" "clojure.lang.RT" (class "clojure.lang.Keyword")))) 
                                      (1843 (aconst_null)) 
                                      (1844 (ldc_w 187)) ;;STRING:: "const"
                                      (1847 (invokestatic (methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword")))) 
                                      (1850 (putstatic (fieldCP "CONST_KEY" "clojure.lang.RT" (class "clojure.lang.Keyword")))) 
                                      (1853 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (1856 (ldc_w 188)) ;;STRING:: "*agent*"
                                      (1859 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1862 (aconst_null)) 
                                      (1863 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (1866 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (1869 (putstatic (fieldCP "AGENT" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (1872 (ldc_w 189)) ;;STRING:: "clojure.read.eval"
                                      (1875 (ldc 1)) ;;STRING:: "true"
                                      (1877 (invokestatic (methodCP "getProperty" "java.lang.System" ((class "java.lang.String") (class "java.lang.String")) (class "java.lang.String")))) 
                                      (1880 (invokestatic (methodCP "readTrueFalseUnknown" "clojure.lang.RT" ((class "java.lang.String")) (class "java.lang.Object")))) 
                                      (1883 (putstatic (fieldCP "readeval" "clojure.lang.RT" (class "java.lang.Object")))) 
                                      (1886 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (1889 (ldc_w 190)) ;;STRING:: "*read-eval*"
                                      (1892 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1895 (getstatic (fieldCP "readeval" "clojure.lang.RT" (class "java.lang.Object")))) 
                                      (1898 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (1901 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (1904 (putstatic (fieldCP "READEVAL" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (1907 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (1910 (ldc_w 191)) ;;STRING:: "*data-readers*"
                                      (1913 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1916 (iconst_0)) 
                                      (1917 (anewarray (class "java.lang.Object"))) 
                                      (1920 (invokestatic (methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (1923 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (1926 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (1929 (putstatic (fieldCP "DATA_READERS" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (1932 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (1935 (ldc_w 192)) ;;STRING:: "*default-data-reader-fn*"
                                      (1938 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1941 (iconst_0)) 
                                      (1942 (anewarray (class "java.lang.Object"))) 
                                      (1945 (invokestatic (methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (1948 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (1951 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (1954 (putstatic (fieldCP "DEFAULT_DATA_READER_FN" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (1957 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (1960 (ldc_w 193)) ;;STRING:: "default-data-readers"
                                      (1963 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1966 (iconst_0)) 
                                      (1967 (anewarray (class "java.lang.Object"))) 
                                      (1970 (invokestatic (methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (1973 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (1976 (putstatic (fieldCP "DEFAULT_DATA_READERS" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (1979 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (1982 (ldc_w 194)) ;;STRING:: "*assert*"
                                      (1985 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (1988 (getstatic (fieldCP "T" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (1991 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (1994 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (1997 (putstatic (fieldCP "ASSERT" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2000 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2003 (ldc_w 195)) ;;STRING:: "*math-context*"
                                      (2006 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2009 (aconst_null)) 
                                      (2010 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2013 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (2016 (putstatic (fieldCP "MATH_CONTEXT" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2019 (aconst_null)) 
                                      (2020 (ldc_w 196)) ;;STRING:: "line"
                                      (2023 (invokestatic (methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword")))) 
                                      (2026 (putstatic (fieldCP "LINE_KEY" "clojure.lang.RT" (class "clojure.lang.Keyword")))) 
                                      (2029 (aconst_null)) 
                                      (2030 (ldc_w 197)) ;;STRING:: "column"
                                      (2033 (invokestatic (methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword")))) 
                                      (2036 (putstatic (fieldCP "COLUMN_KEY" "clojure.lang.RT" (class "clojure.lang.Keyword")))) 
                                      (2039 (aconst_null)) 
                                      (2040 (ldc_w 198)) ;;STRING:: "file"
                                      (2043 (invokestatic (methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword")))) 
                                      (2046 (putstatic (fieldCP "FILE_KEY" "clojure.lang.RT" (class "clojure.lang.Keyword")))) 
                                      (2049 (aconst_null)) 
                                      (2050 (ldc_w 199)) ;;STRING:: "declared"
                                      (2053 (invokestatic (methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword")))) 
                                      (2056 (putstatic (fieldCP "DECLARED_KEY" "clojure.lang.RT" (class "clojure.lang.Keyword")))) 
                                      (2059 (aconst_null)) 
                                      (2060 (ldc_w 200)) ;;STRING:: "doc"
                                      (2063 (invokestatic (methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword")))) 
                                      (2066 (putstatic (fieldCP "DOC_KEY" "clojure.lang.RT" (class "clojure.lang.Keyword")))) 
                                      (2069 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2072 (ldc_w 201)) ;;STRING:: "*use-context-classloader*"
                                      (2075 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2078 (getstatic (fieldCP "T" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (2081 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2084 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (2087 (putstatic (fieldCP "USE_CONTEXT_CLASSLOADER" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2090 (ldc 15)) ;;STRING:: "clojure.core"
                                      (2092 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2095 (invokestatic (methodCP "findOrCreate" "clojure.lang.Namespace" ((class "clojure.lang.Symbol")) (class "clojure.lang.Namespace")))) 
                                      (2098 (ldc_w 202)) ;;STRING:: "*unchecked-math*"
                                      (2101 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2104 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (2107 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2110 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (2113 (putstatic (fieldCP "UNCHECKED_MATH" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2116 (ldc_w 203)) ;;STRING:: "load-file"
                                      (2119 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2122 (putstatic (fieldCP "LOAD_FILE" "clojure.lang.RT" (class "clojure.lang.Symbol")))) 
                                      (2125 (ldc 16)) ;;STRING:: "in-ns"
                                      (2127 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2130 (putstatic (fieldCP "IN_NAMESPACE" "clojure.lang.RT" (class "clojure.lang.Symbol")))) 
                                      (2133 (ldc_w 204)) ;;STRING:: "ns"
                                      (2136 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2139 (putstatic (fieldCP "NAMESPACE" "clojure.lang.RT" (class "clojure.lang.Symbol")))) 
                                      (2142 (ldc_w 205)) ;;STRING:: "identical?"
                                      (2145 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2148 (putstatic (fieldCP "IDENTICAL" "clojure.lang.RT" (class "clojure.lang.Symbol")))) 
                                      (2151 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2154 (ldc_w 206)) ;;STRING:: "*command-line-args*"
                                      (2157 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2160 (aconst_null)) 
                                      (2161 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2164 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (2167 (putstatic (fieldCP "CMD_LINE_ARGS" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2170 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2173 (ldc_w 207)) ;;STRING:: "*ns*"
                                      (2176 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2179 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2182 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2185 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (2188 (putstatic (fieldCP "CURRENT_NS" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2191 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2194 (ldc_w 208)) ;;STRING:: "*flush-on-newline*"
                                      (2197 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2200 (getstatic (fieldCP "T" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (2203 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2206 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (2209 (putstatic (fieldCP "FLUSH_ON_NEWLINE" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2212 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2215 (ldc_w 209)) ;;STRING:: "*print-meta*"
                                      (2218 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2221 (getstatic (fieldCP "F" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (2224 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2227 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (2230 (putstatic (fieldCP "PRINT_META" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2233 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2236 (ldc_w 210)) ;;STRING:: "*print-readably*"
                                      (2239 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2242 (getstatic (fieldCP "T" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (2245 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2248 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (2251 (putstatic (fieldCP "PRINT_READABLY" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2254 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2257 (ldc_w 211)) ;;STRING:: "*print-dup*"
                                      (2260 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2263 (getstatic (fieldCP "F" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (2266 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2269 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (2272 (putstatic (fieldCP "PRINT_DUP" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2275 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2278 (ldc_w 212)) ;;STRING:: "*warn-on-reflection*"
                                      (2281 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2284 (getstatic (fieldCP "F" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (2287 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2290 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (2293 (putstatic (fieldCP "WARN_ON_REFLECTION" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2296 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2299 (ldc_w 213)) ;;STRING:: "*allow-unresolved-vars*"
                                      (2302 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2305 (getstatic (fieldCP "F" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (2308 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2311 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (2314 (putstatic (fieldCP "ALLOW_UNRESOLVED_VARS" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2317 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2320 (ldc 16)) ;;STRING:: "in-ns"
                                      (2322 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2325 (getstatic (fieldCP "F" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (2328 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2331 (putstatic (fieldCP "IN_NS_VAR" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2334 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2337 (ldc_w 204)) ;;STRING:: "ns"
                                      (2340 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2343 (getstatic (fieldCP "F" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (2346 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2349 (putstatic (fieldCP "NS_VAR" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2352 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2355 (ldc_w 214)) ;;STRING:: "*fn-loader*"
                                      (2358 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2361 (aconst_null)) 
                                      (2362 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2365 (invokevirtual (methodCP "setDynamic" "clojure.lang.Var" () (class "clojure.lang.Var")))) 
                                      (2368 (putstatic (fieldCP "FN_LOADER_VAR" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2371 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2374 (ldc_w 215)) ;;STRING:: "print-initialized"
                                      (2377 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2380 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol")) (class "clojure.lang.Var")))) 
                                      (2383 (putstatic (fieldCP "PRINT_INITIALIZED" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2386 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2389 (ldc_w 216)) ;;STRING:: "pr-on"
                                      (2392 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2395 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol")) (class "clojure.lang.Var")))) 
                                      (2398 (putstatic (fieldCP "PR_ON" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2401 (new (class "clojure.lang.RT$1"))) 
                                      (2404 (dup)) 
                                      (2405 (invokespecial (methodCP "<init>" "clojure.lang.RT$1" () void))) 
                                      (2408 (putstatic (fieldCP "inNamespace" "clojure.lang.RT" (class "clojure.lang.IFn")))) 
                                      (2411 (new (class "clojure.lang.RT$2"))) 
                                      (2414 (dup)) 
                                      (2415 (invokespecial (methodCP "<init>" "clojure.lang.RT$2" () void))) 
                                      (2418 (putstatic (fieldCP "bootNamespace" "clojure.lang.RT" (class "clojure.lang.IFn")))) 
                                      (2421 (iconst_0)) 
                                      (2422 (anewarray (class "java.lang.Object"))) 
                                      (2425 (putstatic (fieldCP "EMPTY_ARRAY" "clojure.lang.RT" (array (class "java.lang.Object"))))) 
                                      (2428 (new (class "clojure.lang.RT$DefaultComparator"))) 
                                      (2431 (dup)) 
                                      (2432 (aconst_null)) 
                                      (2433 (invokespecial (methodCP "<init>" "clojure.lang.RT$DefaultComparator" ((class "clojure.lang.RT$1")) void))) 
                                      (2436 (putstatic (fieldCP "DEFAULT_COMPARATOR" "clojure.lang.RT" (class "java.util.Comparator")))) 
                                      (2439 (new (class "java.util.concurrent.atomic.AtomicInteger"))) 
                                      (2442 (dup)) 
                                      (2443 (iconst_1)) 
                                      (2444 (invokespecial (methodCP "<init>" "java.util.concurrent.atomic.AtomicInteger" (int) void))) 
                                      (2447 (putstatic (fieldCP "id" "clojure.lang.RT" (class "java.util.concurrent.atomic.AtomicInteger")))) 
                                      (2450 (aconst_null)) 
                                      (2451 (ldc_w 217)) ;;STRING:: "arglists"
                                      (2454 (invokestatic (methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword")))) 
                                      (2457 (astore_0)) 
                                      (2458 (ldc_w 218)) ;;STRING:: "name"
                                      (2461 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2464 (astore_1)) 
                                      (2465 (getstatic (fieldCP "OUT" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2468 (ldc_w 219)) ;;STRING:: "java.io.Writer"
                                      (2471 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2474 (invokevirtual (methodCP "setTag" "clojure.lang.Var" ((class "clojure.lang.Symbol")) void))) 
                                      (2477 (getstatic (fieldCP "CURRENT_NS" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2480 (ldc_w 220)) ;;STRING:: "clojure.lang.Namespace"
                                      (2483 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2486 (invokevirtual (methodCP "setTag" "clojure.lang.Var" ((class "clojure.lang.Symbol")) void))) 
                                      (2489 (getstatic (fieldCP "AGENT" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2492 (iconst_2)) 
                                      (2493 (anewarray (class "java.lang.Object"))) 
                                      (2496 (dup)) 
                                      (2497 (iconst_0)) 
                                      (2498 (getstatic (fieldCP "DOC_KEY" "clojure.lang.RT" (class "clojure.lang.Keyword")))) 
                                      (2501 (aastore)) 
                                      (2502 (dup)) 
                                      (2503 (iconst_1)) 
                                      (2504 (ldc_w 221)) ;;STRING:: "The agent currently running an action on this thread, else nil"
                                      (2507 (aastore)) 
                                      (2508 (invokestatic (methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (2511 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (2514 (getstatic (fieldCP "AGENT" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2517 (ldc_w 222)) ;;STRING:: "clojure.lang.Agent"
                                      (2520 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2523 (invokevirtual (methodCP "setTag" "clojure.lang.Var" ((class "clojure.lang.Symbol")) void))) 
                                      (2526 (getstatic (fieldCP "MATH_CONTEXT" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (2529 (ldc_w 223)) ;;STRING:: "java.math.MathContext"
                                      (2532 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (2535 (invokevirtual (methodCP "setTag" "clojure.lang.Var" ((class "clojure.lang.Symbol")) void))) 
                                      (2538 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2541 (getstatic (fieldCP "NAMESPACE" "clojure.lang.RT" (class "clojure.lang.Symbol")))) 
                                      (2544 (getstatic (fieldCP "bootNamespace" "clojure.lang.RT" (class "clojure.lang.IFn")))) 
                                      (2547 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2550 (astore_2)) 
                                      (2551 (aload_2)) 
                                      (2552 (invokevirtual (methodCP "setMacro" "clojure.lang.Var" () void))) 
                                      (2555 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2558 (getstatic (fieldCP "IN_NAMESPACE" "clojure.lang.RT" (class "clojure.lang.Symbol")))) 
                                      (2561 (getstatic (fieldCP "inNamespace" "clojure.lang.RT" (class "clojure.lang.IFn")))) 
                                      (2564 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2567 (astore_3)) 
                                      (2568 (aload_3)) 
                                      (2569 (iconst_4)) 
                                      (2570 (anewarray (class "java.lang.Object"))) 
                                      (2573 (dup)) 
                                      (2574 (iconst_0)) 
                                      (2575 (getstatic (fieldCP "DOC_KEY" "clojure.lang.RT" (class "clojure.lang.Keyword")))) 
                                      (2578 (aastore)) 
                                      (2579 (dup)) 
                                      (2580 (iconst_1)) 
                                      (2581 (ldc_w 224)) ;;STRING:: "Sets *ns* to the namespace named by the symbol, creating it if needed."
                                      (2584 (aastore)) 
                                      (2585 (dup)) 
                                      (2586 (iconst_2)) 
                                      (2587 (aload_0)) 
                                      (2588 (aastore)) 
                                      (2589 (dup)) 
                                      (2590 (iconst_3)) 
                                      (2591 (iconst_1)) 
                                      (2592 (anewarray (class "java.lang.Object"))) 
                                      (2595 (dup)) 
                                      (2596 (iconst_0)) 
                                      (2597 (aload_1)) 
                                      (2598 (aastore)) 
                                      (2599 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (2602 (invokestatic (methodCP "list" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (2605 (aastore)) 
                                      (2606 (invokestatic (methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (2609 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (2612 (getstatic (fieldCP "CLOJURE_NS" "clojure.lang.RT" (class "clojure.lang.Namespace")))) 
                                      (2615 (getstatic (fieldCP "LOAD_FILE" "clojure.lang.RT" (class "clojure.lang.Symbol")))) 
                                      (2618 (new (class "clojure.lang.RT$3"))) 
                                      (2621 (dup)) 
                                      (2622 (invokespecial (methodCP "<init>" "clojure.lang.RT$3" () void))) 
                                      (2625 (invokestatic (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) (class "clojure.lang.Var")))) 
                                      (2628 (astore_3)) 
                                      (2629 (aload_3)) 
                                      (2630 (iconst_4)) 
                                      (2631 (anewarray (class "java.lang.Object"))) 
                                      (2634 (dup)) 
                                      (2635 (iconst_0)) 
                                      (2636 (getstatic (fieldCP "DOC_KEY" "clojure.lang.RT" (class "clojure.lang.Keyword")))) 
                                      (2639 (aastore)) 
                                      (2640 (dup)) 
                                      (2641 (iconst_1)) 
                                      (2642 (ldc_w 225)) ;;STRING:: "Sequentially read and evaluate the set of forms contained in the file."
                                      (2645 (aastore)) 
                                      (2646 (dup)) 
                                      (2647 (iconst_2)) 
                                      (2648 (aload_0)) 
                                      (2649 (aastore)) 
                                      (2650 (dup)) 
                                      (2651 (iconst_3)) 
                                      (2652 (iconst_1)) 
                                      (2653 (anewarray (class "java.lang.Object"))) 
                                      (2656 (dup)) 
                                      (2657 (iconst_0)) 
                                      (2658 (aload_1)) 
                                      (2659 (aastore)) 
                                      (2660 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (2663 (invokestatic (methodCP "list" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (2666 (aastore)) 
                                      (2667 (invokestatic (methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (2670 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (2673 (invokestatic (methodCP "doInit" "clojure.lang.RT" () void))) ;;at TAG_1
                                      (2676 (goto 2687)) ;;to TAG_0;;at TAG_2
                                      (2679 (astore 4)) ;;at TAG_3
                                      (2681 (aload 4)) 
                                      (2683 (invokestatic (methodCP "sneakyThrow" "clojure.lang.Util" ((class "java.lang.Throwable")) (class "java.lang.RuntimeException")))) 
                                      (2686 (athrow)) 
                                      (2687 (return)) ;;at TAG_0
                                      (endofcode 2688))
                                   (Exceptions 
                                     (handler 2673 2676  2679 (class "java.lang.Exception")))
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))#|ACL2s-ToDo-Line|#



(defconst *RT-class-table*
  (make-static-class-decls 
   *clojure.lang.RT*))

(defconst *package-name-map* 
  ("clojure.lang.RT" . "clojure.lang"))

