; Var-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:53 CDT 2014.
;

(include-book "../../model-translation")

(defconst *clojure.lang.Var*
 (make-class-def
      '(class "clojure.lang.Var"
            "clojure.lang.ARef"
            (constant_pool
                        (STRING  "#\n")
                        (STRING  "/")
                        (STRING  "#<Var: ")
                        (STRING  "--unnamed--")
                        (STRING  ">")
                        (STRING  "Symbol must be namespace-qualified")
                        (STRING  "No such namespace: ")
                        (STRING  "Can\nt set!: %s from non-binding thread")
                        (STRING  "Can\nt change/establish root binding of: %s with set")
                        (STRING  "Can\nt dynamically bind non-dynamic var: %s/%s")
                        (STRING  "Pop without matching push")
                        (STRING  "private")
                        (STRING  "macro")
                        (STRING  "name")
                        (STRING  "ns"))
            (fields
                        (field "dvals" (class "java.lang.ThreadLocal") (accessflags  *class*  *final*  *static* ) -1)
                        (field "rev" int (accessflags  *class*  *public*  *static*  *volatile* ) -1)
                        (field "privateKey" (class "clojure.lang.Keyword") (accessflags  *class*  *static* ) -1)
                        (field "privateMeta" (class "clojure.lang.IPersistentMap") (accessflags  *class*  *static* ) -1)
                        (field "macroKey" (class "clojure.lang.Keyword") (accessflags  *class*  *static* ) -1)
                        (field "nameKey" (class "clojure.lang.Keyword") (accessflags  *class*  *static* ) -1)
                        (field "nsKey" (class "clojure.lang.Keyword") (accessflags  *class*  *static* ) -1)
                        (field "root" (class "java.lang.Object") (accessflags  *class*  *volatile* ) -1)
                        (field "dynamic" boolean (accessflags  *class*  *volatile* ) -1)
                        (field "threadBound" (class "java.util.concurrent.atomic.AtomicBoolean") (accessflags  *class*  *final*  *transient* ) -1)
                        (field "sym" (class "clojure.lang.Symbol") (accessflags  *class*  *final*  *public* ) -1)
                        (field "ns" (class "clojure.lang.Namespace") (accessflags  *class*  *final*  *public* ) -1)
                        (field "assoc" (class "clojure.lang.IFn") (accessflags  *class*  *static* ) -1)
                        (field "dissoc" (class "clojure.lang.IFn") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "getThreadBindingFrame"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 24)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "dvals" "clojure.lang.Var" (class "java.lang.ThreadLocal")))) 
                                      (3 (invokevirtual (methodCP "get" "java.lang.ThreadLocal" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.Var$Frame"))) 
                                      (9 (astore_0)) 
                                      (10 (aload_0)) 
                                      (11 (ifnull 16))  ;;to TAG_0
                                      (14 (aload_0)) 
                                      (15 (areturn)) 
                                      (16 (new (class "clojure.lang.Var$Frame"))) ;;at TAG_0
                                      (19 (dup)) 
                                      (20 (invokespecial (methodCP "<init>" "clojure.lang.Var$Frame" () void))) 
                                      (23 (areturn)) 
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap )))
                        (method "cloneThreadBindingFrame"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 27)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "dvals" "clojure.lang.Var" (class "java.lang.ThreadLocal")))) 
                                      (3 (invokevirtual (methodCP "get" "java.lang.ThreadLocal" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.Var$Frame"))) 
                                      (9 (astore_0)) 
                                      (10 (aload_0)) 
                                      (11 (ifnull 19))  ;;to TAG_0
                                      (14 (aload_0)) 
                                      (15 (invokevirtual (methodCP "clone" "clojure.lang.Var$Frame" () (class "java.lang.Object")))) 
                                      (18 (areturn)) 
                                      (19 (new (class "clojure.lang.Var$Frame"))) ;;at TAG_0
                                      (22 (dup)) 
                                      (23 (invokespecial (methodCP "<init>" "clojure.lang.Var$Frame" () void))) 
                                      (26 (areturn)) 
                                      (endofcode 27))
                                   (Exceptions )
                                   (StackMap )))
                        (method "resetThreadBindingFrame"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 11)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "dvals" "clojure.lang.Var" (class "java.lang.ThreadLocal"))))
                                      (3 (aload_0))
                                      (4 (checkcast (class "clojure.lang.Var$Frame")))
                                      (7 (invokevirtual
                                        (methodCP "set" "java.lang.ThreadLocal" ((class "java.lang.Object")) void)))
                                      (10 (return))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setDynamic"
                              (parameters )
                              (returntype . (class "clojure.lang.Var"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 7)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iconst_1))
                                      (2 (putfield (fieldCP "dynamic" "clojure.lang.Var" boolean)))
                                      (5 (aload_0))
                                      (6 (areturn))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setDynamic"
                              (parameters boolean)
                              (returntype . (class "clojure.lang.Var"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 7)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (putfield (fieldCP "dynamic" "clojure.lang.Var" boolean)))
                                      (5 (aload_0))
                                      (6 (areturn))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isDynamic"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "dynamic" "clojure.lang.Var" boolean)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "intern"
                              (parameters (class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.Var"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aload_2))
                                      (3 (iconst_1))
                                      (4 (invokestatic
                                        (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object") boolean) (class "clojure.lang.Var"))))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "intern"
                              (parameters (class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object") boolean)
                              (returntype . (class "clojure.lang.Var"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 5) (code_length . 28)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (aload_1)) 
                                      (2 (invokevirtual (methodCP "intern" "clojure.lang.Namespace" ((class "clojure.lang.Symbol")) (class "clojure.lang.Var")))) 
                                      (5 (astore 4)) 
                                      (7 (aload 4)) 
                                      (9 (invokevirtual (methodCP "hasRoot" "clojure.lang.Var" () boolean))) 
                                      (12 (ifeq 19))  ;;to TAG_0
                                      (15 (iload_3)) 
                                      (16 (ifeq 25)) ;;to TAG_1
                                      (19 (aload 4)) ;;at TAG_0
                                      (21 (aload_2)) 
                                      (22 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (25 (aload 4)) ;;at TAG_1
                                      (27 (areturn)) 
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap )))
                        (method "toString"
                              (parameters )
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 88)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "ns" "clojure.lang.Var" (class "clojure.lang.Namespace")))) 
                                      (4 (ifnull 45)) ;;to TAG_0
                                      (7 (new (class "java.lang.StringBuilder"))) 
                                      (10 (dup)) 
                                      (11 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (14 (ldc 0)) ;;STRING:: "#\n"
                                      (16 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (19 (aload_0)) 
                                      (20 (getfield (fieldCP "ns" "clojure.lang.Var" (class "clojure.lang.Namespace")))) 
                                      (23 (getfield (fieldCP "name" "clojure.lang.Namespace" (class "clojure.lang.Symbol")))) 
                                      (26 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (29 (ldc 1)) ;;STRING:: "/"
                                      (31 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (34 (aload_0)) 
                                      (35 (getfield (fieldCP "sym" "clojure.lang.Var" (class "clojure.lang.Symbol")))) 
                                      (38 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (41 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (44 (areturn)) 
                                      (45 (new (class "java.lang.StringBuilder"))) ;;at TAG_0
                                      (48 (dup)) 
                                      (49 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (52 (ldc 2)) ;;STRING:: "#<Var: "
                                      (54 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (57 (aload_0)) 
                                      (58 (getfield (fieldCP "sym" "clojure.lang.Var" (class "clojure.lang.Symbol")))) 
                                      (61 (ifnull 74)) ;;to TAG_1
                                      (64 (aload_0)) 
                                      (65 (getfield (fieldCP "sym" "clojure.lang.Var" (class "clojure.lang.Symbol")))) 
                                      (68 (invokevirtual (methodCP "toString" "clojure.lang.Symbol" () (class "java.lang.String")))) 
                                      (71 (goto 76))  ;;to TAG_2
                                      (74 (ldc 3)) ;;at TAG_1;;STRING:: "--unnamed--"
                                      (76 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) ;;at TAG_2
                                      (79 (ldc 4)) ;;STRING:: ">"
                                      (81 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (84 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (87 (areturn)) 
                                      (endofcode 88))
                                   (Exceptions )
                                   (StackMap )))
                        (method "find"
                              (parameters (class "clojure.lang.Symbol"))
                              (returntype . (class "clojure.lang.Var"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 74)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "ns" "clojure.lang.Symbol" (class "java.lang.String")))) 
                                      (4 (ifnonnull 17))  ;;to TAG_0
                                      (7 (new (class "java.lang.IllegalArgumentException"))) 
                                      (10 (dup)) 
                                      (11 (ldc 5)) ;;STRING:: "Symbol must be namespace-qualified"
                                      (13 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (16 (athrow)) 
                                      (17 (aload_0)) ;;at TAG_0
                                      (18 (getfield (fieldCP "ns" "clojure.lang.Symbol" (class "java.lang.String")))) 
                                      (21 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (24 (invokestatic (methodCP "find" "clojure.lang.Namespace" ((class "clojure.lang.Symbol")) (class "clojure.lang.Namespace")))) 
                                      (27 (astore_1)) 
                                      (28 (aload_1)) 
                                      (29 (ifnonnull 62)) ;;to TAG_1
                                      (32 (new (class "java.lang.IllegalArgumentException"))) 
                                      (35 (dup)) 
                                      (36 (new (class "java.lang.StringBuilder"))) 
                                      (39 (dup)) 
                                      (40 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (43 (ldc 6)) ;;STRING:: "No such namespace: "
                                      (45 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (48 (aload_0)) 
                                      (49 (getfield (fieldCP "ns" "clojure.lang.Symbol" (class "java.lang.String")))) 
                                      (52 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (55 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (58 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (61 (athrow)) 
                                      (62 (aload_1)) ;;at TAG_1
                                      (63 (aload_0)) 
                                      (64 (getfield (fieldCP "name" "clojure.lang.Symbol" (class "java.lang.String")))) 
                                      (67 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (70 (invokevirtual (methodCP "findInternedVar" "clojure.lang.Namespace" ((class "clojure.lang.Symbol")) (class "clojure.lang.Var")))) 
                                      (73 (areturn)) 
                                      (endofcode 74))
                                   (Exceptions )
                                   (StackMap )))
                        (method "intern"
                              (parameters (class "clojure.lang.Symbol") (class "clojure.lang.Symbol"))
                              (returntype . (class "clojure.lang.Var"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokestatic
                                        (methodCP "findOrCreate" "clojure.lang.Namespace" ((class "clojure.lang.Symbol")) (class "clojure.lang.Namespace"))))
                                      (4 (astore_2))
                                      (5 (aload_2))
                                      (6 (aload_1))
                                      (7 (invokestatic
                                        (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol")) (class "clojure.lang.Var"))))
                                      (10 (areturn))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "internPrivate"
                              (parameters (class "java.lang.String") (class "java.lang.String"))
                              (returntype . (class "clojure.lang.Var"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 26)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokestatic
                                        (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (4 (invokestatic
                                        (methodCP "findOrCreate" "clojure.lang.Namespace" ((class "clojure.lang.Symbol")) (class "clojure.lang.Namespace"))))
                                      (7 (astore_2))
                                      (8 (aload_2))
                                      (9 (aload_1))
                                      (10 (invokestatic
                                        (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (13 (invokestatic
                                        (methodCP "intern" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol")) (class "clojure.lang.Var"))))
                                      (16 (astore_3))
                                      (17 (aload_3))
                                      (18 (getstatic (fieldCP "privateMeta" "clojure.lang.Var" (class "clojure.lang.IPersistentMap"))))
                                      (21 (invokevirtual
                                        (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void)))
                                      (24 (aload_3))
                                      (25 (areturn))
                                      (endofcode 26))
                                   (Exceptions )
                                   (StackMap )))
                        (method "intern"
                              (parameters (class "clojure.lang.Namespace") (class "clojure.lang.Symbol"))
                              (returntype . (class "clojure.lang.Var"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
                                        (methodCP "intern" "clojure.lang.Namespace" ((class "clojure.lang.Symbol")) (class "clojure.lang.Var"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "create"
                              (parameters )
                              (returntype . (class "clojure.lang.Var"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 10)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.Var")))
                                      (3 (dup))
                                      (4 (aconst_null))
                                      (5 (aconst_null))
                                      (6 (invokespecial
                                        (methodCP "<init>" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol")) void)))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "create"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.Var"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 1) (code_length . 11)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.Var")))
                                      (3 (dup))
                                      (4 (aconst_null))
                                      (5 (aconst_null))
                                      (6 (aload_0))
                                      (7 (invokespecial
                                        (methodCP "<init>" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object")) void)))
                                      (10 (areturn))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "clojure.lang.Namespace") (class "clojure.lang.Symbol"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 51)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
                                        (methodCP "<init>" "clojure.lang.ARef" () void)))
                                      (4 (aload_0))
                                      (5 (iconst_0))
                                      (6 (putfield (fieldCP "dynamic" "clojure.lang.Var" boolean)))
                                      (9 (aload_0))
                                      (10 (aload_1))
                                      (11 (putfield (fieldCP "ns" "clojure.lang.Var" (class "clojure.lang.Namespace"))))
                                      (14 (aload_0))
                                      (15 (aload_2))
                                      (16 (putfield (fieldCP "sym" "clojure.lang.Var" (class "clojure.lang.Symbol"))))
                                      (19 (aload_0))
                                      (20 (new (class "java.util.concurrent.atomic.AtomicBoolean")))
                                      (23 (dup))
                                      (24 (iconst_0))
                                      (25 (invokespecial
                                        (methodCP "<init>" "java.util.concurrent.atomic.AtomicBoolean" (boolean) void)))
                                      (28 (putfield (fieldCP "threadBound" "clojure.lang.Var" (class "java.util.concurrent.atomic.AtomicBoolean"))))
                                      (31 (aload_0))
                                      (32 (new (class "clojure.lang.Var$Unbound")))
                                      (35 (dup))
                                      (36 (aload_0))
                                      (37 (invokespecial
                                        (methodCP "<init>" "clojure.lang.Var$Unbound" ((class "clojure.lang.Var")) void)))
                                      (40 (putfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object"))))
                                      (43 (aload_0))
                                      (44 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashMap" (class "clojure.lang.PersistentHashMap"))))
                                      (47 (invokevirtual
                                        (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void)))
                                      (50 (return))
                                      (endofcode 51))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "clojure.lang.Namespace") (class "clojure.lang.Symbol") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 20)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aload_2))
                                      (3 (invokespecial
                                        (methodCP "<init>" "clojure.lang.Var" ((class "clojure.lang.Namespace") (class "clojure.lang.Symbol")) void)))
                                      (6 (aload_0))
                                      (7 (aload_3))
                                      (8 (putfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object"))))
                                      (11 (getstatic (fieldCP "rev" "clojure.lang.Var" int)))
                                      (14 (iconst_1))
                                      (15 (iadd))
                                      (16 (putstatic (fieldCP "rev" "clojure.lang.Var" int)))
                                      (19 (return))
                                      (endofcode 20))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isBound"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 44)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "hasRoot" "clojure.lang.Var" () boolean))) 
                                      (4 (ifne 38)) ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (getfield (fieldCP "threadBound" "clojure.lang.Var" (class "java.util.concurrent.atomic.AtomicBoolean")))) 
                                      (11 (invokevirtual (methodCP "get" "java.util.concurrent.atomic.AtomicBoolean" () boolean))) 
                                      (14 (ifeq 42)) ;;to TAG_1
                                      (17 (getstatic (fieldCP "dvals" "clojure.lang.Var" (class "java.lang.ThreadLocal")))) 
                                      (20 (invokevirtual (methodCP "get" "java.lang.ThreadLocal" () (class "java.lang.Object")))) 
                                      (23 (checkcast (class "clojure.lang.Var$Frame"))) 
                                      (26 (getfield (fieldCP "bindings" "clojure.lang.Var$Frame" (class "clojure.lang.Associative")))) 
                                      (29 (aload_0)) 
                                      (30 (invokeinterface (methodCP "containsKey" "clojure.lang.Associative" ((class "java.lang.Object")) boolean) 2)) 
                                      (35 (ifeq 42)) ;;to TAG_1
                                      (38 (iconst_1)) ;;at TAG_0
                                      (39 (goto 43))  ;;to TAG_2
                                      (42 (iconst_0)) ;;at TAG_1
                                      (43 (ireturn)) ;;at TAG_2
                                      (endofcode 44))
                                   (Exceptions )
                                   (StackMap )))
                        (method "get"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 20)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "threadBound" "clojure.lang.Var" (class "java.util.concurrent.atomic.AtomicBoolean")))) 
                                      (4 (invokevirtual (methodCP "get" "java.util.concurrent.atomic.AtomicBoolean" () boolean))) 
                                      (7 (ifne 15))  ;;to TAG_0
                                      (10 (aload_0)) 
                                      (11 (getfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object")))) 
                                      (14 (areturn)) 
                                      (15 (aload_0)) ;;at TAG_0
                                      (16 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (19 (areturn)) 
                                      (endofcode 20))
                                   (Exceptions )
                                   (StackMap )))
                        (method "deref"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 19)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "getThreadBinding" "clojure.lang.Var" () (class "clojure.lang.Var$TBox")))) 
                                      (4 (astore_1)) 
                                      (5 (aload_1)) 
                                      (6 (ifnull 14))  ;;to TAG_0
                                      (9 (aload_1)) 
                                      (10 (getfield (fieldCP "val" "clojure.lang.Var$TBox" (class "java.lang.Object")))) 
                                      (13 (areturn)) 
                                      (14 (aload_0)) ;;at TAG_0
                                      (15 (getfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object")))) 
                                      (18 (areturn)) 
                                      (endofcode 19))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setValidator"
                              (parameters (class "clojure.lang.IFn"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 22)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "hasRoot" "clojure.lang.Var" () boolean))) 
                                      (4 (ifeq 16))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (aload_1)) 
                                      (9 (aload_0)) 
                                      (10 (getfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object")))) 
                                      (13 (invokevirtual (methodCP "validate" "clojure.lang.Var" ((class "clojure.lang.IFn") (class "java.lang.Object")) void))) 
                                      (16 (aload_0)) ;;at TAG_0
                                      (17 (aload_1)) 
                                      (18 (putfield (fieldCP "validator" "clojure.lang.Var" (class "clojure.lang.IFn")))) 
                                      (21 (return)) 
                                      (endofcode 22))
                                   (Exceptions )
                                   (StackMap )))
                        (method "alter"
                              (parameters (class "clojure.lang.IFn") (class "clojure.lang.ISeq"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 21)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aload_0))
                                      (3 (invokevirtual
                                        (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (aload_2))
                                      (7 (invokestatic
                                        (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (10 (invokeinterface
                                        (methodCP "applyTo" "clojure.lang.IFn" ((class "clojure.lang.ISeq")) (class "java.lang.Object")) 2))
                                      (15 (invokevirtual
                                        (methodCP "set" "clojure.lang.Var" ((class "java.lang.Object")) (class "java.lang.Object"))))
                                      (18 (pop))
                                      (19 (aload_0))
                                      (20 (areturn))
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap )))
                        (method "set"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 3) (code_length . 83)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (aload_0)) 
                                      (2 (invokevirtual (methodCP "getValidator" "clojure.lang.Var" () (class "clojure.lang.IFn")))) 
                                      (5 (aload_1)) 
                                      (6 (invokevirtual (methodCP "validate" "clojure.lang.Var" ((class "clojure.lang.IFn") (class "java.lang.Object")) void))) 
                                      (9 (aload_0)) 
                                      (10 (invokevirtual (methodCP "getThreadBinding" "clojure.lang.Var" () (class "clojure.lang.Var$TBox")))) 
                                      (13 (astore_2)) 
                                      (14 (aload_2)) 
                                      (15 (ifnull 59))  ;;to TAG_0
                                      (18 (invokestatic (methodCP "currentThread" "java.lang.Thread" () (class "java.lang.Thread")))) 
                                      (21 (aload_2)) 
                                      (22 (getfield (fieldCP "thread" "clojure.lang.Var$TBox" (class "java.lang.Thread")))) 
                                      (25 (if_acmpeq 52)) ;;to TAG_1
                                      (28 (new (class "java.lang.IllegalStateException"))) 
                                      (31 (dup)) 
                                      (32 (ldc 7)) ;;STRING:: "Can\nt set!: %s from non-binding thread"
                                      (34 (iconst_1)) 
                                      (35 (anewarray (class "java.lang.Object"))) 
                                      (38 (dup)) 
                                      (39 (iconst_0)) 
                                      (40 (aload_0)) 
                                      (41 (getfield (fieldCP "sym" "clojure.lang.Var" (class "clojure.lang.Symbol")))) 
                                      (44 (aastore)) 
                                      (45 (invokestatic (methodCP "format" "java.lang.String" ((class "java.lang.String") (array (class "java.lang.Object"))) (class "java.lang.String")))) 
                                      (48 (invokespecial (methodCP "<init>" "java.lang.IllegalStateException" ((class "java.lang.String")) void))) 
                                      (51 (athrow)) 
                                      (52 (aload_2)) ;;at TAG_1
                                      (53 (aload_1)) 
                                      (54 (dup_x1)) 
                                      (55 (putfield (fieldCP "val" "clojure.lang.Var$TBox" (class "java.lang.Object")))) 
                                      (58 (areturn)) 
                                      (59 (new (class "java.lang.IllegalStateException"))) ;;at TAG_0
                                      (62 (dup)) 
                                      (63 (ldc 8)) ;;STRING:: "Can\nt change/establish root binding of: %s with set"
                                      (65 (iconst_1)) 
                                      (66 (anewarray (class "java.lang.Object"))) 
                                      (69 (dup)) 
                                      (70 (iconst_0)) 
                                      (71 (aload_0)) 
                                      (72 (getfield (fieldCP "sym" "clojure.lang.Var" (class "clojure.lang.Symbol")))) 
                                      (75 (aastore)) 
                                      (76 (invokestatic (methodCP "format" "java.lang.String" ((class "java.lang.String") (array (class "java.lang.Object"))) (class "java.lang.String")))) 
                                      (79 (invokespecial (methodCP "<init>" "java.lang.IllegalStateException" ((class "java.lang.String")) void))) 
                                      (82 (athrow)) 
                                      (endofcode 83))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doSet"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
                                        (methodCP "set" "clojure.lang.Var" ((class "java.lang.Object")) (class "java.lang.Object"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doReset"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 7)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
                                        (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void)))
                                      (5 (aload_1))
                                      (6 (areturn))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 31)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (getstatic (fieldCP "nameKey" "clojure.lang.Var" (class "clojure.lang.Keyword"))))
                                      (5 (aload_0))
                                      (6 (getfield (fieldCP "sym" "clojure.lang.Var" (class "clojure.lang.Symbol"))))
                                      (9 (invokeinterface
                                        (methodCP "assoc" "clojure.lang.IPersistentMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.IPersistentMap")) 3))
                                      (14 (getstatic (fieldCP "nsKey" "clojure.lang.Var" (class "clojure.lang.Keyword"))))
                                      (17 (aload_0))
                                      (18 (getfield (fieldCP "ns" "clojure.lang.Var" (class "clojure.lang.Namespace"))))
                                      (21 (invokeinterface
                                        (methodCP "assoc" "clojure.lang.IPersistentMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.IPersistentMap")) 3))
                                      (26 (invokevirtual
                                        (methodCP "resetMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IPersistentMap"))))
                                      (29 (pop))
                                      (30 (return))
                                      (endofcode 31))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setMacro"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 27)
                                   (parsedcode
                                      (0 (aload_0)) ;;at TAG_1
                                      (1 (getstatic (fieldCP "assoc" "clojure.lang.Var" (class "clojure.lang.IFn")))) 
                                      (4 (getstatic (fieldCP "macroKey" "clojure.lang.Var" (class "clojure.lang.Keyword")))) 
                                      (7 (getstatic (fieldCP "T" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (10 (invokestatic (methodCP "list" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (13 (invokevirtual (methodCP "alterMeta" "clojure.lang.Var" ((class "clojure.lang.IFn") (class "clojure.lang.ISeq")) (class "clojure.lang.IPersistentMap")))) 
                                      (16 (pop)) 
                                      (17 (goto 26)) ;;to TAG_0;;at TAG_2
                                      (20 (astore_1)) ;;at TAG_3
                                      (21 (aload_1)) 
                                      (22 (invokestatic (methodCP "sneakyThrow" "clojure.lang.Util" ((class "java.lang.Throwable")) (class "java.lang.RuntimeException")))) 
                                      (25 (athrow)) 
                                      (26 (return)) ;;at TAG_0
                                      (endofcode 27))
                                   (Exceptions 
                                     (handler 0 17  20 (class "java.lang.Exception")))
                                   (StackMap )))
                        (method "isMacro"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "meta" "clojure.lang.Var" () (class "clojure.lang.IPersistentMap"))))
                                      (4 (getstatic (fieldCP "macroKey" "clojure.lang.Var" (class "clojure.lang.Keyword"))))
                                      (7 (invokeinterface
                                        (methodCP "valAt" "clojure.lang.IPersistentMap" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (12 (invokestatic
                                        (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean)))
                                      (15 (ireturn))
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isPublic"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 24)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "meta" "clojure.lang.Var" () (class "clojure.lang.IPersistentMap")))) 
                                      (4 (getstatic (fieldCP "privateKey" "clojure.lang.Var" (class "clojure.lang.Keyword")))) 
                                      (7 (invokeinterface (methodCP "valAt" "clojure.lang.IPersistentMap" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (12 (invokestatic (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean))) 
                                      (15 (ifne 22))  ;;to TAG_0
                                      (18 (iconst_1)) 
                                      (19 (goto 23)) ;;to TAG_1
                                      (22 (iconst_0)) ;;at TAG_0
                                      (23 (ireturn)) ;;at TAG_1
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getRawRoot"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getTag"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "meta" "clojure.lang.Var" () (class "clojure.lang.IPersistentMap"))))
                                      (4 (getstatic (fieldCP "TAG_KEY" "clojure.lang.RT" (class "clojure.lang.Keyword"))))
                                      (7 (invokeinterface
                                        (methodCP "valAt" "clojure.lang.IPersistentMap" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (12 (areturn))
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setTag"
                              (parameters (class "clojure.lang.Symbol"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 25)
                                   (parsedcode
                                      (0 (aload_0)) ;;at TAG_1
                                      (1 (getstatic (fieldCP "assoc" "clojure.lang.Var" (class "clojure.lang.IFn")))) 
                                      (4 (getstatic (fieldCP "TAG_KEY" "clojure.lang.RT" (class "clojure.lang.Keyword")))) 
                                      (7 (aload_1)) 
                                      (8 (invokestatic (methodCP "list" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (11 (invokevirtual (methodCP "alterMeta" "clojure.lang.Var" ((class "clojure.lang.IFn") (class "clojure.lang.ISeq")) (class "clojure.lang.IPersistentMap")))) 
                                      (14 (pop)) 
                                      (15 (goto 24)) ;;to TAG_0;;at TAG_2
                                      (18 (astore_2)) ;;at TAG_3
                                      (19 (aload_2)) 
                                      (20 (invokestatic (methodCP "sneakyThrow" "clojure.lang.Util" ((class "java.lang.Throwable")) (class "java.lang.RuntimeException")))) 
                                      (23 (athrow)) 
                                      (24 (return)) ;;at TAG_0
                                      (endofcode 25))
                                   (Exceptions 
                                     (handler 0 15  18 (class "java.lang.Exception")))
                                   (StackMap )))
                        (method "hasRoot"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object")))) 
                                      (4 (instanceof (class "clojure.lang.Var$Unbound"))) 
                                      (7 (ifne 14))  ;;to TAG_0
                                      (10 (iconst_1)) 
                                      (11 (goto 15)) ;;to TAG_1
                                      (14 (iconst_0)) ;;at TAG_0
                                      (15 (ireturn)) ;;at TAG_1
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "bindRoot"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public*  *super*  *synchronized* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 60)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (aload_0)) 
                                      (2 (invokevirtual (methodCP "getValidator" "clojure.lang.Var" () (class "clojure.lang.IFn")))) 
                                      (5 (aload_1)) 
                                      (6 (invokevirtual (methodCP "validate" "clojure.lang.Var" ((class "clojure.lang.IFn") (class "java.lang.Object")) void))) 
                                      (9 (aload_0)) 
                                      (10 (getfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object")))) 
                                      (13 (astore_2)) 
                                      (14 (aload_0)) 
                                      (15 (aload_1)) 
                                      (16 (putfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object")))) 
                                      (19 (getstatic (fieldCP "rev" "clojure.lang.Var" int))) 
                                      (22 (iconst_1)) 
                                      (23 (iadd)) 
                                      (24 (putstatic (fieldCP "rev" "clojure.lang.Var" int))) 
                                      (27 (aload_0)) ;;at TAG_1
                                      (28 (getstatic (fieldCP "dissoc" "clojure.lang.Var" (class "clojure.lang.IFn")))) 
                                      (31 (getstatic (fieldCP "macroKey" "clojure.lang.Var" (class "clojure.lang.Keyword")))) 
                                      (34 (invokestatic (methodCP "list" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (37 (invokevirtual (methodCP "alterMeta" "clojure.lang.Var" ((class "clojure.lang.IFn") (class "clojure.lang.ISeq")) (class "clojure.lang.IPersistentMap")))) 
                                      (40 (pop)) 
                                      (41 (goto 50)) ;;to TAG_0;;at TAG_2
                                      (44 (astore_3)) ;;at TAG_3
                                      (45 (aload_3)) 
                                      (46 (invokestatic (methodCP "sneakyThrow" "clojure.lang.Util" ((class "java.lang.Throwable")) (class "java.lang.RuntimeException")))) 
                                      (49 (athrow)) 
                                      (50 (aload_0)) ;;at TAG_0
                                      (51 (aload_2)) 
                                      (52 (aload_0)) 
                                      (53 (getfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object")))) 
                                      (56 (invokevirtual (methodCP "notifyWatches" "clojure.lang.Var" ((class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (59 (return)) 
                                      (endofcode 60))
                                   (Exceptions 
                                     (handler 27 41  44 (class "java.lang.Exception")))
                                   (StackMap )))
                        (method "swapRoot"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *super*  *synchronized* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 34)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_0))
                                      (2 (invokevirtual
                                        (methodCP "getValidator" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (5 (aload_1))
                                      (6 (invokevirtual
                                        (methodCP "validate" "clojure.lang.Var" ((class "clojure.lang.IFn") (class "java.lang.Object")) void)))
                                      (9 (aload_0))
                                      (10 (getfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object"))))
                                      (13 (astore_2))
                                      (14 (aload_0))
                                      (15 (aload_1))
                                      (16 (putfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object"))))
                                      (19 (getstatic (fieldCP "rev" "clojure.lang.Var" int)))
                                      (22 (iconst_1))
                                      (23 (iadd))
                                      (24 (putstatic (fieldCP "rev" "clojure.lang.Var" int)))
                                      (27 (aload_0))
                                      (28 (aload_2))
                                      (29 (aload_1))
                                      (30 (invokevirtual
                                        (methodCP "notifyWatches" "clojure.lang.Var" ((class "java.lang.Object") (class "java.lang.Object")) void)))
                                      (33 (return))
                                      (endofcode 34))
                                   (Exceptions )
                                   (StackMap )))
                        (method "unbindRoot"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *super*  *synchronized* )
                              (code
                                   (max_stack . 4) (max_locals . 1) (code_length . 21)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (new (class "clojure.lang.Var$Unbound")))
                                      (4 (dup))
                                      (5 (aload_0))
                                      (6 (invokespecial
                                        (methodCP "<init>" "clojure.lang.Var$Unbound" ((class "clojure.lang.Var")) void)))
                                      (9 (putfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object"))))
                                      (12 (getstatic (fieldCP "rev" "clojure.lang.Var" int)))
                                      (15 (iconst_1))
                                      (16 (iadd))
                                      (17 (putstatic (fieldCP "rev" "clojure.lang.Var" int)))
                                      (20 (return))
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap )))
                        (method "commuteRoot"
                              (parameters (class "clojure.lang.IFn"))
                              (returntype . void)
                              (accessflags  *class*  *public*  *super*  *synchronized* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 45)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (aload_0))
                                      (2 (getfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object"))))
                                      (5 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (10 (astore_2))
                                      (11 (aload_0))
                                      (12 (aload_0))
                                      (13 (invokevirtual
                                        (methodCP "getValidator" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (16 (aload_2))
                                      (17 (invokevirtual
                                        (methodCP "validate" "clojure.lang.Var" ((class "clojure.lang.IFn") (class "java.lang.Object")) void)))
                                      (20 (aload_0))
                                      (21 (getfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object"))))
                                      (24 (astore_3))
                                      (25 (aload_0))
                                      (26 (aload_2))
                                      (27 (putfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object"))))
                                      (30 (getstatic (fieldCP "rev" "clojure.lang.Var" int)))
                                      (33 (iconst_1))
                                      (34 (iadd))
                                      (35 (putstatic (fieldCP "rev" "clojure.lang.Var" int)))
                                      (38 (aload_0))
                                      (39 (aload_3))
                                      (40 (aload_2))
                                      (41 (invokevirtual
                                        (methodCP "notifyWatches" "clojure.lang.Var" ((class "java.lang.Object") (class "java.lang.Object")) void)))
                                      (44 (return))
                                      (endofcode 45))
                                   (Exceptions )
                                   (StackMap )))
                        (method "alterRoot"
                              (parameters (class "clojure.lang.IFn") (class "clojure.lang.ISeq"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *super*  *synchronized* )
                              (code
                                   (max_stack . 3) (max_locals . 5) (code_length . 52)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (aload_0))
                                      (2 (getfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object"))))
                                      (5 (aload_2))
                                      (6 (invokestatic
                                        (methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (9 (invokeinterface
                                        (methodCP "applyTo" "clojure.lang.IFn" ((class "clojure.lang.ISeq")) (class "java.lang.Object")) 2))
                                      (14 (astore_3))
                                      (15 (aload_0))
                                      (16 (aload_0))
                                      (17 (invokevirtual
                                        (methodCP "getValidator" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (20 (aload_3))
                                      (21 (invokevirtual
                                        (methodCP "validate" "clojure.lang.Var" ((class "clojure.lang.IFn") (class "java.lang.Object")) void)))
                                      (24 (aload_0))
                                      (25 (getfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object"))))
                                      (28 (astore 4))
                                      (30 (aload_0))
                                      (31 (aload_3))
                                      (32 (putfield (fieldCP "root" "clojure.lang.Var" (class "java.lang.Object"))))
                                      (35 (getstatic (fieldCP "rev" "clojure.lang.Var" int)))
                                      (38 (iconst_1))
                                      (39 (iadd))
                                      (40 (putstatic (fieldCP "rev" "clojure.lang.Var" int)))
                                      (43 (aload_0))
                                      (44 (aload 4))
                                      (46 (aload_3))
                                      (47 (invokevirtual
                                        (methodCP "notifyWatches" "clojure.lang.Var" ((class "java.lang.Object") (class "java.lang.Object")) void)))
                                      (50 (aload_3))
                                      (51 (areturn))
                                      (endofcode 52))
                                   (Exceptions )
                                   (StackMap )))
                        (method "pushThreadBindings"
                              (parameters (class "clojure.lang.Associative"))
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 7) (max_locals . 6) (code_length . 168)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "dvals" "clojure.lang.Var" (class "java.lang.ThreadLocal")))) 
                                      (3 (invokevirtual (methodCP "get" "java.lang.ThreadLocal" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.Var$Frame"))) 
                                      (9 (astore_1)) 
                                      (10 (aload_1)) 
                                      (11 (getfield (fieldCP "bindings" "clojure.lang.Var$Frame" (class "clojure.lang.Associative")))) 
                                      (14 (astore_2)) 
                                      (15 (aload_0)) 
                                      (16 (invokeinterface (methodCP "seq" "clojure.lang.Associative" () (class "clojure.lang.ISeq")) 1)) 
                                      (21 (astore_3)) 
                                      (22 (aload_3)) ;;at TAG_2
                                      (23 (ifnull 152)) ;;to TAG_0
                                      (26 (aload_3)) 
                                      (27 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (32 (checkcast (class "clojure.lang.IMapEntry"))) 
                                      (35 (astore 4)) 
                                      (37 (aload 4)) 
                                      (39 (invokeinterface (methodCP "key" "clojure.lang.IMapEntry" () (class "java.lang.Object")) 1)) 
                                      (44 (checkcast (class "clojure.lang.Var"))) 
                                      (47 (astore 5)) 
                                      (49 (aload 5)) 
                                      (51 (getfield (fieldCP "dynamic" "clojure.lang.Var" boolean))) 
                                      (54 (ifne 90)) ;;to TAG_1
                                      (57 (new (class "java.lang.IllegalStateException"))) 
                                      (60 (dup)) 
                                      (61 (ldc 9)) ;;STRING:: "Can\nt dynamically bind non-dynamic var: %s/%s"
                                      (63 (iconst_2)) 
                                      (64 (anewarray (class "java.lang.Object"))) 
                                      (67 (dup)) 
                                      (68 (iconst_0)) 
                                      (69 (aload 5)) 
                                      (71 (getfield (fieldCP "ns" "clojure.lang.Var" (class "clojure.lang.Namespace")))) 
                                      (74 (aastore)) 
                                      (75 (dup)) 
                                      (76 (iconst_1)) 
                                      (77 (aload 5)) 
                                      (79 (getfield (fieldCP "sym" "clojure.lang.Var" (class "clojure.lang.Symbol")))) 
                                      (82 (aastore)) 
                                      (83 (invokestatic (methodCP "format" "java.lang.String" ((class "java.lang.String") (array (class "java.lang.Object"))) (class "java.lang.String")))) 
                                      (86 (invokespecial (methodCP "<init>" "java.lang.IllegalStateException" ((class "java.lang.String")) void))) 
                                      (89 (athrow)) 
                                      (90 (aload 5)) ;;at TAG_1
                                      (92 (aload 5)) 
                                      (94 (invokevirtual (methodCP "getValidator" "clojure.lang.Var" () (class "clojure.lang.IFn")))) 
                                      (97 (aload 4)) 
                                      (99 (invokeinterface (methodCP "val" "clojure.lang.IMapEntry" () (class "java.lang.Object")) 1)) 
                                      (104 (invokevirtual (methodCP "validate" "clojure.lang.Var" ((class "clojure.lang.IFn") (class "java.lang.Object")) void))) 
                                      (107 (aload 5)) 
                                      (109 (getfield (fieldCP "threadBound" "clojure.lang.Var" (class "java.util.concurrent.atomic.AtomicBoolean")))) 
                                      (112 (iconst_1)) 
                                      (113 (invokevirtual (methodCP "set" "java.util.concurrent.atomic.AtomicBoolean" (boolean) void))) 
                                      (116 (aload_2)) 
                                      (117 (aload 5)) 
                                      (119 (new (class "clojure.lang.Var$TBox"))) 
                                      (122 (dup)) 
                                      (123 (invokestatic (methodCP "currentThread" "java.lang.Thread" () (class "java.lang.Thread")))) 
                                      (126 (aload 4)) 
                                      (128 (invokeinterface (methodCP "val" "clojure.lang.IMapEntry" () (class "java.lang.Object")) 1)) 
                                      (133 (invokespecial (methodCP "<init>" "clojure.lang.Var$TBox" ((class "java.lang.Thread") (class "java.lang.Object")) void))) 
                                      (136 (invokeinterface (methodCP "assoc" "clojure.lang.Associative" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.Associative")) 3)) 
                                      (141 (astore_2)) 
                                      (142 (aload_3)) 
                                      (143 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (148 (astore_3)) 
                                      (149 (goto 22))  ;;to TAG_2
                                      (152 (getstatic (fieldCP "dvals" "clojure.lang.Var" (class "java.lang.ThreadLocal")))) ;;at TAG_0
                                      (155 (new (class "clojure.lang.Var$Frame"))) 
                                      (158 (dup)) 
                                      (159 (aload_2)) 
                                      (160 (aload_1)) 
                                      (161 (invokespecial (methodCP "<init>" "clojure.lang.Var$Frame" ((class "clojure.lang.Associative") (class "clojure.lang.Var$Frame")) void))) 
                                      (164 (invokevirtual (methodCP "set" "java.lang.ThreadLocal" ((class "java.lang.Object")) void))) 
                                      (167 (return)) 
                                      (endofcode 168))
                                   (Exceptions )
                                   (StackMap )))
                        (method "popThreadBindings"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 38)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "dvals" "clojure.lang.Var" (class "java.lang.ThreadLocal")))) 
                                      (3 (invokevirtual (methodCP "get" "java.lang.ThreadLocal" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.Var$Frame"))) 
                                      (9 (astore_0)) 
                                      (10 (aload_0)) 
                                      (11 (getfield (fieldCP "prev" "clojure.lang.Var$Frame" (class "clojure.lang.Var$Frame")))) 
                                      (14 (ifnonnull 27))  ;;to TAG_0
                                      (17 (new (class "java.lang.IllegalStateException"))) 
                                      (20 (dup)) 
                                      (21 (ldc 10)) ;;STRING:: "Pop without matching push"
                                      (23 (invokespecial (methodCP "<init>" "java.lang.IllegalStateException" ((class "java.lang.String")) void))) 
                                      (26 (athrow)) 
                                      (27 (getstatic (fieldCP "dvals" "clojure.lang.Var" (class "java.lang.ThreadLocal")))) ;;at TAG_0
                                      (30 (aload_0)) 
                                      (31 (getfield (fieldCP "prev" "clojure.lang.Var$Frame" (class "clojure.lang.Var$Frame")))) 
                                      (34 (invokevirtual (methodCP "set" "java.lang.ThreadLocal" ((class "java.lang.Object")) void))) 
                                      (37 (return)) 
                                      (endofcode 38))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getThreadBindings"
                              (parameters )
                              (returntype . (class "clojure.lang.Associative"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 6) (code_length . 86)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "dvals" "clojure.lang.Var" (class "java.lang.ThreadLocal")))) 
                                      (3 (invokevirtual (methodCP "get" "java.lang.ThreadLocal" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.Var$Frame"))) 
                                      (9 (astore_0)) 
                                      (10 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashMap" (class "clojure.lang.PersistentHashMap")))) 
                                      (13 (astore_1)) 
                                      (14 (aload_0)) 
                                      (15 (getfield (fieldCP "bindings" "clojure.lang.Var$Frame" (class "clojure.lang.Associative")))) 
                                      (18 (invokeinterface (methodCP "seq" "clojure.lang.Associative" () (class "clojure.lang.ISeq")) 1)) 
                                      (23 (astore_2)) 
                                      (24 (aload_2)) ;;at TAG_1
                                      (25 (ifnull 84))  ;;to TAG_0
                                      (28 (aload_2)) 
                                      (29 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (34 (checkcast (class "clojure.lang.IMapEntry"))) 
                                      (37 (astore_3)) 
                                      (38 (aload_3)) 
                                      (39 (invokeinterface (methodCP "key" "clojure.lang.IMapEntry" () (class "java.lang.Object")) 1)) 
                                      (44 (checkcast (class "clojure.lang.Var"))) 
                                      (47 (astore 4)) 
                                      (49 (aload_3)) 
                                      (50 (invokeinterface (methodCP "val" "clojure.lang.IMapEntry" () (class "java.lang.Object")) 1)) 
                                      (55 (checkcast (class "clojure.lang.Var$TBox"))) 
                                      (58 (astore 5)) 
                                      (60 (aload_1)) 
                                      (61 (aload 4)) 
                                      (63 (aload 5)) 
                                      (65 (getfield (fieldCP "val" "clojure.lang.Var$TBox" (class "java.lang.Object")))) 
                                      (68 (invokeinterface (methodCP "assoc" "clojure.lang.IPersistentMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.IPersistentMap")) 3)) 
                                      (73 (astore_1)) 
                                      (74 (aload_2)) 
                                      (75 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (80 (astore_2)) 
                                      (81 (goto 24)) ;;to TAG_1
                                      (84 (aload_1)) ;;at TAG_0
                                      (85 (areturn)) 
                                      (endofcode 86))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getThreadBinding"
                              (parameters )
                              (returntype . (class "clojure.lang.Var$TBox"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 45)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "threadBound" "clojure.lang.Var" (class "java.util.concurrent.atomic.AtomicBoolean")))) 
                                      (4 (invokevirtual (methodCP "get" "java.util.concurrent.atomic.AtomicBoolean" () boolean))) 
                                      (7 (ifeq 43))  ;;to TAG_0
                                      (10 (getstatic (fieldCP "dvals" "clojure.lang.Var" (class "java.lang.ThreadLocal")))) 
                                      (13 (invokevirtual (methodCP "get" "java.lang.ThreadLocal" () (class "java.lang.Object")))) 
                                      (16 (checkcast (class "clojure.lang.Var$Frame"))) 
                                      (19 (getfield (fieldCP "bindings" "clojure.lang.Var$Frame" (class "clojure.lang.Associative")))) 
                                      (22 (aload_0)) 
                                      (23 (invokeinterface (methodCP "entryAt" "clojure.lang.Associative" ((class "java.lang.Object")) (class "clojure.lang.IMapEntry")) 2)) 
                                      (28 (astore_1)) 
                                      (29 (aload_1)) 
                                      (30 (ifnull 43))  ;;to TAG_0
                                      (33 (aload_1)) 
                                      (34 (invokeinterface (methodCP "val" "clojure.lang.IMapEntry" () (class "java.lang.Object")) 1)) 
                                      (39 (checkcast (class "clojure.lang.Var$TBox"))) 
                                      (42 (areturn)) 
                                      (43 (aconst_null)) ;;at TAG_0
                                      (44 (areturn)) 
                                      (endofcode 45))
                                   (Exceptions )
                                   (StackMap )))
                        (method "fn"
                              (parameters )
                              (returntype . (class "clojure.lang.IFn"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (4 (checkcast (class "clojure.lang.IFn")))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "call"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "invoke" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "run"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0)) ;;at TAG_1
                                      (1 (invokevirtual (methodCP "invoke" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (4 (pop)) 
                                      (5 (goto 14)) ;;to TAG_0;;at TAG_2
                                      (8 (astore_1)) ;;at TAG_3
                                      (9 (aload_1)) 
                                      (10 (invokestatic (methodCP "sneakyThrow" "clojure.lang.Util" ((class "java.lang.Throwable")) (class "java.lang.RuntimeException")))) 
                                      (13 (athrow)) 
                                      (14 (return)) ;;at TAG_0
                                      (endofcode 15))
                                   (Exceptions 
                                     (handler 0 5  8 (class "java.lang.Exception")))
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (10 (areturn))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 12)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (11 (areturn))
                                      (endofcode 12))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4))
                                      (12 (areturn))
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 5) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5))
                                      (14 (areturn))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 6) (code_length . 17)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 6))
                                      (16 (areturn))
                                      (endofcode 17))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 7) (code_length . 19)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 7))
                                      (18 (areturn))
                                      (endofcode 19))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 8) (max_locals . 8) (code_length . 21)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 8))
                                      (20 (areturn))
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 9) (max_locals . 9) (code_length . 23)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 9))
                                      (22 (areturn))
                                      (endofcode 23))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 10) (max_locals . 10) (code_length . 25)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 10))
                                      (24 (areturn))
                                      (endofcode 25))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 11) (max_locals . 11) (code_length . 27)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 11))
                                      (26 (areturn))
                                      (endofcode 27))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 12) (max_locals . 12) (code_length . 29)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 12))
                                      (28 (areturn))
                                      (endofcode 29))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 13) (max_locals . 13) (code_length . 31)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 13))
                                      (30 (areturn))
                                      (endofcode 31))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 14) (max_locals . 14) (code_length . 33)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 14))
                                      (32 (areturn))
                                      (endofcode 33))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 15) (max_locals . 15) (code_length . 35)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (aload 14))
                                      (29 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 15))
                                      (34 (areturn))
                                      (endofcode 35))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 16) (max_locals . 16) (code_length . 37)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (aload 14))
                                      (29 (aload 15))
                                      (31 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 16))
                                      (36 (areturn))
                                      (endofcode 37))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 17) (max_locals . 17) (code_length . 39)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (aload 14))
                                      (29 (aload 15))
                                      (31 (aload 16))
                                      (33 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 17))
                                      (38 (areturn))
                                      (endofcode 39))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 18) (max_locals . 18) (code_length . 41)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (aload 14))
                                      (29 (aload 15))
                                      (31 (aload 16))
                                      (33 (aload 17))
                                      (35 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 18))
                                      (40 (areturn))
                                      (endofcode 41))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 19) (max_locals . 19) (code_length . 43)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (aload 14))
                                      (29 (aload 15))
                                      (31 (aload 16))
                                      (33 (aload 17))
                                      (35 (aload 18))
                                      (37 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 19))
                                      (42 (areturn))
                                      (endofcode 43))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 20) (max_locals . 20) (code_length . 45)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (aload 14))
                                      (29 (aload 15))
                                      (31 (aload 16))
                                      (33 (aload 17))
                                      (35 (aload 18))
                                      (37 (aload 19))
                                      (39 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 20))
                                      (44 (areturn))
                                      (endofcode 45))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 21) (max_locals . 21) (code_length . 47)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (aload 14))
                                      (29 (aload 15))
                                      (31 (aload 16))
                                      (33 (aload 17))
                                      (35 (aload 18))
                                      (37 (aload 19))
                                      (39 (aload 20))
                                      (41 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 21))
                                      (46 (areturn))
                                      (endofcode 47))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (array (class "java.lang.Object")))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *transient* )
                              (code
                                   (max_stack . 22) (max_locals . 22) (code_length . 49)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "fn" "clojure.lang.Var" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (aload 14))
                                      (29 (aload 15))
                                      (31 (aload 16))
                                      (33 (aload 17))
                                      (35 (aload 18))
                                      (37 (aload 19))
                                      (39 (aload 20))
                                      (41 (aload 21))
                                      (43 (invokeinterface
                                        (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (array (class "java.lang.Object"))) (class "java.lang.Object")) 22))
                                      (48 (areturn))
                                      (endofcode 49))
                                   (Exceptions )
                                   (StackMap )))
                        (method "applyTo"
                              (parameters (class "clojure.lang.ISeq"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokestatic
                                        (methodCP "applyToHelper" "clojure.lang.AFn" ((class "clojure.lang.IFn") (class "clojure.lang.ISeq")) (class "java.lang.Object"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 6) (max_locals . 0) (code_length . 97)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.Var$1")))
                                      (3 (dup))
                                      (4 (invokespecial
                                        (methodCP "<init>" "clojure.lang.Var$1" () void)))
                                      (7 (putstatic (fieldCP "dvals" "clojure.lang.Var" (class "java.lang.ThreadLocal"))))
                                      (10 (iconst_0))
                                      (11 (putstatic (fieldCP "rev" "clojure.lang.Var" int)))
                                      (14 (aconst_null))
                                      (15 (ldc 11))       ;;STRING:: "private"
                                      (17 (invokestatic
                                        (methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (20 (putstatic (fieldCP "privateKey" "clojure.lang.Var" (class "clojure.lang.Keyword"))))
                                      (23 (new (class "clojure.lang.PersistentArrayMap")))
                                      (26 (dup))
                                      (27 (iconst_2))
                                      (28 (anewarray (class "java.lang.Object")))
                                      (31 (dup))
                                      (32 (iconst_0))
                                      (33 (getstatic (fieldCP "privateKey" "clojure.lang.Var" (class "clojure.lang.Keyword"))))
                                      (36 (aastore))
                                      (37 (dup))
                                      (38 (iconst_1))
                                      (39 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (42 (aastore))
                                      (43 (invokespecial
                                        (methodCP "<init>" "clojure.lang.PersistentArrayMap" ((array (class "java.lang.Object"))) void)))
                                      (46 (putstatic (fieldCP "privateMeta" "clojure.lang.Var" (class "clojure.lang.IPersistentMap"))))
                                      (49 (aconst_null))
                                      (50 (ldc 12))       ;;STRING:: "macro"
                                      (52 (invokestatic
                                        (methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (55 (putstatic (fieldCP "macroKey" "clojure.lang.Var" (class "clojure.lang.Keyword"))))
                                      (58 (aconst_null))
                                      (59 (ldc 13))       ;;STRING:: "name"
                                      (61 (invokestatic
                                        (methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (64 (putstatic (fieldCP "nameKey" "clojure.lang.Var" (class "clojure.lang.Keyword"))))
                                      (67 (aconst_null))
                                      (68 (ldc 14))       ;;STRING:: "ns"
                                      (70 (invokestatic
                                        (methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (73 (putstatic (fieldCP "nsKey" "clojure.lang.Var" (class "clojure.lang.Keyword"))))
                                      (76 (new (class "clojure.lang.Var$2")))
                                      (79 (dup))
                                      (80 (invokespecial
                                        (methodCP "<init>" "clojure.lang.Var$2" () void)))
                                      (83 (putstatic (fieldCP "assoc" "clojure.lang.Var" (class "clojure.lang.IFn"))))
                                      (86 (new (class "clojure.lang.Var$3")))
                                      (89 (dup))
                                      (90 (invokespecial
                                        (methodCP "<init>" "clojure.lang.Var$3" () void)))
                                      (93 (putstatic (fieldCP "dissoc" "clojure.lang.Var" (class "clojure.lang.IFn"))))
                                      (96 (return))
                                      (endofcode 97))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.IFn" "clojure.lang.IRef" "clojure.lang.Settable")
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))#|ACL2s-ToDo-Line|#



(defconst *Var-class-table*
  (make-static-class-decls 
   *clojure.lang.Var*))

(defconst *package-name-map* 
  ("clojure.lang.Var" . "clojure.lang"))

