; PersistentHashSet-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:52 CDT 2014.
;

(defconst *clojure.lang.PersistentHashSet*
 (make-class-def
      '(class "clojure.lang.PersistentHashSet"
            "clojure.lang.APersistentSet"
            (constant_pool
                        (STRING  "Duplicate key: "))
            (fields
                        (field "EMPTY" (class "clojure.lang.PersistentHashSet") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "_meta" (class "clojure.lang.IPersistentMap") (accessflags  *class*  *final* ) -1))
            (methods
                        (method "create"
                              (parameters (array (class "java.lang.Object")))
                              (returntype . (class "clojure.lang.PersistentHashSet"))
                              (accessflags  *class*  *public*  *static*  *transient* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 31)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashSet" (class "clojure.lang.PersistentHashSet")))) 
                                      (3 (astore_1)) 
                                      (4 (iconst_0)) 
                                      (5 (istore_2)) 
                                      (6 (iload_2)) ;;at TAG_1
                                      (7 (aload_0)) 
                                      (8 (arraylength)) 
                                      (9 (if_icmpge 29))  ;;to TAG_0
                                      (12 (aload_1)) 
                                      (13 (aload_0)) 
                                      (14 (iload_2)) 
                                      (15 (aaload)) 
                                      (16 (invokevirtual (methodCP "cons" "clojure.lang.PersistentHashSet" ((class "java.lang.Object")) (class "clojure.lang.IPersistentSet")))) 
                                      (19 (checkcast (class "clojure.lang.PersistentHashSet"))) 
                                      (22 (astore_1)) 
                                      (23 (iinc 2 1)) 
                                      (26 (goto 6)) ;;to TAG_1
                                      (29 (aload_1)) ;;at TAG_0
                                      (30 (areturn)) 
                                      (endofcode 31))
                                   (Exceptions )
                                   (StackMap )))
                        (method "create"
                              (parameters (class "java.util.List"))
                              (returntype . (class "clojure.lang.PersistentHashSet"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 41)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashSet" (class "clojure.lang.PersistentHashSet")))) 
                                      (3 (astore_1)) 
                                      (4 (aload_0)) 
                                      (5 (invokeinterface (methodCP "iterator" "java.util.List" () (class "java.util.Iterator")) 1)) 
                                      (10 (astore_2)) 
                                      (11 (aload_2)) ;;at TAG_1
                                      (12 (invokeinterface (methodCP "hasNext" "java.util.Iterator" () boolean) 1)) 
                                      (17 (ifeq 39))  ;;to TAG_0
                                      (20 (aload_2)) 
                                      (21 (invokeinterface (methodCP "next" "java.util.Iterator" () (class "java.lang.Object")) 1)) 
                                      (26 (astore_3)) 
                                      (27 (aload_1)) 
                                      (28 (aload_3)) 
                                      (29 (invokevirtual (methodCP "cons" "clojure.lang.PersistentHashSet" ((class "java.lang.Object")) (class "clojure.lang.IPersistentSet")))) 
                                      (32 (checkcast (class "clojure.lang.PersistentHashSet"))) 
                                      (35 (astore_1)) 
                                      (36 (goto 11)) ;;to TAG_1
                                      (39 (aload_1)) ;;at TAG_0
                                      (40 (areturn)) 
                                      (endofcode 41))
                                   (Exceptions )
                                   (StackMap )))
                        (method "create"
                              (parameters (class "clojure.lang.ISeq"))
                              (returntype . (class "clojure.lang.PersistentHashSet"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 34)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashSet" (class "clojure.lang.PersistentHashSet")))) 
                                      (3 (astore_1)) 
                                      (4 (aload_0)) ;;at TAG_1
                                      (5 (ifnull 32))  ;;to TAG_0
                                      (8 (aload_1)) 
                                      (9 (aload_0)) 
                                      (10 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (15 (invokevirtual (methodCP "cons" "clojure.lang.PersistentHashSet" ((class "java.lang.Object")) (class "clojure.lang.IPersistentSet")))) 
                                      (18 (checkcast (class "clojure.lang.PersistentHashSet"))) 
                                      (21 (astore_1)) 
                                      (22 (aload_0)) 
                                      (23 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (28 (astore_0)) 
                                      (29 (goto 4)) ;;to TAG_1
                                      (32 (aload_1)) ;;at TAG_0
                                      (33 (areturn)) 
                                      (endofcode 34))
                                   (Exceptions )
                                   (StackMap )))
                        (method "createWithCheck"
                              (parameters (array (class "java.lang.Object")))
                              (returntype . (class "clojure.lang.PersistentHashSet"))
                              (accessflags  *class*  *public*  *static*  *transient* )
                              (code
                                   (max_stack . 5) (max_locals . 3) (code_length . 70)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashSet" (class "clojure.lang.PersistentHashSet")))) 
                                      (3 (astore_1)) 
                                      (4 (iconst_0)) 
                                      (5 (istore_2)) 
                                      (6 (iload_2)) ;;at TAG_2
                                      (7 (aload_0)) 
                                      (8 (arraylength)) 
                                      (9 (if_icmpge 68)) ;;to TAG_0
                                      (12 (aload_1)) 
                                      (13 (aload_0)) 
                                      (14 (iload_2)) 
                                      (15 (aaload)) 
                                      (16 (invokevirtual (methodCP "cons" "clojure.lang.PersistentHashSet" ((class "java.lang.Object")) (class "clojure.lang.IPersistentSet")))) 
                                      (19 (checkcast (class "clojure.lang.PersistentHashSet"))) 
                                      (22 (astore_1)) 
                                      (23 (aload_1)) 
                                      (24 (invokevirtual (methodCP "count" "clojure.lang.PersistentHashSet" () int))) 
                                      (27 (iload_2)) 
                                      (28 (iconst_1)) 
                                      (29 (iadd)) 
                                      (30 (if_icmpeq 62)) ;;to TAG_1
                                      (33 (new (class "java.lang.IllegalArgumentException"))) 
                                      (36 (dup)) 
                                      (37 (new (class "java.lang.StringBuilder"))) 
                                      (40 (dup)) 
                                      (41 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (44 (ldc 0)) ;;STRING:: "Duplicate key: "
                                      (46 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (49 (aload_0)) 
                                      (50 (iload_2)) 
                                      (51 (aaload)) 
                                      (52 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (55 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (58 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (61 (athrow)) 
                                      (62 (iinc 2 1)) ;;at TAG_1
                                      (65 (goto 6))  ;;to TAG_2
                                      (68 (aload_1)) ;;at TAG_0
                                      (69 (areturn)) 
                                      (endofcode 70))
                                   (Exceptions )
                                   (StackMap )))
                        (method "createWithCheck"
                              (parameters (class "java.util.List"))
                              (returntype . (class "clojure.lang.PersistentHashSet"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 5) (code_length . 86)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashSet" (class "clojure.lang.PersistentHashSet")))) 
                                      (3 (astore_1)) 
                                      (4 (iconst_0)) 
                                      (5 (istore_2)) 
                                      (6 (aload_0)) 
                                      (7 (invokeinterface (methodCP "iterator" "java.util.List" () (class "java.util.Iterator")) 1)) 
                                      (12 (astore_3)) 
                                      (13 (aload_3)) ;;at TAG_2
                                      (14 (invokeinterface (methodCP "hasNext" "java.util.Iterator" () boolean) 1)) 
                                      (19 (ifeq 84)) ;;to TAG_0
                                      (22 (aload_3)) 
                                      (23 (invokeinterface (methodCP "next" "java.util.Iterator" () (class "java.lang.Object")) 1)) 
                                      (28 (astore 4)) 
                                      (30 (aload_1)) 
                                      (31 (aload 4)) 
                                      (33 (invokevirtual (methodCP "cons" "clojure.lang.PersistentHashSet" ((class "java.lang.Object")) (class "clojure.lang.IPersistentSet")))) 
                                      (36 (checkcast (class "clojure.lang.PersistentHashSet"))) 
                                      (39 (astore_1)) 
                                      (40 (aload_1)) 
                                      (41 (invokevirtual (methodCP "count" "clojure.lang.PersistentHashSet" () int))) 
                                      (44 (iload_2)) 
                                      (45 (iconst_1)) 
                                      (46 (iadd)) 
                                      (47 (if_icmpeq 78)) ;;to TAG_1
                                      (50 (new (class "java.lang.IllegalArgumentException"))) 
                                      (53 (dup)) 
                                      (54 (new (class "java.lang.StringBuilder"))) 
                                      (57 (dup)) 
                                      (58 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (61 (ldc 0)) ;;STRING:: "Duplicate key: "
                                      (63 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (66 (aload 4)) 
                                      (68 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (71 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (74 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (77 (athrow)) 
                                      (78 (iinc 2 1)) ;;at TAG_1
                                      (81 (goto 13))  ;;to TAG_2
                                      (84 (aload_1)) ;;at TAG_0
                                      (85 (areturn)) 
                                      (endofcode 86))
                                   (Exceptions )
                                   (StackMap )))
                        (method "createWithCheck"
                              (parameters (class "clojure.lang.ISeq"))
                              (returntype . (class "clojure.lang.PersistentHashSet"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 81)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashSet" (class "clojure.lang.PersistentHashSet")))) 
                                      (3 (astore_1)) 
                                      (4 (iconst_0)) 
                                      (5 (istore_2)) 
                                      (6 (aload_0)) ;;at TAG_2
                                      (7 (ifnull 79)) ;;to TAG_0
                                      (10 (aload_1)) 
                                      (11 (aload_0)) 
                                      (12 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (17 (invokevirtual (methodCP "cons" "clojure.lang.PersistentHashSet" ((class "java.lang.Object")) (class "clojure.lang.IPersistentSet")))) 
                                      (20 (checkcast (class "clojure.lang.PersistentHashSet"))) 
                                      (23 (astore_1)) 
                                      (24 (aload_1)) 
                                      (25 (invokevirtual (methodCP "count" "clojure.lang.PersistentHashSet" () int))) 
                                      (28 (iload_2)) 
                                      (29 (iconst_1)) 
                                      (30 (iadd)) 
                                      (31 (if_icmpeq 66)) ;;to TAG_1
                                      (34 (new (class "java.lang.IllegalArgumentException"))) 
                                      (37 (dup)) 
                                      (38 (new (class "java.lang.StringBuilder"))) 
                                      (41 (dup)) 
                                      (42 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (45 (ldc 0)) ;;STRING:: "Duplicate key: "
                                      (47 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (50 (aload_0)) 
                                      (51 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (56 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (59 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (62 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (65 (athrow)) 
                                      (66 (aload_0)) ;;at TAG_1
                                      (67 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (72 (astore_0)) 
                                      (73 (iinc 2 1)) 
                                      (76 (goto 6))  ;;to TAG_2
                                      (79 (aload_1)) ;;at TAG_0
                                      (80 (areturn)) 
                                      (endofcode 81))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "clojure.lang.IPersistentMap") (class "clojure.lang.IPersistentMap"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_2))
                                      (2 (invokespecial
					(methodCP "<init>" "clojure.lang.APersistentSet" ((class "clojure.lang.IPersistentMap")) void)))
                                      (5 (aload_0))
                                      (6 (aload_1))
                                      (7 (putfield (fieldCP "_meta" "clojure.lang.PersistentHashSet" (class "clojure.lang.IPersistentMap"))))
                                      (10 (return))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "disjoin"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.IPersistentSet"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 32)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (aload_1)) 
                                      (2 (invokevirtual (methodCP "contains" "clojure.lang.PersistentHashSet" ((class "java.lang.Object")) boolean))) 
                                      (5 (ifeq 30))  ;;to TAG_0
                                      (8 (new (class "clojure.lang.PersistentHashSet"))) 
                                      (11 (dup)) 
                                      (12 (aload_0)) 
                                      (13 (invokevirtual (methodCP "meta" "clojure.lang.PersistentHashSet" () (class "clojure.lang.IPersistentMap")))) 
                                      (16 (aload_0)) 
                                      (17 (getfield (fieldCP "impl" "clojure.lang.PersistentHashSet" (class "clojure.lang.IPersistentMap")))) 
                                      (20 (aload_1)) 
                                      (21 (invokeinterface (methodCP "without" "clojure.lang.IPersistentMap" ((class "java.lang.Object")) (class "clojure.lang.IPersistentMap")) 2)) 
                                      (26 (invokespecial (methodCP "<init>" "clojure.lang.PersistentHashSet" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.IPersistentMap")) void))) 
                                      (29 (areturn)) 
                                      (30 (aload_0)) ;;at TAG_0
                                      (31 (areturn)) 
                                      (endofcode 32))
                                   (Exceptions )
                                   (StackMap )))
                        (method "cons"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.IPersistentSet"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 2) (code_length . 33)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (aload_1)) 
                                      (2 (invokevirtual (methodCP "contains" "clojure.lang.PersistentHashSet" ((class "java.lang.Object")) boolean))) 
                                      (5 (ifeq 10))  ;;to TAG_0
                                      (8 (aload_0)) 
                                      (9 (areturn)) 
                                      (10 (new (class "clojure.lang.PersistentHashSet"))) ;;at TAG_0
                                      (13 (dup)) 
                                      (14 (aload_0)) 
                                      (15 (invokevirtual (methodCP "meta" "clojure.lang.PersistentHashSet" () (class "clojure.lang.IPersistentMap")))) 
                                      (18 (aload_0)) 
                                      (19 (getfield (fieldCP "impl" "clojure.lang.PersistentHashSet" (class "clojure.lang.IPersistentMap")))) 
                                      (22 (aload_1)) 
                                      (23 (aload_1)) 
                                      (24 (invokeinterface (methodCP "assoc" "clojure.lang.IPersistentMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.IPersistentMap")) 3)) 
                                      (29 (invokespecial (methodCP "<init>" "clojure.lang.PersistentHashSet" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.IPersistentMap")) void))) 
                                      (32 (areturn)) 
                                      (endofcode 33))
                                   (Exceptions )
                                   (StackMap )))
                        (method "empty"
                              (parameters )
                              (returntype . (class "clojure.lang.IPersistentCollection"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 11)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashSet" (class "clojure.lang.PersistentHashSet"))))
                                      (3 (aload_0))
                                      (4 (invokevirtual
					(methodCP "meta" "clojure.lang.PersistentHashSet" () (class "clojure.lang.IPersistentMap"))))
                                      (7 (invokevirtual
					(methodCP "withMeta" "clojure.lang.PersistentHashSet" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.PersistentHashSet"))))
                                      (10 (areturn))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.PersistentHashSet"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 13)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.PersistentHashSet")))
                                      (3 (dup))
                                      (4 (aload_1))
                                      (5 (aload_0))
                                      (6 (getfield (fieldCP "impl" "clojure.lang.PersistentHashSet" (class "clojure.lang.IPersistentMap"))))
                                      (9 (invokespecial
					(methodCP "<init>" "clojure.lang.PersistentHashSet" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.IPersistentMap")) void)))
                                      (12 (areturn))
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "asTransient"
                              (parameters )
                              (returntype . (class "clojure.lang.ITransientCollection"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 18)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.PersistentHashSet$TransientHashSet")))
                                      (3 (dup))
                                      (4 (aload_0))
                                      (5 (getfield (fieldCP "impl" "clojure.lang.PersistentHashSet" (class "clojure.lang.IPersistentMap"))))
                                      (8 (checkcast (class "clojure.lang.PersistentHashMap")))
                                      (11 (invokevirtual
					(methodCP "asTransient" "clojure.lang.PersistentHashMap" () (class "clojure.lang.PersistentHashMap$TransientHashMap"))))
                                      (14 (invokespecial
					(methodCP "<init>" "clojure.lang.PersistentHashSet$TransientHashSet" ((class "clojure.lang.ITransientMap")) void)))
                                      (17 (areturn))
                                      (endofcode 18))
                                   (Exceptions )
                                   (StackMap )))
                        (method "meta"
                              (parameters )
                              (returntype . (class "clojure.lang.IPersistentMap"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "_meta" "clojure.lang.PersistentHashSet" (class "clojure.lang.IPersistentMap"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "cons"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.IPersistentCollection"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "cons" "clojure.lang.PersistentHashSet" ((class "java.lang.Object")) (class "clojure.lang.IPersistentSet"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.IObj"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "withMeta" "clojure.lang.PersistentHashSet" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.PersistentHashSet"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 15)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.PersistentHashSet")))
                                      (3 (dup))
                                      (4 (aconst_null))
                                      (5 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashMap" (class "clojure.lang.PersistentHashMap"))))
                                      (8 (invokespecial
					(methodCP "<init>" "clojure.lang.PersistentHashSet" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.IPersistentMap")) void)))
                                      (11 (putstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashSet" (class "clojure.lang.PersistentHashSet"))))
                                      (14 (return))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.IObj" "clojure.lang.IEditableCollection")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *PersistentHashSet-class-table*
  (make-static-class-decls 
   *clojure.lang.PersistentHashSet*))

(defconst *package-name-map* 
  ("clojure.lang.PersistentHashSet" . "clojure.lang"))

