; LineNumberingPushbackReader-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:51 CDT 2014.
;

(defconst *clojure.lang.LineNumberingPushbackReader*
 (make-class-def
      '(class "clojure.lang.LineNumberingPushbackReader"
            "java.io.PushbackReader"
            (constant_pool
                        (INT 10)
                        (STRING  ""))
            (fields
                        (field "newline" int (accessflags  *class*  *final*  *private*  *static* ) 0)
                        (field "_atLineStart" boolean (accessflags  *class*  *private* ) -1)
                        (field "_prev" boolean (accessflags  *class*  *private* ) -1)
                        (field "_columnNumber" int (accessflags  *class*  *private* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "java.io.Reader"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 23)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (new (class "java.io.LineNumberReader")))
                                      (4 (dup))
                                      (5 (aload_1))
                                      (6 (invokespecial
					(methodCP "<init>" "java.io.LineNumberReader" ((class "java.io.Reader")) void)))
                                      (9 (invokespecial
					(methodCP "<init>" "java.io.PushbackReader" ((class "java.io.Reader")) void)))
                                      (12 (aload_0))
                                      (13 (iconst_1))
                                      (14 (putfield (fieldCP "_atLineStart" "clojure.lang.LineNumberingPushbackReader" boolean)))
                                      (17 (aload_0))
                                      (18 (iconst_1))
                                      (19 (putfield (fieldCP "_columnNumber" "clojure.lang.LineNumberingPushbackReader" int)))
                                      (22 (return))
                                      (endofcode 23))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.io.Reader") int)
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 3) (code_length . 24)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (new (class "java.io.LineNumberReader")))
                                      (4 (dup))
                                      (5 (aload_1))
                                      (6 (iload_2))
                                      (7 (invokespecial
					(methodCP "<init>" "java.io.LineNumberReader" ((class "java.io.Reader") int) void)))
                                      (10 (invokespecial
					(methodCP "<init>" "java.io.PushbackReader" ((class "java.io.Reader")) void)))
                                      (13 (aload_0))
                                      (14 (iconst_1))
                                      (15 (putfield (fieldCP "_atLineStart" "clojure.lang.LineNumberingPushbackReader" boolean)))
                                      (18 (aload_0))
                                      (19 (iconst_1))
                                      (20 (putfield (fieldCP "_columnNumber" "clojure.lang.LineNumberingPushbackReader" int)))
                                      (23 (return))
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getLineNumber"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "in" "clojure.lang.LineNumberingPushbackReader" (class "java.io.Reader"))))
                                      (4 (checkcast (class "java.io.LineNumberReader")))
                                      (7 (invokevirtual
					(methodCP "getLineNumber" "java.io.LineNumberReader" () int)))
                                      (10 (iconst_1))
                                      (11 (iadd))
                                      (12 (ireturn))
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getColumnNumber"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "_columnNumber" "clojure.lang.LineNumberingPushbackReader" int)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "read"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 54)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokespecial (methodCP "read" "java.io.PushbackReader" () int))) 
                                      (4 (istore_1)) 
                                      (5 (aload_0)) 
                                      (6 (aload_0)) 
                                      (7 (getfield (fieldCP "_atLineStart" "clojure.lang.LineNumberingPushbackReader" boolean))) 
                                      (10 (putfield (fieldCP "_prev" "clojure.lang.LineNumberingPushbackReader" boolean))) 
                                      (13 (iload_1)) 
                                      (14 (bipush 10)) 
                                      (16 (if_icmpeq 24)) ;;to TAG_0
                                      (19 (iload_1)) 
                                      (20 (iconst_m1)) 
                                      (21 (if_icmpne 37)) ;;to TAG_1
                                      (24 (aload_0)) ;;at TAG_0
                                      (25 (iconst_1)) 
                                      (26 (putfield (fieldCP "_atLineStart" "clojure.lang.LineNumberingPushbackReader" boolean))) 
                                      (29 (aload_0)) 
                                      (30 (iconst_1)) 
                                      (31 (putfield (fieldCP "_columnNumber" "clojure.lang.LineNumberingPushbackReader" int))) 
                                      (34 (goto 52))  ;;to TAG_2
                                      (37 (aload_0)) ;;at TAG_1
                                      (38 (iconst_0)) 
                                      (39 (putfield (fieldCP "_atLineStart" "clojure.lang.LineNumberingPushbackReader" boolean))) 
                                      (42 (aload_0)) 
                                      (43 (dup)) 
                                      (44 (getfield (fieldCP "_columnNumber" "clojure.lang.LineNumberingPushbackReader" int))) 
                                      (47 (iconst_1)) 
                                      (48 (iadd)) 
                                      (49 (putfield (fieldCP "_columnNumber" "clojure.lang.LineNumberingPushbackReader" int))) 
                                      (52 (iload_1)) ;;at TAG_2
                                      (53 (ireturn)) 
                                      (endofcode 54))
                                   (Exceptions )
                                   (StackMap )))
                        (method "unread"
                              (parameters int)
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 24)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (invokespecial
					(methodCP "unread" "java.io.PushbackReader" (int) void)))
                                      (5 (aload_0))
                                      (6 (aload_0))
                                      (7 (getfield (fieldCP "_prev" "clojure.lang.LineNumberingPushbackReader" boolean)))
                                      (10 (putfield (fieldCP "_atLineStart" "clojure.lang.LineNumberingPushbackReader" boolean)))
                                      (13 (aload_0))
                                      (14 (dup))
                                      (15 (getfield (fieldCP "_columnNumber" "clojure.lang.LineNumberingPushbackReader" int)))
                                      (18 (iconst_1))
                                      (19 (isub))
                                      (20 (putfield (fieldCP "_columnNumber" "clojure.lang.LineNumberingPushbackReader" int)))
                                      (23 (return))
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap )))
                        (method "readLine"
                              (parameters )
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 5) (code_length . 107)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "read" "clojure.lang.LineNumberingPushbackReader" () int))) 
                                      (4 (istore_1)) 
                                      (5 (iload_1)) 
                                      (6 (lookupswitch (lookupswitchinfo 43 2 ((-1 . 32) (10 . 37)))))  ;;to TAG_2;;to TAG_0;;to TAG_1
                                      (32 (aconst_null)) ;;at TAG_1
                                      (33 (astore_2)) 
                                      (34 (goto 105)) ;;to TAG_3
                                      (37 (ldc 1)) ;;at TAG_2;;STRING:: ""
                                      (39 (astore_2)) 
                                      (40 (goto 105)) ;;to TAG_3
                                      (43 (iload_1)) ;;at TAG_0
                                      (44 (i2c)) 
                                      (45 (invokestatic (methodCP "valueOf" "java.lang.String" (char) (class "java.lang.String")))) 
                                      (48 (astore_3)) 
                                      (49 (aload_0)) 
                                      (50 (getfield (fieldCP "in" "clojure.lang.LineNumberingPushbackReader" (class "java.io.Reader")))) 
                                      (53 (checkcast (class "java.io.LineNumberReader"))) 
                                      (56 (invokevirtual (methodCP "readLine" "java.io.LineNumberReader" () (class "java.lang.String")))) 
                                      (59 (astore 4)) 
                                      (61 (aload 4)) 
                                      (63 (ifnonnull 70)) ;;to TAG_4
                                      (66 (aload_3)) 
                                      (67 (goto 89)) ;;to TAG_5
                                      (70 (new (class "java.lang.StringBuilder"))) ;;at TAG_4
                                      (73 (dup)) 
                                      (74 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (77 (aload_3)) 
                                      (78 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (81 (aload 4)) 
                                      (83 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (86 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (89 (astore_2)) ;;at TAG_5
                                      (90 (aload_0)) 
                                      (91 (iconst_0)) 
                                      (92 (putfield (fieldCP "_prev" "clojure.lang.LineNumberingPushbackReader" boolean))) 
                                      (95 (aload_0)) 
                                      (96 (iconst_1)) 
                                      (97 (putfield (fieldCP "_atLineStart" "clojure.lang.LineNumberingPushbackReader" boolean))) 
                                      (100 (aload_0)) 
                                      (101 (iconst_1)) 
                                      (102 (putfield (fieldCP "_columnNumber" "clojure.lang.LineNumberingPushbackReader" int))) 
                                      (105 (aload_2)) ;;at TAG_3
                                      (106 (areturn)) 
                                      (endofcode 107))
                                   (Exceptions )
                                   (StackMap )))
                        (method "atLineStart"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "_atLineStart" "clojure.lang.LineNumberingPushbackReader" boolean)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *LineNumberingPushbackReader-class-table*
  (make-static-class-decls 
   *clojure.lang.LineNumberingPushbackReader*))

(defconst *package-name-map* 
  ("clojure.lang.LineNumberingPushbackReader" . "clojure.lang"))

