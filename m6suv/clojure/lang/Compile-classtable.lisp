; Compile-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:50 CDT 2014.
;

(defconst *clojure.lang.Compile*
 (make-class-def
      '(class "clojure.lang.Compile"
            "java.lang.Object"
            (constant_pool
                        (STRING  "clojure.compile.path")
                        (STRING  "clojure.compile.warn-on-reflection")
                        (STRING  "clojure.compile.unchecked-math")
                        (STRING  "ERROR: Must set system property clojure.compile.path\nto the location for compiled .class files.\nThis directory must also be on your CLASSPATH.")
                        (STRING  "false")
                        (STRING  "true")
                        (STRING  "clojure.compiler.")
                        (STRING  "Compiling ")
                        (STRING  " to ")
                        (STRING  "\n")
                        (STRING  "clojure.core")
                        (STRING  "*compile-path*")
                        (STRING  "compile")
                        (STRING  "*warn-on-reflection*")
                        (STRING  "*unchecked-math*")
                        (STRING  "*compiler-options*"))
            (fields
                        (field "PATH_PROP" (class "java.lang.String") (accessflags  *class*  *final*  *private*  *static* ) 0)
                        (field "REFLECTION_WARNING_PROP" (class "java.lang.String") (accessflags  *class*  *final*  *private*  *static* ) 1)
                        (field "UNCHECKED_MATH_PROP" (class "java.lang.String") (accessflags  *class*  *final*  *private*  *static* ) 2)
                        (field "compile_path" (class "clojure.lang.Var") (accessflags  *class*  *final*  *private*  *static* ) -1)
                        (field "compile" (class "clojure.lang.Var") (accessflags  *class*  *final*  *private*  *static* ) -1)
                        (field "warn_on_reflection" (class "clojure.lang.Var") (accessflags  *class*  *final*  *private*  *static* ) -1)
                        (field "unchecked_math" (class "clojure.lang.Var") (accessflags  *class*  *final*  *private*  *static* ) -1)
                        (field "compiler_options" (class "clojure.lang.Var") (accessflags  *class*  *final*  *private*  *static* ) -1))
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "main"
                              (parameters (array (class "java.lang.String")))
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 6) (max_locals . 15) (code_length . 359)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "OUT" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "java.io.OutputStreamWriter"))) 
                                      (9 (astore_1)) 
                                      (10 (invokestatic (methodCP "errPrintWriter" "clojure.lang.RT" () (class "java.io.PrintWriter")))) 
                                      (13 (astore_2)) 
                                      (14 (ldc 0)) ;;STRING:: "clojure.compile.path"
                                      (16 (invokestatic (methodCP "getProperty" "java.lang.System" ((class "java.lang.String")) (class "java.lang.String")))) 
                                      (19 (astore_3)) 
                                      (20 (aload_0)) 
                                      (21 (arraylength)) 
                                      (22 (istore 4)) 
                                      (24 (aload_3)) 
                                      (25 (ifnonnull 38)) ;;to TAG_0
                                      (28 (aload_2)) 
                                      (29 (ldc 3)) ;;STRING:: "ERROR: Must set system property clojure.compile.path\nto the location for compiled .class files.\nThis directory must also be on your CLASSPATH."
                                      (31 (invokevirtual (methodCP "println" "java.io.PrintWriter" ((class "java.lang.String")) void))) 
                                      (34 (iconst_1)) 
                                      (35 (invokestatic (methodCP "exit" "java.lang.System" (int) void))) 
                                      (38 (ldc 1)) ;;at TAG_0;;STRING:: "clojure.compile.warn-on-reflection"
                                      (40 (ldc 4)) ;;STRING:: "false"
                                      (42 (invokestatic (methodCP "getProperty" "java.lang.System" ((class "java.lang.String") (class "java.lang.String")) (class "java.lang.String")))) 
                                      (45 (ldc 5)) ;;STRING:: "true"
                                      (47 (invokevirtual (methodCP "equals" "java.lang.String" ((class "java.lang.Object")) boolean))) 
                                      (50 (istore 5)) 
                                      (52 (ldc 2)) ;;STRING:: "clojure.compile.unchecked-math"
                                      (54 (ldc 4)) ;;STRING:: "false"
                                      (56 (invokestatic (methodCP "getProperty" "java.lang.System" ((class "java.lang.String") (class "java.lang.String")) (class "java.lang.String")))) 
                                      (59 (ldc 5)) ;;STRING:: "true"
                                      (61 (invokevirtual (methodCP "equals" "java.lang.String" ((class "java.lang.Object")) boolean))) 
                                      (64 (istore 6)) 
                                      (66 (aconst_null)) 
                                      (67 (astore 7)) 
                                      (69 (invokestatic (methodCP "getProperties" "java.lang.System" () (class "java.util.Properties")))) 
                                      (72 (invokevirtual (methodCP "entrySet" "java.util.Properties" () (class "java.util.Set")))) 
                                      (75 (invokeinterface (methodCP "iterator" "java.util.Set" () (class "java.util.Iterator")) 1)) 
                                      (80 (astore 8)) 
                                      (82 (aload 8)) ;;at TAG_3
                                      (84 (invokeinterface (methodCP "hasNext" "java.util.Iterator" () boolean) 1)) 
                                      (89 (ifeq 171))  ;;to TAG_1
                                      (92 (aload 8)) 
                                      (94 (invokeinterface (methodCP "next" "java.util.Iterator" () (class "java.lang.Object")) 1)) 
                                      (99 (checkcast (class "java.util.Map$Entry"))) 
                                      (102 (astore 9)) 
                                      (104 (aload 9)) 
                                      (106 (invokeinterface (methodCP "getKey" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (111 (checkcast (class "java.lang.String"))) 
                                      (114 (astore 10)) 
                                      (116 (aload 9)) 
                                      (118 (invokeinterface (methodCP "getValue" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (123 (checkcast (class "java.lang.String"))) 
                                      (126 (astore 11)) 
                                      (128 (aload 10)) 
                                      (130 (ldc 6)) ;;STRING:: "clojure.compiler."
                                      (132 (invokevirtual (methodCP "startsWith" "java.lang.String" ((class "java.lang.String")) boolean))) 
                                      (135 (ifeq 168)) ;;to TAG_2
                                      (138 (aload 7)) 
                                      (140 (aconst_null)) 
                                      (141 (aload 10)) 
                                      (143 (iconst_1)) 
                                      (144 (aload 10)) 
                                      (146 (bipush 46)) 
                                      (148 (invokevirtual (methodCP "lastIndexOf" "java.lang.String" (int) int))) 
                                      (151 (iadd)) 
                                      (152 (invokevirtual (methodCP "substring" "java.lang.String" (int) (class "java.lang.String")))) 
                                      (155 (invokestatic (methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword")))) 
                                      (158 (aload 11)) 
                                      (160 (invokestatic (methodCP "readString" "clojure.lang.RT" ((class "java.lang.String")) (class "java.lang.Object")))) 
                                      (163 (invokestatic (methodCP "assoc" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.Associative")))) 
                                      (166 (astore 7)) 
                                      (168 (goto 82)) ;;to TAG_3;;at TAG_2
                                      (171 (bipush 8)) ;;at TAG_1
                                      (173 (anewarray (class "java.lang.Object"))) 
                                      (176 (dup)) 
                                      (177 (iconst_0)) 
                                      (178 (getstatic (fieldCP "compile_path" "clojure.lang.Compile" (class "clojure.lang.Var")))) 
                                      (181 (aastore)) 
                                      (182 (dup)) 
                                      (183 (iconst_1)) 
                                      (184 (aload_3)) 
                                      (185 (aastore)) 
                                      (186 (dup)) 
                                      (187 (iconst_2)) 
                                      (188 (getstatic (fieldCP "warn_on_reflection" "clojure.lang.Compile" (class "clojure.lang.Var")))) 
                                      (191 (aastore)) 
                                      (192 (dup)) 
                                      (193 (iconst_3)) 
                                      (194 (iload 5)) 
                                      (196 (invokestatic (methodCP "valueOf" "java.lang.Boolean" (boolean) (class "java.lang.Boolean")))) 
                                      (199 (aastore)) 
                                      (200 (dup)) 
                                      (201 (iconst_4)) 
                                      (202 (getstatic (fieldCP "unchecked_math" "clojure.lang.Compile" (class "clojure.lang.Var")))) 
                                      (205 (aastore)) 
                                      (206 (dup)) 
                                      (207 (iconst_5)) 
                                      (208 (iload 6)) 
                                      (210 (invokestatic (methodCP "valueOf" "java.lang.Boolean" (boolean) (class "java.lang.Boolean")))) 
                                      (213 (aastore)) 
                                      (214 (dup)) 
                                      (215 (bipush 6)) 
                                      (217 (getstatic (fieldCP "compiler_options" "clojure.lang.Compile" (class "clojure.lang.Var")))) 
                                      (220 (aastore)) 
                                      (221 (dup)) 
                                      (222 (bipush 7)) 
                                      (224 (aload 7)) 
                                      (226 (aastore)) 
                                      (227 (invokestatic (methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (230 (invokestatic (methodCP "pushThreadBindings" "clojure.lang.Var" ((class "clojure.lang.Associative")) void))) 
                                      (233 (aload_0)) 
                                      (234 (astore 8)) 
                                      (236 (aload 8)) 
                                      (238 (arraylength)) 
                                      (239 (istore 9)) 
                                      (241 (iconst_0)) 
                                      (242 (istore 10)) 
                                      (244 (iload 10)) ;;at TAG_5
                                      (246 (iload 9)) 
                                      (248 (if_icmpge 318)) ;;to TAG_4
                                      (251 (aload 8)) 
                                      (253 (iload 10)) 
                                      (255 (aaload)) 
                                      (256 (astore 11)) 
                                      (258 (aload_1)) 
                                      (259 (new (class "java.lang.StringBuilder"))) 
                                      (262 (dup)) 
                                      (263 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (266 (ldc 7)) ;;STRING:: "Compiling "
                                      (268 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (271 (aload 11)) 
                                      (273 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (276 (ldc 8)) ;;STRING:: " to "
                                      (278 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (281 (aload_3)) 
                                      (282 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (285 (ldc 9)) ;;STRING:: "\n"
                                      (287 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (290 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (293 (invokevirtual (methodCP "write" "java.io.OutputStreamWriter" ((class "java.lang.String")) void))) 
                                      (296 (aload_1)) 
                                      (297 (invokevirtual (methodCP "flush" "java.io.OutputStreamWriter" () void))) 
                                      (300 (getstatic (fieldCP "compile" "clojure.lang.Compile" (class "clojure.lang.Var")))) 
                                      (303 (aload 11)) 
                                      (305 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (308 (invokevirtual (methodCP "invoke" "clojure.lang.Var" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (311 (pop)) 
                                      (312 (iinc 10 1)) 
                                      (315 (goto 244)) ;;to TAG_5
                                      (318 (jsr 332)) ;;to TAG_6;;at TAG_4
                                      (321 (goto 358)) ;;to TAG_7;;at TAG_9
                                      (324 (astore 12)) ;;at TAG_10
                                      (326 (jsr 332)) ;;to TAG_6
                                      (329 (aload 12)) ;;at TAG_11
                                      (331 (athrow)) 
                                      (332 (astore 13)) ;;at TAG_6
                                      (334 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) 
                                      (337 (aload_1)) ;;at TAG_12
                                      (338 (invokevirtual (methodCP "flush" "java.io.OutputStreamWriter" () void))) 
                                      (341 (aload_1)) 
                                      (342 (invokevirtual (methodCP "close" "java.io.OutputStreamWriter" () void))) 
                                      (345 (goto 356)) ;;to TAG_8;;at TAG_13
                                      (348 (astore 14)) ;;at TAG_14
                                      (350 (aload 14)) 
                                      (352 (aload_2)) 
                                      (353 (invokevirtual (methodCP "printStackTrace" "java.io.IOException" ((class "java.io.PrintWriter")) void))) 
                                      (356 (ret 13)) ;;at TAG_8
                                      (358 (return)) ;;at TAG_7
                                      (endofcode 359))
                                   (Exceptions 
                                     (handler 171 321  324 (class "java.lang.Throwable"))
                                     (handler 324 329  324 (class "java.lang.Throwable"))
                                     (handler 337 345  348 (class "java.io.IOException")))
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 51)
                                   (parsedcode
                                      (0 (ldc 10))        ;;STRING:: "clojure.core"
                                      (2 (ldc 11))        ;;STRING:: "*compile-path*"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (putstatic (fieldCP "compile_path" "clojure.lang.Compile" (class "clojure.lang.Var"))))
                                      (10 (ldc 10))       ;;STRING:: "clojure.core"
                                      (12 (ldc 12))       ;;STRING:: "compile"
                                      (14 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (17 (putstatic (fieldCP "compile" "clojure.lang.Compile" (class "clojure.lang.Var"))))
                                      (20 (ldc 10))       ;;STRING:: "clojure.core"
                                      (22 (ldc 13))       ;;STRING:: "*warn-on-reflection*"
                                      (24 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (27 (putstatic (fieldCP "warn_on_reflection" "clojure.lang.Compile" (class "clojure.lang.Var"))))
                                      (30 (ldc 10))       ;;STRING:: "clojure.core"
                                      (32 (ldc 14))       ;;STRING:: "*unchecked-math*"
                                      (34 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (37 (putstatic (fieldCP "unchecked_math" "clojure.lang.Compile" (class "clojure.lang.Var"))))
                                      (40 (ldc 10))       ;;STRING:: "clojure.core"
                                      (42 (ldc 15))       ;;STRING:: "*compiler-options*"
                                      (44 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (47 (putstatic (fieldCP "compiler_options" "clojure.lang.Compile" (class "clojure.lang.Var"))))
                                      (50 (return))
                                      (endofcode 51))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Compile-class-table*
  (make-static-class-decls 
   *clojure.lang.Compile*))

(defconst *package-name-map* 
  ("clojure.lang.Compile" . "clojure.lang"))

