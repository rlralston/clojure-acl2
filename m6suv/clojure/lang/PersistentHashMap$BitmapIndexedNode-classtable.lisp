; PersistentHashMap$BitmapIndexedNode-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:52 CDT 2014.
;

(defconst *clojure.lang.PersistentHashMap$BitmapIndexedNode*
 (make-class-def
      '(class "clojure.lang.PersistentHashMap$BitmapIndexedNode"
            "java.lang.Object"
            (constant_pool)
            (fields
                        (field "EMPTY" (class "clojure.lang.PersistentHashMap$BitmapIndexedNode") (accessflags  *class*  *final*  *static* ) -1)
                        (field "bitmap" int (accessflags  *class* ) -1)
                        (field "array" (array (class "java.lang.Object")) (accessflags  *class* ) -1)
                        (field "edit" (class "java.util.concurrent.atomic.AtomicReference") (accessflags  *class*  *final* ) -1))
            (methods
                        (method "index"
                              (parameters int)
                              (returntype . int)
                              (accessflags  *class*  *final* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 12)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int)))
                                      (4 (iload_1))
                                      (5 (iconst_1))
                                      (6 (isub))
                                      (7 (iand))
                                      (8 (invokestatic
					(methodCP "bitCount" "java.lang.Integer" (int) int)))
                                      (11 (ireturn))
                                      (endofcode 12))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.util.concurrent.atomic.AtomicReference") int (array (class "java.lang.Object")))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 20)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (aload_0))
                                      (5 (iload_2))
                                      (6 (putfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int)))
                                      (9 (aload_0))
                                      (10 (aload_3))
                                      (11 (putfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object")))))
                                      (14 (aload_0))
                                      (15 (aload_1))
                                      (16 (putfield (fieldCP "edit" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (class "java.util.concurrent.atomic.AtomicReference"))))
                                      (19 (return))
                                      (endofcode 20))
                                   (Exceptions )
                                   (StackMap )))
                        (method "assoc"
                              (parameters int int (class "java.lang.Object") (class "java.lang.Object") (class "clojure.lang.Box"))
                              (returntype . (class "clojure.lang.PersistentHashMap$INode"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 14) (max_locals . 13) (code_length . 477)
                                   (parsedcode
                                      (0 (iload_2)) 
                                      (1 (iload_1)) 
                                      (2 (invokestatic (methodCP "access$100" "clojure.lang.PersistentHashMap" (int int) int))) 
                                      (5 (istore 6)) 
                                      (7 (aload_0)) 
                                      (8 (iload 6)) 
                                      (10 (invokevirtual (methodCP "index" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (int) int))) 
                                      (13 (istore 7)) 
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (19 (iload 6)) 
                                      (21 (iand)) 
                                      (22 (ifeq 210)) ;;to TAG_0
                                      (25 (aload_0)) 
                                      (26 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (29 (iconst_2)) 
                                      (30 (iload 7)) 
                                      (32 (imul)) 
                                      (33 (aaload)) 
                                      (34 (astore 8)) 
                                      (36 (aload_0)) 
                                      (37 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (40 (iconst_2)) 
                                      (41 (iload 7)) 
                                      (43 (imul)) 
                                      (44 (iconst_1)) 
                                      (45 (iadd)) 
                                      (46 (aaload)) 
                                      (47 (astore 9)) 
                                      (49 (aload 8)) 
                                      (51 (ifnonnull 112))  ;;to TAG_1
                                      (54 (aload 9)) 
                                      (56 (checkcast (class "clojure.lang.PersistentHashMap$INode"))) 
                                      (59 (iload_1)) 
                                      (60 (iconst_5)) 
                                      (61 (iadd)) 
                                      (62 (iload_2)) 
                                      (63 (aload_3)) 
                                      (64 (aload 4)) 
                                      (66 (aload 5)) 
                                      (68 (invokeinterface (methodCP "assoc" "clojure.lang.PersistentHashMap$INode" (int int (class "java.lang.Object") (class "java.lang.Object") (class "clojure.lang.Box")) (class "clojure.lang.PersistentHashMap$INode")) 6)) 
                                      (73 (astore 10)) 
                                      (75 (aload 10)) 
                                      (77 (aload 9)) 
                                      (79 (if_acmpne 84)) ;;to TAG_2
                                      (82 (aload_0)) 
                                      (83 (areturn)) 
                                      (84 (new (class "clojure.lang.PersistentHashMap$BitmapIndexedNode"))) ;;at TAG_2
                                      (87 (dup)) 
                                      (88 (aconst_null)) 
                                      (89 (aload_0)) 
                                      (90 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (93 (aload_0)) 
                                      (94 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (97 (iconst_2)) 
                                      (98 (iload 7)) 
                                      (100 (imul)) 
                                      (101 (iconst_1)) 
                                      (102 (iadd)) 
                                      (103 (aload 10)) 
                                      (105 (invokestatic (methodCP "access$200" "clojure.lang.PersistentHashMap" ((array (class "java.lang.Object")) int (class "java.lang.Object")) (array (class "java.lang.Object"))))) 
                                      (108 (invokespecial (methodCP "<init>" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int (array (class "java.lang.Object"))) void))) 
                                      (111 (areturn)) 
                                      (112 (aload_3)) ;;at TAG_1
                                      (113 (aload 8)) 
                                      (115 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (118 (ifeq 158)) ;;to TAG_3
                                      (121 (aload 4)) 
                                      (123 (aload 9)) 
                                      (125 (if_acmpne 130)) ;;to TAG_4
                                      (128 (aload_0)) 
                                      (129 (areturn)) 
                                      (130 (new (class "clojure.lang.PersistentHashMap$BitmapIndexedNode"))) ;;at TAG_4
                                      (133 (dup)) 
                                      (134 (aconst_null)) 
                                      (135 (aload_0)) 
                                      (136 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (139 (aload_0)) 
                                      (140 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (143 (iconst_2)) 
                                      (144 (iload 7)) 
                                      (146 (imul)) 
                                      (147 (iconst_1)) 
                                      (148 (iadd)) 
                                      (149 (aload 4)) 
                                      (151 (invokestatic (methodCP "access$200" "clojure.lang.PersistentHashMap" ((array (class "java.lang.Object")) int (class "java.lang.Object")) (array (class "java.lang.Object"))))) 
                                      (154 (invokespecial (methodCP "<init>" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int (array (class "java.lang.Object"))) void))) 
                                      (157 (areturn)) 
                                      (158 (aload 5)) ;;at TAG_3
                                      (160 (aload 5)) 
                                      (162 (putfield (fieldCP "val" "clojure.lang.Box" (class "java.lang.Object")))) 
                                      (165 (new (class "clojure.lang.PersistentHashMap$BitmapIndexedNode"))) 
                                      (168 (dup)) 
                                      (169 (aconst_null)) 
                                      (170 (aload_0)) 
                                      (171 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (174 (aload_0)) 
                                      (175 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (178 (iconst_2)) 
                                      (179 (iload 7)) 
                                      (181 (imul)) 
                                      (182 (aconst_null)) 
                                      (183 (iconst_2)) 
                                      (184 (iload 7)) 
                                      (186 (imul)) 
                                      (187 (iconst_1)) 
                                      (188 (iadd)) 
                                      (189 (iload_1)) 
                                      (190 (iconst_5)) 
                                      (191 (iadd)) 
                                      (192 (aload 8)) 
                                      (194 (aload 9)) 
                                      (196 (iload_2)) 
                                      (197 (aload_3)) 
                                      (198 (aload 4)) 
                                      (200 (invokestatic (methodCP "access$300" "clojure.lang.PersistentHashMap" (int (class "java.lang.Object") (class "java.lang.Object") int (class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.PersistentHashMap$INode")))) 
                                      (203 (invokestatic (methodCP "access$400" "clojure.lang.PersistentHashMap" ((array (class "java.lang.Object")) int (class "java.lang.Object") int (class "java.lang.Object")) (array (class "java.lang.Object"))))) 
                                      (206 (invokespecial (methodCP "<init>" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int (array (class "java.lang.Object"))) void))) 
                                      (209 (areturn)) 
                                      (210 (aload_0)) ;;at TAG_0
                                      (211 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (214 (invokestatic (methodCP "bitCount" "java.lang.Integer" (int) int))) 
                                      (217 (istore 8)) 
                                      (219 (iload 8)) 
                                      (221 (bipush 16)) 
                                      (223 (if_icmplt 381)) ;;to TAG_5
                                      (226 (bipush 32)) 
                                      (228 (anewarray (class "clojure.lang.PersistentHashMap$INode"))) 
                                      (231 (astore 9)) 
                                      (233 (iload_2)) 
                                      (234 (iload_1)) 
                                      (235 (invokestatic (methodCP "mask" "clojure.lang.PersistentHashMap" (int int) int))) 
                                      (238 (istore 10)) 
                                      (240 (aload 9)) 
                                      (242 (iload 10)) 
                                      (244 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (class "clojure.lang.PersistentHashMap$BitmapIndexedNode")))) 
                                      (247 (iload_1)) 
                                      (248 (iconst_5)) 
                                      (249 (iadd)) 
                                      (250 (iload_2)) 
                                      (251 (aload_3)) 
                                      (252 (aload 4)) 
                                      (254 (aload 5)) 
                                      (256 (invokevirtual (methodCP "assoc" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (int int (class "java.lang.Object") (class "java.lang.Object") (class "clojure.lang.Box")) (class "clojure.lang.PersistentHashMap$INode")))) 
                                      (259 (aastore)) 
                                      (260 (iconst_0)) 
                                      (261 (istore 11)) 
                                      (263 (iconst_0)) 
                                      (264 (istore 12)) 
                                      (266 (iload 12)) ;;at TAG_10
                                      (268 (bipush 32)) 
                                      (270 (if_icmpge 366)) ;;to TAG_6
                                      (273 (aload_0)) 
                                      (274 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (277 (iload 12)) 
                                      (279 (iushr)) 
                                      (280 (iconst_1)) 
                                      (281 (iand)) 
                                      (282 (ifeq 360)) ;;to TAG_7
                                      (285 (aload_0)) 
                                      (286 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (289 (iload 11)) 
                                      (291 (aaload)) 
                                      (292 (ifnonnull 315)) ;;to TAG_8
                                      (295 (aload 9)) 
                                      (297 (iload 12)) 
                                      (299 (aload_0)) 
                                      (300 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (303 (iload 11)) 
                                      (305 (iconst_1)) 
                                      (306 (iadd)) 
                                      (307 (aaload)) 
                                      (308 (checkcast (class "clojure.lang.PersistentHashMap$INode"))) 
                                      (311 (aastore)) 
                                      (312 (goto 357)) ;;to TAG_9
                                      (315 (aload 9)) ;;at TAG_8
                                      (317 (iload 12)) 
                                      (319 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (class "clojure.lang.PersistentHashMap$BitmapIndexedNode")))) 
                                      (322 (iload_1)) 
                                      (323 (iconst_5)) 
                                      (324 (iadd)) 
                                      (325 (aload_0)) 
                                      (326 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (329 (iload 11)) 
                                      (331 (aaload)) 
                                      (332 (invokestatic (methodCP "hash" "clojure.lang.PersistentHashMap" ((class "java.lang.Object")) int))) 
                                      (335 (aload_0)) 
                                      (336 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (339 (iload 11)) 
                                      (341 (aaload)) 
                                      (342 (aload_0)) 
                                      (343 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (346 (iload 11)) 
                                      (348 (iconst_1)) 
                                      (349 (iadd)) 
                                      (350 (aaload)) 
                                      (351 (aload 5)) 
                                      (353 (invokevirtual (methodCP "assoc" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (int int (class "java.lang.Object") (class "java.lang.Object") (class "clojure.lang.Box")) (class "clojure.lang.PersistentHashMap$INode")))) 
                                      (356 (aastore)) 
                                      (357 (iinc 11 2)) ;;at TAG_9
                                      (360 (iinc 12 1)) ;;at TAG_7
                                      (363 (goto 266)) ;;to TAG_10
                                      (366 (new (class "clojure.lang.PersistentHashMap$ArrayNode"))) ;;at TAG_6
                                      (369 (dup)) 
                                      (370 (aconst_null)) 
                                      (371 (iload 8)) 
                                      (373 (iconst_1)) 
                                      (374 (iadd)) 
                                      (375 (aload 9)) 
                                      (377 (invokespecial (methodCP "<init>" "clojure.lang.PersistentHashMap$ArrayNode" ((class "java.util.concurrent.atomic.AtomicReference") int (array (class "clojure.lang.PersistentHashMap$INode"))) void))) 
                                      (380 (areturn)) 
                                      (381 (iconst_2)) ;;at TAG_5
                                      (382 (iload 8)) 
                                      (384 (iconst_1)) 
                                      (385 (iadd)) 
                                      (386 (imul)) 
                                      (387 (anewarray (class "java.lang.Object"))) 
                                      (390 (astore 9)) 
                                      (392 (aload_0)) 
                                      (393 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (396 (iconst_0)) 
                                      (397 (aload 9)) 
                                      (399 (iconst_0)) 
                                      (400 (iconst_2)) 
                                      (401 (iload 7)) 
                                      (403 (imul)) 
                                      (404 (invokestatic (methodCP "arraycopy" "java.lang.System" ((class "java.lang.Object") int (class "java.lang.Object") int int) void))) 
                                      (407 (aload 9)) 
                                      (409 (iconst_2)) 
                                      (410 (iload 7)) 
                                      (412 (imul)) 
                                      (413 (aload_3)) 
                                      (414 (aastore)) 
                                      (415 (aload 5)) 
                                      (417 (aload 5)) 
                                      (419 (putfield (fieldCP "val" "clojure.lang.Box" (class "java.lang.Object")))) 
                                      (422 (aload 9)) 
                                      (424 (iconst_2)) 
                                      (425 (iload 7)) 
                                      (427 (imul)) 
                                      (428 (iconst_1)) 
                                      (429 (iadd)) 
                                      (430 (aload 4)) 
                                      (432 (aastore)) 
                                      (433 (aload_0)) 
                                      (434 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (437 (iconst_2)) 
                                      (438 (iload 7)) 
                                      (440 (imul)) 
                                      (441 (aload 9)) 
                                      (443 (iconst_2)) 
                                      (444 (iload 7)) 
                                      (446 (iconst_1)) 
                                      (447 (iadd)) 
                                      (448 (imul)) 
                                      (449 (iconst_2)) 
                                      (450 (iload 8)) 
                                      (452 (iload 7)) 
                                      (454 (isub)) 
                                      (455 (imul)) 
                                      (456 (invokestatic (methodCP "arraycopy" "java.lang.System" ((class "java.lang.Object") int (class "java.lang.Object") int int) void))) 
                                      (459 (new (class "clojure.lang.PersistentHashMap$BitmapIndexedNode"))) 
                                      (462 (dup)) 
                                      (463 (aconst_null)) 
                                      (464 (aload_0)) 
                                      (465 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (468 (iload 6)) 
                                      (470 (ior)) 
                                      (471 (aload 9)) 
                                      (473 (invokespecial (methodCP "<init>" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int (array (class "java.lang.Object"))) void))) 
                                      (476 (areturn)) 
                                      (endofcode 477))
                                   (Exceptions )
                                   (StackMap )))
                        (method "without"
                              (parameters int int (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.PersistentHashMap$INode"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 9) (code_length . 187)
                                   (parsedcode
                                      (0 (iload_2)) 
                                      (1 (iload_1)) 
                                      (2 (invokestatic (methodCP "access$100" "clojure.lang.PersistentHashMap" (int int) int))) 
                                      (5 (istore 4)) 
                                      (7 (aload_0)) 
                                      (8 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (11 (iload 4)) 
                                      (13 (iand)) 
                                      (14 (ifne 19)) ;;to TAG_0
                                      (17 (aload_0)) 
                                      (18 (areturn)) 
                                      (19 (aload_0)) ;;at TAG_0
                                      (20 (iload 4)) 
                                      (22 (invokevirtual (methodCP "index" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (int) int))) 
                                      (25 (istore 5)) 
                                      (27 (aload_0)) 
                                      (28 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (31 (iconst_2)) 
                                      (32 (iload 5)) 
                                      (34 (imul)) 
                                      (35 (aaload)) 
                                      (36 (astore 6)) 
                                      (38 (aload_0)) 
                                      (39 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (42 (iconst_2)) 
                                      (43 (iload 5)) 
                                      (45 (imul)) 
                                      (46 (iconst_1)) 
                                      (47 (iadd)) 
                                      (48 (aaload)) 
                                      (49 (astore 7)) 
                                      (51 (aload 6)) 
                                      (53 (ifnonnull 151)) ;;to TAG_1
                                      (56 (aload 7)) 
                                      (58 (checkcast (class "clojure.lang.PersistentHashMap$INode"))) 
                                      (61 (iload_1)) 
                                      (62 (iconst_5)) 
                                      (63 (iadd)) 
                                      (64 (iload_2)) 
                                      (65 (aload_3)) 
                                      (66 (invokeinterface (methodCP "without" "clojure.lang.PersistentHashMap$INode" (int int (class "java.lang.Object")) (class "clojure.lang.PersistentHashMap$INode")) 4)) 
                                      (71 (astore 8)) 
                                      (73 (aload 8)) 
                                      (75 (aload 7)) 
                                      (77 (if_acmpne 82))  ;;to TAG_2
                                      (80 (aload_0)) 
                                      (81 (areturn)) 
                                      (82 (aload 8)) ;;at TAG_2
                                      (84 (ifnull 115)) ;;to TAG_3
                                      (87 (new (class "clojure.lang.PersistentHashMap$BitmapIndexedNode"))) 
                                      (90 (dup)) 
                                      (91 (aconst_null)) 
                                      (92 (aload_0)) 
                                      (93 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (96 (aload_0)) 
                                      (97 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (100 (iconst_2)) 
                                      (101 (iload 5)) 
                                      (103 (imul)) 
                                      (104 (iconst_1)) 
                                      (105 (iadd)) 
                                      (106 (aload 8)) 
                                      (108 (invokestatic (methodCP "access$200" "clojure.lang.PersistentHashMap" ((array (class "java.lang.Object")) int (class "java.lang.Object")) (array (class "java.lang.Object"))))) 
                                      (111 (invokespecial (methodCP "<init>" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int (array (class "java.lang.Object"))) void))) 
                                      (114 (areturn)) 
                                      (115 (aload_0)) ;;at TAG_3
                                      (116 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (119 (iload 4)) 
                                      (121 (if_icmpne 126)) ;;to TAG_4
                                      (124 (aconst_null)) 
                                      (125 (areturn)) 
                                      (126 (new (class "clojure.lang.PersistentHashMap$BitmapIndexedNode"))) ;;at TAG_4
                                      (129 (dup)) 
                                      (130 (aconst_null)) 
                                      (131 (aload_0)) 
                                      (132 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (135 (iload 4)) 
                                      (137 (ixor)) 
                                      (138 (aload_0)) 
                                      (139 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (142 (iload 5)) 
                                      (144 (invokestatic (methodCP "access$500" "clojure.lang.PersistentHashMap" ((array (class "java.lang.Object")) int) (array (class "java.lang.Object"))))) 
                                      (147 (invokespecial (methodCP "<init>" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int (array (class "java.lang.Object"))) void))) 
                                      (150 (areturn)) 
                                      (151 (aload_3)) ;;at TAG_1
                                      (152 (aload 6)) 
                                      (154 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (157 (ifeq 185)) ;;to TAG_5
                                      (160 (new (class "clojure.lang.PersistentHashMap$BitmapIndexedNode"))) 
                                      (163 (dup)) 
                                      (164 (aconst_null)) 
                                      (165 (aload_0)) 
                                      (166 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (169 (iload 4)) 
                                      (171 (ixor)) 
                                      (172 (aload_0)) 
                                      (173 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (176 (iload 5)) 
                                      (178 (invokestatic (methodCP "access$500" "clojure.lang.PersistentHashMap" ((array (class "java.lang.Object")) int) (array (class "java.lang.Object"))))) 
                                      (181 (invokespecial (methodCP "<init>" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int (array (class "java.lang.Object"))) void))) 
                                      (184 (areturn)) 
                                      (185 (aload_0)) ;;at TAG_5
                                      (186 (areturn)) 
                                      (endofcode 187))
                                   (Exceptions )
                                   (StackMap )))
                        (method "find"
                              (parameters int int (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.IMapEntry"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 8) (code_length . 95)
                                   (parsedcode
                                      (0 (iload_2)) 
                                      (1 (iload_1)) 
                                      (2 (invokestatic (methodCP "access$100" "clojure.lang.PersistentHashMap" (int int) int))) 
                                      (5 (istore 4)) 
                                      (7 (aload_0)) 
                                      (8 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (11 (iload 4)) 
                                      (13 (iand)) 
                                      (14 (ifne 19)) ;;to TAG_0
                                      (17 (aconst_null)) 
                                      (18 (areturn)) 
                                      (19 (aload_0)) ;;at TAG_0
                                      (20 (iload 4)) 
                                      (22 (invokevirtual (methodCP "index" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (int) int))) 
                                      (25 (istore 5)) 
                                      (27 (aload_0)) 
                                      (28 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (31 (iconst_2)) 
                                      (32 (iload 5)) 
                                      (34 (imul)) 
                                      (35 (aaload)) 
                                      (36 (astore 6)) 
                                      (38 (aload_0)) 
                                      (39 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (42 (iconst_2)) 
                                      (43 (iload 5)) 
                                      (45 (imul)) 
                                      (46 (iconst_1)) 
                                      (47 (iadd)) 
                                      (48 (aaload)) 
                                      (49 (astore 7)) 
                                      (51 (aload 6)) 
                                      (53 (ifnonnull 72)) ;;to TAG_1
                                      (56 (aload 7)) 
                                      (58 (checkcast (class "clojure.lang.PersistentHashMap$INode"))) 
                                      (61 (iload_1)) 
                                      (62 (iconst_5)) 
                                      (63 (iadd)) 
                                      (64 (iload_2)) 
                                      (65 (aload_3)) 
                                      (66 (invokeinterface (methodCP "find" "clojure.lang.PersistentHashMap$INode" (int int (class "java.lang.Object")) (class "clojure.lang.IMapEntry")) 4)) 
                                      (71 (areturn)) 
                                      (72 (aload_3)) ;;at TAG_1
                                      (73 (aload 6)) 
                                      (75 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (78 (ifeq 93))  ;;to TAG_2
                                      (81 (new (class "clojure.lang.MapEntry"))) 
                                      (84 (dup)) 
                                      (85 (aload 6)) 
                                      (87 (aload 7)) 
                                      (89 (invokespecial (methodCP "<init>" "clojure.lang.MapEntry" ((class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (92 (areturn)) 
                                      (93 (aconst_null)) ;;at TAG_2
                                      (94 (areturn)) 
                                      (endofcode 95))
                                   (Exceptions )
                                   (StackMap )))
                        (method "find"
                              (parameters int int (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 9) (code_length . 90)
                                   (parsedcode
                                      (0 (iload_2)) 
                                      (1 (iload_1)) 
                                      (2 (invokestatic (methodCP "access$100" "clojure.lang.PersistentHashMap" (int int) int))) 
                                      (5 (istore 5)) 
                                      (7 (aload_0)) 
                                      (8 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (11 (iload 5)) 
                                      (13 (iand)) 
                                      (14 (ifne 20)) ;;to TAG_0
                                      (17 (aload 4)) 
                                      (19 (areturn)) 
                                      (20 (aload_0)) ;;at TAG_0
                                      (21 (iload 5)) 
                                      (23 (invokevirtual (methodCP "index" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (int) int))) 
                                      (26 (istore 6)) 
                                      (28 (aload_0)) 
                                      (29 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (32 (iconst_2)) 
                                      (33 (iload 6)) 
                                      (35 (imul)) 
                                      (36 (aaload)) 
                                      (37 (astore 7)) 
                                      (39 (aload_0)) 
                                      (40 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (43 (iconst_2)) 
                                      (44 (iload 6)) 
                                      (46 (imul)) 
                                      (47 (iconst_1)) 
                                      (48 (iadd)) 
                                      (49 (aaload)) 
                                      (50 (astore 8)) 
                                      (52 (aload 7)) 
                                      (54 (ifnonnull 75)) ;;to TAG_1
                                      (57 (aload 8)) 
                                      (59 (checkcast (class "clojure.lang.PersistentHashMap$INode"))) 
                                      (62 (iload_1)) 
                                      (63 (iconst_5)) 
                                      (64 (iadd)) 
                                      (65 (iload_2)) 
                                      (66 (aload_3)) 
                                      (67 (aload 4)) 
                                      (69 (invokeinterface (methodCP "find" "clojure.lang.PersistentHashMap$INode" (int int (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5)) 
                                      (74 (areturn)) 
                                      (75 (aload_3)) ;;at TAG_1
                                      (76 (aload 7)) 
                                      (78 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (81 (ifeq 87))  ;;to TAG_2
                                      (84 (aload 8)) 
                                      (86 (areturn)) 
                                      (87 (aload 4)) ;;at TAG_2
                                      (89 (areturn)) 
                                      (endofcode 90))
                                   (Exceptions )
                                   (StackMap )))
                        (method "nodeSeq"
                              (parameters )
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object")))))
                                      (4 (invokestatic
					(methodCP "create" "clojure.lang.PersistentHashMap$NodeSeq" ((array (class "java.lang.Object"))) (class "clojure.lang.ISeq"))))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "kvreduce"
                              (parameters (class "clojure.lang.IFn") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object")))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (invokestatic
					(methodCP "kvreduce" "clojure.lang.PersistentHashMap$NodeSeq" ((array (class "java.lang.Object")) (class "clojure.lang.IFn") (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "fold"
                              (parameters (class "clojure.lang.IFn") (class "clojure.lang.IFn") (class "clojure.lang.IFn") (class "clojure.lang.IFn") (class "clojure.lang.IFn"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 6) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object")))))
                                      (4 (aload_2))
                                      (5 (aload_1))
                                      (6 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1))
                                      (11 (invokestatic
					(methodCP "kvreduce" "clojure.lang.PersistentHashMap$NodeSeq" ((array (class "java.lang.Object")) (class "clojure.lang.IFn") (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (14 (areturn))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "ensureEditable"
                              (parameters (class "java.util.concurrent.atomic.AtomicReference"))
                              (returntype . (class "clojure.lang.PersistentHashMap$BitmapIndexedNode"))
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 6) (max_locals . 4) (code_length . 62)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "edit" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (class "java.util.concurrent.atomic.AtomicReference")))) 
                                      (4 (aload_1)) 
                                      (5 (if_acmpne 10)) ;;to TAG_0
                                      (8 (aload_0)) 
                                      (9 (areturn)) 
                                      (10 (aload_0)) ;;at TAG_0
                                      (11 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (14 (invokestatic (methodCP "bitCount" "java.lang.Integer" (int) int))) 
                                      (17 (istore_2)) 
                                      (18 (iload_2)) 
                                      (19 (iflt 30)) ;;to TAG_1
                                      (22 (iconst_2)) 
                                      (23 (iload_2)) 
                                      (24 (iconst_1)) 
                                      (25 (iadd)) 
                                      (26 (imul)) 
                                      (27 (goto 31))  ;;to TAG_2
                                      (30 (iconst_4)) ;;at TAG_1
                                      (31 (anewarray (class "java.lang.Object"))) ;;at TAG_2
                                      (34 (astore_3)) 
                                      (35 (aload_0)) 
                                      (36 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (39 (iconst_0)) 
                                      (40 (aload_3)) 
                                      (41 (iconst_0)) 
                                      (42 (iconst_2)) 
                                      (43 (iload_2)) 
                                      (44 (imul)) 
                                      (45 (invokestatic (methodCP "arraycopy" "java.lang.System" ((class "java.lang.Object") int (class "java.lang.Object") int int) void))) 
                                      (48 (new (class "clojure.lang.PersistentHashMap$BitmapIndexedNode"))) 
                                      (51 (dup)) 
                                      (52 (aload_1)) 
                                      (53 (aload_0)) 
                                      (54 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (57 (aload_3)) 
                                      (58 (invokespecial (methodCP "<init>" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int (array (class "java.lang.Object"))) void))) 
                                      (61 (areturn)) 
                                      (endofcode 62))
                                   (Exceptions )
                                   (StackMap )))
                        (method "editAndSet"
                              (parameters (class "java.util.concurrent.atomic.AtomicReference") int (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.PersistentHashMap$BitmapIndexedNode"))
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 3) (max_locals . 5) (code_length . 18)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokespecial
					(methodCP "ensureEditable" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference")) (class "clojure.lang.PersistentHashMap$BitmapIndexedNode"))))
                                      (5 (astore 4))
                                      (7 (aload 4))
                                      (9 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object")))))
                                      (12 (iload_2))
                                      (13 (aload_3))
                                      (14 (aastore))
                                      (15 (aload 4))
                                      (17 (areturn))
                                      (endofcode 18))
                                   (Exceptions )
                                   (StackMap )))
                        (method "editAndSet"
                              (parameters (class "java.util.concurrent.atomic.AtomicReference") int (class "java.lang.Object") int (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.PersistentHashMap$BitmapIndexedNode"))
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 3) (max_locals . 7) (code_length . 28)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokespecial
					(methodCP "ensureEditable" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference")) (class "clojure.lang.PersistentHashMap$BitmapIndexedNode"))))
                                      (5 (astore 6))
                                      (7 (aload 6))
                                      (9 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object")))))
                                      (12 (iload_2))
                                      (13 (aload_3))
                                      (14 (aastore))
                                      (15 (aload 6))
                                      (17 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object")))))
                                      (20 (iload 4))
                                      (22 (aload 5))
                                      (24 (aastore))
                                      (25 (aload 6))
                                      (27 (areturn))
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap )))
                        (method "editAndRemovePair"
                              (parameters (class "java.util.concurrent.atomic.AtomicReference") int int)
                              (returntype . (class "clojure.lang.PersistentHashMap$BitmapIndexedNode"))
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 8) (max_locals . 5) (code_length . 94)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (4 (iload_2)) 
                                      (5 (if_icmpne 10))  ;;to TAG_0
                                      (8 (aconst_null)) 
                                      (9 (areturn)) 
                                      (10 (aload_0)) ;;at TAG_0
                                      (11 (aload_1)) 
                                      (12 (invokespecial (methodCP "ensureEditable" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference")) (class "clojure.lang.PersistentHashMap$BitmapIndexedNode")))) 
                                      (15 (astore 4)) 
                                      (17 (aload 4)) 
                                      (19 (dup)) 
                                      (20 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (23 (iload_2)) 
                                      (24 (ixor)) 
                                      (25 (putfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (28 (aload 4)) 
                                      (30 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (33 (iconst_2)) 
                                      (34 (iload_3)) 
                                      (35 (iconst_1)) 
                                      (36 (iadd)) 
                                      (37 (imul)) 
                                      (38 (aload 4)) 
                                      (40 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (43 (iconst_2)) 
                                      (44 (iload_3)) 
                                      (45 (imul)) 
                                      (46 (aload 4)) 
                                      (48 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (51 (arraylength)) 
                                      (52 (iconst_2)) 
                                      (53 (iload_3)) 
                                      (54 (iconst_1)) 
                                      (55 (iadd)) 
                                      (56 (imul)) 
                                      (57 (isub)) 
                                      (58 (invokestatic (methodCP "arraycopy" "java.lang.System" ((class "java.lang.Object") int (class "java.lang.Object") int int) void))) 
                                      (61 (aload 4)) 
                                      (63 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (66 (aload 4)) 
                                      (68 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (71 (arraylength)) 
                                      (72 (iconst_2)) 
                                      (73 (isub)) 
                                      (74 (aconst_null)) 
                                      (75 (aastore)) 
                                      (76 (aload 4)) 
                                      (78 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (81 (aload 4)) 
                                      (83 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (86 (arraylength)) 
                                      (87 (iconst_1)) 
                                      (88 (isub)) 
                                      (89 (aconst_null)) 
                                      (90 (aastore)) 
                                      (91 (aload 4)) 
                                      (93 (areturn)) 
                                      (endofcode 94))
                                   (Exceptions )
                                   (StackMap )))
                        (method "assoc"
                              (parameters (class "java.util.concurrent.atomic.AtomicReference") int int (class "java.lang.Object") (class "java.lang.Object") (class "clojure.lang.Box"))
                              (returntype . (class "clojure.lang.PersistentHashMap$INode"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 12) (max_locals . 14) (code_length . 552)
                                   (parsedcode
                                      (0 (iload_3)) 
                                      (1 (iload_2)) 
                                      (2 (invokestatic (methodCP "access$100" "clojure.lang.PersistentHashMap" (int int) int))) 
                                      (5 (istore 7)) 
                                      (7 (aload_0)) 
                                      (8 (iload 7)) 
                                      (10 (invokevirtual (methodCP "index" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (int) int))) 
                                      (13 (istore 8)) 
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (19 (iload 7)) 
                                      (21 (iand)) 
                                      (22 (ifeq 173)) ;;to TAG_0
                                      (25 (aload_0)) 
                                      (26 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (29 (iconst_2)) 
                                      (30 (iload 8)) 
                                      (32 (imul)) 
                                      (33 (aaload)) 
                                      (34 (astore 9)) 
                                      (36 (aload_0)) 
                                      (37 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (40 (iconst_2)) 
                                      (41 (iload 8)) 
                                      (43 (imul)) 
                                      (44 (iconst_1)) 
                                      (45 (iadd)) 
                                      (46 (aaload)) 
                                      (47 (astore 10)) 
                                      (49 (aload 9)) 
                                      (51 (ifnonnull 100))  ;;to TAG_1
                                      (54 (aload 10)) 
                                      (56 (checkcast (class "clojure.lang.PersistentHashMap$INode"))) 
                                      (59 (aload_1)) 
                                      (60 (iload_2)) 
                                      (61 (iconst_5)) 
                                      (62 (iadd)) 
                                      (63 (iload_3)) 
                                      (64 (aload 4)) 
                                      (66 (aload 5)) 
                                      (68 (aload 6)) 
                                      (70 (invokeinterface (methodCP "assoc" "clojure.lang.PersistentHashMap$INode" ((class "java.util.concurrent.atomic.AtomicReference") int int (class "java.lang.Object") (class "java.lang.Object") (class "clojure.lang.Box")) (class "clojure.lang.PersistentHashMap$INode")) 7)) 
                                      (75 (astore 11)) 
                                      (77 (aload 11)) 
                                      (79 (aload 10)) 
                                      (81 (if_acmpne 86)) ;;to TAG_2
                                      (84 (aload_0)) 
                                      (85 (areturn)) 
                                      (86 (aload_0)) ;;at TAG_2
                                      (87 (aload_1)) 
                                      (88 (iconst_2)) 
                                      (89 (iload 8)) 
                                      (91 (imul)) 
                                      (92 (iconst_1)) 
                                      (93 (iadd)) 
                                      (94 (aload 11)) 
                                      (96 (invokespecial (methodCP "editAndSet" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int (class "java.lang.Object")) (class "clojure.lang.PersistentHashMap$BitmapIndexedNode")))) 
                                      (99 (areturn)) 
                                      (100 (aload 4)) ;;at TAG_1
                                      (102 (aload 9)) 
                                      (104 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (107 (ifeq 133)) ;;to TAG_3
                                      (110 (aload 5)) 
                                      (112 (aload 10)) 
                                      (114 (if_acmpne 119)) ;;to TAG_4
                                      (117 (aload_0)) 
                                      (118 (areturn)) 
                                      (119 (aload_0)) ;;at TAG_4
                                      (120 (aload_1)) 
                                      (121 (iconst_2)) 
                                      (122 (iload 8)) 
                                      (124 (imul)) 
                                      (125 (iconst_1)) 
                                      (126 (iadd)) 
                                      (127 (aload 5)) 
                                      (129 (invokespecial (methodCP "editAndSet" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int (class "java.lang.Object")) (class "clojure.lang.PersistentHashMap$BitmapIndexedNode")))) 
                                      (132 (areturn)) 
                                      (133 (aload 6)) ;;at TAG_3
                                      (135 (aload 6)) 
                                      (137 (putfield (fieldCP "val" "clojure.lang.Box" (class "java.lang.Object")))) 
                                      (140 (aload_0)) 
                                      (141 (aload_1)) 
                                      (142 (iconst_2)) 
                                      (143 (iload 8)) 
                                      (145 (imul)) 
                                      (146 (aconst_null)) 
                                      (147 (iconst_2)) 
                                      (148 (iload 8)) 
                                      (150 (imul)) 
                                      (151 (iconst_1)) 
                                      (152 (iadd)) 
                                      (153 (aload_1)) 
                                      (154 (iload_2)) 
                                      (155 (iconst_5)) 
                                      (156 (iadd)) 
                                      (157 (aload 9)) 
                                      (159 (aload 10)) 
                                      (161 (iload_3)) 
                                      (162 (aload 4)) 
                                      (164 (aload 5)) 
                                      (166 (invokestatic (methodCP "access$600" "clojure.lang.PersistentHashMap" ((class "java.util.concurrent.atomic.AtomicReference") int (class "java.lang.Object") (class "java.lang.Object") int (class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.PersistentHashMap$INode")))) 
                                      (169 (invokespecial (methodCP "editAndSet" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int (class "java.lang.Object") int (class "java.lang.Object")) (class "clojure.lang.PersistentHashMap$BitmapIndexedNode")))) 
                                      (172 (areturn)) 
                                      (173 (aload_0)) ;;at TAG_0
                                      (174 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (177 (invokestatic (methodCP "bitCount" "java.lang.Integer" (int) int))) 
                                      (180 (istore 9)) 
                                      (182 (iload 9)) 
                                      (184 (iconst_2)) 
                                      (185 (imul)) 
                                      (186 (aload_0)) 
                                      (187 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (190 (arraylength)) 
                                      (191 (if_icmpge 279)) ;;to TAG_5
                                      (194 (aload 6)) 
                                      (196 (aload 6)) 
                                      (198 (putfield (fieldCP "val" "clojure.lang.Box" (class "java.lang.Object")))) 
                                      (201 (aload_0)) 
                                      (202 (aload_1)) 
                                      (203 (invokespecial (methodCP "ensureEditable" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference")) (class "clojure.lang.PersistentHashMap$BitmapIndexedNode")))) 
                                      (206 (astore 10)) 
                                      (208 (aload 10)) 
                                      (210 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (213 (iconst_2)) 
                                      (214 (iload 8)) 
                                      (216 (imul)) 
                                      (217 (aload 10)) 
                                      (219 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (222 (iconst_2)) 
                                      (223 (iload 8)) 
                                      (225 (iconst_1)) 
                                      (226 (iadd)) 
                                      (227 (imul)) 
                                      (228 (iconst_2)) 
                                      (229 (iload 9)) 
                                      (231 (iload 8)) 
                                      (233 (isub)) 
                                      (234 (imul)) 
                                      (235 (invokestatic (methodCP "arraycopy" "java.lang.System" ((class "java.lang.Object") int (class "java.lang.Object") int int) void))) 
                                      (238 (aload 10)) 
                                      (240 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (243 (iconst_2)) 
                                      (244 (iload 8)) 
                                      (246 (imul)) 
                                      (247 (aload 4)) 
                                      (249 (aastore)) 
                                      (250 (aload 10)) 
                                      (252 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (255 (iconst_2)) 
                                      (256 (iload 8)) 
                                      (258 (imul)) 
                                      (259 (iconst_1)) 
                                      (260 (iadd)) 
                                      (261 (aload 5)) 
                                      (263 (aastore)) 
                                      (264 (aload 10)) 
                                      (266 (dup)) 
                                      (267 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (270 (iload 7)) 
                                      (272 (ior)) 
                                      (273 (putfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (276 (aload 10)) 
                                      (278 (areturn)) 
                                      (279 (iload 9)) ;;at TAG_5
                                      (281 (bipush 16)) 
                                      (283 (if_icmplt 444)) ;;to TAG_6
                                      (286 (bipush 32)) 
                                      (288 (anewarray (class "clojure.lang.PersistentHashMap$INode"))) 
                                      (291 (astore 10)) 
                                      (293 (iload_3)) 
                                      (294 (iload_2)) 
                                      (295 (invokestatic (methodCP "mask" "clojure.lang.PersistentHashMap" (int int) int))) 
                                      (298 (istore 11)) 
                                      (300 (aload 10)) 
                                      (302 (iload 11)) 
                                      (304 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (class "clojure.lang.PersistentHashMap$BitmapIndexedNode")))) 
                                      (307 (aload_1)) 
                                      (308 (iload_2)) 
                                      (309 (iconst_5)) 
                                      (310 (iadd)) 
                                      (311 (iload_3)) 
                                      (312 (aload 4)) 
                                      (314 (aload 5)) 
                                      (316 (aload 6)) 
                                      (318 (invokevirtual (methodCP "assoc" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int int (class "java.lang.Object") (class "java.lang.Object") (class "clojure.lang.Box")) (class "clojure.lang.PersistentHashMap$INode")))) 
                                      (321 (aastore)) 
                                      (322 (iconst_0)) 
                                      (323 (istore 12)) 
                                      (325 (iconst_0)) 
                                      (326 (istore 13)) 
                                      (328 (iload 13)) ;;at TAG_11
                                      (330 (bipush 32)) 
                                      (332 (if_icmpge 429)) ;;to TAG_7
                                      (335 (aload_0)) 
                                      (336 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (339 (iload 13)) 
                                      (341 (iushr)) 
                                      (342 (iconst_1)) 
                                      (343 (iand)) 
                                      (344 (ifeq 423)) ;;to TAG_8
                                      (347 (aload_0)) 
                                      (348 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (351 (iload 12)) 
                                      (353 (aaload)) 
                                      (354 (ifnonnull 377)) ;;to TAG_9
                                      (357 (aload 10)) 
                                      (359 (iload 13)) 
                                      (361 (aload_0)) 
                                      (362 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (365 (iload 12)) 
                                      (367 (iconst_1)) 
                                      (368 (iadd)) 
                                      (369 (aaload)) 
                                      (370 (checkcast (class "clojure.lang.PersistentHashMap$INode"))) 
                                      (373 (aastore)) 
                                      (374 (goto 420)) ;;to TAG_10
                                      (377 (aload 10)) ;;at TAG_9
                                      (379 (iload 13)) 
                                      (381 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (class "clojure.lang.PersistentHashMap$BitmapIndexedNode")))) 
                                      (384 (aload_1)) 
                                      (385 (iload_2)) 
                                      (386 (iconst_5)) 
                                      (387 (iadd)) 
                                      (388 (aload_0)) 
                                      (389 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (392 (iload 12)) 
                                      (394 (aaload)) 
                                      (395 (invokestatic (methodCP "hash" "clojure.lang.PersistentHashMap" ((class "java.lang.Object")) int))) 
                                      (398 (aload_0)) 
                                      (399 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (402 (iload 12)) 
                                      (404 (aaload)) 
                                      (405 (aload_0)) 
                                      (406 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (409 (iload 12)) 
                                      (411 (iconst_1)) 
                                      (412 (iadd)) 
                                      (413 (aaload)) 
                                      (414 (aload 6)) 
                                      (416 (invokevirtual (methodCP "assoc" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int int (class "java.lang.Object") (class "java.lang.Object") (class "clojure.lang.Box")) (class "clojure.lang.PersistentHashMap$INode")))) 
                                      (419 (aastore)) 
                                      (420 (iinc 12 2)) ;;at TAG_10
                                      (423 (iinc 13 1)) ;;at TAG_8
                                      (426 (goto 328)) ;;to TAG_11
                                      (429 (new (class "clojure.lang.PersistentHashMap$ArrayNode"))) ;;at TAG_7
                                      (432 (dup)) 
                                      (433 (aload_1)) 
                                      (434 (iload 9)) 
                                      (436 (iconst_1)) 
                                      (437 (iadd)) 
                                      (438 (aload 10)) 
                                      (440 (invokespecial (methodCP "<init>" "clojure.lang.PersistentHashMap$ArrayNode" ((class "java.util.concurrent.atomic.AtomicReference") int (array (class "clojure.lang.PersistentHashMap$INode"))) void))) 
                                      (443 (areturn)) 
                                      (444 (iconst_2)) ;;at TAG_6
                                      (445 (iload 9)) 
                                      (447 (iconst_4)) 
                                      (448 (iadd)) 
                                      (449 (imul)) 
                                      (450 (anewarray (class "java.lang.Object"))) 
                                      (453 (astore 10)) 
                                      (455 (aload_0)) 
                                      (456 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (459 (iconst_0)) 
                                      (460 (aload 10)) 
                                      (462 (iconst_0)) 
                                      (463 (iconst_2)) 
                                      (464 (iload 8)) 
                                      (466 (imul)) 
                                      (467 (invokestatic (methodCP "arraycopy" "java.lang.System" ((class "java.lang.Object") int (class "java.lang.Object") int int) void))) 
                                      (470 (aload 10)) 
                                      (472 (iconst_2)) 
                                      (473 (iload 8)) 
                                      (475 (imul)) 
                                      (476 (aload 4)) 
                                      (478 (aastore)) 
                                      (479 (aload 6)) 
                                      (481 (aload 6)) 
                                      (483 (putfield (fieldCP "val" "clojure.lang.Box" (class "java.lang.Object")))) 
                                      (486 (aload 10)) 
                                      (488 (iconst_2)) 
                                      (489 (iload 8)) 
                                      (491 (imul)) 
                                      (492 (iconst_1)) 
                                      (493 (iadd)) 
                                      (494 (aload 5)) 
                                      (496 (aastore)) 
                                      (497 (aload_0)) 
                                      (498 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (501 (iconst_2)) 
                                      (502 (iload 8)) 
                                      (504 (imul)) 
                                      (505 (aload 10)) 
                                      (507 (iconst_2)) 
                                      (508 (iload 8)) 
                                      (510 (iconst_1)) 
                                      (511 (iadd)) 
                                      (512 (imul)) 
                                      (513 (iconst_2)) 
                                      (514 (iload 9)) 
                                      (516 (iload 8)) 
                                      (518 (isub)) 
                                      (519 (imul)) 
                                      (520 (invokestatic (methodCP "arraycopy" "java.lang.System" ((class "java.lang.Object") int (class "java.lang.Object") int int) void))) 
                                      (523 (aload_0)) 
                                      (524 (aload_1)) 
                                      (525 (invokespecial (methodCP "ensureEditable" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference")) (class "clojure.lang.PersistentHashMap$BitmapIndexedNode")))) 
                                      (528 (astore 11)) 
                                      (530 (aload 11)) 
                                      (532 (aload 10)) 
                                      (534 (putfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (537 (aload 11)) 
                                      (539 (dup)) 
                                      (540 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (543 (iload 7)) 
                                      (545 (ior)) 
                                      (546 (putfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (549 (aload 11)) 
                                      (551 (areturn)) 
                                      (endofcode 552))
                                   (Exceptions )
                                   (StackMap )))
                        (method "without"
                              (parameters (class "java.util.concurrent.atomic.AtomicReference") int int (class "java.lang.Object") (class "clojure.lang.Box"))
                              (returntype . (class "clojure.lang.PersistentHashMap$INode"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 11) (code_length . 155)
                                   (parsedcode
                                      (0 (iload_3)) 
                                      (1 (iload_2)) 
                                      (2 (invokestatic (methodCP "access$100" "clojure.lang.PersistentHashMap" (int int) int))) 
                                      (5 (istore 6)) 
                                      (7 (aload_0)) 
                                      (8 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (11 (iload 6)) 
                                      (13 (iand)) 
                                      (14 (ifne 19)) ;;to TAG_0
                                      (17 (aload_0)) 
                                      (18 (areturn)) 
                                      (19 (aload_0)) ;;at TAG_0
                                      (20 (iload 6)) 
                                      (22 (invokevirtual (methodCP "index" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (int) int))) 
                                      (25 (istore 7)) 
                                      (27 (aload_0)) 
                                      (28 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (31 (iconst_2)) 
                                      (32 (iload 7)) 
                                      (34 (imul)) 
                                      (35 (aaload)) 
                                      (36 (astore 8)) 
                                      (38 (aload_0)) 
                                      (39 (getfield (fieldCP "array" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (array (class "java.lang.Object"))))) 
                                      (42 (iconst_2)) 
                                      (43 (iload 7)) 
                                      (45 (imul)) 
                                      (46 (iconst_1)) 
                                      (47 (iadd)) 
                                      (48 (aaload)) 
                                      (49 (astore 9)) 
                                      (51 (aload 8)) 
                                      (53 (ifnonnull 126)) ;;to TAG_1
                                      (56 (aload 9)) 
                                      (58 (checkcast (class "clojure.lang.PersistentHashMap$INode"))) 
                                      (61 (aload_1)) 
                                      (62 (iload_2)) 
                                      (63 (iconst_5)) 
                                      (64 (iadd)) 
                                      (65 (iload_3)) 
                                      (66 (aload 4)) 
                                      (68 (aload 5)) 
                                      (70 (invokeinterface (methodCP "without" "clojure.lang.PersistentHashMap$INode" ((class "java.util.concurrent.atomic.AtomicReference") int int (class "java.lang.Object") (class "clojure.lang.Box")) (class "clojure.lang.PersistentHashMap$INode")) 6)) 
                                      (75 (astore 10)) 
                                      (77 (aload 10)) 
                                      (79 (aload 9)) 
                                      (81 (if_acmpne 86))  ;;to TAG_2
                                      (84 (aload_0)) 
                                      (85 (areturn)) 
                                      (86 (aload 10)) ;;at TAG_2
                                      (88 (ifnull 105)) ;;to TAG_3
                                      (91 (aload_0)) 
                                      (92 (aload_1)) 
                                      (93 (iconst_2)) 
                                      (94 (iload 7)) 
                                      (96 (imul)) 
                                      (97 (iconst_1)) 
                                      (98 (iadd)) 
                                      (99 (aload 10)) 
                                      (101 (invokespecial (methodCP "editAndSet" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int (class "java.lang.Object")) (class "clojure.lang.PersistentHashMap$BitmapIndexedNode")))) 
                                      (104 (areturn)) 
                                      (105 (aload_0)) ;;at TAG_3
                                      (106 (getfield (fieldCP "bitmap" "clojure.lang.PersistentHashMap$BitmapIndexedNode" int))) 
                                      (109 (iload 6)) 
                                      (111 (if_icmpne 116)) ;;to TAG_4
                                      (114 (aconst_null)) 
                                      (115 (areturn)) 
                                      (116 (aload_0)) ;;at TAG_4
                                      (117 (aload_1)) 
                                      (118 (iload 6)) 
                                      (120 (iload 7)) 
                                      (122 (invokespecial (methodCP "editAndRemovePair" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int int) (class "clojure.lang.PersistentHashMap$BitmapIndexedNode")))) 
                                      (125 (areturn)) 
                                      (126 (aload 4)) ;;at TAG_1
                                      (128 (aload 8)) 
                                      (130 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (133 (ifeq 153)) ;;to TAG_5
                                      (136 (aload 5)) 
                                      (138 (aload 5)) 
                                      (140 (putfield (fieldCP "val" "clojure.lang.Box" (class "java.lang.Object")))) 
                                      (143 (aload_0)) 
                                      (144 (aload_1)) 
                                      (145 (iload 6)) 
                                      (147 (iload 7)) 
                                      (149 (invokespecial (methodCP "editAndRemovePair" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int int) (class "clojure.lang.PersistentHashMap$BitmapIndexedNode")))) 
                                      (152 (areturn)) 
                                      (153 (aload_0)) ;;at TAG_5
                                      (154 (areturn)) 
                                      (endofcode 155))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 0) (code_length . 17)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.PersistentHashMap$BitmapIndexedNode")))
                                      (3 (dup))
                                      (4 (aconst_null))
                                      (5 (iconst_0))
                                      (6 (iconst_0))
                                      (7 (anewarray (class "java.lang.Object")))
                                      (10 (invokespecial
					(methodCP "<init>" "clojure.lang.PersistentHashMap$BitmapIndexedNode" ((class "java.util.concurrent.atomic.AtomicReference") int (array (class "java.lang.Object"))) void)))
                                      (13 (putstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashMap$BitmapIndexedNode" (class "clojure.lang.PersistentHashMap$BitmapIndexedNode"))))
                                      (16 (return))
                                      (endofcode 17))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.PersistentHashMap$INode")
            (accessflags  *class*  *final*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *PersistentHashMap$BitmapIndexedNode-class-table*
  (make-static-class-decls 
   *clojure.lang.PersistentHashMap$BitmapIndexedNode*))

(defconst *package-name-map* 
  ("clojure.lang.PersistentHashMap$BitmapIndexedNode" . "clojure.lang"))

