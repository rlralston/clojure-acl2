; DynamicClassLoader-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:51 CDT 2014.
;

(defconst *clojure.lang.DynamicClassLoader*
 (make-class-def
      '(class "clojure.lang.DynamicClassLoader"
            "java.net.URLClassLoader"
            (constant_pool)
            (fields
                        (field "constantVals" (class "java.util.HashMap") (accessflags  *class* ) -1)
                        (field "classCache" (class "java.util.concurrent.ConcurrentHashMap") (accessflags  *class*  *static* ) -1)
                        (field "EMPTY_URLS" (array (class "java.net.URL")) (accessflags  *class*  *final*  *static* ) -1)
                        (field "rq" (class "java.lang.ref.ReferenceQueue") (accessflags  *class*  *final*  *static* ) -1))
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 1) (code_length . 55)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getstatic (fieldCP "EMPTY_URLS" "clojure.lang.DynamicClassLoader" (array (class "java.net.URL"))))) 
                                      (4 (invokestatic (methodCP "currentThread" "java.lang.Thread" () (class "java.lang.Thread")))) 
                                      (7 (invokevirtual (methodCP "getContextClassLoader" "java.lang.Thread" () (class "java.lang.ClassLoader")))) 
                                      (10 (ifnull 25)) ;;to TAG_0
                                      (13 (invokestatic (methodCP "currentThread" "java.lang.Thread" () (class "java.lang.Thread")))) 
                                      (16 (invokevirtual (methodCP "getContextClassLoader" "java.lang.Thread" () (class "java.lang.ClassLoader")))) 
                                      (19 (invokestatic (methodCP "getSystemClassLoader" "java.lang.ClassLoader" () (class "java.lang.ClassLoader")))) 
                                      (22 (if_acmpne 34)) ;;to TAG_1
                                      (25 (ldc_w )) ;;at TAG_0
                                      (28 (invokevirtual (methodCP "getClassLoader" "java.lang.Class" () (class "java.lang.ClassLoader")))) 
                                      (31 (goto 40))  ;;to TAG_2
                                      (34 (invokestatic (methodCP "currentThread" "java.lang.Thread" () (class "java.lang.Thread")))) ;;at TAG_1
                                      (37 (invokevirtual (methodCP "getContextClassLoader" "java.lang.Thread" () (class "java.lang.ClassLoader")))) 
                                      (40 (invokespecial (methodCP "<init>" "java.net.URLClassLoader" ((array (class "java.net.URL")) (class "java.lang.ClassLoader")) void))) ;;at TAG_2
                                      (43 (aload_0)) 
                                      (44 (new (class "java.util.HashMap"))) 
                                      (47 (dup)) 
                                      (48 (invokespecial (methodCP "<init>" "java.util.HashMap" () void))) 
                                      (51 (putfield (fieldCP "constantVals" "clojure.lang.DynamicClassLoader" (class "java.util.HashMap")))) 
                                      (54 (return)) 
                                      (endofcode 55))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.ClassLoader"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 20)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getstatic (fieldCP "EMPTY_URLS" "clojure.lang.DynamicClassLoader" (array (class "java.net.URL")))))
                                      (4 (aload_1))
                                      (5 (invokespecial
					(methodCP "<init>" "java.net.URLClassLoader" ((array (class "java.net.URL")) (class "java.lang.ClassLoader")) void)))
                                      (8 (aload_0))
                                      (9 (new (class "java.util.HashMap")))
                                      (12 (dup))
                                      (13 (invokespecial
					(methodCP "<init>" "java.util.HashMap" () void)))
                                      (16 (putfield (fieldCP "constantVals" "clojure.lang.DynamicClassLoader" (class "java.util.HashMap"))))
                                      (19 (return))
                                      (endofcode 20))
                                   (Exceptions )
                                   (StackMap )))
                        (method "defineClass"
                              (parameters (class "java.lang.String") (array byte) (class "java.lang.Object"))
                              (returntype . (class "java.lang.Class"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 5) (code_length . 43)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "rq" "clojure.lang.DynamicClassLoader" (class "java.lang.ref.ReferenceQueue"))))
                                      (3 (getstatic (fieldCP "classCache" "clojure.lang.DynamicClassLoader" (class "java.util.concurrent.ConcurrentHashMap"))))
                                      (6 (invokestatic
					(methodCP "clearCache" "clojure.lang.Util" ((class "java.lang.ref.ReferenceQueue") (class "java.util.concurrent.ConcurrentHashMap")) void)))
                                      (9 (aload_0))
                                      (10 (aload_1))
                                      (11 (aload_2))
                                      (12 (iconst_0))
                                      (13 (aload_2))
                                      (14 (arraylength))
                                      (15 (invokevirtual
					(methodCP "defineClass" "clojure.lang.DynamicClassLoader" ((class "java.lang.String") (array byte) int int) (class "java.lang.Class"))))
                                      (18 (astore 4))
                                      (20 (getstatic (fieldCP "classCache" "clojure.lang.DynamicClassLoader" (class "java.util.concurrent.ConcurrentHashMap"))))
                                      (23 (aload_1))
                                      (24 (new (class "java.lang.ref.SoftReference")))
                                      (27 (dup))
                                      (28 (aload 4))
                                      (30 (getstatic (fieldCP "rq" "clojure.lang.DynamicClassLoader" (class "java.lang.ref.ReferenceQueue"))))
                                      (33 (invokespecial
					(methodCP "<init>" "java.lang.ref.SoftReference" ((class "java.lang.Object") (class "java.lang.ref.ReferenceQueue")) void)))
                                      (36 (invokevirtual
					(methodCP "put" "java.util.concurrent.ConcurrentHashMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (39 (pop))
                                      (40 (aload 4))
                                      (42 (areturn))
                                      (endofcode 43))
                                   (Exceptions )
                                   (StackMap )))
                        (method "findClass"
                              (parameters (class "java.lang.String"))
                              (returntype . (class "java.lang.Class"))
                              (accessflags  *class*  *protected* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 44)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "classCache" "clojure.lang.DynamicClassLoader" (class "java.util.concurrent.ConcurrentHashMap")))) 
                                      (3 (aload_1)) 
                                      (4 (invokevirtual (methodCP "get" "java.util.concurrent.ConcurrentHashMap" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (7 (checkcast (class "java.lang.ref.Reference"))) 
                                      (10 (astore_2)) 
                                      (11 (aload_2)) 
                                      (12 (ifnull 38))  ;;to TAG_0
                                      (15 (aload_2)) 
                                      (16 (invokevirtual (methodCP "get" "java.lang.ref.Reference" () (class "java.lang.Object")))) 
                                      (19 (checkcast (class "java.lang.Class"))) 
                                      (22 (astore_3)) 
                                      (23 (aload_3)) 
                                      (24 (ifnull 29)) ;;to TAG_1
                                      (27 (aload_3)) 
                                      (28 (areturn)) 
                                      (29 (getstatic (fieldCP "classCache" "clojure.lang.DynamicClassLoader" (class "java.util.concurrent.ConcurrentHashMap")))) ;;at TAG_1
                                      (32 (aload_1)) 
                                      (33 (aload_2)) 
                                      (34 (invokevirtual (methodCP "remove" "java.util.concurrent.ConcurrentHashMap" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (37 (pop)) 
                                      (38 (aload_0)) ;;at TAG_0
                                      (39 (aload_1)) 
                                      (40 (invokespecial (methodCP "findClass" "java.net.URLClassLoader" ((class "java.lang.String")) (class "java.lang.Class")))) 
                                      (43 (areturn)) 
                                      (endofcode 44))
                                   (Exceptions )
                                   (StackMap )))
                        (method "registerConstants"
                              (parameters int (array (class "java.lang.Object")))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 14)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "constantVals" "clojure.lang.DynamicClassLoader" (class "java.util.HashMap"))))
                                      (4 (iload_1))
                                      (5 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (8 (aload_2))
                                      (9 (invokevirtual
					(methodCP "put" "java.util.HashMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (12 (pop))
                                      (13 (return))
                                      (endofcode 14))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getConstants"
                              (parameters int)
                              (returntype . (array (class "java.lang.Object")))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "constantVals" "clojure.lang.DynamicClassLoader" (class "java.util.HashMap"))))
                                      (4 (iload_1))
                                      (5 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (8 (invokevirtual
					(methodCP "get" "java.util.HashMap" ((class "java.lang.Object")) (class "java.lang.Object"))))
                                      (11 (checkcast (array (class "java.lang.Object"))))
                                      (14 (areturn))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "addURL"
                              (parameters (class "java.net.URL"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokespecial
					(methodCP "addURL" "java.net.URLClassLoader" ((class "java.net.URL")) void)))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 28)
                                   (parsedcode
                                      (0 (new (class "java.util.concurrent.ConcurrentHashMap")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.util.concurrent.ConcurrentHashMap" () void)))
                                      (7 (putstatic (fieldCP "classCache" "clojure.lang.DynamicClassLoader" (class "java.util.concurrent.ConcurrentHashMap"))))
                                      (10 (iconst_0))
                                      (11 (anewarray (class "java.net.URL")))
                                      (14 (putstatic (fieldCP "EMPTY_URLS" "clojure.lang.DynamicClassLoader" (array (class "java.net.URL")))))
                                      (17 (new (class "java.lang.ref.ReferenceQueue")))
                                      (20 (dup))
                                      (21 (invokespecial
					(methodCP "<init>" "java.lang.ref.ReferenceQueue" () void)))
                                      (24 (putstatic (fieldCP "rq" "clojure.lang.DynamicClassLoader" (class "java.lang.ref.ReferenceQueue"))))
                                      (27 (return))
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *DynamicClassLoader-class-table*
  (make-static-class-decls 
   *clojure.lang.DynamicClassLoader*))

(defconst *package-name-map* 
  ("clojure.lang.DynamicClassLoader" . "clojure.lang"))

