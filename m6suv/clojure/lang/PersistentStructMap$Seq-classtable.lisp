; PersistentStructMap$Seq-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:52 CDT 2014.
;

(defconst *clojure.lang.PersistentStructMap$Seq*
 (make-class-def
      '(class "clojure.lang.PersistentStructMap$Seq"
            "clojure.lang.ASeq"
            (constant_pool)
            (fields
                        (field "i" int (accessflags  *class*  *final* ) -1)
                        (field "keys" (class "clojure.lang.ISeq") (accessflags  *class*  *final* ) -1)
                        (field "vals" (array (class "java.lang.Object")) (accessflags  *class*  *final* ) -1)
                        (field "ext" (class "clojure.lang.IPersistentMap") (accessflags  *class*  *final* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "clojure.lang.IPersistentMap") (class "clojure.lang.ISeq") (array (class "java.lang.Object")) int (class "clojure.lang.IPersistentMap"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 6) (code_length . 28)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokespecial
					(methodCP "<init>" "clojure.lang.ASeq" ((class "clojure.lang.IPersistentMap")) void)))
                                      (5 (aload_0))
                                      (6 (iload 4))
                                      (8 (putfield (fieldCP "i" "clojure.lang.PersistentStructMap$Seq" int)))
                                      (11 (aload_0))
                                      (12 (aload_2))
                                      (13 (putfield (fieldCP "keys" "clojure.lang.PersistentStructMap$Seq" (class "clojure.lang.ISeq"))))
                                      (16 (aload_0))
                                      (17 (aload_3))
                                      (18 (putfield (fieldCP "vals" "clojure.lang.PersistentStructMap$Seq" (array (class "java.lang.Object")))))
                                      (21 (aload_0))
                                      (22 (aload 5))
                                      (24 (putfield (fieldCP "ext" "clojure.lang.PersistentStructMap$Seq" (class "clojure.lang.IPersistentMap"))))
                                      (27 (return))
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.Obj"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 2) (code_length . 35)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (aload_0)) 
                                      (2 (getfield (fieldCP "_meta" "clojure.lang.PersistentStructMap$Seq" (class "clojure.lang.IPersistentMap")))) 
                                      (5 (if_acmpeq 33))  ;;to TAG_0
                                      (8 (new (class "clojure.lang.PersistentStructMap$Seq"))) 
                                      (11 (dup)) 
                                      (12 (aload_1)) 
                                      (13 (aload_0)) 
                                      (14 (getfield (fieldCP "keys" "clojure.lang.PersistentStructMap$Seq" (class "clojure.lang.ISeq")))) 
                                      (17 (aload_0)) 
                                      (18 (getfield (fieldCP "vals" "clojure.lang.PersistentStructMap$Seq" (array (class "java.lang.Object"))))) 
                                      (21 (aload_0)) 
                                      (22 (getfield (fieldCP "i" "clojure.lang.PersistentStructMap$Seq" int))) 
                                      (25 (aload_0)) 
                                      (26 (getfield (fieldCP "ext" "clojure.lang.PersistentStructMap$Seq" (class "clojure.lang.IPersistentMap")))) 
                                      (29 (invokespecial (methodCP "<init>" "clojure.lang.PersistentStructMap$Seq" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.ISeq") (array (class "java.lang.Object")) int (class "clojure.lang.IPersistentMap")) void))) 
                                      (32 (areturn)) 
                                      (33 (aload_0)) ;;at TAG_0
                                      (34 (areturn)) 
                                      (endofcode 35))
                                   (Exceptions )
                                   (StackMap )))
                        (method "first"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 1) (code_length . 26)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.MapEntry")))
                                      (3 (dup))
                                      (4 (aload_0))
                                      (5 (getfield (fieldCP "keys" "clojure.lang.PersistentStructMap$Seq" (class "clojure.lang.ISeq"))))
                                      (8 (invokeinterface
					(methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1))
                                      (13 (aload_0))
                                      (14 (getfield (fieldCP "vals" "clojure.lang.PersistentStructMap$Seq" (array (class "java.lang.Object")))))
                                      (17 (aload_0))
                                      (18 (getfield (fieldCP "i" "clojure.lang.PersistentStructMap$Seq" int)))
                                      (21 (aaload))
                                      (22 (invokespecial
					(methodCP "<init>" "clojure.lang.MapEntry" ((class "java.lang.Object") (class "java.lang.Object")) void)))
                                      (25 (areturn))
                                      (endofcode 26))
                                   (Exceptions )
                                   (StackMap )))
                        (method "next"
                              (parameters )
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 1) (code_length . 59)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "i" "clojure.lang.PersistentStructMap$Seq" int))) 
                                      (4 (iconst_1)) 
                                      (5 (iadd)) 
                                      (6 (aload_0)) 
                                      (7 (getfield (fieldCP "vals" "clojure.lang.PersistentStructMap$Seq" (array (class "java.lang.Object"))))) 
                                      (10 (arraylength)) 
                                      (11 (if_icmpge 49))  ;;to TAG_0
                                      (14 (new (class "clojure.lang.PersistentStructMap$Seq"))) 
                                      (17 (dup)) 
                                      (18 (aload_0)) 
                                      (19 (getfield (fieldCP "_meta" "clojure.lang.PersistentStructMap$Seq" (class "clojure.lang.IPersistentMap")))) 
                                      (22 (aload_0)) 
                                      (23 (getfield (fieldCP "keys" "clojure.lang.PersistentStructMap$Seq" (class "clojure.lang.ISeq")))) 
                                      (26 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (31 (aload_0)) 
                                      (32 (getfield (fieldCP "vals" "clojure.lang.PersistentStructMap$Seq" (array (class "java.lang.Object"))))) 
                                      (35 (aload_0)) 
                                      (36 (getfield (fieldCP "i" "clojure.lang.PersistentStructMap$Seq" int))) 
                                      (39 (iconst_1)) 
                                      (40 (iadd)) 
                                      (41 (aload_0)) 
                                      (42 (getfield (fieldCP "ext" "clojure.lang.PersistentStructMap$Seq" (class "clojure.lang.IPersistentMap")))) 
                                      (45 (invokespecial (methodCP "<init>" "clojure.lang.PersistentStructMap$Seq" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.ISeq") (array (class "java.lang.Object")) int (class "clojure.lang.IPersistentMap")) void))) 
                                      (48 (areturn)) 
                                      (49 (aload_0)) ;;at TAG_0
                                      (50 (getfield (fieldCP "ext" "clojure.lang.PersistentStructMap$Seq" (class "clojure.lang.IPersistentMap")))) 
                                      (53 (invokeinterface (methodCP "seq" "clojure.lang.IPersistentMap" () (class "clojure.lang.ISeq")) 1)) 
                                      (58 (areturn)) 
                                      (endofcode 59))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.IObj"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "withMeta" "clojure.lang.PersistentStructMap$Seq" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.Obj"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *PersistentStructMap$Seq-class-table*
  (make-static-class-decls 
   *clojure.lang.PersistentStructMap$Seq*))

(defconst *package-name-map* 
  ("clojure.lang.PersistentStructMap$Seq" . "clojure.lang"))

