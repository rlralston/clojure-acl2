; Compiler$NewInstanceExpr-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:50 CDT 2014.
;

(defconst *clojure.lang.Compiler$NewInstanceExpr*
 (make-class-def
      '(class "clojure.lang.Compiler$NewInstanceExpr"
            "clojure.lang.Compiler$ObjExpr"
            (constant_pool
                        (STRING  "__meta")
                        (STRING  "__extmap")
                        (STRING  "only interfaces are supported, had: ")
                        (STRING  "compile__stub/")
                        (STRING  "<init>")
                        (STRING  "compile__stub.")
                        (STRING  "clojure.lang.IPersistentVector getBasis()")
                        (STRING  "create")
                        (STRING  "(Lclojure/lang/IPersistentMap;)L")
                        (STRING  ";")
                        (STRING  "clojure/lang/Keyword")
                        (STRING  "intern")
                        (STRING  "(Ljava/lang/String;)Lclojure/lang/Keyword;")
                        (STRING  "clojure/lang/IPersistentMap")
                        (STRING  "valAt")
                        (STRING  "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;")
                        (STRING  "without")
                        (STRING  "(Ljava/lang/Object;)Lclojure/lang/IPersistentMap;")
                        (STRING  "Value")
                        (STRING  "()")
                        (STRING  "clojure/lang/RT")
                        (STRING  "seqOrElse")
                        (STRING  "(Ljava/lang/Object;)Ljava/lang/Object;"))
            (fields
                        (field "methods" (class "clojure.lang.IPersistentCollection") (accessflags  *class* ) -1)
                        (field "mmap" (class "java.util.Map") (accessflags  *class* ) -1)
                        (field "covariants" (class "java.util.Map") (accessflags  *class* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokespecial
					(methodCP "<init>" "clojure.lang.Compiler$ObjExpr" ((class "java.lang.Object")) void)))
                                      (5 (return))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "build"
                              (parameters (class "clojure.lang.IPersistentVector") (class "clojure.lang.IPersistentVector") (class "clojure.lang.Symbol") (class "java.lang.String") (class "clojure.lang.Symbol") (class "clojure.lang.Symbol") (class "clojure.lang.ISeq") (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.Compiler$ObjExpr"))
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 8) (max_locals . 22) (code_length . 925)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.Compiler$NewInstanceExpr"))) 
                                      (3 (dup)) 
                                      (4 (aconst_null)) 
                                      (5 (invokespecial (methodCP "<init>" "clojure.lang.Compiler$NewInstanceExpr" ((class "java.lang.Object")) void))) 
                                      (8 (astore 8)) 
                                      (10 (aload 8)) 
                                      (12 (aload 7)) 
                                      (14 (putfield (fieldCP "src" "clojure.lang.Compiler$NewInstanceExpr" (class "java.lang.Object")))) 
                                      (17 (aload 8)) 
                                      (19 (aload 4)) 
                                      (21 (invokevirtual (methodCP "toString" "clojure.lang.Symbol" () (class "java.lang.String")))) 
                                      (24 (putfield (fieldCP "name" "clojure.lang.Compiler$NewInstanceExpr" (class "java.lang.String")))) 
                                      (27 (aload 8)) 
                                      (29 (aload 4)) 
                                      (31 (invokestatic (methodCP "meta" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.IPersistentMap")))) 
                                      (34 (putfield (fieldCP "classMeta" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (37 (aload 8)) 
                                      (39 (aload 8)) 
                                      (41 (getfield (fieldCP "name" "clojure.lang.Compiler$NewInstanceExpr" (class "java.lang.String")))) 
                                      (44 (bipush 46)) 
                                      (46 (bipush 47)) 
                                      (48 (invokevirtual (methodCP "replace" "java.lang.String" (char char) (class "java.lang.String")))) 
                                      (51 (putfield (fieldCP "internalName" "clojure.lang.Compiler$NewInstanceExpr" (class "java.lang.String")))) 
                                      (54 (aload 8)) 
                                      (56 (aload 8)) 
                                      (58 (getfield (fieldCP "internalName" "clojure.lang.Compiler$NewInstanceExpr" (class "java.lang.String")))) 
                                      (61 (invokestatic (methodCP "getObjectType" "clojure.asm.Type" ((class "java.lang.String")) (class "clojure.asm.Type")))) 
                                      (64 (putfield (fieldCP "objtype" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.asm.Type")))) 
                                      (67 (aload_2)) 
                                      (68 (ifnull 80)) ;;to TAG_0
                                      (71 (aload 8)) 
                                      (73 (aload_2)) 
                                      (74 (getfield (fieldCP "name" "clojure.lang.Symbol" (class "java.lang.String")))) 
                                      (77 (putfield (fieldCP "thisName" "clojure.lang.Compiler$NewInstanceExpr" (class "java.lang.String")))) 
                                      (80 (aload_1)) ;;at TAG_0
                                      (81 (ifnull 295)) ;;to TAG_1
                                      (84 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashMap" (class "clojure.lang.PersistentHashMap")))) 
                                      (87 (astore 9)) 
                                      (89 (iconst_2)) 
                                      (90 (aload_1)) 
                                      (91 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (96 (imul)) 
                                      (97 (anewarray (class "java.lang.Object"))) 
                                      (100 (astore 10)) 
                                      (102 (iconst_0)) 
                                      (103 (istore 11)) 
                                      (105 (iload 11)) ;;at TAG_3
                                      (107 (aload_1)) 
                                      (108 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (113 (if_icmpge 198)) ;;to TAG_2
                                      (116 (aload_1)) 
                                      (117 (iload 11)) 
                                      (119 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (124 (checkcast (class "clojure.lang.Symbol"))) 
                                      (127 (astore 12)) 
                                      (129 (new (class "clojure.lang.Compiler$LocalBinding"))) 
                                      (132 (dup)) 
                                      (133 (iconst_m1)) 
                                      (134 (aload 12)) 
                                      (136 (aconst_null)) 
                                      (137 (new (class "clojure.lang.Compiler$MethodParamExpr"))) 
                                      (140 (dup)) 
                                      (141 (aload 12)) 
                                      (143 (invokestatic (methodCP "access$500" "clojure.lang.Compiler" ((class "java.lang.Object")) (class "clojure.lang.Symbol")))) 
                                      (146 (invokestatic (methodCP "tagClass" "clojure.lang.Compiler" ((class "java.lang.Object")) (class "java.lang.Class")))) 
                                      (149 (invokespecial (methodCP "<init>" "clojure.lang.Compiler$MethodParamExpr" ((class "java.lang.Class")) void))) 
                                      (152 (iconst_0)) 
                                      (153 (aconst_null)) 
                                      (154 (invokespecial (methodCP "<init>" "clojure.lang.Compiler$LocalBinding" (int (class "clojure.lang.Symbol") (class "clojure.lang.Symbol") (class "clojure.lang.Compiler$Expr") boolean (class "clojure.lang.Compiler$PathNode")) void))) 
                                      (157 (astore 13)) 
                                      (159 (aload 9)) 
                                      (161 (aload 12)) 
                                      (163 (aload 13)) 
                                      (165 (invokeinterface (methodCP "assoc" "clojure.lang.IPersistentMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.IPersistentMap")) 3)) 
                                      (170 (astore 9)) 
                                      (172 (aload 10)) 
                                      (174 (iload 11)) 
                                      (176 (iconst_2)) 
                                      (177 (imul)) 
                                      (178 (aload 13)) 
                                      (180 (aastore)) 
                                      (181 (aload 10)) 
                                      (183 (iload 11)) 
                                      (185 (iconst_2)) 
                                      (186 (imul)) 
                                      (187 (iconst_1)) 
                                      (188 (iadd)) 
                                      (189 (aload 13)) 
                                      (191 (aastore)) 
                                      (192 (iinc 11 1)) 
                                      (195 (goto 105)) ;;to TAG_3
                                      (198 (aload 8)) ;;at TAG_2
                                      (200 (new (class "clojure.lang.PersistentArrayMap"))) 
                                      (203 (dup)) 
                                      (204 (aload 10)) 
                                      (206 (invokespecial (methodCP "<init>" "clojure.lang.PersistentArrayMap" ((array (class "java.lang.Object"))) void))) 
                                      (209 (putfield (fieldCP "closes" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (212 (aload 8)) 
                                      (214 (aload 9)) 
                                      (216 (putfield (fieldCP "fields" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (219 (aload_1)) 
                                      (220 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (225 (iconst_1)) 
                                      (226 (isub)) 
                                      (227 (istore 11)) 
                                      (229 (iload 11)) ;;at TAG_5
                                      (231 (iflt 295)) ;;to TAG_1
                                      (234 (aload_1)) 
                                      (235 (iload 11)) 
                                      (237 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (242 (checkcast (class "clojure.lang.Symbol"))) 
                                      (245 (getfield (fieldCP "name" "clojure.lang.Symbol" (class "java.lang.String")))) 
                                      (248 (ldc 0)) ;;STRING:: "__meta"
                                      (250 (invokevirtual (methodCP "equals" "java.lang.String" ((class "java.lang.Object")) boolean))) 
                                      (253 (ifne 278)) ;;to TAG_4
                                      (256 (aload_1)) 
                                      (257 (iload 11)) 
                                      (259 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (264 (checkcast (class "clojure.lang.Symbol"))) 
                                      (267 (getfield (fieldCP "name" "clojure.lang.Symbol" (class "java.lang.String")))) 
                                      (270 (ldc 1)) ;;STRING:: "__extmap"
                                      (272 (invokevirtual (methodCP "equals" "java.lang.String" ((class "java.lang.Object")) boolean))) 
                                      (275 (ifeq 295)) ;;to TAG_1
                                      (278 (aload 8)) ;;at TAG_4
                                      (280 (dup)) 
                                      (281 (getfield (fieldCP "altCtorDrops" "clojure.lang.Compiler$NewInstanceExpr" int))) 
                                      (284 (iconst_1)) 
                                      (285 (iadd)) 
                                      (286 (putfield (fieldCP "altCtorDrops" "clojure.lang.Compiler$NewInstanceExpr" int))) 
                                      (289 (iinc 11 -1)) 
                                      (292 (goto 229))  ;;to TAG_5
                                      (295 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) ;;at TAG_1
                                      (298 (astore 9)) 
                                      (300 (aload_0)) 
                                      (301 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (304 (astore 10)) 
                                      (306 (aload 10)) ;;at TAG_8
                                      (308 (ifnull 389)) ;;to TAG_6
                                      (311 (aload 10)) 
                                      (313 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (318 (checkcast (class "clojure.lang.Symbol"))) 
                                      (321 (invokestatic (methodCP "resolve" "clojure.lang.Compiler" ((class "clojure.lang.Symbol")) (class "java.lang.Object")))) 
                                      (324 (checkcast (class "java.lang.Class"))) 
                                      (327 (astore 11)) 
                                      (329 (aload 11)) 
                                      (331 (invokevirtual (methodCP "isInterface" "java.lang.Class" () boolean))) 
                                      (334 (ifne 368)) ;;to TAG_7
                                      (337 (new (class "java.lang.IllegalArgumentException"))) 
                                      (340 (dup)) 
                                      (341 (new (class "java.lang.StringBuilder"))) 
                                      (344 (dup)) 
                                      (345 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (348 (ldc 2)) ;;STRING:: "only interfaces are supported, had: "
                                      (350 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (353 (aload 11)) 
                                      (355 (invokevirtual (methodCP "getName" "java.lang.Class" () (class "java.lang.String")))) 
                                      (358 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (361 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (364 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (367 (athrow)) 
                                      (368 (aload 9)) ;;at TAG_7
                                      (370 (aload 11)) 
                                      (372 (invokevirtual (methodCP "cons" "clojure.lang.PersistentVector" ((class "java.lang.Object")) (class "clojure.lang.PersistentVector")))) 
                                      (375 (astore 9)) 
                                      (377 (aload 10)) 
                                      (379 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (384 (astore 10)) 
                                      (386 (goto 306)) ;;to TAG_8
                                      (389 (ldc_w )) ;;at TAG_6
                                      (392 (astore 10)) 
                                      (394 (aload 10)) 
                                      (396 (aload 9)) 
                                      (398 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (401 (invokestatic (methodCP "gatherMethods" "clojure.lang.Compiler$NewInstanceExpr" ((class "java.lang.Class") (class "clojure.lang.ISeq")) (array (class "java.util.Map"))))) 
                                      (404 (astore 11)) 
                                      (406 (aload 11)) 
                                      (408 (iconst_0)) 
                                      (409 (aaload)) 
                                      (410 (astore 12)) 
                                      (412 (aload 11)) 
                                      (414 (iconst_1)) 
                                      (415 (aaload)) 
                                      (416 (astore 13)) 
                                      (418 (aload 8)) 
                                      (420 (aload 12)) 
                                      (422 (putfield (fieldCP "mmap" "clojure.lang.Compiler$NewInstanceExpr" (class "java.util.Map")))) 
                                      (425 (aload 8)) 
                                      (427 (aload 13)) 
                                      (429 (putfield (fieldCP "covariants" "clojure.lang.Compiler$NewInstanceExpr" (class "java.util.Map")))) 
                                      (432 (aload 9)) 
                                      (434 (invokestatic (methodCP "interfaceNames" "clojure.lang.Compiler$NewInstanceExpr" ((class "clojure.lang.IPersistentVector")) (array (class "java.lang.String"))))) 
                                      (437 (astore 14)) 
                                      (439 (aload 10)) 
                                      (441 (invokestatic (methodCP "slashname" "clojure.lang.Compiler$NewInstanceExpr" ((class "java.lang.Class")) (class "java.lang.String")))) 
                                      (444 (aload 8)) 
                                      (446 (aload 14)) 
                                      (448 (aload 7)) 
                                      (450 (invokestatic (methodCP "compileStub" "clojure.lang.Compiler$NewInstanceExpr" ((class "java.lang.String") (class "clojure.lang.Compiler$NewInstanceExpr") (array (class "java.lang.String")) (class "java.lang.Object")) (class "java.lang.Class")))) 
                                      (453 (astore 15)) 
                                      (455 (aconst_null)) 
                                      (456 (aload 15)) 
                                      (458 (invokevirtual (methodCP "getName" "java.lang.Class" () (class "java.lang.String")))) 
                                      (461 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (464 (astore 16)) 
                                      (466 (bipush 16)) ;;at TAG_16
                                      (468 (anewarray (class "java.lang.Object"))) 
                                      (471 (dup)) 
                                      (472 (iconst_0)) 
                                      (473 (getstatic (fieldCP "CONSTANTS" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (476 (aastore)) 
                                      (477 (dup)) 
                                      (478 (iconst_1)) 
                                      (479 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) 
                                      (482 (aastore)) 
                                      (483 (dup)) 
                                      (484 (iconst_2)) 
                                      (485 (getstatic (fieldCP "CONSTANT_IDS" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (488 (aastore)) 
                                      (489 (dup)) 
                                      (490 (iconst_3)) 
                                      (491 (new (class "java.util.IdentityHashMap"))) 
                                      (494 (dup)) 
                                      (495 (invokespecial (methodCP "<init>" "java.util.IdentityHashMap" () void))) 
                                      (498 (aastore)) 
                                      (499 (dup)) 
                                      (500 (iconst_4)) 
                                      (501 (getstatic (fieldCP "KEYWORDS" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (504 (aastore)) 
                                      (505 (dup)) 
                                      (506 (iconst_5)) 
                                      (507 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashMap" (class "clojure.lang.PersistentHashMap")))) 
                                      (510 (aastore)) 
                                      (511 (dup)) 
                                      (512 (bipush 6)) 
                                      (514 (getstatic (fieldCP "VARS" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (517 (aastore)) 
                                      (518 (dup)) 
                                      (519 (bipush 7)) 
                                      (521 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashMap" (class "clojure.lang.PersistentHashMap")))) 
                                      (524 (aastore)) 
                                      (525 (dup)) 
                                      (526 (bipush 8)) 
                                      (528 (getstatic (fieldCP "KEYWORD_CALLSITES" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (531 (aastore)) 
                                      (532 (dup)) 
                                      (533 (bipush 9)) 
                                      (535 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) 
                                      (538 (aastore)) 
                                      (539 (dup)) 
                                      (540 (bipush 10)) 
                                      (542 (getstatic (fieldCP "PROTOCOL_CALLSITES" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (545 (aastore)) 
                                      (546 (dup)) 
                                      (547 (bipush 11)) 
                                      (549 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) 
                                      (552 (aastore)) 
                                      (553 (dup)) 
                                      (554 (bipush 12)) 
                                      (556 (getstatic (fieldCP "VAR_CALLSITES" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (559 (aastore)) 
                                      (560 (dup)) 
                                      (561 (bipush 13)) 
                                      (563 (invokestatic (methodCP "emptyVarCallSites" "clojure.lang.Compiler" () (class "clojure.lang.IPersistentCollection")))) 
                                      (566 (aastore)) 
                                      (567 (dup)) 
                                      (568 (bipush 14)) 
                                      (570 (getstatic (fieldCP "NO_RECUR" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (573 (aastore)) 
                                      (574 (dup)) 
                                      (575 (bipush 15)) 
                                      (577 (aconst_null)) 
                                      (578 (aastore)) 
                                      (579 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (582 (invokestatic (methodCP "pushThreadBindings" "clojure.lang.Var" ((class "clojure.lang.Associative")) void))) 
                                      (585 (aload 8)) 
                                      (587 (invokevirtual (methodCP "isDeftype" "clojure.lang.Compiler$NewInstanceExpr" () boolean))) 
                                      (590 (ifeq 677)) ;;to TAG_9
                                      (593 (bipush 8)) 
                                      (595 (anewarray (class "java.lang.Object"))) 
                                      (598 (dup)) 
                                      (599 (iconst_0)) 
                                      (600 (getstatic (fieldCP "METHOD" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (603 (aastore)) 
                                      (604 (dup)) 
                                      (605 (iconst_1)) 
                                      (606 (aconst_null)) 
                                      (607 (aastore)) 
                                      (608 (dup)) 
                                      (609 (iconst_2)) 
                                      (610 (getstatic (fieldCP "LOCAL_ENV" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (613 (aastore)) 
                                      (614 (dup)) 
                                      (615 (iconst_3)) 
                                      (616 (aload 8)) 
                                      (618 (getfield (fieldCP "fields" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (621 (aastore)) 
                                      (622 (dup)) 
                                      (623 (iconst_4)) 
                                      (624 (getstatic (fieldCP "COMPILE_STUB_SYM" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (627 (aastore)) 
                                      (628 (dup)) 
                                      (629 (iconst_5)) 
                                      (630 (aconst_null)) 
                                      (631 (aload_3)) 
                                      (632 (invokestatic (methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol")))) 
                                      (635 (aastore)) 
                                      (636 (dup)) 
                                      (637 (bipush 6)) 
                                      (639 (getstatic (fieldCP "COMPILE_STUB_CLASS" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (642 (aastore)) 
                                      (643 (dup)) 
                                      (644 (bipush 7)) 
                                      (646 (aload 15)) 
                                      (648 (aastore)) 
                                      (649 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (652 (invokestatic (methodCP "pushThreadBindings" "clojure.lang.Var" ((class "clojure.lang.Associative")) void))) 
                                      (655 (aload 8)) 
                                      (657 (aload_1)) 
                                      (658 (iconst_0)) 
                                      (659 (aload_1)) 
                                      (660 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (665 (aload 8)) 
                                      (667 (getfield (fieldCP "altCtorDrops" "clojure.lang.Compiler$NewInstanceExpr" int))) 
                                      (670 (isub)) 
                                      (671 (invokestatic (methodCP "subvec" "clojure.lang.RT" ((class "clojure.lang.IPersistentVector") int int) (class "clojure.lang.IPersistentVector")))) 
                                      (674 (putfield (fieldCP "hintedFields" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (677 (aload 8)) ;;at TAG_9
                                      (679 (getstatic (fieldCP "LINE" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (682 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (685 (checkcast (class "java.lang.Integer"))) 
                                      (688 (invokevirtual (methodCP "intValue" "java.lang.Integer" () int))) 
                                      (691 (putfield (fieldCP "line" "clojure.lang.Compiler$NewInstanceExpr" int))) 
                                      (694 (aload 8)) 
                                      (696 (getstatic (fieldCP "COLUMN" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (699 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (702 (checkcast (class "java.lang.Integer"))) 
                                      (705 (invokevirtual (methodCP "intValue" "java.lang.Integer" () int))) 
                                      (708 (putfield (fieldCP "column" "clojure.lang.Compiler$NewInstanceExpr" int))) 
                                      (711 (aconst_null)) 
                                      (712 (astore 17)) 
                                      (714 (aload 6)) 
                                      (716 (astore 18)) 
                                      (718 (aload 18)) ;;at TAG_11
                                      (720 (ifnull 761)) ;;to TAG_10
                                      (723 (aload 8)) 
                                      (725 (aload 18)) 
                                      (727 (invokestatic (methodCP "first" "clojure.lang.RT" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (730 (checkcast (class "clojure.lang.ISeq"))) 
                                      (733 (aload 16)) 
                                      (735 (aload 12)) 
                                      (737 (invokestatic (methodCP "parse" "clojure.lang.Compiler$NewInstanceMethod" ((class "clojure.lang.Compiler$ObjExpr") (class "clojure.lang.ISeq") (class "clojure.lang.Symbol") (class "java.util.Map")) (class "clojure.lang.Compiler$NewInstanceMethod")))) 
                                      (740 (astore 19)) 
                                      (742 (aload 17)) 
                                      (744 (aload 19)) 
                                      (746 (invokestatic (methodCP "conj" "clojure.lang.RT" ((class "clojure.lang.IPersistentCollection") (class "java.lang.Object")) (class "clojure.lang.IPersistentCollection")))) 
                                      (749 (astore 17)) 
                                      (751 (aload 18)) 
                                      (753 (invokestatic (methodCP "next" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (756 (astore 18)) 
                                      (758 (goto 718)) ;;to TAG_11
                                      (761 (aload 8)) ;;at TAG_10
                                      (763 (aload 17)) 
                                      (765 (putfield (fieldCP "methods" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentCollection")))) 
                                      (768 (aload 8)) 
                                      (770 (getstatic (fieldCP "KEYWORDS" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (773 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (776 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (779 (putfield (fieldCP "keywords" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (782 (aload 8)) 
                                      (784 (getstatic (fieldCP "VARS" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (787 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (790 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (793 (putfield (fieldCP "vars" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (796 (aload 8)) 
                                      (798 (getstatic (fieldCP "CONSTANTS" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (801 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (804 (checkcast (class "clojure.lang.PersistentVector"))) 
                                      (807 (putfield (fieldCP "constants" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.PersistentVector")))) 
                                      (810 (aload 8)) 
                                      (812 (invokestatic (methodCP "nextID" "clojure.lang.RT" () int))) 
                                      (815 (putfield (fieldCP "constantsID" "clojure.lang.Compiler$NewInstanceExpr" int))) 
                                      (818 (aload 8)) 
                                      (820 (getstatic (fieldCP "KEYWORD_CALLSITES" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (823 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (826 (checkcast (class "clojure.lang.IPersistentVector"))) 
                                      (829 (putfield (fieldCP "keywordCallsites" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (832 (aload 8)) 
                                      (834 (getstatic (fieldCP "PROTOCOL_CALLSITES" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (837 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (840 (checkcast (class "clojure.lang.IPersistentVector"))) 
                                      (843 (putfield (fieldCP "protocolCallsites" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (846 (aload 8)) 
                                      (848 (getstatic (fieldCP "VAR_CALLSITES" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (851 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (854 (checkcast (class "clojure.lang.IPersistentSet"))) 
                                      (857 (putfield (fieldCP "varCallsites" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentSet")))) 
                                      (860 (jsr 874)) ;;to TAG_12
                                      (863 (goto 892)) ;;to TAG_13;;at TAG_17
                                      (866 (astore 20)) ;;at TAG_18
                                      (868 (jsr 874)) ;;to TAG_12
                                      (871 (aload 20)) ;;at TAG_19
                                      (873 (athrow)) 
                                      (874 (astore 21)) ;;at TAG_12
                                      (876 (aload 8)) 
                                      (878 (invokevirtual (methodCP "isDeftype" "clojure.lang.Compiler$NewInstanceExpr" () boolean))) 
                                      (881 (ifeq 887)) ;;to TAG_14
                                      (884 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) 
                                      (887 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) ;;at TAG_14
                                      (890 (ret 21)) 
                                      (892 (aload 8)) ;;at TAG_13
                                      (894 (aload 10)) 
                                      (896 (invokestatic (methodCP "slashname" "clojure.lang.Compiler$NewInstanceExpr" ((class "java.lang.Class")) (class "java.lang.String")))) 
                                      (899 (aload 14)) 
                                      (901 (iconst_0)) 
                                      (902 (invokevirtual (methodCP "compile" "clojure.lang.Compiler$NewInstanceExpr" ((class "java.lang.String") (array (class "java.lang.String")) boolean) void))) 
                                      (905 (goto 916)) ;;to TAG_15;;at TAG_20
                                      (908 (astore 17)) ;;at TAG_21
                                      (910 (aload 17)) 
                                      (912 (invokestatic (methodCP "sneakyThrow" "clojure.lang.Util" ((class "java.lang.Throwable")) (class "java.lang.RuntimeException")))) 
                                      (915 (athrow)) 
                                      (916 (aload 8)) ;;at TAG_15
                                      (918 (invokevirtual (methodCP "getCompiledClass" "clojure.lang.Compiler$NewInstanceExpr" () (class "java.lang.Class")))) 
                                      (921 (pop)) 
                                      (922 (aload 8)) 
                                      (924 (areturn)) 
                                      (endofcode 925))
                                   (Exceptions 
                                     (handler 466 863  866 (class "java.lang.Throwable"))
                                     (handler 866 871  866 (class "java.lang.Throwable"))
                                     (handler 892 905  908 (class "java.io.IOException")))
                                   (StackMap )))
                        (method "compileStub"
                              (parameters (class "java.lang.String") (class "clojure.lang.Compiler$NewInstanceExpr") (array (class "java.lang.String")) (class "java.lang.Object"))
                              (returntype . (class "java.lang.Class"))
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 7) (max_locals . 12) (code_length . 483)
                                   (parsedcode
                                      (0 (new (class "clojure.asm.ClassWriter"))) 
                                      (3 (dup)) 
                                      (4 (iconst_1)) 
                                      (5 (invokespecial (methodCP "<init>" "clojure.asm.ClassWriter" (int) void))) 
                                      (8 (astore 4)) 
                                      (10 (aload 4)) 
                                      (12 (astore 5)) 
                                      (14 (aload 5)) 
                                      (16 (bipush 49)) 
                                      (18 (bipush 33)) 
                                      (20 (new (class "java.lang.StringBuilder"))) 
                                      (23 (dup)) 
                                      (24 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (27 (ldc 3)) ;;STRING:: "compile__stub/"
                                      (29 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (32 (aload_1)) 
                                      (33 (getfield (fieldCP "internalName" "clojure.lang.Compiler$NewInstanceExpr" (class "java.lang.String")))) 
                                      (36 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (39 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (42 (aconst_null)) 
                                      (43 (aload_0)) 
                                      (44 (aload_2)) 
                                      (45 (invokeinterface (methodCP "visit" "clojure.asm.ClassVisitor" (int int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (array (class "java.lang.String"))) void) 7)) 
                                      (50 (aload_1)) 
                                      (51 (getfield (fieldCP "closes" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (54 (invokestatic (methodCP "keys" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (57 (astore 6)) 
                                      (59 (aload 6)) ;;at TAG_6
                                      (61 (ifnull 183)) ;;to TAG_0
                                      (64 (aload 6)) 
                                      (66 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (71 (checkcast (class "clojure.lang.Compiler$LocalBinding"))) 
                                      (74 (astore 7)) 
                                      (76 (iconst_1)) 
                                      (77 (aload_1)) 
                                      (78 (aload 7)) 
                                      (80 (invokevirtual (methodCP "isVolatile" "clojure.lang.Compiler$NewInstanceExpr" ((class "clojure.lang.Compiler$LocalBinding")) boolean))) 
                                      (83 (ifeq 91))  ;;to TAG_1
                                      (86 (bipush 64)) 
                                      (88 (goto 106)) ;;to TAG_2
                                      (91 (aload_1)) ;;at TAG_1
                                      (92 (aload 7)) 
                                      (94 (invokevirtual (methodCP "isMutable" "clojure.lang.Compiler$NewInstanceExpr" ((class "clojure.lang.Compiler$LocalBinding")) boolean))) 
                                      (97 (ifeq 104)) ;;to TAG_3
                                      (100 (iconst_0)) 
                                      (101 (goto 106)) ;;to TAG_2
                                      (104 (bipush 16)) ;;at TAG_3
                                      (106 (iadd)) ;;at TAG_2
                                      (107 (istore 8)) 
                                      (109 (aload 7)) 
                                      (111 (invokevirtual (methodCP "getPrimitiveType" "clojure.lang.Compiler$LocalBinding" () (class "java.lang.Class")))) 
                                      (114 (ifnull 148)) ;;to TAG_4
                                      (117 (aload 5)) 
                                      (119 (iload 8)) 
                                      (121 (aload 7)) 
                                      (123 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (126 (aload 7)) 
                                      (128 (invokevirtual (methodCP "getPrimitiveType" "clojure.lang.Compiler$LocalBinding" () (class "java.lang.Class")))) 
                                      (131 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (134 (invokevirtual (methodCP "getDescriptor" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (137 (aconst_null)) 
                                      (138 (aconst_null)) 
                                      (139 (invokeinterface (methodCP "visitField" "clojure.asm.ClassVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (class "java.lang.Object")) (class "clojure.asm.FieldVisitor")) 6)) 
                                      (144 (pop)) 
                                      (145 (goto 171)) ;;to TAG_5
                                      (148 (aload 5)) ;;at TAG_4
                                      (150 (iload 8)) 
                                      (152 (aload 7)) 
                                      (154 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (157 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (160 (invokevirtual (methodCP "getDescriptor" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (163 (aconst_null)) 
                                      (164 (aconst_null)) 
                                      (165 (invokeinterface (methodCP "visitField" "clojure.asm.ClassVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (class "java.lang.Object")) (class "clojure.asm.FieldVisitor")) 6)) 
                                      (170 (pop)) 
                                      (171 (aload 6)) ;;at TAG_5
                                      (173 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (178 (astore 6)) 
                                      (180 (goto 59)) ;;to TAG_6
                                      (183 (new (class "clojure.asm.commons.Method"))) ;;at TAG_0
                                      (186 (dup)) 
                                      (187 (ldc 4)) ;;STRING:: "<init>"
                                      (189 (getstatic (fieldCP "VOID_TYPE" "clojure.asm.Type" (class "clojure.asm.Type")))) 
                                      (192 (aload_1)) 
                                      (193 (invokevirtual (methodCP "ctorTypes" "clojure.lang.Compiler$NewInstanceExpr" () (array (class "clojure.asm.Type"))))) 
                                      (196 (invokespecial (methodCP "<init>" "clojure.asm.commons.Method" ((class "java.lang.String") (class "clojure.asm.Type") (array (class "clojure.asm.Type"))) void))) 
                                      (199 (astore 6)) 
                                      (201 (new (class "clojure.asm.commons.GeneratorAdapter"))) 
                                      (204 (dup)) 
                                      (205 (iconst_1)) 
                                      (206 (aload 6)) 
                                      (208 (aconst_null)) 
                                      (209 (aconst_null)) 
                                      (210 (aload 5)) 
                                      (212 (invokespecial (methodCP "<init>" "clojure.asm.commons.GeneratorAdapter" (int (class "clojure.asm.commons.Method") (class "java.lang.String") (array (class "clojure.asm.Type")) (class "clojure.asm.ClassVisitor")) void))) 
                                      (215 (astore 7)) 
                                      (217 (aload 7)) 
                                      (219 (invokevirtual (methodCP "visitCode" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (222 (aload 7)) 
                                      (224 (invokevirtual (methodCP "loadThis" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (227 (aload 7)) 
                                      (229 (aload_0)) 
                                      (230 (invokestatic (methodCP "getObjectType" "clojure.asm.Type" ((class "java.lang.String")) (class "clojure.asm.Type")))) 
                                      (233 (getstatic (fieldCP "voidctor" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.asm.commons.Method")))) 
                                      (236 (invokevirtual (methodCP "invokeConstructor" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (239 (aload 7)) 
                                      (241 (invokevirtual (methodCP "returnValue" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (244 (aload 7)) 
                                      (246 (invokevirtual (methodCP "endMethod" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (249 (aload_1)) 
                                      (250 (getfield (fieldCP "altCtorDrops" "clojure.lang.Compiler$NewInstanceExpr" int))) 
                                      (253 (ifle 427)) ;;to TAG_7
                                      (256 (aload_1)) 
                                      (257 (invokevirtual (methodCP "ctorTypes" "clojure.lang.Compiler$NewInstanceExpr" () (array (class "clojure.asm.Type"))))) 
                                      (260 (astore 8)) 
                                      (262 (aload 8)) 
                                      (264 (arraylength)) 
                                      (265 (aload_1)) 
                                      (266 (getfield (fieldCP "altCtorDrops" "clojure.lang.Compiler$NewInstanceExpr" int))) 
                                      (269 (isub)) 
                                      (270 (anewarray (class "clojure.asm.Type"))) 
                                      (273 (astore 9)) 
                                      (275 (iconst_0)) 
                                      (276 (istore 10)) 
                                      (278 (iload 10)) ;;at TAG_9
                                      (280 (aload 9)) 
                                      (282 (arraylength)) 
                                      (283 (if_icmpge 302)) ;;to TAG_8
                                      (286 (aload 9)) 
                                      (288 (iload 10)) 
                                      (290 (aload 8)) 
                                      (292 (iload 10)) 
                                      (294 (aaload)) 
                                      (295 (aastore)) 
                                      (296 (iinc 10 1)) 
                                      (299 (goto 278)) ;;to TAG_9
                                      (302 (new (class "clojure.asm.commons.Method"))) ;;at TAG_8
                                      (305 (dup)) 
                                      (306 (ldc 4)) ;;STRING:: "<init>"
                                      (308 (getstatic (fieldCP "VOID_TYPE" "clojure.asm.Type" (class "clojure.asm.Type")))) 
                                      (311 (aload 9)) 
                                      (313 (invokespecial (methodCP "<init>" "clojure.asm.commons.Method" ((class "java.lang.String") (class "clojure.asm.Type") (array (class "clojure.asm.Type"))) void))) 
                                      (316 (astore 10)) 
                                      (318 (new (class "clojure.asm.commons.GeneratorAdapter"))) 
                                      (321 (dup)) 
                                      (322 (iconst_1)) 
                                      (323 (aload 10)) 
                                      (325 (aconst_null)) 
                                      (326 (aconst_null)) 
                                      (327 (aload 5)) 
                                      (329 (invokespecial (methodCP "<init>" "clojure.asm.commons.GeneratorAdapter" (int (class "clojure.asm.commons.Method") (class "java.lang.String") (array (class "clojure.asm.Type")) (class "clojure.asm.ClassVisitor")) void))) 
                                      (332 (astore 7)) 
                                      (334 (aload 7)) 
                                      (336 (invokevirtual (methodCP "visitCode" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (339 (aload 7)) 
                                      (341 (invokevirtual (methodCP "loadThis" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (344 (aload 7)) 
                                      (346 (invokevirtual (methodCP "loadArgs" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (349 (iconst_0)) 
                                      (350 (istore 11)) 
                                      (352 (iload 11)) ;;at TAG_11
                                      (354 (aload_1)) 
                                      (355 (getfield (fieldCP "altCtorDrops" "clojure.lang.Compiler$NewInstanceExpr" int))) 
                                      (358 (if_icmpge 373)) ;;to TAG_10
                                      (361 (aload 7)) 
                                      (363 (iconst_1)) 
                                      (364 (invokevirtual (methodCP "visitInsn" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (367 (iinc 11 1)) 
                                      (370 (goto 352)) ;;to TAG_11
                                      (373 (aload 7)) ;;at TAG_10
                                      (375 (new (class "java.lang.StringBuilder"))) 
                                      (378 (dup)) 
                                      (379 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (382 (ldc 3)) ;;STRING:: "compile__stub/"
                                      (384 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (387 (aload_1)) 
                                      (388 (getfield (fieldCP "internalName" "clojure.lang.Compiler$NewInstanceExpr" (class "java.lang.String")))) 
                                      (391 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (394 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (397 (invokestatic (methodCP "getObjectType" "clojure.asm.Type" ((class "java.lang.String")) (class "clojure.asm.Type")))) 
                                      (400 (new (class "clojure.asm.commons.Method"))) 
                                      (403 (dup)) 
                                      (404 (ldc 4)) ;;STRING:: "<init>"
                                      (406 (getstatic (fieldCP "VOID_TYPE" "clojure.asm.Type" (class "clojure.asm.Type")))) 
                                      (409 (aload 8)) 
                                      (411 (invokespecial (methodCP "<init>" "clojure.asm.commons.Method" ((class "java.lang.String") (class "clojure.asm.Type") (array (class "clojure.asm.Type"))) void))) 
                                      (414 (invokevirtual (methodCP "invokeConstructor" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (417 (aload 7)) 
                                      (419 (invokevirtual (methodCP "returnValue" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (422 (aload 7)) 
                                      (424 (invokevirtual (methodCP "endMethod" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (427 (aload 5)) ;;at TAG_7
                                      (429 (invokeinterface (methodCP "visitEnd" "clojure.asm.ClassVisitor" () void) 1)) 
                                      (434 (aload 4)) 
                                      (436 (invokevirtual (methodCP "toByteArray" "clojure.asm.ClassWriter" () (array byte)))) 
                                      (439 (astore 8)) 
                                      (441 (getstatic (fieldCP "LOADER" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (444 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (447 (checkcast (class "clojure.lang.DynamicClassLoader"))) 
                                      (450 (astore 9)) 
                                      (452 (aload 9)) 
                                      (454 (new (class "java.lang.StringBuilder"))) 
                                      (457 (dup)) 
                                      (458 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (461 (ldc 5)) ;;STRING:: "compile__stub."
                                      (463 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (466 (aload_1)) 
                                      (467 (getfield (fieldCP "name" "clojure.lang.Compiler$NewInstanceExpr" (class "java.lang.String")))) 
                                      (470 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (473 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (476 (aload 8)) 
                                      (478 (aload_3)) 
                                      (479 (invokevirtual (methodCP "defineClass" "clojure.lang.DynamicClassLoader" ((class "java.lang.String") (array byte) (class "java.lang.Object")) (class "java.lang.Class")))) 
                                      (482 (areturn)) 
                                      (endofcode 483))
                                   (Exceptions )
                                   (StackMap )))
                        (method "interfaceNames"
                              (parameters (class "clojure.lang.IPersistentVector"))
                              (returntype . (array (class "java.lang.String")))
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 51)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (6 (istore_1)) 
                                      (7 (iload_1)) 
                                      (8 (ifle 18)) ;;to TAG_0
                                      (11 (iload_1)) 
                                      (12 (anewarray (class "java.lang.String"))) 
                                      (15 (goto 19)) ;;to TAG_1
                                      (18 (aconst_null)) ;;at TAG_0
                                      (19 (astore_2)) ;;at TAG_1
                                      (20 (iconst_0)) 
                                      (21 (istore_3)) 
                                      (22 (iload_3)) ;;at TAG_3
                                      (23 (iload_1)) 
                                      (24 (if_icmpge 49))  ;;to TAG_2
                                      (27 (aload_2)) 
                                      (28 (iload_3)) 
                                      (29 (aload_0)) 
                                      (30 (iload_3)) 
                                      (31 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (36 (checkcast (class "java.lang.Class"))) 
                                      (39 (invokestatic (methodCP "slashname" "clojure.lang.Compiler$NewInstanceExpr" ((class "java.lang.Class")) (class "java.lang.String")))) 
                                      (42 (aastore)) 
                                      (43 (iinc 3 1)) 
                                      (46 (goto 22)) ;;to TAG_3
                                      (49 (aload_2)) ;;at TAG_2
                                      (50 (areturn)) 
                                      (endofcode 51))
                                   (Exceptions )
                                   (StackMap )))
                        (method "slashname"
                              (parameters (class "java.lang.Class"))
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 12)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "getName" "java.lang.Class" () (class "java.lang.String"))))
                                      (4 (bipush 46))
                                      (6 (bipush 47))
                                      (8 (invokevirtual
					(methodCP "replace" "java.lang.String" (char char) (class "java.lang.String"))))
                                      (11 (areturn))
                                      (endofcode 12))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emitStatics"
                              (parameters (class "clojure.asm.ClassVisitor"))
                              (returntype . void)
                              (accessflags  *class*  *protected* )
                              (code
                                   (max_stack . 7) (max_locals . 13) (code_length . 639)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "isDeftype" "clojure.lang.Compiler$NewInstanceExpr" () boolean))) 
                                      (4 (ifeq 638)) ;;to TAG_0
                                      (7 (ldc 6)) ;;STRING:: "clojure.lang.IPersistentVector getBasis()"
                                      (9 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (12 (astore_2)) 
                                      (13 (new (class "clojure.asm.commons.GeneratorAdapter"))) 
                                      (16 (dup)) 
                                      (17 (bipush 9)) 
                                      (19 (aload_2)) 
                                      (20 (aconst_null)) 
                                      (21 (aconst_null)) 
                                      (22 (aload_1)) 
                                      (23 (invokespecial (methodCP "<init>" "clojure.asm.commons.GeneratorAdapter" (int (class "clojure.asm.commons.Method") (class "java.lang.String") (array (class "clojure.asm.Type")) (class "clojure.asm.ClassVisitor")) void))) 
                                      (26 (astore_3)) 
                                      (27 (aload_0)) 
                                      (28 (aload_0)) 
                                      (29 (getfield (fieldCP "hintedFields" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (32 (aload_3)) 
                                      (33 (invokevirtual (methodCP "emitValue" "clojure.lang.Compiler$NewInstanceExpr" ((class "java.lang.Object") (class "clojure.asm.commons.GeneratorAdapter")) void))) 
                                      (36 (aload_3)) 
                                      (37 (invokevirtual (methodCP "returnValue" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (40 (aload_3)) 
                                      (41 (invokevirtual (methodCP "endMethod" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (44 (aload_0)) 
                                      (45 (invokevirtual (methodCP "isDeftype" "clojure.lang.Compiler$NewInstanceExpr" () boolean))) 
                                      (48 (ifeq 638)) ;;to TAG_0
                                      (51 (aload_0)) 
                                      (52 (getfield (fieldCP "fields" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (55 (invokeinterface (methodCP "count" "clojure.lang.IPersistentMap" () int) 1)) 
                                      (60 (aload_0)) 
                                      (61 (getfield (fieldCP "hintedFields" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (64 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (69 (if_icmple 638)) ;;to TAG_0
                                      (72 (aload_0)) 
                                      (73 (getfield (fieldCP "name" "clojure.lang.Compiler$NewInstanceExpr" (class "java.lang.String")))) 
                                      (76 (bipush 46)) 
                                      (78 (bipush 47)) 
                                      (80 (invokevirtual (methodCP "replace" "java.lang.String" (char char) (class "java.lang.String")))) 
                                      (83 (astore 4)) 
                                      (85 (iconst_1)) 
                                      (86 (istore 5)) 
                                      (88 (aload_0)) 
                                      (89 (getfield (fieldCP "hintedFields" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (92 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (97 (istore 6)) 
                                      (99 (aload_1)) 
                                      (100 (bipush 9)) 
                                      (102 (ldc 7)) ;;STRING:: "create"
                                      (104 (new (class "java.lang.StringBuilder"))) 
                                      (107 (dup)) 
                                      (108 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (111 (ldc 8)) ;;STRING:: "(Lclojure/lang/IPersistentMap;)L"
                                      (113 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (116 (aload 4)) 
                                      (118 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (121 (ldc 9)) ;;STRING:: ";"
                                      (123 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (126 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (129 (aconst_null)) 
                                      (130 (aconst_null)) 
                                      (131 (invokeinterface (methodCP "visitMethod" "clojure.asm.ClassVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (array (class "java.lang.String"))) (class "clojure.asm.MethodVisitor")) 6)) 
                                      (136 (astore 7)) 
                                      (138 (aload 7)) 
                                      (140 (invokeinterface (methodCP "visitCode" "clojure.asm.MethodVisitor" () void) 1)) 
                                      (145 (aload_0)) 
                                      (146 (getfield (fieldCP "hintedFields" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (149 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (152 (astore 8)) 
                                      (154 (aload 8)) ;;at TAG_3
                                      (156 (ifnull 364)) ;;to TAG_1
                                      (159 (aload 8)) 
                                      (161 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (166 (checkcast (class "clojure.lang.Symbol"))) 
                                      (169 (getfield (fieldCP "name" "clojure.lang.Symbol" (class "java.lang.String")))) 
                                      (172 (astore 9)) 
                                      (174 (aload 8)) 
                                      (176 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (181 (invokestatic (methodCP "access$500" "clojure.lang.Compiler" ((class "java.lang.Object")) (class "clojure.lang.Symbol")))) 
                                      (184 (invokestatic (methodCP "tagClass" "clojure.lang.Compiler" ((class "java.lang.Object")) (class "java.lang.Class")))) 
                                      (187 (astore 10)) 
                                      (189 (aload 7)) 
                                      (191 (bipush 25)) 
                                      (193 (iconst_0)) 
                                      (194 (invokeinterface (methodCP "visitVarInsn" "clojure.asm.MethodVisitor" (int int) void) 3)) 
                                      (199 (aload 7)) 
                                      (201 (aload 9)) 
                                      (203 (invokeinterface (methodCP "visitLdcInsn" "clojure.asm.MethodVisitor" ((class "java.lang.Object")) void) 2)) 
                                      (208 (aload 7)) 
                                      (210 (sipush 184)) 
                                      (213 (ldc 10)) ;;STRING:: "clojure/lang/Keyword"
                                      (215 (ldc 11)) ;;STRING:: "intern"
                                      (217 (ldc 12)) ;;STRING:: "(Ljava/lang/String;)Lclojure/lang/Keyword;"
                                      (219 (invokeinterface (methodCP "visitMethodInsn" "clojure.asm.MethodVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String")) void) 5)) 
                                      (224 (aload 7)) 
                                      (226 (iconst_1)) 
                                      (227 (invokeinterface (methodCP "visitInsn" "clojure.asm.MethodVisitor" (int) void) 2)) 
                                      (232 (aload 7)) 
                                      (234 (sipush 185)) 
                                      (237 (ldc 13)) ;;STRING:: "clojure/lang/IPersistentMap"
                                      (239 (ldc 14)) ;;STRING:: "valAt"
                                      (241 (ldc 15)) ;;STRING:: "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
                                      (243 (invokeinterface (methodCP "visitMethodInsn" "clojure.asm.MethodVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String")) void) 5)) 
                                      (248 (aload 10)) 
                                      (250 (invokevirtual (methodCP "isPrimitive" "java.lang.Class" () boolean))) 
                                      (253 (ifeq 277))  ;;to TAG_2
                                      (256 (aload 7)) 
                                      (258 (sipush 192)) 
                                      (261 (aload 10)) 
                                      (263 (invokestatic (methodCP "boxClass" "clojure.lang.Compiler" ((class "java.lang.Class")) (class "java.lang.Class")))) 
                                      (266 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (269 (invokevirtual (methodCP "getInternalName" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (272 (invokeinterface (methodCP "visitTypeInsn" "clojure.asm.MethodVisitor" (int (class "java.lang.String")) void) 3)) 
                                      (277 (aload 7)) ;;at TAG_2
                                      (279 (bipush 58)) 
                                      (281 (iload 5)) 
                                      (283 (invokeinterface (methodCP "visitVarInsn" "clojure.asm.MethodVisitor" (int int) void) 3)) 
                                      (288 (aload 7)) 
                                      (290 (bipush 25)) 
                                      (292 (iconst_0)) 
                                      (293 (invokeinterface (methodCP "visitVarInsn" "clojure.asm.MethodVisitor" (int int) void) 3)) 
                                      (298 (aload 7)) 
                                      (300 (aload 9)) 
                                      (302 (invokeinterface (methodCP "visitLdcInsn" "clojure.asm.MethodVisitor" ((class "java.lang.Object")) void) 2)) 
                                      (307 (aload 7)) 
                                      (309 (sipush 184)) 
                                      (312 (ldc 10)) ;;STRING:: "clojure/lang/Keyword"
                                      (314 (ldc 11)) ;;STRING:: "intern"
                                      (316 (ldc 12)) ;;STRING:: "(Ljava/lang/String;)Lclojure/lang/Keyword;"
                                      (318 (invokeinterface (methodCP "visitMethodInsn" "clojure.asm.MethodVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String")) void) 5)) 
                                      (323 (aload 7)) 
                                      (325 (sipush 185)) 
                                      (328 (ldc 13)) ;;STRING:: "clojure/lang/IPersistentMap"
                                      (330 (ldc 16)) ;;STRING:: "without"
                                      (332 (ldc 17)) ;;STRING:: "(Ljava/lang/Object;)Lclojure/lang/IPersistentMap;"
                                      (334 (invokeinterface (methodCP "visitMethodInsn" "clojure.asm.MethodVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String")) void) 5)) 
                                      (339 (aload 7)) 
                                      (341 (bipush 58)) 
                                      (343 (iconst_0)) 
                                      (344 (invokeinterface (methodCP "visitVarInsn" "clojure.asm.MethodVisitor" (int int) void) 3)) 
                                      (349 (aload 8)) 
                                      (351 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (356 (astore 8)) 
                                      (358 (iinc 5 1)) 
                                      (361 (goto 154)) ;;to TAG_3
                                      (364 (aload 7)) ;;at TAG_1
                                      (366 (sipush 187)) 
                                      (369 (aload 4)) 
                                      (371 (invokeinterface (methodCP "visitTypeInsn" "clojure.asm.MethodVisitor" (int (class "java.lang.String")) void) 3)) 
                                      (376 (aload 7)) 
                                      (378 (bipush 89)) 
                                      (380 (invokeinterface (methodCP "visitInsn" "clojure.asm.MethodVisitor" (int) void) 2)) 
                                      (385 (new (class "clojure.asm.commons.Method"))) 
                                      (388 (dup)) 
                                      (389 (ldc 4)) ;;STRING:: "<init>"
                                      (391 (getstatic (fieldCP "VOID_TYPE" "clojure.asm.Type" (class "clojure.asm.Type")))) 
                                      (394 (aload_0)) 
                                      (395 (invokevirtual (methodCP "ctorTypes" "clojure.lang.Compiler$NewInstanceExpr" () (array (class "clojure.asm.Type"))))) 
                                      (398 (invokespecial (methodCP "<init>" "clojure.asm.commons.Method" ((class "java.lang.String") (class "clojure.asm.Type") (array (class "clojure.asm.Type"))) void))) 
                                      (401 (astore 8)) 
                                      (403 (aload_0)) 
                                      (404 (getfield (fieldCP "hintedFields" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (407 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (412 (ifle 553)) ;;to TAG_4
                                      (415 (iconst_1)) 
                                      (416 (istore 5)) 
                                      (418 (iload 5)) ;;at TAG_6
                                      (420 (iload 6)) 
                                      (422 (if_icmpgt 553)) ;;to TAG_4
                                      (425 (aload 7)) 
                                      (427 (bipush 25)) 
                                      (429 (iload 5)) 
                                      (431 (invokeinterface (methodCP "visitVarInsn" "clojure.asm.MethodVisitor" (int int) void) 3)) 
                                      (436 (aload_0)) 
                                      (437 (getfield (fieldCP "hintedFields" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (440 (iload 5)) 
                                      (442 (iconst_1)) 
                                      (443 (isub)) 
                                      (444 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (449 (invokestatic (methodCP "access$500" "clojure.lang.Compiler" ((class "java.lang.Object")) (class "clojure.lang.Symbol")))) 
                                      (452 (invokestatic (methodCP "tagClass" "clojure.lang.Compiler" ((class "java.lang.Object")) (class "java.lang.Class")))) 
                                      (455 (astore 9)) 
                                      (457 (aload 9)) 
                                      (459 (invokevirtual (methodCP "isPrimitive" "java.lang.Class" () boolean))) 
                                      (462 (ifeq 547)) ;;to TAG_5
                                      (465 (aload 9)) 
                                      (467 (invokestatic (methodCP "boxClass" "clojure.lang.Compiler" ((class "java.lang.Class")) (class "java.lang.Class")))) 
                                      (470 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (473 (invokevirtual (methodCP "getInternalName" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (476 (astore 10)) 
                                      (478 (aload 9)) 
                                      (480 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (483 (invokevirtual (methodCP "getDescriptor" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (486 (astore 11)) 
                                      (488 (aload 9)) 
                                      (490 (invokevirtual (methodCP "getName" "java.lang.Class" () (class "java.lang.String")))) 
                                      (493 (astore 12)) 
                                      (495 (aload 7)) 
                                      (497 (sipush 182)) 
                                      (500 (aload 10)) 
                                      (502 (new (class "java.lang.StringBuilder"))) 
                                      (505 (dup)) 
                                      (506 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (509 (aload 12)) 
                                      (511 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (514 (ldc 18)) ;;STRING:: "Value"
                                      (516 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (519 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (522 (new (class "java.lang.StringBuilder"))) 
                                      (525 (dup)) 
                                      (526 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (529 (ldc 19)) ;;STRING:: "()"
                                      (531 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (534 (aload 11)) 
                                      (536 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (539 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (542 (invokeinterface (methodCP "visitMethodInsn" "clojure.asm.MethodVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String")) void) 5)) 
                                      (547 (iinc 5 1)) ;;at TAG_5
                                      (550 (goto 418)) ;;to TAG_6
                                      (553 (aload 7)) ;;at TAG_4
                                      (555 (iconst_1)) 
                                      (556 (invokeinterface (methodCP "visitInsn" "clojure.asm.MethodVisitor" (int) void) 2)) 
                                      (561 (aload 7)) 
                                      (563 (bipush 25)) 
                                      (565 (iconst_0)) 
                                      (566 (invokeinterface (methodCP "visitVarInsn" "clojure.asm.MethodVisitor" (int int) void) 3)) 
                                      (571 (aload 7)) 
                                      (573 (sipush 184)) 
                                      (576 (ldc 20)) ;;STRING:: "clojure/lang/RT"
                                      (578 (ldc 21)) ;;STRING:: "seqOrElse"
                                      (580 (ldc 22)) ;;STRING:: "(Ljava/lang/Object;)Ljava/lang/Object;"
                                      (582 (invokeinterface (methodCP "visitMethodInsn" "clojure.asm.MethodVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String")) void) 5)) 
                                      (587 (aload 7)) 
                                      (589 (sipush 183)) 
                                      (592 (aload 4)) 
                                      (594 (ldc 4)) ;;STRING:: "<init>"
                                      (596 (aload 8)) 
                                      (598 (invokevirtual (methodCP "getDescriptor" "clojure.asm.commons.Method" () (class "java.lang.String")))) 
                                      (601 (invokeinterface (methodCP "visitMethodInsn" "clojure.asm.MethodVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String")) void) 5)) 
                                      (606 (aload 7)) 
                                      (608 (sipush 176)) 
                                      (611 (invokeinterface (methodCP "visitInsn" "clojure.asm.MethodVisitor" (int) void) 2)) 
                                      (616 (aload 7)) 
                                      (618 (iconst_4)) 
                                      (619 (iload 6)) 
                                      (621 (iadd)) 
                                      (622 (iconst_1)) 
                                      (623 (iload 6)) 
                                      (625 (iadd)) 
                                      (626 (invokeinterface (methodCP "visitMaxs" "clojure.asm.MethodVisitor" (int int) void) 3)) 
                                      (631 (aload 7)) 
                                      (633 (invokeinterface (methodCP "visitEnd" "clojure.asm.MethodVisitor" () void) 1)) 
                                      (638 (return)) ;;at TAG_0
                                      (endofcode 639))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emitMethods"
                              (parameters (class "clojure.asm.ClassVisitor"))
                              (returntype . void)
                              (accessflags  *class*  *protected* )
                              (code
                                   (max_stack . 7) (max_locals . 12) (code_length . 285)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "methods" "clojure.lang.Compiler$NewInstanceExpr" (class "clojure.lang.IPersistentCollection")))) 
                                      (4 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (7 (astore_2)) 
                                      (8 (aload_2)) ;;at TAG_1
                                      (9 (ifnull 38)) ;;to TAG_0
                                      (12 (aload_2)) 
                                      (13 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (18 (checkcast (class "clojure.lang.Compiler$ObjMethod"))) 
                                      (21 (astore_3)) 
                                      (22 (aload_3)) 
                                      (23 (aload_0)) 
                                      (24 (aload_1)) 
                                      (25 (invokevirtual (methodCP "emit" "clojure.lang.Compiler$ObjMethod" ((class "clojure.lang.Compiler$ObjExpr") (class "clojure.asm.ClassVisitor")) void))) 
                                      (28 (aload_2)) 
                                      (29 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (34 (astore_2)) 
                                      (35 (goto 8)) ;;to TAG_1
                                      (38 (aload_0)) ;;at TAG_0
                                      (39 (getfield (fieldCP "covariants" "clojure.lang.Compiler$NewInstanceExpr" (class "java.util.Map")))) 
                                      (42 (invokeinterface (methodCP "entrySet" "java.util.Map" () (class "java.util.Set")) 1)) 
                                      (47 (invokeinterface (methodCP "iterator" "java.util.Set" () (class "java.util.Iterator")) 1)) 
                                      (52 (astore_2)) 
                                      (53 (aload_2)) ;;at TAG_7
                                      (54 (invokeinterface (methodCP "hasNext" "java.util.Iterator" () boolean) 1)) 
                                      (59 (ifeq 284))  ;;to TAG_2
                                      (62 (aload_2)) 
                                      (63 (invokeinterface (methodCP "next" "java.util.Iterator" () (class "java.lang.Object")) 1)) 
                                      (68 (checkcast (class "java.util.Map$Entry"))) 
                                      (71 (astore_3)) 
                                      (72 (aload_0)) 
                                      (73 (getfield (fieldCP "mmap" "clojure.lang.Compiler$NewInstanceExpr" (class "java.util.Map")))) 
                                      (76 (aload_3)) 
                                      (77 (invokeinterface (methodCP "getKey" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (82 (invokeinterface (methodCP "get" "java.util.Map" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (87 (checkcast (class "java.lang.reflect.Method"))) 
                                      (90 (astore 4)) 
                                      (92 (aload 4)) 
                                      (94 (invokevirtual (methodCP "getParameterTypes" "java.lang.reflect.Method" () (array (class "java.lang.Class"))))) 
                                      (97 (astore 5)) 
                                      (99 (aload 5)) 
                                      (101 (arraylength)) 
                                      (102 (anewarray (class "clojure.asm.Type"))) 
                                      (105 (astore 6)) 
                                      (107 (iconst_0)) 
                                      (108 (istore 7)) 
                                      (110 (iload 7)) ;;at TAG_4
                                      (112 (aload 5)) 
                                      (114 (arraylength)) 
                                      (115 (if_icmpge 137)) ;;to TAG_3
                                      (118 (aload 6)) 
                                      (120 (iload 7)) 
                                      (122 (aload 5)) 
                                      (124 (iload 7)) 
                                      (126 (aaload)) 
                                      (127 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (130 (aastore)) 
                                      (131 (iinc 7 1)) 
                                      (134 (goto 110)) ;;to TAG_4
                                      (137 (new (class "clojure.asm.commons.Method"))) ;;at TAG_3
                                      (140 (dup)) 
                                      (141 (aload 4)) 
                                      (143 (invokevirtual (methodCP "getName" "java.lang.reflect.Method" () (class "java.lang.String")))) 
                                      (146 (aload 4)) 
                                      (148 (invokevirtual (methodCP "getReturnType" "java.lang.reflect.Method" () (class "java.lang.Class")))) 
                                      (151 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (154 (aload 6)) 
                                      (156 (invokespecial (methodCP "<init>" "clojure.asm.commons.Method" ((class "java.lang.String") (class "clojure.asm.Type") (array (class "clojure.asm.Type"))) void))) 
                                      (159 (astore 7)) 
                                      (161 (aload_3)) 
                                      (162 (invokeinterface (methodCP "getValue" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (167 (checkcast (class "java.util.Set"))) 
                                      (170 (invokeinterface (methodCP "iterator" "java.util.Set" () (class "java.util.Iterator")) 1)) 
                                      (175 (astore 8)) 
                                      (177 (aload 8)) ;;at TAG_6
                                      (179 (invokeinterface (methodCP "hasNext" "java.util.Iterator" () boolean) 1)) 
                                      (184 (ifeq 281)) ;;to TAG_5
                                      (187 (aload 8)) 
                                      (189 (invokeinterface (methodCP "next" "java.util.Iterator" () (class "java.lang.Object")) 1)) 
                                      (194 (checkcast (class "java.lang.Class"))) 
                                      (197 (astore 9)) 
                                      (199 (new (class "clojure.asm.commons.Method"))) 
                                      (202 (dup)) 
                                      (203 (aload 4)) 
                                      (205 (invokevirtual (methodCP "getName" "java.lang.reflect.Method" () (class "java.lang.String")))) 
                                      (208 (aload 9)) 
                                      (210 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (213 (aload 6)) 
                                      (215 (invokespecial (methodCP "<init>" "clojure.asm.commons.Method" ((class "java.lang.String") (class "clojure.asm.Type") (array (class "clojure.asm.Type"))) void))) 
                                      (218 (astore 10)) 
                                      (220 (new (class "clojure.asm.commons.GeneratorAdapter"))) 
                                      (223 (dup)) 
                                      (224 (bipush 65)) 
                                      (226 (aload 10)) 
                                      (228 (aconst_null)) 
                                      (229 (invokestatic (methodCP "access$1500" "clojure.lang.Compiler" () (array (class "clojure.asm.Type"))))) 
                                      (232 (aload_1)) 
                                      (233 (invokespecial (methodCP "<init>" "clojure.asm.commons.GeneratorAdapter" (int (class "clojure.asm.commons.Method") (class "java.lang.String") (array (class "clojure.asm.Type")) (class "clojure.asm.ClassVisitor")) void))) 
                                      (236 (astore 11)) 
                                      (238 (aload 11)) 
                                      (240 (invokevirtual (methodCP "visitCode" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (243 (aload 11)) 
                                      (245 (invokevirtual (methodCP "loadThis" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (248 (aload 11)) 
                                      (250 (invokevirtual (methodCP "loadArgs" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (253 (aload 11)) 
                                      (255 (aload 4)) 
                                      (257 (invokevirtual (methodCP "getDeclaringClass" "java.lang.reflect.Method" () (class "java.lang.Class")))) 
                                      (260 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (263 (aload 7)) 
                                      (265 (invokevirtual (methodCP "invokeInterface" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (268 (aload 11)) 
                                      (270 (invokevirtual (methodCP "returnValue" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (273 (aload 11)) 
                                      (275 (invokevirtual (methodCP "endMethod" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (278 (goto 177)) ;;to TAG_6
                                      (281 (goto 53)) ;;to TAG_7;;at TAG_5
                                      (284 (return)) ;;at TAG_2
                                      (endofcode 285))
                                   (Exceptions )
                                   (StackMap )))
                        (method "msig"
                              (parameters (class "java.lang.reflect.Method"))
                              (returntype . (class "clojure.lang.IPersistentVector"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 1) (code_length . 32)
                                   (parsedcode
                                      (0 (iconst_3))
                                      (1 (anewarray (class "java.lang.Object")))
                                      (4 (dup))
                                      (5 (iconst_0))
                                      (6 (aload_0))
                                      (7 (invokevirtual
					(methodCP "getName" "java.lang.reflect.Method" () (class "java.lang.String"))))
                                      (10 (aastore))
                                      (11 (dup))
                                      (12 (iconst_1))
                                      (13 (aload_0))
                                      (14 (invokevirtual
					(methodCP "getParameterTypes" "java.lang.reflect.Method" () (array (class "java.lang.Class")))))
                                      (17 (invokestatic
					(methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (20 (aastore))
                                      (21 (dup))
                                      (22 (iconst_2))
                                      (23 (aload_0))
                                      (24 (invokevirtual
					(methodCP "getReturnType" "java.lang.reflect.Method" () (class "java.lang.Class"))))
                                      (27 (aastore))
                                      (28 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (31 (areturn))
                                      (endofcode 32))
                                   (Exceptions )
                                   (StackMap )))
                        (method "considerMethod"
                              (parameters (class "java.lang.reflect.Method") (class "java.util.Map"))
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 58)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokestatic (methodCP "msig" "clojure.lang.Compiler$NewInstanceExpr" ((class "java.lang.reflect.Method")) (class "clojure.lang.IPersistentVector")))) 
                                      (4 (astore_2)) 
                                      (5 (aload_0)) 
                                      (6 (invokevirtual (methodCP "getModifiers" "java.lang.reflect.Method" () int))) 
                                      (9 (istore_3)) 
                                      (10 (aload_1)) 
                                      (11 (aload_2)) 
                                      (12 (invokeinterface (methodCP "containsKey" "java.util.Map" ((class "java.lang.Object")) boolean) 2)) 
                                      (17 (ifne 57))  ;;to TAG_0
                                      (20 (iload_3)) 
                                      (21 (invokestatic (methodCP "isPublic" "java.lang.reflect.Modifier" (int) boolean))) 
                                      (24 (ifne 34)) ;;to TAG_1
                                      (27 (iload_3)) 
                                      (28 (invokestatic (methodCP "isProtected" "java.lang.reflect.Modifier" (int) boolean))) 
                                      (31 (ifeq 57))  ;;to TAG_0
                                      (34 (iload_3)) ;;at TAG_1
                                      (35 (invokestatic (methodCP "isStatic" "java.lang.reflect.Modifier" (int) boolean))) 
                                      (38 (ifne 57))  ;;to TAG_0
                                      (41 (iload_3)) 
                                      (42 (invokestatic (methodCP "isFinal" "java.lang.reflect.Modifier" (int) boolean))) 
                                      (45 (ifne 57))  ;;to TAG_0
                                      (48 (aload_1)) 
                                      (49 (aload_2)) 
                                      (50 (aload_0)) 
                                      (51 (invokeinterface (methodCP "put" "java.util.Map" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (56 (pop)) 
                                      (57 (return)) ;;at TAG_0
                                      (endofcode 58))
                                   (Exceptions )
                                   (StackMap )))
                        (method "gatherMethods"
                              (parameters (class "java.lang.Class") (class "java.util.Map"))
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 6) (code_length . 83)
                                   (parsedcode
                                      (0 (aload_0)) ;;at TAG_5
                                      (1 (ifnull 82)) ;;to TAG_0
                                      (4 (aload_0)) 
                                      (5 (invokevirtual (methodCP "getDeclaredMethods" "java.lang.Class" () (array (class "java.lang.reflect.Method"))))) 
                                      (8 (astore_2)) 
                                      (9 (aload_2)) 
                                      (10 (arraylength)) 
                                      (11 (istore_3)) 
                                      (12 (iconst_0)) 
                                      (13 (istore 4)) 
                                      (15 (iload 4)) ;;at TAG_2
                                      (17 (iload_3)) 
                                      (18 (if_icmpge 39)) ;;to TAG_1
                                      (21 (aload_2)) 
                                      (22 (iload 4)) 
                                      (24 (aaload)) 
                                      (25 (astore 5)) 
                                      (27 (aload 5)) 
                                      (29 (aload_1)) 
                                      (30 (invokestatic (methodCP "considerMethod" "clojure.lang.Compiler$NewInstanceExpr" ((class "java.lang.reflect.Method") (class "java.util.Map")) void))) 
                                      (33 (iinc 4 1)) 
                                      (36 (goto 15))  ;;to TAG_2
                                      (39 (aload_0)) ;;at TAG_1
                                      (40 (invokevirtual (methodCP "getMethods" "java.lang.Class" () (array (class "java.lang.reflect.Method"))))) 
                                      (43 (astore_2)) 
                                      (44 (aload_2)) 
                                      (45 (arraylength)) 
                                      (46 (istore_3)) 
                                      (47 (iconst_0)) 
                                      (48 (istore 4)) 
                                      (50 (iload 4)) ;;at TAG_4
                                      (52 (iload_3)) 
                                      (53 (if_icmpge 74)) ;;to TAG_3
                                      (56 (aload_2)) 
                                      (57 (iload 4)) 
                                      (59 (aaload)) 
                                      (60 (astore 5)) 
                                      (62 (aload 5)) 
                                      (64 (aload_1)) 
                                      (65 (invokestatic (methodCP "considerMethod" "clojure.lang.Compiler$NewInstanceExpr" ((class "java.lang.reflect.Method") (class "java.util.Map")) void))) 
                                      (68 (iinc 4 1)) 
                                      (71 (goto 50)) ;;to TAG_4
                                      (74 (aload_0)) ;;at TAG_3
                                      (75 (invokevirtual (methodCP "getSuperclass" "java.lang.Class" () (class "java.lang.Class")))) 
                                      (78 (astore_0)) 
                                      (79 (goto 0)) ;;to TAG_5
                                      (82 (return)) ;;at TAG_0
                                      (endofcode 83))
                                   (Exceptions )
                                   (StackMap )))
                        (method "gatherMethods"
                              (parameters (class "java.lang.Class") (class "clojure.lang.ISeq"))
                              (returntype . (array (class "java.util.Map")))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 12) (code_length . 283)
                                   (parsedcode
                                      (0 (new (class "java.util.HashMap"))) 
                                      (3 (dup)) 
                                      (4 (invokespecial (methodCP "<init>" "java.util.HashMap" () void))) 
                                      (7 (astore_2)) 
                                      (8 (aload_0)) 
                                      (9 (aload_2)) 
                                      (10 (invokestatic (methodCP "gatherMethods" "clojure.lang.Compiler$NewInstanceExpr" ((class "java.lang.Class") (class "java.util.Map")) void))) 
                                      (13 (aload_1)) ;;at TAG_1
                                      (14 (ifnull 40)) ;;to TAG_0
                                      (17 (aload_1)) 
                                      (18 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (23 (checkcast (class "java.lang.Class"))) 
                                      (26 (aload_2)) 
                                      (27 (invokestatic (methodCP "gatherMethods" "clojure.lang.Compiler$NewInstanceExpr" ((class "java.lang.Class") (class "java.util.Map")) void))) 
                                      (30 (aload_1)) 
                                      (31 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (36 (astore_1)) 
                                      (37 (goto 13))  ;;to TAG_1
                                      (40 (new (class "java.util.HashMap"))) ;;at TAG_0
                                      (43 (dup)) 
                                      (44 (invokespecial (methodCP "<init>" "java.util.HashMap" () void))) 
                                      (47 (astore_3)) 
                                      (48 (new (class "java.util.HashMap"))) 
                                      (51 (dup)) 
                                      (52 (invokespecial (methodCP "<init>" "java.util.HashMap" () void))) 
                                      (55 (astore 4)) 
                                      (57 (aload_2)) 
                                      (58 (invokeinterface (methodCP "entrySet" "java.util.Map" () (class "java.util.Set")) 1)) 
                                      (63 (invokeinterface (methodCP "iterator" "java.util.Set" () (class "java.util.Iterator")) 1)) 
                                      (68 (astore 5)) 
                                      (70 (aload 5)) ;;at TAG_8
                                      (72 (invokeinterface (methodCP "hasNext" "java.util.Iterator" () boolean) 1)) 
                                      (77 (ifeq 269)) ;;to TAG_2
                                      (80 (aload 5)) 
                                      (82 (invokeinterface (methodCP "next" "java.util.Iterator" () (class "java.lang.Object")) 1)) 
                                      (87 (astore 6)) 
                                      (89 (aload 6)) 
                                      (91 (checkcast (class "java.util.Map$Entry"))) 
                                      (94 (astore 7)) 
                                      (96 (aload 7)) 
                                      (98 (invokeinterface (methodCP "getKey" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (103 (checkcast (class "clojure.lang.IPersistentVector"))) 
                                      (106 (astore 8)) 
                                      (108 (aload 8)) 
                                      (110 (invokeinterface (methodCP "pop" "clojure.lang.IPersistentVector" () (class "clojure.lang.IPersistentStack")) 1)) 
                                      (115 (checkcast (class "clojure.lang.IPersistentVector"))) 
                                      (118 (astore 8)) 
                                      (120 (aload 7)) 
                                      (122 (invokeinterface (methodCP "getValue" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (127 (checkcast (class "java.lang.reflect.Method"))) 
                                      (130 (astore 9)) 
                                      (132 (aload_3)) 
                                      (133 (aload 8)) 
                                      (135 (invokeinterface (methodCP "containsKey" "java.util.Map" ((class "java.lang.Object")) boolean) 2)) 
                                      (140 (ifeq 255)) ;;to TAG_3
                                      (143 (aload 4)) 
                                      (145 (aload 8)) 
                                      (147 (invokeinterface (methodCP "get" "java.util.Map" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (152 (checkcast (class "java.util.Set"))) 
                                      (155 (astore 10)) 
                                      (157 (aload 10)) 
                                      (159 (ifnonnull 183)) ;;to TAG_4
                                      (162 (new (class "java.util.HashSet"))) 
                                      (165 (dup)) 
                                      (166 (invokespecial (methodCP "<init>" "java.util.HashSet" () void))) 
                                      (169 (astore 10)) 
                                      (171 (aload 4)) 
                                      (173 (aload 8)) 
                                      (175 (aload 10)) 
                                      (177 (invokeinterface (methodCP "put" "java.util.Map" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (182 (pop)) 
                                      (183 (aload_3)) ;;at TAG_4
                                      (184 (aload 8)) 
                                      (186 (invokeinterface (methodCP "get" "java.util.Map" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (191 (checkcast (class "java.lang.reflect.Method"))) 
                                      (194 (astore 11)) 
                                      (196 (aload 11)) 
                                      (198 (invokevirtual (methodCP "getReturnType" "java.lang.reflect.Method" () (class "java.lang.Class")))) 
                                      (201 (aload 9)) 
                                      (203 (invokevirtual (methodCP "getReturnType" "java.lang.reflect.Method" () (class "java.lang.Class")))) 
                                      (206 (invokevirtual (methodCP "isAssignableFrom" "java.lang.Class" ((class "java.lang.Class")) boolean))) 
                                      (209 (ifeq 239)) ;;to TAG_5
                                      (212 (aload 10)) 
                                      (214 (aload 11)) 
                                      (216 (invokevirtual (methodCP "getReturnType" "java.lang.reflect.Method" () (class "java.lang.Class")))) 
                                      (219 (invokeinterface (methodCP "add" "java.util.Set" ((class "java.lang.Object")) boolean) 2)) 
                                      (224 (pop)) 
                                      (225 (aload_3)) 
                                      (226 (aload 8)) 
                                      (228 (aload 9)) 
                                      (230 (invokeinterface (methodCP "put" "java.util.Map" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (235 (pop)) 
                                      (236 (goto 252)) ;;to TAG_6
                                      (239 (aload 10)) ;;at TAG_5
                                      (241 (aload 9)) 
                                      (243 (invokevirtual (methodCP "getReturnType" "java.lang.reflect.Method" () (class "java.lang.Class")))) 
                                      (246 (invokeinterface (methodCP "add" "java.util.Set" ((class "java.lang.Object")) boolean) 2)) 
                                      (251 (pop)) 
                                      (252 (goto 266)) ;;to TAG_7;;at TAG_6
                                      (255 (aload_3)) ;;at TAG_3
                                      (256 (aload 8)) 
                                      (258 (aload 9)) 
                                      (260 (invokeinterface (methodCP "put" "java.util.Map" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (265 (pop)) 
                                      (266 (goto 70)) ;;to TAG_8;;at TAG_7
                                      (269 (iconst_2)) ;;at TAG_2
                                      (270 (anewarray (class "java.util.Map"))) 
                                      (273 (dup)) 
                                      (274 (iconst_0)) 
                                      (275 (aload_3)) 
                                      (276 (aastore)) 
                                      (277 (dup)) 
                                      (278 (iconst_1)) 
                                      (279 (aload 4)) 
                                      (281 (aastore)) 
                                      (282 (areturn)) 
                                      (endofcode 283))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Compiler$NewInstanceExpr-class-table*
  (make-static-class-decls 
   *clojure.lang.Compiler$NewInstanceExpr*))

(defconst *package-name-map* 
  ("clojure.lang.Compiler$NewInstanceExpr" . "clojure.lang"))

