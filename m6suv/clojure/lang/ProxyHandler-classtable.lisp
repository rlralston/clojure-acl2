; ProxyHandler-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:52 CDT 2014.
;

(defconst *clojure.lang.ProxyHandler*
 (make-class-def
      '(class "clojure.lang.ProxyHandler"
            "java.lang.Object"
            (constant_pool
                        (STRING  "equals")
                        (STRING  "hashCode")
                        (STRING  "toString")
                        (STRING  "Proxy: "))
            (fields
                        (field "fns" (class "clojure.lang.IPersistentMap") (accessflags  *class*  *final* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "fns" "clojure.lang.ProxyHandler" (class "clojure.lang.IPersistentMap"))))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.reflect.Method") (array (class "java.lang.Object")))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 7) (code_length . 328)
                                   (parsedcode
                                      (0 (aload_2)) 
                                      (1 (invokevirtual (methodCP "getReturnType" "java.lang.reflect.Method" () (class "java.lang.Class")))) 
                                      (4 (astore 4)) 
                                      (6 (aload_0)) 
                                      (7 (getfield (fieldCP "fns" "clojure.lang.ProxyHandler" (class "clojure.lang.IPersistentMap")))) 
                                      (10 (aload_2)) 
                                      (11 (invokevirtual (methodCP "getName" "java.lang.reflect.Method" () (class "java.lang.String")))) 
                                      (14 (invokeinterface (methodCP "valAt" "clojure.lang.IPersistentMap" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (19 (checkcast (class "clojure.lang.IFn"))) 
                                      (22 (astore 5)) 
                                      (24 (aload 5)) 
                                      (26 (ifnonnull 130)) ;;to TAG_0
                                      (29 (aload 4)) 
                                      (31 (getstatic (fieldCP "TYPE" "java.lang.Void" (class "java.lang.Class")))) 
                                      (34 (if_acmpne 39)) ;;to TAG_1
                                      (37 (aconst_null)) 
                                      (38 (areturn)) 
                                      (39 (aload_2)) ;;at TAG_1
                                      (40 (invokevirtual (methodCP "getName" "java.lang.reflect.Method" () (class "java.lang.String")))) 
                                      (43 (ldc 0)) ;;STRING:: "equals"
                                      (45 (invokevirtual (methodCP "equals" "java.lang.String" ((class "java.lang.Object")) boolean))) 
                                      (48 (ifeq 67)) ;;to TAG_2
                                      (51 (aload_1)) 
                                      (52 (aload_3)) 
                                      (53 (iconst_0)) 
                                      (54 (aaload)) 
                                      (55 (if_acmpne 62)) ;;to TAG_3
                                      (58 (iconst_1)) 
                                      (59 (goto 63)) ;;to TAG_4
                                      (62 (iconst_0)) ;;at TAG_3
                                      (63 (invokestatic (methodCP "valueOf" "java.lang.Boolean" (boolean) (class "java.lang.Boolean")))) ;;at TAG_4
                                      (66 (areturn)) 
                                      (67 (aload_2)) ;;at TAG_2
                                      (68 (invokevirtual (methodCP "getName" "java.lang.reflect.Method" () (class "java.lang.String")))) 
                                      (71 (ldc 1)) ;;STRING:: "hashCode"
                                      (73 (invokevirtual (methodCP "equals" "java.lang.String" ((class "java.lang.Object")) boolean))) 
                                      (76 (ifeq 87)) ;;to TAG_5
                                      (79 (aload_1)) 
                                      (80 (invokestatic (methodCP "identityHashCode" "java.lang.System" ((class "java.lang.Object")) int))) 
                                      (83 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (86 (areturn)) 
                                      (87 (aload_2)) ;;at TAG_5
                                      (88 (invokevirtual (methodCP "getName" "java.lang.reflect.Method" () (class "java.lang.String")))) 
                                      (91 (ldc 2)) ;;STRING:: "toString"
                                      (93 (invokevirtual (methodCP "equals" "java.lang.String" ((class "java.lang.Object")) boolean))) 
                                      (96 (ifeq 122)) ;;to TAG_6
                                      (99 (new (class "java.lang.StringBuilder"))) 
                                      (102 (dup)) 
                                      (103 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (106 (ldc 3)) ;;STRING:: "Proxy: "
                                      (108 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (111 (aload_1)) 
                                      (112 (invokestatic (methodCP "identityHashCode" "java.lang.System" ((class "java.lang.Object")) int))) 
                                      (115 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder")))) 
                                      (118 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (121 (areturn)) 
                                      (122 (new (class "java.lang.UnsupportedOperationException"))) ;;at TAG_6
                                      (125 (dup)) 
                                      (126 (invokespecial (methodCP "<init>" "java.lang.UnsupportedOperationException" () void))) 
                                      (129 (athrow)) 
                                      (130 (aload 5)) ;;at TAG_0
                                      (132 (aload_3)) 
                                      (133 (invokestatic (methodCP "create" "clojure.lang.ArraySeq" ((array (class "java.lang.Object"))) (class "clojure.lang.ArraySeq")))) 
                                      (136 (invokeinterface (methodCP "applyTo" "clojure.lang.IFn" ((class "clojure.lang.ISeq")) (class "java.lang.Object")) 2)) 
                                      (141 (astore 6)) 
                                      (143 (aload 4)) 
                                      (145 (getstatic (fieldCP "TYPE" "java.lang.Void" (class "java.lang.Class")))) 
                                      (148 (if_acmpne 153)) ;;to TAG_7
                                      (151 (aconst_null)) 
                                      (152 (areturn)) 
                                      (153 (aload 4)) ;;at TAG_7
                                      (155 (invokevirtual (methodCP "isPrimitive" "java.lang.Class" () boolean))) 
                                      (158 (ifeq 325)) ;;to TAG_8
                                      (161 (aload 4)) 
                                      (163 (getstatic (fieldCP "TYPE" "java.lang.Character" (class "java.lang.Class")))) 
                                      (166 (if_acmpne 172)) ;;to TAG_9
                                      (169 (aload 6)) 
                                      (171 (areturn)) 
                                      (172 (aload 4)) ;;at TAG_9
                                      (174 (getstatic (fieldCP "TYPE" "java.lang.Integer" (class "java.lang.Class")))) 
                                      (177 (if_acmpne 192)) ;;to TAG_10
                                      (180 (aload 6)) 
                                      (182 (checkcast (class "java.lang.Number"))) 
                                      (185 (invokevirtual (methodCP "intValue" "java.lang.Number" () int))) 
                                      (188 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (191 (areturn)) 
                                      (192 (aload 4)) ;;at TAG_10
                                      (194 (getstatic (fieldCP "TYPE" "java.lang.Long" (class "java.lang.Class")))) 
                                      (197 (if_acmpne 212)) ;;to TAG_11
                                      (200 (aload 6)) 
                                      (202 (checkcast (class "java.lang.Number"))) 
                                      (205 (invokevirtual (methodCP "longValue" "java.lang.Number" () long))) 
                                      (208 (invokestatic (methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long")))) 
                                      (211 (areturn)) 
                                      (212 (aload 4)) ;;at TAG_11
                                      (214 (getstatic (fieldCP "TYPE" "java.lang.Float" (class "java.lang.Class")))) 
                                      (217 (if_acmpne 232)) ;;to TAG_12
                                      (220 (aload 6)) 
                                      (222 (checkcast (class "java.lang.Number"))) 
                                      (225 (invokevirtual (methodCP "floatValue" "java.lang.Number" () float))) 
                                      (228 (invokestatic (methodCP "valueOf" "java.lang.Float" (float) (class "java.lang.Float")))) 
                                      (231 (areturn)) 
                                      (232 (aload 4)) ;;at TAG_12
                                      (234 (getstatic (fieldCP "TYPE" "java.lang.Double" (class "java.lang.Class")))) 
                                      (237 (if_acmpne 252))  ;;to TAG_13
                                      (240 (aload 6)) 
                                      (242 (checkcast (class "java.lang.Number"))) 
                                      (245 (invokevirtual (methodCP "doubleValue" "java.lang.Number" () double))) 
                                      (248 (invokestatic (methodCP "valueOf" "java.lang.Double" (double) (class "java.lang.Double")))) 
                                      (251 (areturn)) 
                                      (252 (aload 4)) ;;at TAG_13
                                      (254 (getstatic (fieldCP "TYPE" "java.lang.Boolean" (class "java.lang.Class")))) 
                                      (257 (if_acmpne 283)) ;;to TAG_14
                                      (260 (aload 6)) 
                                      (262 (instanceof (class "java.lang.Boolean"))) 
                                      (265 (ifne 283)) ;;to TAG_14
                                      (268 (aload 6)) 
                                      (270 (ifnonnull 279)) ;;to TAG_15
                                      (273 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (276 (goto 282)) ;;to TAG_16
                                      (279 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_15
                                      (282 (areturn)) ;;at TAG_16
                                      (283 (aload 4)) ;;at TAG_14
                                      (285 (getstatic (fieldCP "TYPE" "java.lang.Byte" (class "java.lang.Class")))) 
                                      (288 (if_acmpne 304)) ;;to TAG_17
                                      (291 (aload 6)) 
                                      (293 (checkcast (class "java.lang.Number"))) 
                                      (296 (invokevirtual (methodCP "intValue" "java.lang.Number" () int))) 
                                      (299 (i2b)) 
                                      (300 (invokestatic (methodCP "valueOf" "java.lang.Byte" (byte) (class "java.lang.Byte")))) 
                                      (303 (areturn)) 
                                      (304 (aload 4)) ;;at TAG_17
                                      (306 (getstatic (fieldCP "TYPE" "java.lang.Short" (class "java.lang.Class")))) 
                                      (309 (if_acmpne 325)) ;;to TAG_8
                                      (312 (aload 6)) 
                                      (314 (checkcast (class "java.lang.Number"))) 
                                      (317 (invokevirtual (methodCP "intValue" "java.lang.Number" () int))) 
                                      (320 (i2s)) 
                                      (321 (invokestatic (methodCP "valueOf" "java.lang.Short" (short) (class "java.lang.Short")))) 
                                      (324 (areturn)) 
                                      (325 (aload 6)) ;;at TAG_8
                                      (327 (areturn)) 
                                      (endofcode 328))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "java.lang.reflect.InvocationHandler")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *ProxyHandler-class-table*
  (make-static-class-decls 
   *clojure.lang.ProxyHandler*))

(defconst *package-name-map* 
  ("clojure.lang.ProxyHandler" . "clojure.lang"))

