; ASeq-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:50 CDT 2014.
;

(include-book "../../model-translation")

(defconst *clojure.lang.ASeq*
 (make-class-def
      '(class "clojure.lang.ASeq"
            "clojure.lang.Obj"
            (constant_pool)
            (fields
                        (field "_hash" int (accessflags  *class*  *transient* ) -1)
                        (field "_hasheq" int (accessflags  *class*  *transient* ) -1))
            (methods
                        (method "toString"
                              (parameters )
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokestatic
                                        (methodCP "printString" "clojure.lang.RT" ((class "java.lang.Object")) (class "java.lang.String"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "empty"
                              (parameters )
                              (returntype . (class "clojure.lang.IPersistentCollection"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 4)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentList" (class "clojure.lang.PersistentList$EmptyList"))))
                                      (3 (areturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . void)
                              (accessflags  *class*  *protected* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokespecial
                                        (methodCP "<init>" "clojure.lang.Obj" ((class "clojure.lang.IPersistentMap")) void)))
                                      (5 (aload_0))
                                      (6 (iconst_m1))
                                      (7 (putfield (fieldCP "_hash" "clojure.lang.ASeq" int)))
                                      (10 (aload_0))
                                      (11 (iconst_m1))
                                      (12 (putfield (fieldCP "_hasheq" "clojure.lang.ASeq" int)))
                                      (15 (return))
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *protected* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
                                        (methodCP "<init>" "clojure.lang.Obj" () void)))
                                      (4 (aload_0))
                                      (5 (iconst_m1))
                                      (6 (putfield (fieldCP "_hash" "clojure.lang.ASeq" int)))
                                      (9 (aload_0))
                                      (10 (iconst_m1))
                                      (11 (putfield (fieldCP "_hasheq" "clojure.lang.ASeq" int)))
                                      (14 (return))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "equiv"
                              (parameters (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 81)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (instanceof (class "clojure.lang.Sequential"))) 
                                      (4 (ifne 16)) ;;to TAG_0
                                      (7 (aload_1)) 
                                      (8 (instanceof (class "java.util.List"))) 
                                      (11 (ifne 16)) ;;to TAG_0
                                      (14 (iconst_0)) 
                                      (15 (ireturn)) 
                                      (16 (aload_1)) ;;at TAG_0
                                      (17 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (20 (astore_2)) 
                                      (21 (aload_0)) 
                                      (22 (invokevirtual (methodCP "seq" "clojure.lang.ASeq" () (class "clojure.lang.ISeq")))) 
                                      (25 (astore_3)) 
                                      (26 (aload_3)) ;;at TAG_4
                                      (27 (ifnull 71)) ;;to TAG_1
                                      (30 (aload_2)) 
                                      (31 (ifnull 52))  ;;to TAG_2
                                      (34 (aload_3)) 
                                      (35 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (40 (aload_2)) 
                                      (41 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (46 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (49 (ifne 54)) ;;to TAG_3
                                      (52 (iconst_0)) ;;at TAG_2
                                      (53 (ireturn)) 
                                      (54 (aload_3)) ;;at TAG_3
                                      (55 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (60 (astore_3)) 
                                      (61 (aload_2)) 
                                      (62 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (67 (astore_2)) 
                                      (68 (goto 26)) ;;to TAG_4
                                      (71 (aload_2)) ;;at TAG_1
                                      (72 (ifnonnull 79)) ;;to TAG_5
                                      (75 (iconst_1)) 
                                      (76 (goto 80)) ;;to TAG_6
                                      (79 (iconst_0)) ;;at TAG_5
                                      (80 (ireturn)) ;;at TAG_6
                                      (endofcode 81))
                                   (Exceptions )
                                   (StackMap )))
                        (method "equals"
                              (parameters (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 88)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (aload_1)) 
                                      (2 (if_acmpne 7)) ;;to TAG_0
                                      (5 (iconst_1)) 
                                      (6 (ireturn)) 
                                      (7 (aload_1)) ;;at TAG_0
                                      (8 (instanceof (class "clojure.lang.Sequential"))) 
                                      (11 (ifne 23)) ;;to TAG_1
                                      (14 (aload_1)) 
                                      (15 (instanceof (class "java.util.List"))) 
                                      (18 (ifne 23)) ;;to TAG_1
                                      (21 (iconst_0)) 
                                      (22 (ireturn)) 
                                      (23 (aload_1)) ;;at TAG_1
                                      (24 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (27 (astore_2)) 
                                      (28 (aload_0)) 
                                      (29 (invokevirtual (methodCP "seq" "clojure.lang.ASeq" () (class "clojure.lang.ISeq")))) 
                                      (32 (astore_3)) 
                                      (33 (aload_3)) ;;at TAG_5
                                      (34 (ifnull 78))  ;;to TAG_2
                                      (37 (aload_2)) 
                                      (38 (ifnull 59)) ;;to TAG_3
                                      (41 (aload_3)) 
                                      (42 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (47 (aload_2)) 
                                      (48 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (53 (invokestatic (methodCP "equals" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (56 (ifne 61)) ;;to TAG_4
                                      (59 (iconst_0)) ;;at TAG_3
                                      (60 (ireturn)) 
                                      (61 (aload_3)) ;;at TAG_4
                                      (62 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (67 (astore_3)) 
                                      (68 (aload_2)) 
                                      (69 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (74 (astore_2)) 
                                      (75 (goto 33)) ;;to TAG_5
                                      (78 (aload_2)) ;;at TAG_2
                                      (79 (ifnonnull 86)) ;;to TAG_6
                                      (82 (iconst_1)) 
                                      (83 (goto 87)) ;;to TAG_7
                                      (86 (iconst_0)) ;;at TAG_6
                                      (87 (ireturn)) ;;at TAG_7
                                      (endofcode 88))
                                   (Exceptions )
                                   (StackMap )))
                        (method "hashCode"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 67)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "_hash" "clojure.lang.ASeq" int))) 
                                      (4 (iconst_m1)) 
                                      (5 (if_icmpne 62)) ;;to TAG_0
                                      (8 (iconst_1)) 
                                      (9 (istore_1)) 
                                      (10 (aload_0)) 
                                      (11 (invokevirtual (methodCP "seq" "clojure.lang.ASeq" () (class "clojure.lang.ISeq")))) 
                                      (14 (astore_2)) 
                                      (15 (aload_2)) ;;at TAG_4
                                      (16 (ifnull 57)) ;;to TAG_1
                                      (19 (bipush 31)) 
                                      (21 (iload_1)) 
                                      (22 (imul)) 
                                      (23 (aload_2)) 
                                      (24 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (29 (ifnonnull 36))  ;;to TAG_2
                                      (32 (iconst_0)) 
                                      (33 (goto 45)) ;;to TAG_3
                                      (36 (aload_2)) ;;at TAG_2
                                      (37 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (42 (invokevirtual (methodCP "hashCode" "java.lang.Object" () int))) 
                                      (45 (iadd)) ;;at TAG_3
                                      (46 (istore_1)) 
                                      (47 (aload_2)) 
                                      (48 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (53 (astore_2)) 
                                      (54 (goto 15)) ;;to TAG_4
                                      (57 (aload_0)) ;;at TAG_1
                                      (58 (iload_1)) 
                                      (59 (putfield (fieldCP "_hash" "clojure.lang.ASeq" int))) 
                                      (62 (aload_0)) ;;at TAG_0
                                      (63 (getfield (fieldCP "_hash" "clojure.lang.ASeq" int))) 
                                      (66 (ireturn)) 
                                      (endofcode 67))
                                   (Exceptions )
                                   (StackMap )))
                        (method "hasheq"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 54)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "_hasheq" "clojure.lang.ASeq" int))) 
                                      (4 (iconst_m1)) 
                                      (5 (if_icmpne 49)) ;;to TAG_0
                                      (8 (iconst_1)) 
                                      (9 (istore_1)) 
                                      (10 (aload_0)) 
                                      (11 (invokevirtual (methodCP "seq" "clojure.lang.ASeq" () (class "clojure.lang.ISeq")))) 
                                      (14 (astore_2)) 
                                      (15 (aload_2)) ;;at TAG_2
                                      (16 (ifnull 44)) ;;to TAG_1
                                      (19 (bipush 31)) 
                                      (21 (iload_1)) 
                                      (22 (imul)) 
                                      (23 (aload_2)) 
                                      (24 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (29 (invokestatic (methodCP "hasheq" "clojure.lang.Util" ((class "java.lang.Object")) int))) 
                                      (32 (iadd)) 
                                      (33 (istore_1)) 
                                      (34 (aload_2)) 
                                      (35 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (40 (astore_2)) 
                                      (41 (goto 15))  ;;to TAG_2
                                      (44 (aload_0)) ;;at TAG_1
                                      (45 (iload_1)) 
                                      (46 (putfield (fieldCP "_hasheq" "clojure.lang.ASeq" int))) 
                                      (49 (aload_0)) ;;at TAG_0
                                      (50 (getfield (fieldCP "_hasheq" "clojure.lang.ASeq" int))) 
                                      (53 (ireturn)) 
                                      (endofcode 54))
                                   (Exceptions )
                                   (StackMap )))
                        (method "count"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 42)
                                   (parsedcode
                                      (0 (iconst_1)) 
                                      (1 (istore_1)) 
                                      (2 (aload_0)) 
                                      (3 (invokevirtual (methodCP "next" "clojure.lang.ASeq" () (class "clojure.lang.ISeq")))) 
                                      (6 (astore_2)) 
                                      (7 (aload_2)) ;;at TAG_2
                                      (8 (ifnull 40)) ;;to TAG_0
                                      (11 (aload_2)) 
                                      (12 (instanceof (class "clojure.lang.Counted"))) 
                                      (15 (ifeq 27)) ;;to TAG_1
                                      (18 (iload_1)) 
                                      (19 (aload_2)) 
                                      (20 (invokeinterface (methodCP "count" "clojure.lang.ISeq" () int) 1)) 
                                      (25 (iadd)) 
                                      (26 (ireturn)) 
                                      (27 (aload_2)) ;;at TAG_1
                                      (28 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (33 (astore_2)) 
                                      (34 (iinc 1 1)) 
                                      (37 (goto 7))  ;;to TAG_2
                                      (40 (iload_1)) ;;at TAG_0
                                      (41 (ireturn)) 
                                      (endofcode 42))
                                   (Exceptions )
                                   (StackMap )))
                        (method "seq"
                              (parameters )
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (areturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "cons"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.Cons")))
                                      (3 (dup))
                                      (4 (aload_1))
                                      (5 (aload_0))
                                      (6 (invokespecial
                                        (methodCP "<init>" "clojure.lang.Cons" ((class "java.lang.Object") (class "clojure.lang.ISeq")) void)))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "more"
                              (parameters )
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "next" "clojure.lang.ASeq" () (class "clojure.lang.ISeq")))) 
                                      (4 (astore_1)) 
                                      (5 (aload_1)) 
                                      (6 (ifnonnull 13))  ;;to TAG_0
                                      (9 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentList" (class "clojure.lang.PersistentList$EmptyList")))) 
                                      (12 (areturn)) 
                                      (13 (aload_1)) ;;at TAG_0
                                      (14 (areturn)) 
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "toArray"
                              (parameters )
                              (returntype . (array (class "java.lang.Object")))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "seq" "clojure.lang.ASeq" () (class "clojure.lang.ISeq"))))
                                      (4 (invokestatic
                                        (methodCP "seqToArray" "clojure.lang.RT" ((class "clojure.lang.ISeq")) (array (class "java.lang.Object")))))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "add"
                              (parameters (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
                                        (methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "remove"
                              (parameters (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
                                        (methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "addAll"
                              (parameters (class "java.util.Collection"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
                                        (methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "clear"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
                                        (methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "retainAll"
                              (parameters (class "java.util.Collection"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
                                        (methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "removeAll"
                              (parameters (class "java.util.Collection"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
                                        (methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "containsAll"
                              (parameters (class "java.util.Collection"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 38)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (invokeinterface (methodCP "iterator" "java.util.Collection" () (class "java.util.Iterator")) 1)) 
                                      (6 (astore_2)) 
                                      (7 (aload_2)) ;;at TAG_2
                                      (8 (invokeinterface (methodCP "hasNext" "java.util.Iterator" () boolean) 1)) 
                                      (13 (ifeq 36)) ;;to TAG_0
                                      (16 (aload_2)) 
                                      (17 (invokeinterface (methodCP "next" "java.util.Iterator" () (class "java.lang.Object")) 1)) 
                                      (22 (astore_3)) 
                                      (23 (aload_0)) 
                                      (24 (aload_3)) 
                                      (25 (invokevirtual (methodCP "contains" "clojure.lang.ASeq" ((class "java.lang.Object")) boolean))) 
                                      (28 (ifne 33)) ;;to TAG_1
                                      (31 (iconst_0)) 
                                      (32 (ireturn)) 
                                      (33 (goto 7))  ;;to TAG_2;;at TAG_1
                                      (36 (iconst_1)) ;;at TAG_0
                                      (37 (ireturn)) 
                                      (endofcode 38))
                                   (Exceptions )
                                   (StackMap )))
                        (method "toArray"
                              (parameters (array (class "java.lang.Object")))
                              (returntype . (array (class "java.lang.Object")))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 9)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "seq" "clojure.lang.ASeq" () (class "clojure.lang.ISeq"))))
                                      (4 (aload_1))
                                      (5 (invokestatic
                                        (methodCP "seqToPassedArray" "clojure.lang.RT" ((class "clojure.lang.ISeq") (array (class "java.lang.Object"))) (array (class "java.lang.Object")))))
                                      (8 (areturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "size"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
                                        (methodCP "count" "clojure.lang.ASeq" () int)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isEmpty"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "seq" "clojure.lang.ASeq" () (class "clojure.lang.ISeq")))) 
                                      (4 (ifnonnull 11))  ;;to TAG_0
                                      (7 (iconst_1)) 
                                      (8 (goto 12)) ;;to TAG_1
                                      (11 (iconst_0)) ;;at TAG_0
                                      (12 (ireturn)) ;;at TAG_1
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "contains"
                              (parameters (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 36)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "seq" "clojure.lang.ASeq" () (class "clojure.lang.ISeq")))) 
                                      (4 (astore_2)) 
                                      (5 (aload_2)) ;;at TAG_2
                                      (6 (ifnull 34)) ;;to TAG_0
                                      (9 (aload_2)) 
                                      (10 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (15 (aload_1)) 
                                      (16 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (19 (ifeq 24)) ;;to TAG_1
                                      (22 (iconst_1)) 
                                      (23 (ireturn)) 
                                      (24 (aload_2)) ;;at TAG_1
                                      (25 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (30 (astore_2)) 
                                      (31 (goto 5))  ;;to TAG_2
                                      (34 (iconst_0)) ;;at TAG_0
                                      (35 (ireturn)) 
                                      (endofcode 36))
                                   (Exceptions )
                                   (StackMap )))
                        (method "iterator"
                              (parameters )
                              (returntype . (class "java.util.Iterator"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 9)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.SeqIterator")))
                                      (3 (dup))
                                      (4 (aload_0))
                                      (5 (invokespecial
                                        (methodCP "<init>" "clojure.lang.SeqIterator" ((class "clojure.lang.ISeq")) void)))
                                      (8 (areturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "reify"
                              (parameters )
                              (returntype . (class "java.util.List"))
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 12)
                                   (parsedcode
                                      (0 (new (class "java.util.ArrayList")))
                                      (3 (dup))
                                      (4 (aload_0))
                                      (5 (invokespecial
                                        (methodCP "<init>" "java.util.ArrayList" ((class "java.util.Collection")) void)))
                                      (8 (invokestatic
                                        (methodCP "unmodifiableList" "java.util.Collections" ((class "java.util.List")) (class "java.util.List"))))
                                      (11 (areturn))
                                      (endofcode 12))
                                   (Exceptions )
                                   (StackMap )))
                        (method "subList"
                              (parameters int int)
                              (returntype . (class "java.util.List"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 12)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
                                        (methodCP "reify" "clojure.lang.ASeq" () (class "java.util.List"))))
                                      (4 (iload_1))
                                      (5 (iload_2))
                                      (6 (invokeinterface
                                        (methodCP "subList" "java.util.List" (int int) (class "java.util.List")) 3))
                                      (11 (areturn))
                                      (endofcode 12))
                                   (Exceptions )
                                   (StackMap )))
                        (method "set"
                              (parameters int (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
                                        (methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "remove"
                              (parameters int)
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
                                        (methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "indexOf"
                              (parameters (class "java.lang.Object"))
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 41)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "seq" "clojure.lang.ASeq" () (class "clojure.lang.ISeq")))) 
                                      (4 (astore_2)) 
                                      (5 (iconst_0)) 
                                      (6 (istore_3)) 
                                      (7 (aload_2)) ;;at TAG_2
                                      (8 (ifnull 39)) ;;to TAG_0
                                      (11 (aload_2)) 
                                      (12 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (17 (aload_1)) 
                                      (18 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (21 (ifeq 26)) ;;to TAG_1
                                      (24 (iload_3)) 
                                      (25 (ireturn)) 
                                      (26 (aload_2)) ;;at TAG_1
                                      (27 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (32 (astore_2)) 
                                      (33 (iinc 3 1)) 
                                      (36 (goto 7))  ;;to TAG_2
                                      (39 (iconst_m1)) ;;at TAG_0
                                      (40 (ireturn)) 
                                      (endofcode 41))
                                   (Exceptions )
                                   (StackMap )))
                        (method "lastIndexOf"
                              (parameters (class "java.lang.Object"))
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
                                        (methodCP "reify" "clojure.lang.ASeq" () (class "java.util.List"))))
                                      (4 (aload_1))
                                      (5 (invokeinterface
                                        (methodCP "lastIndexOf" "java.util.List" ((class "java.lang.Object")) int) 2))
                                      (10 (ireturn))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "listIterator"
                              (parameters )
                              (returntype . (class "java.util.ListIterator"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
                                        (methodCP "reify" "clojure.lang.ASeq" () (class "java.util.List"))))
                                      (4 (invokeinterface
                                        (methodCP "listIterator" "java.util.List" () (class "java.util.ListIterator")) 1))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "listIterator"
                              (parameters int)
                              (returntype . (class "java.util.ListIterator"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
                                        (methodCP "reify" "clojure.lang.ASeq" () (class "java.util.List"))))
                                      (4 (iload_1))
                                      (5 (invokeinterface
                                        (methodCP "listIterator" "java.util.List" (int) (class "java.util.ListIterator")) 2))
                                      (10 (areturn))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "get"
                              (parameters int)
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (invokestatic
                                        (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "add"
                              (parameters int (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
                                        (methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "addAll"
                              (parameters int (class "java.util.Collection"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
                                        (methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "cons"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.IPersistentCollection"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
                                        (methodCP "cons" "clojure.lang.ASeq" ((class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.ISeq" "clojure.lang.Sequential" "java.util.List" "java.io.Serializable" "clojure.lang.IHashEq")
            (accessflags  *abstract*  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))#|ACL2s-ToDo-Line|#



;(defconst *ASeq-class-table*
;  (make-static-class-decls 
;   *clojure.lang.ASeq*))

;(defconst *package-name-map* 
;  ("clojure.lang.ASeq" . "clojure.lang"))

