; Numbers$DoubleOps-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:52 CDT 2014.
;

(defconst *clojure.lang.Numbers$DoubleOps*
 (make-class-def
      '(class "clojure.lang.Numbers$DoubleOps"
            "clojure.lang.Numbers$OpsP"
            (constant_pool)
            (fields)
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.Numbers$OpsP" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "combine"
                              (parameters (class "clojure.lang.Numbers$Ops"))
                              (returntype . (class "clojure.lang.Numbers$Ops"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (aload_0))
                                      (2 (invokeinterface
					(methodCP "opsWith" "clojure.lang.Numbers$Ops" ((class "clojure.lang.Numbers$DoubleOps")) (class "clojure.lang.Numbers$Ops")) 2))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "opsWith"
                              (parameters (class "clojure.lang.Numbers$LongOps"))
                              (returntype . (class "clojure.lang.Numbers$Ops"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 2)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (areturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "opsWith"
                              (parameters (class "clojure.lang.Numbers$DoubleOps"))
                              (returntype . (class "clojure.lang.Numbers$Ops"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 2)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (areturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "opsWith"
                              (parameters (class "clojure.lang.Numbers$RatioOps"))
                              (returntype . (class "clojure.lang.Numbers$Ops"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 2)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (areturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "opsWith"
                              (parameters (class "clojure.lang.Numbers$BigIntOps"))
                              (returntype . (class "clojure.lang.Numbers$Ops"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 2)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (areturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "opsWith"
                              (parameters (class "clojure.lang.Numbers$BigDecimalOps"))
                              (returntype . (class "clojure.lang.Numbers$Ops"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 2)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (areturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isZero"
                              (parameters (class "java.lang.Number"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (invokevirtual (methodCP "doubleValue" "java.lang.Number" () double))) 
                                      (4 (dconst_0)) 
                                      (5 (dcmpl)) 
                                      (6 (ifne 13))  ;;to TAG_0
                                      (9 (iconst_1)) 
                                      (10 (goto 14)) ;;to TAG_1
                                      (13 (iconst_0)) ;;at TAG_0
                                      (14 (ireturn)) ;;at TAG_1
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isPos"
                              (parameters (class "java.lang.Number"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (invokevirtual (methodCP "doubleValue" "java.lang.Number" () double))) 
                                      (4 (dconst_0)) 
                                      (5 (dcmpl)) 
                                      (6 (ifle 13))  ;;to TAG_0
                                      (9 (iconst_1)) 
                                      (10 (goto 14)) ;;to TAG_1
                                      (13 (iconst_0)) ;;at TAG_0
                                      (14 (ireturn)) ;;at TAG_1
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isNeg"
                              (parameters (class "java.lang.Number"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (invokevirtual (methodCP "doubleValue" "java.lang.Number" () double))) 
                                      (4 (dconst_0)) 
                                      (5 (dcmpg)) 
                                      (6 (ifge 13))  ;;to TAG_0
                                      (9 (iconst_1)) 
                                      (10 (goto 14)) ;;to TAG_1
                                      (13 (iconst_0)) ;;at TAG_0
                                      (14 (ireturn)) ;;at TAG_1
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "add"
                              (parameters (class "java.lang.Number") (class "java.lang.Number"))
                              (returntype . (class "java.lang.Number"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (invokevirtual
					(methodCP "doubleValue" "java.lang.Number" () double)))
                                      (4 (aload_2))
                                      (5 (invokevirtual
					(methodCP "doubleValue" "java.lang.Number" () double)))
                                      (8 (dadd))
                                      (9 (invokestatic
					(methodCP "valueOf" "java.lang.Double" (double) (class "java.lang.Double"))))
                                      (12 (areturn))
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "multiply"
                              (parameters (class "java.lang.Number") (class "java.lang.Number"))
                              (returntype . (class "java.lang.Number"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (invokevirtual
					(methodCP "doubleValue" "java.lang.Number" () double)))
                                      (4 (aload_2))
                                      (5 (invokevirtual
					(methodCP "doubleValue" "java.lang.Number" () double)))
                                      (8 (dmul))
                                      (9 (invokestatic
					(methodCP "valueOf" "java.lang.Double" (double) (class "java.lang.Double"))))
                                      (12 (areturn))
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "divide"
                              (parameters (class "java.lang.Number") (class "java.lang.Number"))
                              (returntype . (class "java.lang.Number"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (invokevirtual
					(methodCP "doubleValue" "java.lang.Number" () double)))
                                      (4 (aload_2))
                                      (5 (invokevirtual
					(methodCP "doubleValue" "java.lang.Number" () double)))
                                      (8 (ddiv))
                                      (9 (invokestatic
					(methodCP "valueOf" "java.lang.Double" (double) (class "java.lang.Double"))))
                                      (12 (areturn))
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "quotient"
                              (parameters (class "java.lang.Number") (class "java.lang.Number"))
                              (returntype . (class "java.lang.Number"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (invokevirtual
					(methodCP "doubleValue" "java.lang.Number" () double)))
                                      (4 (aload_2))
                                      (5 (invokevirtual
					(methodCP "doubleValue" "java.lang.Number" () double)))
                                      (8 (invokestatic
					(methodCP "quotient" "clojure.lang.Numbers" (double double) double)))
                                      (11 (invokestatic
					(methodCP "valueOf" "java.lang.Double" (double) (class "java.lang.Double"))))
                                      (14 (areturn))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "remainder"
                              (parameters (class "java.lang.Number") (class "java.lang.Number"))
                              (returntype . (class "java.lang.Number"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (invokevirtual
					(methodCP "doubleValue" "java.lang.Number" () double)))
                                      (4 (aload_2))
                                      (5 (invokevirtual
					(methodCP "doubleValue" "java.lang.Number" () double)))
                                      (8 (invokestatic
					(methodCP "remainder" "clojure.lang.Numbers" (double double) double)))
                                      (11 (invokestatic
					(methodCP "valueOf" "java.lang.Double" (double) (class "java.lang.Double"))))
                                      (14 (areturn))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "equiv"
                              (parameters (class "java.lang.Number") (class "java.lang.Number"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 18)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (invokevirtual (methodCP "doubleValue" "java.lang.Number" () double))) 
                                      (4 (aload_2)) 
                                      (5 (invokevirtual (methodCP "doubleValue" "java.lang.Number" () double))) 
                                      (8 (dcmpl)) 
                                      (9 (ifne 16))  ;;to TAG_0
                                      (12 (iconst_1)) 
                                      (13 (goto 17)) ;;to TAG_1
                                      (16 (iconst_0)) ;;at TAG_0
                                      (17 (ireturn)) ;;at TAG_1
                                      (endofcode 18))
                                   (Exceptions )
                                   (StackMap )))
                        (method "lt"
                              (parameters (class "java.lang.Number") (class "java.lang.Number"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 18)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (invokevirtual (methodCP "doubleValue" "java.lang.Number" () double))) 
                                      (4 (aload_2)) 
                                      (5 (invokevirtual (methodCP "doubleValue" "java.lang.Number" () double))) 
                                      (8 (dcmpg)) 
                                      (9 (ifge 16))  ;;to TAG_0
                                      (12 (iconst_1)) 
                                      (13 (goto 17)) ;;to TAG_1
                                      (16 (iconst_0)) ;;at TAG_0
                                      (17 (ireturn)) ;;at TAG_1
                                      (endofcode 18))
                                   (Exceptions )
                                   (StackMap )))
                        (method "negate"
                              (parameters (class "java.lang.Number"))
                              (returntype . (class "java.lang.Number"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 9)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (invokevirtual
					(methodCP "doubleValue" "java.lang.Number" () double)))
                                      (4 (dneg))
                                      (5 (invokestatic
					(methodCP "valueOf" "java.lang.Double" (double) (class "java.lang.Double"))))
                                      (8 (areturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "inc"
                              (parameters (class "java.lang.Number"))
                              (returntype . (class "java.lang.Number"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (invokevirtual
					(methodCP "doubleValue" "java.lang.Number" () double)))
                                      (4 (dconst_1))
                                      (5 (dadd))
                                      (6 (invokestatic
					(methodCP "valueOf" "java.lang.Double" (double) (class "java.lang.Double"))))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "dec"
                              (parameters (class "java.lang.Number"))
                              (returntype . (class "java.lang.Number"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (invokevirtual
					(methodCP "doubleValue" "java.lang.Number" () double)))
                                      (4 (dconst_1))
                                      (5 (dsub))
                                      (6 (invokestatic
					(methodCP "valueOf" "java.lang.Double" (double) (class "java.lang.Double"))))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Numbers$DoubleOps-class-table*
  (make-static-class-decls 
   *clojure.lang.Numbers$DoubleOps*))

(defconst *package-name-map* 
  ("clojure.lang.Numbers$DoubleOps" . "clojure.lang"))

