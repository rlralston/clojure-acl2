; KeywordLookupSite-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:51 CDT 2014.
;

(defconst *clojure.lang.KeywordLookupSite*
 (make-class-def
      '(class "clojure.lang.KeywordLookupSite"
            "java.lang.Object"
            (constant_pool)
            (fields
                        (field "k" (class "clojure.lang.Keyword") (accessflags  *class*  *final* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "clojure.lang.Keyword"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "k" "clojure.lang.KeywordLookupSite" (class "clojure.lang.Keyword"))))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "fault"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ILookupThunk"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 31)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (instanceof (class "clojure.lang.IKeywordLookup"))) 
                                      (4 (ifeq 13))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (aload_1)) 
                                      (9 (invokespecial (methodCP "install" "clojure.lang.KeywordLookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")))) 
                                      (12 (areturn)) 
                                      (13 (aload_1)) ;;at TAG_0
                                      (14 (instanceof (class "clojure.lang.ILookup"))) 
                                      (17 (ifeq 29)) ;;to TAG_1
                                      (20 (aload_0)) 
                                      (21 (aload_1)) 
                                      (22 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (25 (invokespecial (methodCP "ilookupThunk" "clojure.lang.KeywordLookupSite" ((class "java.lang.Class")) (class "clojure.lang.ILookupThunk")))) 
                                      (28 (areturn)) 
                                      (29 (aload_0)) ;;at TAG_1
                                      (30 (areturn)) 
                                      (endofcode 31))
                                   (Exceptions )
                                   (StackMap )))
                        (method "get"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 25)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (instanceof (class "clojure.lang.IKeywordLookup"))) 
                                      (4 (ifne 14))  ;;to TAG_0
                                      (7 (aload_1)) 
                                      (8 (instanceof (class "clojure.lang.ILookup"))) 
                                      (11 (ifeq 16)) ;;to TAG_1
                                      (14 (aload_0)) ;;at TAG_0
                                      (15 (areturn)) 
                                      (16 (aload_1)) ;;at TAG_1
                                      (17 (aload_0)) 
                                      (18 (getfield (fieldCP "k" "clojure.lang.KeywordLookupSite" (class "clojure.lang.Keyword")))) 
                                      (21 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (24 (areturn)) 
                                      (endofcode 25))
                                   (Exceptions )
                                   (StackMap )))
                        (method "ilookupThunk"
                              (parameters (class "java.lang.Class"))
                              (returntype . (class "clojure.lang.ILookupThunk"))
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.KeywordLookupSite$1")))
                                      (3 (dup))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite$1" ((class "clojure.lang.KeywordLookupSite") (class "java.lang.Class")) void)))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "install"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ILookupThunk"))
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 29)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (checkcast (class "clojure.lang.IKeywordLookup"))) 
                                      (4 (aload_0)) 
                                      (5 (getfield (fieldCP "k" "clojure.lang.KeywordLookupSite" (class "clojure.lang.Keyword")))) 
                                      (8 (invokeinterface (methodCP "getLookupThunk" "clojure.lang.IKeywordLookup" ((class "clojure.lang.Keyword")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (13 (astore_2)) 
                                      (14 (aload_2)) 
                                      (15 (ifnull 20))  ;;to TAG_0
                                      (18 (aload_2)) 
                                      (19 (areturn)) 
                                      (20 (aload_0)) ;;at TAG_0
                                      (21 (aload_1)) 
                                      (22 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (25 (invokespecial (methodCP "ilookupThunk" "clojure.lang.KeywordLookupSite" ((class "java.lang.Class")) (class "clojure.lang.ILookupThunk")))) 
                                      (28 (areturn)) 
                                      (endofcode 29))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.ILookupSite" "clojure.lang.ILookupThunk")
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *KeywordLookupSite-class-table*
  (make-static-class-decls 
   *clojure.lang.KeywordLookupSite*))

(defconst *package-name-map* 
  ("clojure.lang.KeywordLookupSite" . "clojure.lang"))

