; PersistentQueue$Seq-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:52 CDT 2014.
;

(defconst *clojure.lang.PersistentQueue$Seq*
 (make-class-def
      '(class "clojure.lang.PersistentQueue$Seq"
            "clojure.lang.ASeq"
            (constant_pool)
            (fields
                        (field "f" (class "clojure.lang.ISeq") (accessflags  *class*  *final* ) -1)
                        (field "rseq" (class "clojure.lang.ISeq") (accessflags  *class*  *final* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "clojure.lang.ISeq") (class "clojure.lang.ISeq"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.ASeq" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "f" "clojure.lang.PersistentQueue$Seq" (class "clojure.lang.ISeq"))))
                                      (9 (aload_0))
                                      (10 (aload_2))
                                      (11 (putfield (fieldCP "rseq" "clojure.lang.PersistentQueue$Seq" (class "clojure.lang.ISeq"))))
                                      (14 (return))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "clojure.lang.IPersistentMap") (class "clojure.lang.ISeq") (class "clojure.lang.ISeq"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokespecial
					(methodCP "<init>" "clojure.lang.ASeq" ((class "clojure.lang.IPersistentMap")) void)))
                                      (5 (aload_0))
                                      (6 (aload_2))
                                      (7 (putfield (fieldCP "f" "clojure.lang.PersistentQueue$Seq" (class "clojure.lang.ISeq"))))
                                      (10 (aload_0))
                                      (11 (aload_3))
                                      (12 (putfield (fieldCP "rseq" "clojure.lang.PersistentQueue$Seq" (class "clojure.lang.ISeq"))))
                                      (15 (return))
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "first"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "f" "clojure.lang.PersistentQueue$Seq" (class "clojure.lang.ISeq"))))
                                      (4 (invokeinterface
					(methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "next"
                              (parameters )
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 45)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "f" "clojure.lang.PersistentQueue$Seq" (class "clojure.lang.ISeq")))) 
                                      (4 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (9 (astore_1)) 
                                      (10 (aload_0)) 
                                      (11 (getfield (fieldCP "rseq" "clojure.lang.PersistentQueue$Seq" (class "clojure.lang.ISeq")))) 
                                      (14 (astore_2)) 
                                      (15 (aload_1)) 
                                      (16 (ifnonnull 35))  ;;to TAG_0
                                      (19 (aload_0)) 
                                      (20 (getfield (fieldCP "rseq" "clojure.lang.PersistentQueue$Seq" (class "clojure.lang.ISeq")))) 
                                      (23 (ifnonnull 28)) ;;to TAG_1
                                      (26 (aconst_null)) 
                                      (27 (areturn)) 
                                      (28 (aload_0)) ;;at TAG_1
                                      (29 (getfield (fieldCP "rseq" "clojure.lang.PersistentQueue$Seq" (class "clojure.lang.ISeq")))) 
                                      (32 (astore_1)) 
                                      (33 (aconst_null)) 
                                      (34 (astore_2)) 
                                      (35 (new (class "clojure.lang.PersistentQueue$Seq"))) ;;at TAG_0
                                      (38 (dup)) 
                                      (39 (aload_1)) 
                                      (40 (aload_2)) 
                                      (41 (invokespecial (methodCP "<init>" "clojure.lang.PersistentQueue$Seq" ((class "clojure.lang.ISeq") (class "clojure.lang.ISeq")) void))) 
                                      (44 (areturn)) 
                                      (endofcode 45))
                                   (Exceptions )
                                   (StackMap )))
                        (method "count"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "f" "clojure.lang.PersistentQueue$Seq" (class "clojure.lang.ISeq"))))
                                      (4 (invokestatic
					(methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int)))
                                      (7 (aload_0))
                                      (8 (getfield (fieldCP "rseq" "clojure.lang.PersistentQueue$Seq" (class "clojure.lang.ISeq"))))
                                      (11 (invokestatic
					(methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int)))
                                      (14 (iadd))
                                      (15 (ireturn))
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.PersistentQueue$Seq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 17)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.PersistentQueue$Seq")))
                                      (3 (dup))
                                      (4 (aload_1))
                                      (5 (aload_0))
                                      (6 (getfield (fieldCP "f" "clojure.lang.PersistentQueue$Seq" (class "clojure.lang.ISeq"))))
                                      (9 (aload_0))
                                      (10 (getfield (fieldCP "rseq" "clojure.lang.PersistentQueue$Seq" (class "clojure.lang.ISeq"))))
                                      (13 (invokespecial
					(methodCP "<init>" "clojure.lang.PersistentQueue$Seq" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.ISeq") (class "clojure.lang.ISeq")) void)))
                                      (16 (areturn))
                                      (endofcode 17))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.Obj"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "withMeta" "clojure.lang.PersistentQueue$Seq" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.PersistentQueue$Seq"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.IObj"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "withMeta" "clojure.lang.PersistentQueue$Seq" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.PersistentQueue$Seq"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *PersistentQueue$Seq-class-table*
  (make-static-class-decls 
   *clojure.lang.PersistentQueue$Seq*))

(defconst *package-name-map* 
  ("clojure.lang.PersistentQueue$Seq" . "clojure.lang"))

