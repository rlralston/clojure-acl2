; Keyword-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:51 CDT 2014.
;

(defconst *clojure.lang.Keyword*
 (make-class-def
      '(class "clojure.lang.Keyword"
            "java.lang.Object"
            (constant_pool
                        (INT -1640531527)
                        (STRING  ":")
                        (STRING  "Wrong number of args passed to keyword: "))
            (fields
                        (field "table" (class "java.util.concurrent.ConcurrentHashMap") (accessflags  *class*  *private*  *static* ) -1)
                        (field "rq" (class "java.lang.ref.ReferenceQueue") (accessflags  *class*  *final*  *static* ) -1)
                        (field "sym" (class "clojure.lang.Symbol") (accessflags  *class*  *final*  *public* ) -1)
                        (field "hash" int (accessflags  *class*  *final* ) -1)
                        (field "_str" (class "java.lang.String") (accessflags  *class* ) -1))
            (methods
                        (method "intern"
                              (parameters (class "clojure.lang.Symbol"))
                              (returntype . (class "clojure.lang.Keyword"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 6) (max_locals . 4) (code_length . 90)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "meta" "clojure.lang.Symbol" () (class "clojure.lang.IPersistentMap")))) 
                                      (4 (ifnull 16)) ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (aconst_null)) 
                                      (9 (invokevirtual (methodCP "withMeta" "clojure.lang.Symbol" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")))) 
                                      (12 (checkcast (class "clojure.lang.Symbol"))) 
                                      (15 (astore_0)) 
                                      (16 (getstatic (fieldCP "rq" "clojure.lang.Keyword" (class "java.lang.ref.ReferenceQueue")))) ;;at TAG_0
                                      (19 (getstatic (fieldCP "table" "clojure.lang.Keyword" (class "java.util.concurrent.ConcurrentHashMap")))) 
                                      (22 (invokestatic (methodCP "clearCache" "clojure.lang.Util" ((class "java.lang.ref.ReferenceQueue") (class "java.util.concurrent.ConcurrentHashMap")) void))) 
                                      (25 (new (class "clojure.lang.Keyword"))) 
                                      (28 (dup)) 
                                      (29 (aload_0)) 
                                      (30 (invokespecial (methodCP "<init>" "clojure.lang.Keyword" ((class "clojure.lang.Symbol")) void))) 
                                      (33 (astore_1)) 
                                      (34 (getstatic (fieldCP "table" "clojure.lang.Keyword" (class "java.util.concurrent.ConcurrentHashMap")))) 
                                      (37 (aload_0)) 
                                      (38 (new (class "java.lang.ref.WeakReference"))) 
                                      (41 (dup)) 
                                      (42 (aload_1)) 
                                      (43 (getstatic (fieldCP "rq" "clojure.lang.Keyword" (class "java.lang.ref.ReferenceQueue")))) 
                                      (46 (invokespecial (methodCP "<init>" "java.lang.ref.WeakReference" ((class "java.lang.Object") (class "java.lang.ref.ReferenceQueue")) void))) 
                                      (49 (invokevirtual (methodCP "putIfAbsent" "java.util.concurrent.ConcurrentHashMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (52 (checkcast (class "java.lang.ref.Reference"))) 
                                      (55 (astore_2)) 
                                      (56 (aload_2)) 
                                      (57 (ifnonnull 62)) ;;to TAG_1
                                      (60 (aload_1)) 
                                      (61 (areturn)) 
                                      (62 (aload_2)) ;;at TAG_1
                                      (63 (invokevirtual (methodCP "get" "java.lang.ref.Reference" () (class "java.lang.Object")))) 
                                      (66 (checkcast (class "clojure.lang.Keyword"))) 
                                      (69 (astore_3)) 
                                      (70 (aload_3)) 
                                      (71 (ifnull 76))  ;;to TAG_2
                                      (74 (aload_3)) 
                                      (75 (areturn)) 
                                      (76 (getstatic (fieldCP "table" "clojure.lang.Keyword" (class "java.util.concurrent.ConcurrentHashMap")))) ;;at TAG_2
                                      (79 (aload_0)) 
                                      (80 (aload_2)) 
                                      (81 (invokevirtual (methodCP "remove" "java.util.concurrent.ConcurrentHashMap" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (84 (pop)) 
                                      (85 (aload_0)) 
                                      (86 (invokestatic (methodCP "intern" "clojure.lang.Keyword" ((class "clojure.lang.Symbol")) (class "clojure.lang.Keyword")))) 
                                      (89 (areturn)) 
                                      (endofcode 90))
                                   (Exceptions )
                                   (StackMap )))
                        (method "intern"
                              (parameters (class "java.lang.String") (class "java.lang.String"))
                              (returntype . (class "clojure.lang.Keyword"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 9)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (5 (invokestatic
					(methodCP "intern" "clojure.lang.Keyword" ((class "clojure.lang.Symbol")) (class "clojure.lang.Keyword"))))
                                      (8 (areturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "intern"
                              (parameters (class "java.lang.String"))
                              (returntype . (class "clojure.lang.Keyword"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (4 (invokestatic
					(methodCP "intern" "clojure.lang.Keyword" ((class "clojure.lang.Symbol")) (class "clojure.lang.Keyword"))))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "clojure.lang.Symbol"))
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 21)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "sym" "clojure.lang.Keyword" (class "clojure.lang.Symbol"))))
                                      (9 (aload_0))
                                      (10 (aload_1))
                                      (11 (invokevirtual
					(methodCP "hashCode" "clojure.lang.Symbol" () int)))
                                      (14 (ldc 0))        ;;INT:: "-1640531527"
                                      (16 (iadd))
                                      (17 (putfield (fieldCP "hash" "clojure.lang.Keyword" int)))
                                      (20 (return))
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap )))
                        (method "find"
                              (parameters (class "clojure.lang.Symbol"))
                              (returntype . (class "clojure.lang.Keyword"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 25)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "table" "clojure.lang.Keyword" (class "java.util.concurrent.ConcurrentHashMap")))) 
                                      (3 (aload_0)) 
                                      (4 (invokevirtual (methodCP "get" "java.util.concurrent.ConcurrentHashMap" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (7 (checkcast (class "java.lang.ref.Reference"))) 
                                      (10 (astore_1)) 
                                      (11 (aload_1)) 
                                      (12 (ifnull 23))  ;;to TAG_0
                                      (15 (aload_1)) 
                                      (16 (invokevirtual (methodCP "get" "java.lang.ref.Reference" () (class "java.lang.Object")))) 
                                      (19 (checkcast (class "clojure.lang.Keyword"))) 
                                      (22 (areturn)) 
                                      (23 (aconst_null)) ;;at TAG_0
                                      (24 (areturn)) 
                                      (endofcode 25))
                                   (Exceptions )
                                   (StackMap )))
                        (method "find"
                              (parameters (class "java.lang.String") (class "java.lang.String"))
                              (returntype . (class "clojure.lang.Keyword"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 9)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (5 (invokestatic
					(methodCP "find" "clojure.lang.Keyword" ((class "clojure.lang.Symbol")) (class "clojure.lang.Keyword"))))
                                      (8 (areturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "find"
                              (parameters (class "java.lang.String"))
                              (returntype . (class "clojure.lang.Keyword"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (4 (invokestatic
					(methodCP "find" "clojure.lang.Keyword" ((class "clojure.lang.Symbol")) (class "clojure.lang.Keyword"))))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "hashCode"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "hash" "clojure.lang.Keyword" int)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "hasheq"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "hash" "clojure.lang.Keyword" int)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "toString"
                              (parameters )
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 41)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "_str" "clojure.lang.Keyword" (class "java.lang.String")))) 
                                      (4 (ifnonnull 36))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (new (class "java.lang.StringBuilder"))) 
                                      (11 (dup)) 
                                      (12 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (15 (ldc 1)) ;;STRING:: ":"
                                      (17 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (20 (aload_0)) 
                                      (21 (getfield (fieldCP "sym" "clojure.lang.Keyword" (class "clojure.lang.Symbol")))) 
                                      (24 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (27 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (30 (invokevirtual (methodCP "intern" "java.lang.String" () (class "java.lang.String")))) 
                                      (33 (putfield (fieldCP "_str" "clojure.lang.Keyword" (class "java.lang.String")))) 
                                      (36 (aload_0)) ;;at TAG_0
                                      (37 (getfield (fieldCP "_str" "clojure.lang.Keyword" (class "java.lang.String")))) 
                                      (40 (areturn)) 
                                      (endofcode 41))
                                   (Exceptions )
                                   (StackMap )))
                        (method "throwArity"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 1) (code_length . 30)
                                   (parsedcode
                                      (0 (new (class "java.lang.IllegalArgumentException")))
                                      (3 (dup))
                                      (4 (new (class "java.lang.StringBuilder")))
                                      (7 (dup))
                                      (8 (invokespecial
					(methodCP "<init>" "java.lang.StringBuilder" () void)))
                                      (11 (ldc 2))        ;;STRING:: "Wrong number of args passed to keyword: "
                                      (13 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (16 (aload_0))
                                      (17 (invokevirtual
					(methodCP "toString" "clojure.lang.Keyword" () (class "java.lang.String"))))
                                      (20 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (23 (invokevirtual
					(methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String"))))
                                      (26 (invokespecial
					(methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void)))
                                      (29 (athrow))
                                      (endofcode 30))
                                   (Exceptions )
                                   (StackMap )))
                        (method "call"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "run"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "compareTo"
                              (parameters (class "java.lang.Object"))
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "sym" "clojure.lang.Keyword" (class "clojure.lang.Symbol"))))
                                      (4 (aload_1))
                                      (5 (checkcast (class "clojure.lang.Keyword")))
                                      (8 (getfield (fieldCP "sym" "clojure.lang.Keyword" (class "clojure.lang.Symbol"))))
                                      (11 (invokevirtual
					(methodCP "compareTo" "clojure.lang.Symbol" ((class "java.lang.Object")) int)))
                                      (14 (ireturn))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getNamespace"
                              (parameters )
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "sym" "clojure.lang.Keyword" (class "clojure.lang.Symbol"))))
                                      (4 (invokevirtual
					(methodCP "getNamespace" "clojure.lang.Symbol" () (class "java.lang.String"))))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getName"
                              (parameters )
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "sym" "clojure.lang.Keyword" (class "clojure.lang.Symbol"))))
                                      (4 (invokevirtual
					(methodCP "getName" "clojure.lang.Symbol" () (class "java.lang.String"))))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "readResolve"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "sym" "clojure.lang.Keyword" (class "clojure.lang.Symbol"))))
                                      (4 (invokestatic
					(methodCP "intern" "clojure.lang.Keyword" ((class "clojure.lang.Symbol")) (class "clojure.lang.Keyword"))))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 24)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (instanceof (class "clojure.lang.ILookup"))) 
                                      (4 (ifeq 18))  ;;to TAG_0
                                      (7 (aload_1)) 
                                      (8 (checkcast (class "clojure.lang.ILookup"))) 
                                      (11 (aload_0)) 
                                      (12 (invokeinterface (methodCP "valAt" "clojure.lang.ILookup" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (17 (areturn)) 
                                      (18 (aload_1)) ;;at TAG_0
                                      (19 (aload_0)) 
                                      (20 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (23 (areturn)) 
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 26)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (instanceof (class "clojure.lang.ILookup"))) 
                                      (4 (ifeq 19))  ;;to TAG_0
                                      (7 (aload_1)) 
                                      (8 (checkcast (class "clojure.lang.ILookup"))) 
                                      (11 (aload_0)) 
                                      (12 (aload_2)) 
                                      (13 (invokeinterface (methodCP "valAt" "clojure.lang.ILookup" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (18 (areturn)) 
                                      (19 (aload_1)) ;;at TAG_0
                                      (20 (aload_0)) 
                                      (21 (aload_2)) 
                                      (22 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (25 (areturn)) 
                                      (endofcode 26))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 4) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 5) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 6) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 7) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 8) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 9) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 10) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 11) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 12) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 13) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 14) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 15) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 16) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 17) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 18) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 19) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 20) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 21) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (array (class "java.lang.Object")))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *transient* )
                              (code
                                   (max_stack . 1) (max_locals . 22) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "throwArity" "clojure.lang.Keyword" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "applyTo"
                              (parameters (class "clojure.lang.ISeq"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokestatic
					(methodCP "applyToHelper" "clojure.lang.AFn" ((class "clojure.lang.IFn") (class "clojure.lang.ISeq")) (class "java.lang.Object"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 21)
                                   (parsedcode
                                      (0 (new (class "java.util.concurrent.ConcurrentHashMap")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.util.concurrent.ConcurrentHashMap" () void)))
                                      (7 (putstatic (fieldCP "table" "clojure.lang.Keyword" (class "java.util.concurrent.ConcurrentHashMap"))))
                                      (10 (new (class "java.lang.ref.ReferenceQueue")))
                                      (13 (dup))
                                      (14 (invokespecial
					(methodCP "<init>" "java.lang.ref.ReferenceQueue" () void)))
                                      (17 (putstatic (fieldCP "rq" "clojure.lang.Keyword" (class "java.lang.ref.ReferenceQueue"))))
                                      (20 (return))
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.IFn" "java.lang.Comparable" "clojure.lang.Named" "java.io.Serializable" "clojure.lang.IHashEq")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *Keyword-class-table*
  (make-static-class-decls 
   *clojure.lang.Keyword*))

(defconst *package-name-map* 
  ("clojure.lang.Keyword" . "clojure.lang"))

