; ArraySeq$ArraySeq_float-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:50 CDT 2014.
;

(defconst *clojure.lang.ArraySeq$ArraySeq_float*
 (make-class-def
      '(class "clojure.lang.ArraySeq$ArraySeq_float"
            "clojure.lang.ASeq"
            (constant_pool)
            (fields
                        (field "array" (array float) (accessflags  *class*  *final*  *public* ) -1)
                        (field "i" int (accessflags  *class*  *final* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "clojure.lang.IPersistentMap") (array float) int)
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokespecial
					(methodCP "<init>" "clojure.lang.ASeq" ((class "clojure.lang.IPersistentMap")) void)))
                                      (5 (aload_0))
                                      (6 (aload_2))
                                      (7 (putfield (fieldCP "array" "clojure.lang.ArraySeq$ArraySeq_float" (array float))))
                                      (10 (aload_0))
                                      (11 (iload_3))
                                      (12 (putfield (fieldCP "i" "clojure.lang.ArraySeq$ArraySeq_float" int)))
                                      (15 (return))
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "first"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "array" "clojure.lang.ArraySeq$ArraySeq_float" (array float))))
                                      (4 (aload_0))
                                      (5 (getfield (fieldCP "i" "clojure.lang.ArraySeq$ArraySeq_float" int)))
                                      (8 (faload))
                                      (9 (invokestatic
					(methodCP "num" "clojure.lang.Numbers" (float) (class "java.lang.Number"))))
                                      (12 (areturn))
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "next"
                              (parameters )
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 1) (code_length . 38)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "i" "clojure.lang.ArraySeq$ArraySeq_float" int))) 
                                      (4 (iconst_1)) 
                                      (5 (iadd)) 
                                      (6 (aload_0)) 
                                      (7 (getfield (fieldCP "array" "clojure.lang.ArraySeq$ArraySeq_float" (array float)))) 
                                      (10 (arraylength)) 
                                      (11 (if_icmpge 36))  ;;to TAG_0
                                      (14 (new (class "clojure.lang.ArraySeq$ArraySeq_float"))) 
                                      (17 (dup)) 
                                      (18 (aload_0)) 
                                      (19 (invokevirtual (methodCP "meta" "clojure.lang.ArraySeq$ArraySeq_float" () (class "clojure.lang.IPersistentMap")))) 
                                      (22 (aload_0)) 
                                      (23 (getfield (fieldCP "array" "clojure.lang.ArraySeq$ArraySeq_float" (array float)))) 
                                      (26 (aload_0)) 
                                      (27 (getfield (fieldCP "i" "clojure.lang.ArraySeq$ArraySeq_float" int))) 
                                      (30 (iconst_1)) 
                                      (31 (iadd)) 
                                      (32 (invokespecial (methodCP "<init>" "clojure.lang.ArraySeq$ArraySeq_float" ((class "clojure.lang.IPersistentMap") (array float) int) void))) 
                                      (35 (areturn)) 
                                      (36 (aconst_null)) ;;at TAG_0
                                      (37 (areturn)) 
                                      (endofcode 38))
                                   (Exceptions )
                                   (StackMap )))
                        (method "count"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "array" "clojure.lang.ArraySeq$ArraySeq_float" (array float))))
                                      (4 (arraylength))
                                      (5 (aload_0))
                                      (6 (getfield (fieldCP "i" "clojure.lang.ArraySeq$ArraySeq_float" int)))
                                      (9 (isub))
                                      (10 (ireturn))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "index"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "i" "clojure.lang.ArraySeq$ArraySeq_float" int)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.ArraySeq$ArraySeq_float"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 17)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.ArraySeq$ArraySeq_float")))
                                      (3 (dup))
                                      (4 (aload_1))
                                      (5 (aload_0))
                                      (6 (getfield (fieldCP "array" "clojure.lang.ArraySeq$ArraySeq_float" (array float))))
                                      (9 (aload_0))
                                      (10 (getfield (fieldCP "i" "clojure.lang.ArraySeq$ArraySeq_float" int)))
                                      (13 (invokespecial
					(methodCP "<init>" "clojure.lang.ArraySeq$ArraySeq_float" ((class "clojure.lang.IPersistentMap") (array float) int) void)))
                                      (16 (areturn))
                                      (endofcode 17))
                                   (Exceptions )
                                   (StackMap )))
                        (method "reduce"
                              (parameters (class "clojure.lang.IFn"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 54)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "array" "clojure.lang.ArraySeq$ArraySeq_float" (array float)))) 
                                      (4 (aload_0)) 
                                      (5 (getfield (fieldCP "i" "clojure.lang.ArraySeq$ArraySeq_float" int))) 
                                      (8 (faload)) 
                                      (9 (invokestatic (methodCP "num" "clojure.lang.Numbers" (float) (class "java.lang.Number")))) 
                                      (12 (astore_2)) 
                                      (13 (aload_0)) 
                                      (14 (getfield (fieldCP "i" "clojure.lang.ArraySeq$ArraySeq_float" int))) 
                                      (17 (iconst_1)) 
                                      (18 (iadd)) 
                                      (19 (istore_3)) 
                                      (20 (iload_3)) ;;at TAG_1
                                      (21 (aload_0)) 
                                      (22 (getfield (fieldCP "array" "clojure.lang.ArraySeq$ArraySeq_float" (array float)))) 
                                      (25 (arraylength)) 
                                      (26 (if_icmpge 52))  ;;to TAG_0
                                      (29 (aload_1)) 
                                      (30 (aload_2)) 
                                      (31 (aload_0)) 
                                      (32 (getfield (fieldCP "array" "clojure.lang.ArraySeq$ArraySeq_float" (array float)))) 
                                      (35 (iload_3)) 
                                      (36 (faload)) 
                                      (37 (invokestatic (methodCP "num" "clojure.lang.Numbers" (float) (class "java.lang.Number")))) 
                                      (40 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (45 (astore_2)) 
                                      (46 (iinc 3 1)) 
                                      (49 (goto 20)) ;;to TAG_1
                                      (52 (aload_2)) ;;at TAG_0
                                      (53 (areturn)) 
                                      (endofcode 54))
                                   (Exceptions )
                                   (StackMap )))
                        (method "reduce"
                              (parameters (class "clojure.lang.IFn") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 5) (code_length . 64)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (aload_2)) 
                                      (2 (aload_0)) 
                                      (3 (getfield (fieldCP "array" "clojure.lang.ArraySeq$ArraySeq_float" (array float)))) 
                                      (6 (aload_0)) 
                                      (7 (getfield (fieldCP "i" "clojure.lang.ArraySeq$ArraySeq_float" int))) 
                                      (10 (faload)) 
                                      (11 (invokestatic (methodCP "num" "clojure.lang.Numbers" (float) (class "java.lang.Number")))) 
                                      (14 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (19 (astore_3)) 
                                      (20 (aload_0)) 
                                      (21 (getfield (fieldCP "i" "clojure.lang.ArraySeq$ArraySeq_float" int))) 
                                      (24 (iconst_1)) 
                                      (25 (iadd)) 
                                      (26 (istore 4)) 
                                      (28 (iload 4)) ;;at TAG_1
                                      (30 (aload_0)) 
                                      (31 (getfield (fieldCP "array" "clojure.lang.ArraySeq$ArraySeq_float" (array float)))) 
                                      (34 (arraylength)) 
                                      (35 (if_icmpge 62))  ;;to TAG_0
                                      (38 (aload_1)) 
                                      (39 (aload_3)) 
                                      (40 (aload_0)) 
                                      (41 (getfield (fieldCP "array" "clojure.lang.ArraySeq$ArraySeq_float" (array float)))) 
                                      (44 (iload 4)) 
                                      (46 (faload)) 
                                      (47 (invokestatic (methodCP "num" "clojure.lang.Numbers" (float) (class "java.lang.Number")))) 
                                      (50 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (55 (astore_3)) 
                                      (56 (iinc 4 1)) 
                                      (59 (goto 28)) ;;to TAG_1
                                      (62 (aload_3)) ;;at TAG_0
                                      (63 (areturn)) 
                                      (endofcode 64))
                                   (Exceptions )
                                   (StackMap )))
                        (method "indexOf"
                              (parameters (class "java.lang.Object"))
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 55)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (instanceof (class "java.lang.Number"))) 
                                      (4 (ifeq 53)) ;;to TAG_0
                                      (7 (aload_1)) 
                                      (8 (checkcast (class "java.lang.Number"))) 
                                      (11 (invokevirtual (methodCP "floatValue" "java.lang.Number" () float))) 
                                      (14 (fstore_2)) 
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "i" "clojure.lang.ArraySeq$ArraySeq_float" int))) 
                                      (19 (istore_3)) 
                                      (20 (iload_3)) ;;at TAG_2
                                      (21 (aload_0)) 
                                      (22 (getfield (fieldCP "array" "clojure.lang.ArraySeq$ArraySeq_float" (array float)))) 
                                      (25 (arraylength)) 
                                      (26 (if_icmpge 53)) ;;to TAG_0
                                      (29 (fload_2)) 
                                      (30 (aload_0)) 
                                      (31 (getfield (fieldCP "array" "clojure.lang.ArraySeq$ArraySeq_float" (array float)))) 
                                      (34 (iload_3)) 
                                      (35 (faload)) 
                                      (36 (fcmpl)) 
                                      (37 (ifne 47)) ;;to TAG_1
                                      (40 (iload_3)) 
                                      (41 (aload_0)) 
                                      (42 (getfield (fieldCP "i" "clojure.lang.ArraySeq$ArraySeq_float" int))) 
                                      (45 (isub)) 
                                      (46 (ireturn)) 
                                      (47 (iinc 3 1)) ;;at TAG_1
                                      (50 (goto 20))  ;;to TAG_2
                                      (53 (iconst_m1)) ;;at TAG_0
                                      (54 (ireturn)) 
                                      (endofcode 55))
                                   (Exceptions )
                                   (StackMap )))
                        (method "lastIndexOf"
                              (parameters (class "java.lang.Object"))
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 57)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (instanceof (class "java.lang.Number"))) 
                                      (4 (ifeq 55)) ;;to TAG_0
                                      (7 (aload_1)) 
                                      (8 (checkcast (class "java.lang.Number"))) 
                                      (11 (invokevirtual (methodCP "floatValue" "java.lang.Number" () float))) 
                                      (14 (fstore_2)) 
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "array" "clojure.lang.ArraySeq$ArraySeq_float" (array float)))) 
                                      (19 (arraylength)) 
                                      (20 (iconst_1)) 
                                      (21 (isub)) 
                                      (22 (istore_3)) 
                                      (23 (iload_3)) ;;at TAG_2
                                      (24 (aload_0)) 
                                      (25 (getfield (fieldCP "i" "clojure.lang.ArraySeq$ArraySeq_float" int))) 
                                      (28 (if_icmplt 55)) ;;to TAG_0
                                      (31 (fload_2)) 
                                      (32 (aload_0)) 
                                      (33 (getfield (fieldCP "array" "clojure.lang.ArraySeq$ArraySeq_float" (array float)))) 
                                      (36 (iload_3)) 
                                      (37 (faload)) 
                                      (38 (fcmpl)) 
                                      (39 (ifne 49)) ;;to TAG_1
                                      (42 (iload_3)) 
                                      (43 (aload_0)) 
                                      (44 (getfield (fieldCP "i" "clojure.lang.ArraySeq$ArraySeq_float" int))) 
                                      (47 (isub)) 
                                      (48 (ireturn)) 
                                      (49 (iinc 3 -1)) ;;at TAG_1
                                      (52 (goto 23))  ;;to TAG_2
                                      (55 (iconst_m1)) ;;at TAG_0
                                      (56 (ireturn)) 
                                      (endofcode 57))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.Obj"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "withMeta" "clojure.lang.ArraySeq$ArraySeq_float" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.ArraySeq$ArraySeq_float"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.IObj"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "withMeta" "clojure.lang.ArraySeq$ArraySeq_float" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.ArraySeq$ArraySeq_float"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.IndexedSeq" "clojure.lang.IReduce")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *ArraySeq$ArraySeq_float-class-table*
  (make-static-class-decls 
   *clojure.lang.ArraySeq$ArraySeq_float*))

(defconst *package-name-map* 
  ("clojure.lang.ArraySeq$ArraySeq_float" . "clojure.lang"))

