; PersistentVector$ChunkedSeq-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:52 CDT 2014.
;

(defconst *clojure.lang.PersistentVector$ChunkedSeq*
 (make-class-def
      '(class "clojure.lang.PersistentVector$ChunkedSeq"
            "clojure.lang.ASeq"
            (constant_pool)
            (fields
                        (field "vec" (class "clojure.lang.PersistentVector") (accessflags  *class*  *final*  *public* ) -1)
                        (field "node" (array (class "java.lang.Object")) (accessflags  *class*  *final* ) -1)
                        (field "i" int (accessflags  *class*  *final* ) -1)
                        (field "offset" int (accessflags  *class*  *final*  *public* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "clojure.lang.PersistentVector") int int)
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 29)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.ASeq" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "vec" "clojure.lang.PersistentVector$ChunkedSeq" (class "clojure.lang.PersistentVector"))))
                                      (9 (aload_0))
                                      (10 (iload_2))
                                      (11 (putfield (fieldCP "i" "clojure.lang.PersistentVector$ChunkedSeq" int)))
                                      (14 (aload_0))
                                      (15 (iload_3))
                                      (16 (putfield (fieldCP "offset" "clojure.lang.PersistentVector$ChunkedSeq" int)))
                                      (19 (aload_0))
                                      (20 (aload_1))
                                      (21 (iload_2))
                                      (22 (invokevirtual
					(methodCP "arrayFor" "clojure.lang.PersistentVector" (int) (array (class "java.lang.Object")))))
                                      (25 (putfield (fieldCP "node" "clojure.lang.PersistentVector$ChunkedSeq" (array (class "java.lang.Object")))))
                                      (28 (return))
                                      (endofcode 29))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "clojure.lang.IPersistentMap") (class "clojure.lang.PersistentVector") (array (class "java.lang.Object")) int int)
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 6) (code_length . 28)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokespecial
					(methodCP "<init>" "clojure.lang.ASeq" ((class "clojure.lang.IPersistentMap")) void)))
                                      (5 (aload_0))
                                      (6 (aload_2))
                                      (7 (putfield (fieldCP "vec" "clojure.lang.PersistentVector$ChunkedSeq" (class "clojure.lang.PersistentVector"))))
                                      (10 (aload_0))
                                      (11 (aload_3))
                                      (12 (putfield (fieldCP "node" "clojure.lang.PersistentVector$ChunkedSeq" (array (class "java.lang.Object")))))
                                      (15 (aload_0))
                                      (16 (iload 4))
                                      (18 (putfield (fieldCP "i" "clojure.lang.PersistentVector$ChunkedSeq" int)))
                                      (21 (aload_0))
                                      (22 (iload 5))
                                      (24 (putfield (fieldCP "offset" "clojure.lang.PersistentVector$ChunkedSeq" int)))
                                      (27 (return))
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "clojure.lang.PersistentVector") (array (class "java.lang.Object")) int int)
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 5) (code_length . 26)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.ASeq" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "vec" "clojure.lang.PersistentVector$ChunkedSeq" (class "clojure.lang.PersistentVector"))))
                                      (9 (aload_0))
                                      (10 (aload_2))
                                      (11 (putfield (fieldCP "node" "clojure.lang.PersistentVector$ChunkedSeq" (array (class "java.lang.Object")))))
                                      (14 (aload_0))
                                      (15 (iload_3))
                                      (16 (putfield (fieldCP "i" "clojure.lang.PersistentVector$ChunkedSeq" int)))
                                      (19 (aload_0))
                                      (20 (iload 4))
                                      (22 (putfield (fieldCP "offset" "clojure.lang.PersistentVector$ChunkedSeq" int)))
                                      (25 (return))
                                      (endofcode 26))
                                   (Exceptions )
                                   (StackMap )))
                        (method "chunkedFirst"
                              (parameters )
                              (returntype . (class "clojure.lang.IChunk"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 1) (code_length . 16)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.ArrayChunk")))
                                      (3 (dup))
                                      (4 (aload_0))
                                      (5 (getfield (fieldCP "node" "clojure.lang.PersistentVector$ChunkedSeq" (array (class "java.lang.Object")))))
                                      (8 (aload_0))
                                      (9 (getfield (fieldCP "offset" "clojure.lang.PersistentVector$ChunkedSeq" int)))
                                      (12 (invokespecial
					(methodCP "<init>" "clojure.lang.ArrayChunk" ((array (class "java.lang.Object")) int) void)))
                                      (15 (areturn))
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "chunkedNext"
                              (parameters )
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 1) (code_length . 45)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "i" "clojure.lang.PersistentVector$ChunkedSeq" int))) 
                                      (4 (aload_0)) 
                                      (5 (getfield (fieldCP "node" "clojure.lang.PersistentVector$ChunkedSeq" (array (class "java.lang.Object"))))) 
                                      (8 (arraylength)) 
                                      (9 (iadd)) 
                                      (10 (aload_0)) 
                                      (11 (getfield (fieldCP "vec" "clojure.lang.PersistentVector$ChunkedSeq" (class "clojure.lang.PersistentVector")))) 
                                      (14 (getfield (fieldCP "cnt" "clojure.lang.PersistentVector" int))) 
                                      (17 (if_icmpge 43))  ;;to TAG_0
                                      (20 (new (class "clojure.lang.PersistentVector$ChunkedSeq"))) 
                                      (23 (dup)) 
                                      (24 (aload_0)) 
                                      (25 (getfield (fieldCP "vec" "clojure.lang.PersistentVector$ChunkedSeq" (class "clojure.lang.PersistentVector")))) 
                                      (28 (aload_0)) 
                                      (29 (getfield (fieldCP "i" "clojure.lang.PersistentVector$ChunkedSeq" int))) 
                                      (32 (aload_0)) 
                                      (33 (getfield (fieldCP "node" "clojure.lang.PersistentVector$ChunkedSeq" (array (class "java.lang.Object"))))) 
                                      (36 (arraylength)) 
                                      (37 (iadd)) 
                                      (38 (iconst_0)) 
                                      (39 (invokespecial (methodCP "<init>" "clojure.lang.PersistentVector$ChunkedSeq" ((class "clojure.lang.PersistentVector") int int) void))) 
                                      (42 (areturn)) 
                                      (43 (aconst_null)) ;;at TAG_0
                                      (44 (areturn)) 
                                      (endofcode 45))
                                   (Exceptions )
                                   (StackMap )))
                        (method "chunkedMore"
                              (parameters )
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "chunkedNext" "clojure.lang.PersistentVector$ChunkedSeq" () (class "clojure.lang.ISeq")))) 
                                      (4 (astore_1)) 
                                      (5 (aload_1)) 
                                      (6 (ifnonnull 13))  ;;to TAG_0
                                      (9 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentList" (class "clojure.lang.PersistentList$EmptyList")))) 
                                      (12 (areturn)) 
                                      (13 (aload_1)) ;;at TAG_0
                                      (14 (areturn)) 
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.Obj"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 2) (code_length . 35)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (aload_0)) 
                                      (2 (getfield (fieldCP "_meta" "clojure.lang.PersistentVector$ChunkedSeq" (class "clojure.lang.IPersistentMap")))) 
                                      (5 (if_acmpne 10))  ;;to TAG_0
                                      (8 (aload_0)) 
                                      (9 (areturn)) 
                                      (10 (new (class "clojure.lang.PersistentVector$ChunkedSeq"))) ;;at TAG_0
                                      (13 (dup)) 
                                      (14 (aload_1)) 
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "vec" "clojure.lang.PersistentVector$ChunkedSeq" (class "clojure.lang.PersistentVector")))) 
                                      (19 (aload_0)) 
                                      (20 (getfield (fieldCP "node" "clojure.lang.PersistentVector$ChunkedSeq" (array (class "java.lang.Object"))))) 
                                      (23 (aload_0)) 
                                      (24 (getfield (fieldCP "i" "clojure.lang.PersistentVector$ChunkedSeq" int))) 
                                      (27 (aload_0)) 
                                      (28 (getfield (fieldCP "offset" "clojure.lang.PersistentVector$ChunkedSeq" int))) 
                                      (31 (invokespecial (methodCP "<init>" "clojure.lang.PersistentVector$ChunkedSeq" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.PersistentVector") (array (class "java.lang.Object")) int int) void))) 
                                      (34 (areturn)) 
                                      (endofcode 35))
                                   (Exceptions )
                                   (StackMap )))
                        (method "first"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "node" "clojure.lang.PersistentVector$ChunkedSeq" (array (class "java.lang.Object")))))
                                      (4 (aload_0))
                                      (5 (getfield (fieldCP "offset" "clojure.lang.PersistentVector$ChunkedSeq" int)))
                                      (8 (aaload))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "next"
                              (parameters )
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 1) (code_length . 45)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "offset" "clojure.lang.PersistentVector$ChunkedSeq" int))) 
                                      (4 (iconst_1)) 
                                      (5 (iadd)) 
                                      (6 (aload_0)) 
                                      (7 (getfield (fieldCP "node" "clojure.lang.PersistentVector$ChunkedSeq" (array (class "java.lang.Object"))))) 
                                      (10 (arraylength)) 
                                      (11 (if_icmpge 40))  ;;to TAG_0
                                      (14 (new (class "clojure.lang.PersistentVector$ChunkedSeq"))) 
                                      (17 (dup)) 
                                      (18 (aload_0)) 
                                      (19 (getfield (fieldCP "vec" "clojure.lang.PersistentVector$ChunkedSeq" (class "clojure.lang.PersistentVector")))) 
                                      (22 (aload_0)) 
                                      (23 (getfield (fieldCP "node" "clojure.lang.PersistentVector$ChunkedSeq" (array (class "java.lang.Object"))))) 
                                      (26 (aload_0)) 
                                      (27 (getfield (fieldCP "i" "clojure.lang.PersistentVector$ChunkedSeq" int))) 
                                      (30 (aload_0)) 
                                      (31 (getfield (fieldCP "offset" "clojure.lang.PersistentVector$ChunkedSeq" int))) 
                                      (34 (iconst_1)) 
                                      (35 (iadd)) 
                                      (36 (invokespecial (methodCP "<init>" "clojure.lang.PersistentVector$ChunkedSeq" ((class "clojure.lang.PersistentVector") (array (class "java.lang.Object")) int int) void))) 
                                      (39 (areturn)) 
                                      (40 (aload_0)) ;;at TAG_0
                                      (41 (invokevirtual (methodCP "chunkedNext" "clojure.lang.PersistentVector$ChunkedSeq" () (class "clojure.lang.ISeq")))) 
                                      (44 (areturn)) 
                                      (endofcode 45))
                                   (Exceptions )
                                   (StackMap )))
                        (method "count"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 18)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "vec" "clojure.lang.PersistentVector$ChunkedSeq" (class "clojure.lang.PersistentVector"))))
                                      (4 (getfield (fieldCP "cnt" "clojure.lang.PersistentVector" int)))
                                      (7 (aload_0))
                                      (8 (getfield (fieldCP "i" "clojure.lang.PersistentVector$ChunkedSeq" int)))
                                      (11 (aload_0))
                                      (12 (getfield (fieldCP "offset" "clojure.lang.PersistentVector$ChunkedSeq" int)))
                                      (15 (iadd))
                                      (16 (isub))
                                      (17 (ireturn))
                                      (endofcode 18))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.IObj"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "withMeta" "clojure.lang.PersistentVector$ChunkedSeq" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.Obj"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.IChunkedSeq" "clojure.lang.Counted")
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *PersistentVector$ChunkedSeq-class-table*
  (make-static-class-decls 
   *clojure.lang.PersistentVector$ChunkedSeq*))

(defconst *package-name-map* 
  ("clojure.lang.PersistentVector$ChunkedSeq" . "clojure.lang"))

