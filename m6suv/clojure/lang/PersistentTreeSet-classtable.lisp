; PersistentTreeSet-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:52 CDT 2014.
;

(defconst *clojure.lang.PersistentTreeSet*
 (make-class-def
      '(class "clojure.lang.PersistentTreeSet"
            "clojure.lang.APersistentSet"
            (constant_pool)
            (fields
                        (field "EMPTY" (class "clojure.lang.PersistentTreeSet") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "_meta" (class "clojure.lang.IPersistentMap") (accessflags  *class*  *final* ) -1))
            (methods
                        (method "create"
                              (parameters (class "clojure.lang.ISeq"))
                              (returntype . (class "clojure.lang.PersistentTreeSet"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 34)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentTreeSet" (class "clojure.lang.PersistentTreeSet")))) 
                                      (3 (astore_1)) 
                                      (4 (aload_0)) ;;at TAG_1
                                      (5 (ifnull 32))  ;;to TAG_0
                                      (8 (aload_1)) 
                                      (9 (aload_0)) 
                                      (10 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (15 (invokevirtual (methodCP "cons" "clojure.lang.PersistentTreeSet" ((class "java.lang.Object")) (class "clojure.lang.IPersistentSet")))) 
                                      (18 (checkcast (class "clojure.lang.PersistentTreeSet"))) 
                                      (21 (astore_1)) 
                                      (22 (aload_0)) 
                                      (23 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (28 (astore_0)) 
                                      (29 (goto 4)) ;;to TAG_1
                                      (32 (aload_1)) ;;at TAG_0
                                      (33 (areturn)) 
                                      (endofcode 34))
                                   (Exceptions )
                                   (StackMap )))
                        (method "create"
                              (parameters (class "java.util.Comparator") (class "clojure.lang.ISeq"))
                              (returntype . (class "clojure.lang.PersistentTreeSet"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 7) (max_locals . 3) (code_length . 48)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.PersistentTreeSet"))) 
                                      (3 (dup)) 
                                      (4 (aconst_null)) 
                                      (5 (new (class "clojure.lang.PersistentTreeMap"))) 
                                      (8 (dup)) 
                                      (9 (aconst_null)) 
                                      (10 (aload_0)) 
                                      (11 (invokespecial (methodCP "<init>" "clojure.lang.PersistentTreeMap" ((class "clojure.lang.IPersistentMap") (class "java.util.Comparator")) void))) 
                                      (14 (invokespecial (methodCP "<init>" "clojure.lang.PersistentTreeSet" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.IPersistentMap")) void))) 
                                      (17 (astore_2)) 
                                      (18 (aload_1)) ;;at TAG_1
                                      (19 (ifnull 46))  ;;to TAG_0
                                      (22 (aload_2)) 
                                      (23 (aload_1)) 
                                      (24 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (29 (invokevirtual (methodCP "cons" "clojure.lang.PersistentTreeSet" ((class "java.lang.Object")) (class "clojure.lang.IPersistentSet")))) 
                                      (32 (checkcast (class "clojure.lang.PersistentTreeSet"))) 
                                      (35 (astore_2)) 
                                      (36 (aload_1)) 
                                      (37 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (42 (astore_1)) 
                                      (43 (goto 18)) ;;to TAG_1
                                      (46 (aload_2)) ;;at TAG_0
                                      (47 (areturn)) 
                                      (endofcode 48))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "clojure.lang.IPersistentMap") (class "clojure.lang.IPersistentMap"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_2))
                                      (2 (invokespecial
					(methodCP "<init>" "clojure.lang.APersistentSet" ((class "clojure.lang.IPersistentMap")) void)))
                                      (5 (aload_0))
                                      (6 (aload_1))
                                      (7 (putfield (fieldCP "_meta" "clojure.lang.PersistentTreeSet" (class "clojure.lang.IPersistentMap"))))
                                      (10 (return))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "disjoin"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.IPersistentSet"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 32)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (aload_1)) 
                                      (2 (invokevirtual (methodCP "contains" "clojure.lang.PersistentTreeSet" ((class "java.lang.Object")) boolean))) 
                                      (5 (ifeq 30))  ;;to TAG_0
                                      (8 (new (class "clojure.lang.PersistentTreeSet"))) 
                                      (11 (dup)) 
                                      (12 (aload_0)) 
                                      (13 (invokevirtual (methodCP "meta" "clojure.lang.PersistentTreeSet" () (class "clojure.lang.IPersistentMap")))) 
                                      (16 (aload_0)) 
                                      (17 (getfield (fieldCP "impl" "clojure.lang.PersistentTreeSet" (class "clojure.lang.IPersistentMap")))) 
                                      (20 (aload_1)) 
                                      (21 (invokeinterface (methodCP "without" "clojure.lang.IPersistentMap" ((class "java.lang.Object")) (class "clojure.lang.IPersistentMap")) 2)) 
                                      (26 (invokespecial (methodCP "<init>" "clojure.lang.PersistentTreeSet" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.IPersistentMap")) void))) 
                                      (29 (areturn)) 
                                      (30 (aload_0)) ;;at TAG_0
                                      (31 (areturn)) 
                                      (endofcode 32))
                                   (Exceptions )
                                   (StackMap )))
                        (method "cons"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.IPersistentSet"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 2) (code_length . 33)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (aload_1)) 
                                      (2 (invokevirtual (methodCP "contains" "clojure.lang.PersistentTreeSet" ((class "java.lang.Object")) boolean))) 
                                      (5 (ifeq 10))  ;;to TAG_0
                                      (8 (aload_0)) 
                                      (9 (areturn)) 
                                      (10 (new (class "clojure.lang.PersistentTreeSet"))) ;;at TAG_0
                                      (13 (dup)) 
                                      (14 (aload_0)) 
                                      (15 (invokevirtual (methodCP "meta" "clojure.lang.PersistentTreeSet" () (class "clojure.lang.IPersistentMap")))) 
                                      (18 (aload_0)) 
                                      (19 (getfield (fieldCP "impl" "clojure.lang.PersistentTreeSet" (class "clojure.lang.IPersistentMap")))) 
                                      (22 (aload_1)) 
                                      (23 (aload_1)) 
                                      (24 (invokeinterface (methodCP "assoc" "clojure.lang.IPersistentMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.IPersistentMap")) 3)) 
                                      (29 (invokespecial (methodCP "<init>" "clojure.lang.PersistentTreeSet" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.IPersistentMap")) void))) 
                                      (32 (areturn)) 
                                      (endofcode 33))
                                   (Exceptions )
                                   (StackMap )))
                        (method "empty"
                              (parameters )
                              (returntype . (class "clojure.lang.IPersistentCollection"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 1) (code_length . 24)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.PersistentTreeSet")))
                                      (3 (dup))
                                      (4 (aload_0))
                                      (5 (invokevirtual
					(methodCP "meta" "clojure.lang.PersistentTreeSet" () (class "clojure.lang.IPersistentMap"))))
                                      (8 (aload_0))
                                      (9 (getfield (fieldCP "impl" "clojure.lang.PersistentTreeSet" (class "clojure.lang.IPersistentMap"))))
                                      (12 (invokeinterface
					(methodCP "empty" "clojure.lang.IPersistentMap" () (class "clojure.lang.IPersistentCollection")) 1))
                                      (17 (checkcast (class "clojure.lang.PersistentTreeMap")))
                                      (20 (invokespecial
					(methodCP "<init>" "clojure.lang.PersistentTreeSet" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.IPersistentMap")) void)))
                                      (23 (areturn))
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap )))
                        (method "rseq"
                              (parameters )
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "impl" "clojure.lang.PersistentTreeSet" (class "clojure.lang.IPersistentMap"))))
                                      (4 (checkcast (class "clojure.lang.Reversible")))
                                      (7 (invokeinterface
					(methodCP "rseq" "clojure.lang.Reversible" () (class "clojure.lang.ISeq")) 1))
                                      (12 (invokestatic
					(methodCP "create" "clojure.lang.APersistentMap$KeySeq" ((class "clojure.lang.ISeq")) (class "clojure.lang.APersistentMap$KeySeq"))))
                                      (15 (areturn))
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.PersistentTreeSet"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 13)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.PersistentTreeSet")))
                                      (3 (dup))
                                      (4 (aload_1))
                                      (5 (aload_0))
                                      (6 (getfield (fieldCP "impl" "clojure.lang.PersistentTreeSet" (class "clojure.lang.IPersistentMap"))))
                                      (9 (invokespecial
					(methodCP "<init>" "clojure.lang.PersistentTreeSet" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.IPersistentMap")) void)))
                                      (12 (areturn))
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "comparator"
                              (parameters )
                              (returntype . (class "java.util.Comparator"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "impl" "clojure.lang.PersistentTreeSet" (class "clojure.lang.IPersistentMap"))))
                                      (4 (checkcast (class "clojure.lang.Sorted")))
                                      (7 (invokeinterface
					(methodCP "comparator" "clojure.lang.Sorted" () (class "java.util.Comparator")) 1))
                                      (12 (areturn))
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "entryKey"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 2)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (areturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "seq"
                              (parameters boolean)
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 17)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "impl" "clojure.lang.PersistentTreeSet" (class "clojure.lang.IPersistentMap"))))
                                      (4 (checkcast (class "clojure.lang.PersistentTreeMap")))
                                      (7 (astore_2))
                                      (8 (aload_2))
                                      (9 (iload_1))
                                      (10 (invokevirtual
					(methodCP "seq" "clojure.lang.PersistentTreeMap" (boolean) (class "clojure.lang.ISeq"))))
                                      (13 (invokestatic
					(methodCP "keys" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (16 (areturn))
                                      (endofcode 17))
                                   (Exceptions )
                                   (StackMap )))
                        (method "seqFrom"
                              (parameters (class "java.lang.Object") boolean)
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 18)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "impl" "clojure.lang.PersistentTreeSet" (class "clojure.lang.IPersistentMap"))))
                                      (4 (checkcast (class "clojure.lang.PersistentTreeMap")))
                                      (7 (astore_3))
                                      (8 (aload_3))
                                      (9 (aload_1))
                                      (10 (iload_2))
                                      (11 (invokevirtual
					(methodCP "seqFrom" "clojure.lang.PersistentTreeMap" ((class "java.lang.Object") boolean) (class "clojure.lang.ISeq"))))
                                      (14 (invokestatic
					(methodCP "keys" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (17 (areturn))
                                      (endofcode 18))
                                   (Exceptions )
                                   (StackMap )))
                        (method "meta"
                              (parameters )
                              (returntype . (class "clojure.lang.IPersistentMap"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "_meta" "clojure.lang.PersistentTreeSet" (class "clojure.lang.IPersistentMap"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "cons"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.IPersistentCollection"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "cons" "clojure.lang.PersistentTreeSet" ((class "java.lang.Object")) (class "clojure.lang.IPersistentSet"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.IObj"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "withMeta" "clojure.lang.PersistentTreeSet" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.PersistentTreeSet"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 15)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.PersistentTreeSet")))
                                      (3 (dup))
                                      (4 (aconst_null))
                                      (5 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentTreeMap" (class "clojure.lang.PersistentTreeMap"))))
                                      (8 (invokespecial
					(methodCP "<init>" "clojure.lang.PersistentTreeSet" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.IPersistentMap")) void)))
                                      (11 (putstatic (fieldCP "EMPTY" "clojure.lang.PersistentTreeSet" (class "clojure.lang.PersistentTreeSet"))))
                                      (14 (return))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.IObj" "clojure.lang.Reversible" "clojure.lang.Sorted")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *PersistentTreeSet-class-table*
  (make-static-class-decls 
   *clojure.lang.PersistentTreeSet*))

(defconst *package-name-map* 
  ("clojure.lang.PersistentTreeSet" . "clojure.lang"))

