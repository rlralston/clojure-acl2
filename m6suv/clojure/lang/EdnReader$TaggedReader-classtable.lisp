; EdnReader$TaggedReader-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:51 CDT 2014.
;

(defconst *clojure.lang.EdnReader$TaggedReader*
 (make-class-def
      '(class "clojure.lang.EdnReader$TaggedReader"
            "clojure.lang.AFn"
            (constant_pool
                        (STRING  "Reader tag must be a symbol")
                        (STRING  "No reader function for tag ")
                        (STRING  "readers")
                        (STRING  "default"))
            (fields
                        (field "READERS" (class "clojure.lang.Keyword") (accessflags  *class*  *static* ) -1)
                        (field "DEFAULT" (class "clojure.lang.Keyword") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFn" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 7) (code_length . 55)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (checkcast (class "java.io.PushbackReader"))) 
                                      (4 (astore 4)) 
                                      (6 (aload 4)) 
                                      (8 (iconst_1)) 
                                      (9 (aconst_null)) 
                                      (10 (iconst_0)) 
                                      (11 (aload_3)) 
                                      (12 (invokestatic (methodCP "read" "clojure.lang.EdnReader" ((class "java.io.PushbackReader") boolean (class "java.lang.Object") boolean (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (15 (astore 5)) 
                                      (17 (aload 5)) 
                                      (19 (instanceof (class "clojure.lang.Symbol"))) 
                                      (22 (ifne 35))  ;;to TAG_0
                                      (25 (new (class "java.lang.RuntimeException"))) 
                                      (28 (dup)) 
                                      (29 (ldc 0)) ;;STRING:: "Reader tag must be a symbol"
                                      (31 (invokespecial (methodCP "<init>" "java.lang.RuntimeException" ((class "java.lang.String")) void))) 
                                      (34 (athrow)) 
                                      (35 (aload 5)) ;;at TAG_0
                                      (37 (checkcast (class "clojure.lang.Symbol"))) 
                                      (40 (astore 6)) 
                                      (42 (aload_0)) 
                                      (43 (aload 4)) 
                                      (45 (aload 6)) 
                                      (47 (aload_3)) 
                                      (48 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (51 (invokespecial (methodCP "readTagged" "clojure.lang.EdnReader$TaggedReader" ((class "java.io.PushbackReader") (class "clojure.lang.Symbol") (class "clojure.lang.IPersistentMap")) (class "java.lang.Object")))) 
                                      (54 (areturn)) 
                                      (endofcode 55))
                                   (Exceptions )
                                   (StackMap )))
                        (method "readTagged"
                              (parameters (class "java.io.PushbackReader") (class "clojure.lang.Symbol") (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 5) (max_locals . 8) (code_length . 126)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (iconst_1)) 
                                      (2 (aconst_null)) 
                                      (3 (iconst_1)) 
                                      (4 (aload_3)) 
                                      (5 (invokestatic (methodCP "read" "clojure.lang.EdnReader" ((class "java.io.PushbackReader") boolean (class "java.lang.Object") boolean (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (8 (astore 4)) 
                                      (10 (aload_3)) 
                                      (11 (getstatic (fieldCP "READERS" "clojure.lang.EdnReader$TaggedReader" (class "clojure.lang.Keyword")))) 
                                      (14 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (17 (checkcast (class "clojure.lang.ILookup"))) 
                                      (20 (astore 5)) 
                                      (22 (aload 5)) 
                                      (24 (aload_2)) 
                                      (25 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (28 (checkcast (class "clojure.lang.IFn"))) 
                                      (31 (astore 6)) 
                                      (33 (aload 6)) 
                                      (35 (ifnonnull 53)) ;;to TAG_0
                                      (38 (getstatic (fieldCP "DEFAULT_DATA_READERS" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (41 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (44 (aload_2)) 
                                      (45 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (48 (checkcast (class "clojure.lang.IFn"))) 
                                      (51 (astore 6)) 
                                      (53 (aload 6)) ;;at TAG_0
                                      (55 (ifnonnull 116)) ;;to TAG_1
                                      (58 (aload_3)) 
                                      (59 (getstatic (fieldCP "DEFAULT" "clojure.lang.EdnReader$TaggedReader" (class "clojure.lang.Keyword")))) 
                                      (62 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (65 (checkcast (class "clojure.lang.IFn"))) 
                                      (68 (astore 7)) 
                                      (70 (aload 7)) 
                                      (72 (ifnull 86))  ;;to TAG_2
                                      (75 (aload 7)) 
                                      (77 (aload_2)) 
                                      (78 (aload 4)) 
                                      (80 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (85 (areturn)) 
                                      (86 (new (class "java.lang.RuntimeException"))) ;;at TAG_2
                                      (89 (dup)) 
                                      (90 (new (class "java.lang.StringBuilder"))) 
                                      (93 (dup)) 
                                      (94 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (97 (ldc 1)) ;;STRING:: "No reader function for tag "
                                      (99 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (102 (aload_2)) 
                                      (103 (invokevirtual (methodCP "toString" "clojure.lang.Symbol" () (class "java.lang.String")))) 
                                      (106 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (109 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (112 (invokespecial (methodCP "<init>" "java.lang.RuntimeException" ((class "java.lang.String")) void))) 
                                      (115 (athrow)) 
                                      (116 (aload 6)) ;;at TAG_1
                                      (118 (aload 4)) 
                                      (120 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (125 (areturn)) 
                                      (endofcode 126))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 19)
                                   (parsedcode
                                      (0 (aconst_null))
                                      (1 (ldc 2))         ;;STRING:: "readers"
                                      (3 (invokestatic
					(methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (6 (putstatic (fieldCP "READERS" "clojure.lang.EdnReader$TaggedReader" (class "clojure.lang.Keyword"))))
                                      (9 (aconst_null))
                                      (10 (ldc 3))        ;;STRING:: "default"
                                      (12 (invokestatic
					(methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (15 (putstatic (fieldCP "DEFAULT" "clojure.lang.EdnReader$TaggedReader" (class "clojure.lang.Keyword"))))
                                      (18 (return))
                                      (endofcode 19))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *EdnReader$TaggedReader-class-table*
  (make-static-class-decls 
   *clojure.lang.EdnReader$TaggedReader*))

(defconst *package-name-map* 
  ("clojure.lang.EdnReader$TaggedReader" . "clojure.lang"))

