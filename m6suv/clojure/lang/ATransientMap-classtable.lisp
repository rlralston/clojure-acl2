; ATransientMap-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:50 CDT 2014.
;

(defconst *clojure.lang.ATransientMap*
 (make-class-def
      '(class "clojure.lang.ATransientMap"
            "clojure.lang.AFn"
            (constant_pool
                        (STRING  "Vector arg to map conj must be a pair"))
            (fields)
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFn" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "ensureEditable"
                              (parameters )
                              (returntype . void)
                              (accessflags  *abstract*  *class* )
                              (code))
                        (method "doAssoc"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ITransientMap"))
                              (accessflags  *abstract*  *class* )
                              (code))
                        (method "doWithout"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ITransientMap"))
                              (accessflags  *abstract*  *class* )
                              (code))
                        (method "doValAt"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *abstract*  *class* )
                              (code))
                        (method "doCount"
                              (parameters )
                              (returntype . int)
                              (accessflags  *abstract*  *class* )
                              (code))
                        (method "doPersistent"
                              (parameters )
                              (returntype . (class "clojure.lang.IPersistentMap"))
                              (accessflags  *abstract*  *class* )
                              (code))
                        (method "conj"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ITransientMap"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 5) (code_length . 139)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "ensureEditable" "clojure.lang.ATransientMap" () void))) 
                                      (4 (aload_1)) 
                                      (5 (instanceof (class "java.util.Map$Entry"))) 
                                      (8 (ifeq 33)) ;;to TAG_0
                                      (11 (aload_1)) 
                                      (12 (checkcast (class "java.util.Map$Entry"))) 
                                      (15 (astore_2)) 
                                      (16 (aload_0)) 
                                      (17 (aload_2)) 
                                      (18 (invokeinterface (methodCP "getKey" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (23 (aload_2)) 
                                      (24 (invokeinterface (methodCP "getValue" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (29 (invokevirtual (methodCP "assoc" "clojure.lang.ATransientMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ITransientMap")))) 
                                      (32 (areturn)) 
                                      (33 (aload_1)) ;;at TAG_0
                                      (34 (instanceof (class "clojure.lang.IPersistentVector"))) 
                                      (37 (ifeq 84)) ;;to TAG_1
                                      (40 (aload_1)) 
                                      (41 (checkcast (class "clojure.lang.IPersistentVector"))) 
                                      (44 (astore_2)) 
                                      (45 (aload_2)) 
                                      (46 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (51 (iconst_2)) 
                                      (52 (if_icmpeq 65))  ;;to TAG_2
                                      (55 (new (class "java.lang.IllegalArgumentException"))) 
                                      (58 (dup)) 
                                      (59 (ldc 0)) ;;STRING:: "Vector arg to map conj must be a pair"
                                      (61 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (64 (athrow)) 
                                      (65 (aload_0)) ;;at TAG_2
                                      (66 (aload_2)) 
                                      (67 (iconst_0)) 
                                      (68 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (73 (aload_2)) 
                                      (74 (iconst_1)) 
                                      (75 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (80 (invokevirtual (methodCP "assoc" "clojure.lang.ATransientMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ITransientMap")))) 
                                      (83 (areturn)) 
                                      (84 (aload_0)) ;;at TAG_1
                                      (85 (astore_2)) 
                                      (86 (aload_1)) 
                                      (87 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (90 (astore_3)) 
                                      (91 (aload_3)) ;;at TAG_4
                                      (92 (ifnull 137)) ;;to TAG_3
                                      (95 (aload_3)) 
                                      (96 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (101 (checkcast (class "java.util.Map$Entry"))) 
                                      (104 (astore 4)) 
                                      (106 (aload_2)) 
                                      (107 (aload 4)) 
                                      (109 (invokeinterface (methodCP "getKey" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (114 (aload 4)) 
                                      (116 (invokeinterface (methodCP "getValue" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (121 (invokeinterface (methodCP "assoc" "clojure.lang.ITransientMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ITransientMap")) 3)) 
                                      (126 (astore_2)) 
                                      (127 (aload_3)) 
                                      (128 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (133 (astore_3)) 
                                      (134 (goto 91)) ;;to TAG_4
                                      (137 (aload_2)) ;;at TAG_3
                                      (138 (areturn)) 
                                      (endofcode 139))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "valAt" "clojure.lang.ATransientMap" ((class "java.lang.Object")) (class "java.lang.Object"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 7)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aload_2))
                                      (3 (invokevirtual
					(methodCP "valAt" "clojure.lang.ATransientMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (6 (areturn))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap )))
                        (method "valAt"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 7)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aconst_null))
                                      (3 (invokevirtual
					(methodCP "valAt" "clojure.lang.ATransientMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (6 (areturn))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap )))
                        (method "assoc"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ITransientMap"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "ensureEditable" "clojure.lang.ATransientMap" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (aload_2))
                                      (7 (invokevirtual
					(methodCP "doAssoc" "clojure.lang.ATransientMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ITransientMap"))))
                                      (10 (areturn))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "without"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ITransientMap"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "ensureEditable" "clojure.lang.ATransientMap" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (invokevirtual
					(methodCP "doWithout" "clojure.lang.ATransientMap" ((class "java.lang.Object")) (class "clojure.lang.ITransientMap"))))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "persistent"
                              (parameters )
                              (returntype . (class "clojure.lang.IPersistentMap"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 9)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "ensureEditable" "clojure.lang.ATransientMap" () void)))
                                      (4 (aload_0))
                                      (5 (invokevirtual
					(methodCP "doPersistent" "clojure.lang.ATransientMap" () (class "clojure.lang.IPersistentMap"))))
                                      (8 (areturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "valAt"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "ensureEditable" "clojure.lang.ATransientMap" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (aload_2))
                                      (7 (invokevirtual
					(methodCP "doValAt" "clojure.lang.ATransientMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (10 (areturn))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "count"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 9)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "ensureEditable" "clojure.lang.ATransientMap" () void)))
                                      (4 (aload_0))
                                      (5 (invokevirtual
					(methodCP "doCount" "clojure.lang.ATransientMap" () int)))
                                      (8 (ireturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "assoc"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ITransientAssociative"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 7)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aload_2))
                                      (3 (invokevirtual
					(methodCP "assoc" "clojure.lang.ATransientMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ITransientMap"))))
                                      (6 (areturn))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap )))
                        (method "persistent"
                              (parameters )
                              (returntype . (class "clojure.lang.IPersistentCollection"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "persistent" "clojure.lang.ATransientMap" () (class "clojure.lang.IPersistentMap"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "conj"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ITransientCollection"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "conj" "clojure.lang.ATransientMap" ((class "java.lang.Object")) (class "clojure.lang.ITransientMap"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.ITransientMap")
            (accessflags  *abstract*  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *ATransientMap-class-table*
  (make-static-class-decls 
   *clojure.lang.ATransientMap*))

(defconst *package-name-map* 
  ("clojure.lang.ATransientMap" . "clojure.lang"))

