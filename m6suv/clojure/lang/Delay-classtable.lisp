; Delay-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:51 CDT 2014.
;

(defconst *clojure.lang.Delay*
 (make-class-def
      '(class "clojure.lang.Delay"
            "java.lang.Object"
            (constant_pool)
            (fields
                        (field "val" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "fn" (class "clojure.lang.IFn") (accessflags  *class* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "clojure.lang.IFn"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "fn" "clojure.lang.Delay" (class "clojure.lang.IFn"))))
                                      (9 (aload_0))
                                      (10 (aconst_null))
                                      (11 (putfield (fieldCP "val" "clojure.lang.Delay" (class "java.lang.Object"))))
                                      (14 (return))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "force"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 19)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (instanceof (class "clojure.lang.Delay"))) 
                                      (4 (ifeq 17))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (checkcast (class "clojure.lang.Delay"))) 
                                      (11 (invokevirtual (methodCP "deref" "clojure.lang.Delay" () (class "java.lang.Object")))) 
                                      (14 (goto 18)) ;;to TAG_1
                                      (17 (aload_0)) ;;at TAG_0
                                      (18 (areturn)) ;;at TAG_1
                                      (endofcode 19))
                                   (Exceptions )
                                   (StackMap )))
                        (method "deref"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *super*  *synchronized* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 30)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "fn" "clojure.lang.Delay" (class "clojure.lang.IFn")))) 
                                      (4 (ifnull 25))  ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (aload_0)) 
                                      (9 (getfield (fieldCP "fn" "clojure.lang.Delay" (class "clojure.lang.IFn")))) 
                                      (12 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (17 (putfield (fieldCP "val" "clojure.lang.Delay" (class "java.lang.Object")))) 
                                      (20 (aload_0)) 
                                      (21 (aconst_null)) 
                                      (22 (putfield (fieldCP "fn" "clojure.lang.Delay" (class "clojure.lang.IFn")))) 
                                      (25 (aload_0)) ;;at TAG_0
                                      (26 (getfield (fieldCP "val" "clojure.lang.Delay" (class "java.lang.Object")))) 
                                      (29 (areturn)) 
                                      (endofcode 30))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isRealized"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public*  *super*  *synchronized* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "fn" "clojure.lang.Delay" (class "clojure.lang.IFn")))) 
                                      (4 (ifnonnull 11))  ;;to TAG_0
                                      (7 (iconst_1)) 
                                      (8 (goto 12)) ;;to TAG_1
                                      (11 (iconst_0)) ;;at TAG_0
                                      (12 (ireturn)) ;;at TAG_1
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.IDeref" "clojure.lang.IPending")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *Delay-class-table*
  (make-static-class-decls 
   *clojure.lang.Delay*))

(defconst *package-name-map* 
  ("clojure.lang.Delay" . "clojure.lang"))

