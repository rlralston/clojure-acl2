; PersistentStructMap$Def-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:52 CDT 2014.
;

(defconst *clojure.lang.PersistentStructMap$Def*
 (make-class-def
      '(class "clojure.lang.PersistentStructMap$Def"
            "java.lang.Object"
            (constant_pool)
            (fields
                        (field "keys" (class "clojure.lang.ISeq") (accessflags  *class*  *final* ) -1)
                        (field "keyslots" (class "clojure.lang.IPersistentMap") (accessflags  *class*  *final* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "clojure.lang.ISeq") (class "clojure.lang.IPersistentMap"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "keys" "clojure.lang.PersistentStructMap$Def" (class "clojure.lang.ISeq"))))
                                      (9 (aload_0))
                                      (10 (aload_2))
                                      (11 (putfield (fieldCP "keyslots" "clojure.lang.PersistentStructMap$Def" (class "clojure.lang.IPersistentMap"))))
                                      (14 (return))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "java.io.Serializable")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *PersistentStructMap$Def-class-table*
  (make-static-class-decls 
   *clojure.lang.PersistentStructMap$Def*))

(defconst *package-name-map* 
  ("clojure.lang.PersistentStructMap$Def" . "clojure.lang"))

