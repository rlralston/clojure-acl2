; LazySeq-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:51 CDT 2014.
;

(defconst *clojure.lang.LazySeq*
 (make-class-def
      '(class "clojure.lang.LazySeq"
            "clojure.lang.Obj"
            (constant_pool)
            (fields
                        (field "fn" (class "clojure.lang.IFn") (accessflags  *class*  *private* ) -1)
                        (field "sv" (class "java.lang.Object") (accessflags  *class*  *private* ) -1)
                        (field "s" (class "clojure.lang.ISeq") (accessflags  *class*  *private* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "clojure.lang.IFn"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.Obj" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "fn" "clojure.lang.LazySeq" (class "clojure.lang.IFn"))))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "clojure.lang.IPersistentMap") (class "clojure.lang.ISeq"))
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokespecial
					(methodCP "<init>" "clojure.lang.Obj" ((class "clojure.lang.IPersistentMap")) void)))
                                      (5 (aload_0))
                                      (6 (aconst_null))
                                      (7 (putfield (fieldCP "fn" "clojure.lang.LazySeq" (class "clojure.lang.IFn"))))
                                      (10 (aload_0))
                                      (11 (aload_2))
                                      (12 (putfield (fieldCP "s" "clojure.lang.LazySeq" (class "clojure.lang.ISeq"))))
                                      (15 (return))
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.Obj"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 13)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.LazySeq")))
                                      (3 (dup))
                                      (4 (aload_1))
                                      (5 (aload_0))
                                      (6 (invokevirtual
					(methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq"))))
                                      (9 (invokespecial
					(methodCP "<init>" "clojure.lang.LazySeq" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.ISeq")) void)))
                                      (12 (areturn))
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "sval"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *final*  *super*  *synchronized* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 54)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "fn" "clojure.lang.LazySeq" (class "clojure.lang.IFn")))) 
                                      (4 (ifnull 37)) ;;to TAG_0
                                      (7 (aload_0)) ;;at TAG_2
                                      (8 (aload_0)) 
                                      (9 (getfield (fieldCP "fn" "clojure.lang.LazySeq" (class "clojure.lang.IFn")))) 
                                      (12 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (17 (putfield (fieldCP "sv" "clojure.lang.LazySeq" (class "java.lang.Object")))) 
                                      (20 (aload_0)) 
                                      (21 (aconst_null)) 
                                      (22 (putfield (fieldCP "fn" "clojure.lang.LazySeq" (class "clojure.lang.IFn")))) 
                                      (25 (goto 37)) ;;to TAG_0;;at TAG_3
                                      (28 (astore_1)) ;;at TAG_4
                                      (29 (aload_1)) 
                                      (30 (athrow)) 
                                      (31 (astore_1)) ;;at TAG_5
                                      (32 (aload_1)) 
                                      (33 (invokestatic (methodCP "sneakyThrow" "clojure.lang.Util" ((class "java.lang.Throwable")) (class "java.lang.RuntimeException")))) 
                                      (36 (athrow)) 
                                      (37 (aload_0)) ;;at TAG_0
                                      (38 (getfield (fieldCP "sv" "clojure.lang.LazySeq" (class "java.lang.Object")))) 
                                      (41 (ifnull 49)) ;;to TAG_1
                                      (44 (aload_0)) 
                                      (45 (getfield (fieldCP "sv" "clojure.lang.LazySeq" (class "java.lang.Object")))) 
                                      (48 (areturn)) 
                                      (49 (aload_0)) ;;at TAG_1
                                      (50 (getfield (fieldCP "s" "clojure.lang.LazySeq" (class "clojure.lang.ISeq")))) 
                                      (53 (areturn)) 
                                      (endofcode 54))
                                   (Exceptions 
                                     (handler 7 25  28 (class "java.lang.RuntimeException"))
                                     (handler 7 25  31 (class "java.lang.Exception")))
                                   (StackMap )))
                        (method "seq"
                              (parameters )
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 53)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "sval" "clojure.lang.LazySeq" () (class "java.lang.Object")))) 
                                      (4 (pop)) 
                                      (5 (aload_0)) 
                                      (6 (getfield (fieldCP "sv" "clojure.lang.LazySeq" (class "java.lang.Object")))) 
                                      (9 (ifnull 48)) ;;to TAG_0
                                      (12 (aload_0)) 
                                      (13 (getfield (fieldCP "sv" "clojure.lang.LazySeq" (class "java.lang.Object")))) 
                                      (16 (astore_1)) 
                                      (17 (aload_0)) 
                                      (18 (aconst_null)) 
                                      (19 (putfield (fieldCP "sv" "clojure.lang.LazySeq" (class "java.lang.Object")))) 
                                      (22 (aload_1)) ;;at TAG_2
                                      (23 (instanceof (class "clojure.lang.LazySeq"))) 
                                      (26 (ifeq 40)) ;;to TAG_1
                                      (29 (aload_1)) 
                                      (30 (checkcast (class "clojure.lang.LazySeq"))) 
                                      (33 (invokevirtual (methodCP "sval" "clojure.lang.LazySeq" () (class "java.lang.Object")))) 
                                      (36 (astore_1)) 
                                      (37 (goto 22))  ;;to TAG_2
                                      (40 (aload_0)) ;;at TAG_1
                                      (41 (aload_1)) 
                                      (42 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (45 (putfield (fieldCP "s" "clojure.lang.LazySeq" (class "clojure.lang.ISeq")))) 
                                      (48 (aload_0)) ;;at TAG_0
                                      (49 (getfield (fieldCP "s" "clojure.lang.LazySeq" (class "clojure.lang.ISeq")))) 
                                      (52 (areturn)) 
                                      (endofcode 53))
                                   (Exceptions )
                                   (StackMap )))
                        (method "count"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 26)
                                   (parsedcode
                                      (0 (iconst_0)) 
                                      (1 (istore_1)) 
                                      (2 (aload_0)) 
                                      (3 (invokevirtual (methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq")))) 
                                      (6 (astore_2)) 
                                      (7 (aload_2)) ;;at TAG_1
                                      (8 (ifnull 24))  ;;to TAG_0
                                      (11 (iinc 1 1)) 
                                      (14 (aload_2)) 
                                      (15 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (20 (astore_2)) 
                                      (21 (goto 7)) ;;to TAG_1
                                      (24 (iload_1)) ;;at TAG_0
                                      (25 (ireturn)) 
                                      (endofcode 26))
                                   (Exceptions )
                                   (StackMap )))
                        (method "first"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 24)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq")))) 
                                      (4 (pop)) 
                                      (5 (aload_0)) 
                                      (6 (getfield (fieldCP "s" "clojure.lang.LazySeq" (class "clojure.lang.ISeq")))) 
                                      (9 (ifnonnull 14))  ;;to TAG_0
                                      (12 (aconst_null)) 
                                      (13 (areturn)) 
                                      (14 (aload_0)) ;;at TAG_0
                                      (15 (getfield (fieldCP "s" "clojure.lang.LazySeq" (class "clojure.lang.ISeq")))) 
                                      (18 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (23 (areturn)) 
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap )))
                        (method "next"
                              (parameters )
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 24)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq")))) 
                                      (4 (pop)) 
                                      (5 (aload_0)) 
                                      (6 (getfield (fieldCP "s" "clojure.lang.LazySeq" (class "clojure.lang.ISeq")))) 
                                      (9 (ifnonnull 14))  ;;to TAG_0
                                      (12 (aconst_null)) 
                                      (13 (areturn)) 
                                      (14 (aload_0)) ;;at TAG_0
                                      (15 (getfield (fieldCP "s" "clojure.lang.LazySeq" (class "clojure.lang.ISeq")))) 
                                      (18 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (23 (areturn)) 
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap )))
                        (method "more"
                              (parameters )
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 26)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq")))) 
                                      (4 (pop)) 
                                      (5 (aload_0)) 
                                      (6 (getfield (fieldCP "s" "clojure.lang.LazySeq" (class "clojure.lang.ISeq")))) 
                                      (9 (ifnonnull 16))  ;;to TAG_0
                                      (12 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentList" (class "clojure.lang.PersistentList$EmptyList")))) 
                                      (15 (areturn)) 
                                      (16 (aload_0)) ;;at TAG_0
                                      (17 (getfield (fieldCP "s" "clojure.lang.LazySeq" (class "clojure.lang.ISeq")))) 
                                      (20 (invokeinterface (methodCP "more" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (25 (areturn)) 
                                      (endofcode 26))
                                   (Exceptions )
                                   (StackMap )))
                        (method "cons"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 9)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (aload_0))
                                      (2 (invokevirtual
					(methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq"))))
                                      (5 (invokestatic
					(methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (8 (areturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "empty"
                              (parameters )
                              (returntype . (class "clojure.lang.IPersistentCollection"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 4)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentList" (class "clojure.lang.PersistentList$EmptyList"))))
                                      (3 (areturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "equiv"
                              (parameters (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "equals" "clojure.lang.LazySeq" ((class "java.lang.Object")) boolean)))
                                      (5 (ireturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "hashCode"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 19)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq")))) 
                                      (4 (astore_1)) 
                                      (5 (aload_1)) 
                                      (6 (ifnonnull 11))  ;;to TAG_0
                                      (9 (iconst_1)) 
                                      (10 (ireturn)) 
                                      (11 (aload_0)) ;;at TAG_0
                                      (12 (invokevirtual (methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq")))) 
                                      (15 (invokestatic (methodCP "hash" "clojure.lang.Util" ((class "java.lang.Object")) int))) 
                                      (18 (ireturn)) 
                                      (endofcode 19))
                                   (Exceptions )
                                   (StackMap )))
                        (method "hasheq"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 19)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq")))) 
                                      (4 (astore_1)) 
                                      (5 (aload_1)) 
                                      (6 (ifnonnull 11))  ;;to TAG_0
                                      (9 (iconst_1)) 
                                      (10 (ireturn)) 
                                      (11 (aload_0)) ;;at TAG_0
                                      (12 (invokevirtual (methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq")))) 
                                      (15 (invokestatic (methodCP "hasheq" "clojure.lang.Util" ((class "java.lang.Object")) int))) 
                                      (18 (ireturn)) 
                                      (endofcode 19))
                                   (Exceptions )
                                   (StackMap )))
                        (method "equals"
                              (parameters (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 44)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq")))) 
                                      (4 (astore_2)) 
                                      (5 (aload_2)) 
                                      (6 (ifnull 17)) ;;to TAG_0
                                      (9 (aload_2)) 
                                      (10 (aload_1)) 
                                      (11 (invokeinterface (methodCP "equiv" "clojure.lang.ISeq" ((class "java.lang.Object")) boolean) 2)) 
                                      (16 (ireturn)) 
                                      (17 (aload_1)) ;;at TAG_0
                                      (18 (instanceof (class "clojure.lang.Sequential"))) 
                                      (21 (ifne 31)) ;;to TAG_1
                                      (24 (aload_1)) 
                                      (25 (instanceof (class "java.util.List"))) 
                                      (28 (ifeq 42))  ;;to TAG_2
                                      (31 (aload_1)) ;;at TAG_1
                                      (32 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (35 (ifnonnull 42))  ;;to TAG_2
                                      (38 (iconst_1)) 
                                      (39 (goto 43)) ;;to TAG_3
                                      (42 (iconst_0)) ;;at TAG_2
                                      (43 (ireturn)) ;;at TAG_3
                                      (endofcode 44))
                                   (Exceptions )
                                   (StackMap )))
                        (method "toArray"
                              (parameters )
                              (returntype . (array (class "java.lang.Object")))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq"))))
                                      (4 (invokestatic
					(methodCP "seqToArray" "clojure.lang.RT" ((class "clojure.lang.ISeq")) (array (class "java.lang.Object")))))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "add"
                              (parameters (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "remove"
                              (parameters (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "addAll"
                              (parameters (class "java.util.Collection"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "clear"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "retainAll"
                              (parameters (class "java.util.Collection"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "removeAll"
                              (parameters (class "java.util.Collection"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "containsAll"
                              (parameters (class "java.util.Collection"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 38)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (invokeinterface (methodCP "iterator" "java.util.Collection" () (class "java.util.Iterator")) 1)) 
                                      (6 (astore_2)) 
                                      (7 (aload_2)) ;;at TAG_2
                                      (8 (invokeinterface (methodCP "hasNext" "java.util.Iterator" () boolean) 1)) 
                                      (13 (ifeq 36)) ;;to TAG_0
                                      (16 (aload_2)) 
                                      (17 (invokeinterface (methodCP "next" "java.util.Iterator" () (class "java.lang.Object")) 1)) 
                                      (22 (astore_3)) 
                                      (23 (aload_0)) 
                                      (24 (aload_3)) 
                                      (25 (invokevirtual (methodCP "contains" "clojure.lang.LazySeq" ((class "java.lang.Object")) boolean))) 
                                      (28 (ifne 33)) ;;to TAG_1
                                      (31 (iconst_0)) 
                                      (32 (ireturn)) 
                                      (33 (goto 7))  ;;to TAG_2;;at TAG_1
                                      (36 (iconst_1)) ;;at TAG_0
                                      (37 (ireturn)) 
                                      (endofcode 38))
                                   (Exceptions )
                                   (StackMap )))
                        (method "toArray"
                              (parameters (array (class "java.lang.Object")))
                              (returntype . (array (class "java.lang.Object")))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 9)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq"))))
                                      (4 (aload_1))
                                      (5 (invokestatic
					(methodCP "seqToPassedArray" "clojure.lang.RT" ((class "clojure.lang.ISeq") (array (class "java.lang.Object"))) (array (class "java.lang.Object")))))
                                      (8 (areturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "size"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "count" "clojure.lang.LazySeq" () int)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isEmpty"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq")))) 
                                      (4 (ifnonnull 11))  ;;to TAG_0
                                      (7 (iconst_1)) 
                                      (8 (goto 12)) ;;to TAG_1
                                      (11 (iconst_0)) ;;at TAG_0
                                      (12 (ireturn)) ;;at TAG_1
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "contains"
                              (parameters (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 36)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq")))) 
                                      (4 (astore_2)) 
                                      (5 (aload_2)) ;;at TAG_2
                                      (6 (ifnull 34)) ;;to TAG_0
                                      (9 (aload_2)) 
                                      (10 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (15 (aload_1)) 
                                      (16 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (19 (ifeq 24)) ;;to TAG_1
                                      (22 (iconst_1)) 
                                      (23 (ireturn)) 
                                      (24 (aload_2)) ;;at TAG_1
                                      (25 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (30 (astore_2)) 
                                      (31 (goto 5))  ;;to TAG_2
                                      (34 (iconst_0)) ;;at TAG_0
                                      (35 (ireturn)) 
                                      (endofcode 36))
                                   (Exceptions )
                                   (StackMap )))
                        (method "iterator"
                              (parameters )
                              (returntype . (class "java.util.Iterator"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 12)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.SeqIterator")))
                                      (3 (dup))
                                      (4 (aload_0))
                                      (5 (invokevirtual
					(methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq"))))
                                      (8 (invokespecial
					(methodCP "<init>" "clojure.lang.SeqIterator" ((class "clojure.lang.ISeq")) void)))
                                      (11 (areturn))
                                      (endofcode 12))
                                   (Exceptions )
                                   (StackMap )))
                        (method "reify"
                              (parameters )
                              (returntype . (class "java.util.List"))
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 9)
                                   (parsedcode
                                      (0 (new (class "java.util.ArrayList")))
                                      (3 (dup))
                                      (4 (aload_0))
                                      (5 (invokespecial
					(methodCP "<init>" "java.util.ArrayList" ((class "java.util.Collection")) void)))
                                      (8 (areturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "subList"
                              (parameters int int)
                              (returntype . (class "java.util.List"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 12)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "reify" "clojure.lang.LazySeq" () (class "java.util.List"))))
                                      (4 (iload_1))
                                      (5 (iload_2))
                                      (6 (invokeinterface
					(methodCP "subList" "java.util.List" (int int) (class "java.util.List")) 3))
                                      (11 (areturn))
                                      (endofcode 12))
                                   (Exceptions )
                                   (StackMap )))
                        (method "set"
                              (parameters int (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "remove"
                              (parameters int)
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "indexOf"
                              (parameters (class "java.lang.Object"))
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 41)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "seq" "clojure.lang.LazySeq" () (class "clojure.lang.ISeq")))) 
                                      (4 (astore_2)) 
                                      (5 (iconst_0)) 
                                      (6 (istore_3)) 
                                      (7 (aload_2)) ;;at TAG_2
                                      (8 (ifnull 39)) ;;to TAG_0
                                      (11 (aload_2)) 
                                      (12 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (17 (aload_1)) 
                                      (18 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (21 (ifeq 26)) ;;to TAG_1
                                      (24 (iload_3)) 
                                      (25 (ireturn)) 
                                      (26 (aload_2)) ;;at TAG_1
                                      (27 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (32 (astore_2)) 
                                      (33 (iinc 3 1)) 
                                      (36 (goto 7))  ;;to TAG_2
                                      (39 (iconst_m1)) ;;at TAG_0
                                      (40 (ireturn)) 
                                      (endofcode 41))
                                   (Exceptions )
                                   (StackMap )))
                        (method "lastIndexOf"
                              (parameters (class "java.lang.Object"))
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "reify" "clojure.lang.LazySeq" () (class "java.util.List"))))
                                      (4 (aload_1))
                                      (5 (invokeinterface
					(methodCP "lastIndexOf" "java.util.List" ((class "java.lang.Object")) int) 2))
                                      (10 (ireturn))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "listIterator"
                              (parameters )
                              (returntype . (class "java.util.ListIterator"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "reify" "clojure.lang.LazySeq" () (class "java.util.List"))))
                                      (4 (invokeinterface
					(methodCP "listIterator" "java.util.List" () (class "java.util.ListIterator")) 1))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "listIterator"
                              (parameters int)
                              (returntype . (class "java.util.ListIterator"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "reify" "clojure.lang.LazySeq" () (class "java.util.List"))))
                                      (4 (iload_1))
                                      (5 (invokeinterface
					(methodCP "listIterator" "java.util.List" (int) (class "java.util.ListIterator")) 2))
                                      (10 (areturn))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "get"
                              (parameters int)
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (invokestatic
					(methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "add"
                              (parameters int (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "addAll"
                              (parameters int (class "java.util.Collection"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 8)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.UnsupportedOperationException" () void)))
                                      (7 (athrow))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isRealized"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public*  *super*  *synchronized* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "fn" "clojure.lang.LazySeq" (class "clojure.lang.IFn")))) 
                                      (4 (ifnonnull 11))  ;;to TAG_0
                                      (7 (iconst_1)) 
                                      (8 (goto 12)) ;;to TAG_1
                                      (11 (iconst_0)) ;;at TAG_0
                                      (12 (ireturn)) ;;at TAG_1
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.IObj"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "withMeta" "clojure.lang.LazySeq" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.Obj"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "cons"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.IPersistentCollection"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "cons" "clojure.lang.LazySeq" ((class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.ISeq" "clojure.lang.Sequential" "java.util.List" "clojure.lang.IPending" "clojure.lang.IHashEq")
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *LazySeq-class-table*
  (make-static-class-decls 
   *clojure.lang.LazySeq*))

(defconst *package-name-map* 
  ("clojure.lang.LazySeq" . "clojure.lang"))

