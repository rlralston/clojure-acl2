; Compiler$LetFnExpr-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:50 CDT 2014.
;

(defconst *clojure.lang.Compiler$LetFnExpr*
 (make-class-def
      '(class "clojure.lang.Compiler$LetFnExpr"
            "java.lang.Object"
            (constant_pool
                        (STRING  "Can\nt eval letfns")
                        (STRING  "__auto__")
                        (STRING  "Ljava/lang/Object;"))
            (fields
                        (field "bindingInits" (class "clojure.lang.PersistentVector") (accessflags  *class*  *final*  *public* ) -1)
                        (field "body" (class "clojure.lang.Compiler$Expr") (accessflags  *class*  *final*  *public* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "clojure.lang.PersistentVector") (class "clojure.lang.Compiler$Expr"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "bindingInits" "clojure.lang.Compiler$LetFnExpr" (class "clojure.lang.PersistentVector"))))
                                      (9 (aload_0))
                                      (10 (aload_2))
                                      (11 (putfield (fieldCP "body" "clojure.lang.Compiler$LetFnExpr" (class "clojure.lang.Compiler$Expr"))))
                                      (14 (return))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "eval"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 10)
                                   (parsedcode
                                      (0 (new (class "java.lang.UnsupportedOperationException")))
                                      (3 (dup))
                                      (4 (ldc 0))         ;;STRING:: "Can\nt eval letfns"
                                      (6 (invokespecial
					(methodCP "<init>" "java.lang.UnsupportedOperationException" ((class "java.lang.String")) void)))
                                      (9 (athrow))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emit"
                              (parameters (class "clojure.lang.Compiler$C") (class "clojure.lang.Compiler$ObjExpr") (class "clojure.asm.commons.GeneratorAdapter"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 11) (code_length . 395)
                                   (parsedcode
                                      (0 (iconst_0)) 
                                      (1 (istore 4)) 
                                      (3 (iload 4)) ;;at TAG_1
                                      (5 (aload_0)) 
                                      (6 (getfield (fieldCP "bindingInits" "clojure.lang.Compiler$LetFnExpr" (class "clojure.lang.PersistentVector")))) 
                                      (9 (invokevirtual (methodCP "count" "clojure.lang.PersistentVector" () int))) 
                                      (12 (if_icmpge 60)) ;;to TAG_0
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "bindingInits" "clojure.lang.Compiler$LetFnExpr" (class "clojure.lang.PersistentVector")))) 
                                      (19 (iload 4)) 
                                      (21 (invokevirtual (methodCP "nth" "clojure.lang.PersistentVector" (int) (class "java.lang.Object")))) 
                                      (24 (checkcast (class "clojure.lang.Compiler$BindingInit"))) 
                                      (27 (astore 5)) 
                                      (29 (aload_3)) 
                                      (30 (iconst_1)) 
                                      (31 (invokevirtual (methodCP "visitInsn" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (34 (aload_3)) 
                                      (35 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (38 (bipush 54)) 
                                      (40 (invokevirtual (methodCP "getOpcode" "clojure.asm.Type" (int) int))) 
                                      (43 (aload 5)) 
                                      (45 (getfield (fieldCP "binding" "clojure.lang.Compiler$BindingInit" (class "clojure.lang.Compiler$LocalBinding")))) 
                                      (48 (getfield (fieldCP "idx" "clojure.lang.Compiler$LocalBinding" int))) 
                                      (51 (invokevirtual (methodCP "visitVarInsn" "clojure.asm.commons.GeneratorAdapter" (int int) void))) 
                                      (54 (iinc 4 1)) 
                                      (57 (goto 3))  ;;to TAG_1
                                      (60 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashSet" (class "clojure.lang.PersistentHashSet")))) ;;at TAG_0
                                      (63 (astore 4)) 
                                      (65 (iconst_0)) 
                                      (66 (istore 5)) 
                                      (68 (iload 5)) ;;at TAG_3
                                      (70 (aload_0)) 
                                      (71 (getfield (fieldCP "bindingInits" "clojure.lang.Compiler$LetFnExpr" (class "clojure.lang.PersistentVector")))) 
                                      (74 (invokevirtual (methodCP "count" "clojure.lang.PersistentVector" () int))) 
                                      (77 (if_icmpge 152)) ;;to TAG_2
                                      (80 (aload_0)) 
                                      (81 (getfield (fieldCP "bindingInits" "clojure.lang.Compiler$LetFnExpr" (class "clojure.lang.PersistentVector")))) 
                                      (84 (iload 5)) 
                                      (86 (invokevirtual (methodCP "nth" "clojure.lang.PersistentVector" (int) (class "java.lang.Object")))) 
                                      (89 (checkcast (class "clojure.lang.Compiler$BindingInit"))) 
                                      (92 (astore 6)) 
                                      (94 (aload 4)) 
                                      (96 (aload 6)) 
                                      (98 (getfield (fieldCP "binding" "clojure.lang.Compiler$BindingInit" (class "clojure.lang.Compiler$LocalBinding")))) 
                                      (101 (invokeinterface (methodCP "cons" "clojure.lang.IPersistentSet" ((class "java.lang.Object")) (class "clojure.lang.IPersistentCollection")) 2)) 
                                      (106 (checkcast (class "clojure.lang.IPersistentSet"))) 
                                      (109 (astore 4)) 
                                      (111 (aload 6)) 
                                      (113 (getfield (fieldCP "init" "clojure.lang.Compiler$BindingInit" (class "clojure.lang.Compiler$Expr")))) 
                                      (116 (getstatic (fieldCP "EXPRESSION" "clojure.lang.Compiler$C" (class "clojure.lang.Compiler$C")))) 
                                      (119 (aload_2)) 
                                      (120 (aload_3)) 
                                      (121 (invokeinterface (methodCP "emit" "clojure.lang.Compiler$Expr" ((class "clojure.lang.Compiler$C") (class "clojure.lang.Compiler$ObjExpr") (class "clojure.asm.commons.GeneratorAdapter")) void) 4)) 
                                      (126 (aload_3)) 
                                      (127 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (130 (bipush 54)) 
                                      (132 (invokevirtual (methodCP "getOpcode" "clojure.asm.Type" (int) int))) 
                                      (135 (aload 6)) 
                                      (137 (getfield (fieldCP "binding" "clojure.lang.Compiler$BindingInit" (class "clojure.lang.Compiler$LocalBinding")))) 
                                      (140 (getfield (fieldCP "idx" "clojure.lang.Compiler$LocalBinding" int))) 
                                      (143 (invokevirtual (methodCP "visitVarInsn" "clojure.asm.commons.GeneratorAdapter" (int int) void))) 
                                      (146 (iinc 5 1)) 
                                      (149 (goto 68)) ;;to TAG_3
                                      (152 (iconst_0)) ;;at TAG_2
                                      (153 (istore 5)) 
                                      (155 (iload 5)) ;;at TAG_5
                                      (157 (aload_0)) 
                                      (158 (getfield (fieldCP "bindingInits" "clojure.lang.Compiler$LetFnExpr" (class "clojure.lang.PersistentVector")))) 
                                      (161 (invokevirtual (methodCP "count" "clojure.lang.PersistentVector" () int))) 
                                      (164 (if_icmpge 226)) ;;to TAG_4
                                      (167 (aload_0)) 
                                      (168 (getfield (fieldCP "bindingInits" "clojure.lang.Compiler$LetFnExpr" (class "clojure.lang.PersistentVector")))) 
                                      (171 (iload 5)) 
                                      (173 (invokevirtual (methodCP "nth" "clojure.lang.PersistentVector" (int) (class "java.lang.Object")))) 
                                      (176 (checkcast (class "clojure.lang.Compiler$BindingInit"))) 
                                      (179 (astore 6)) 
                                      (181 (aload 6)) 
                                      (183 (getfield (fieldCP "init" "clojure.lang.Compiler$BindingInit" (class "clojure.lang.Compiler$Expr")))) 
                                      (186 (checkcast (class "clojure.lang.Compiler$ObjExpr"))) 
                                      (189 (astore 7)) 
                                      (191 (aload_3)) 
                                      (192 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (195 (bipush 21)) 
                                      (197 (invokevirtual (methodCP "getOpcode" "clojure.asm.Type" (int) int))) 
                                      (200 (aload 6)) 
                                      (202 (getfield (fieldCP "binding" "clojure.lang.Compiler$BindingInit" (class "clojure.lang.Compiler$LocalBinding")))) 
                                      (205 (getfield (fieldCP "idx" "clojure.lang.Compiler$LocalBinding" int))) 
                                      (208 (invokevirtual (methodCP "visitVarInsn" "clojure.asm.commons.GeneratorAdapter" (int int) void))) 
                                      (211 (aload 7)) 
                                      (213 (aload_3)) 
                                      (214 (aload_2)) 
                                      (215 (aload 4)) 
                                      (217 (invokevirtual (methodCP "emitLetFnInits" "clojure.lang.Compiler$ObjExpr" ((class "clojure.asm.commons.GeneratorAdapter") (class "clojure.lang.Compiler$ObjExpr") (class "clojure.lang.IPersistentSet")) void))) 
                                      (220 (iinc 5 1)) 
                                      (223 (goto 155)) ;;to TAG_5
                                      (226 (aload_3)) ;;at TAG_4
                                      (227 (invokevirtual (methodCP "mark" "clojure.asm.commons.GeneratorAdapter" () (class "clojure.asm.Label")))) 
                                      (230 (astore 5)) 
                                      (232 (aload_0)) 
                                      (233 (getfield (fieldCP "body" "clojure.lang.Compiler$LetFnExpr" (class "clojure.lang.Compiler$Expr")))) 
                                      (236 (aload_1)) 
                                      (237 (aload_2)) 
                                      (238 (aload_3)) 
                                      (239 (invokeinterface (methodCP "emit" "clojure.lang.Compiler$Expr" ((class "clojure.lang.Compiler$C") (class "clojure.lang.Compiler$ObjExpr") (class "clojure.asm.commons.GeneratorAdapter")) void) 4)) 
                                      (244 (aload_3)) 
                                      (245 (invokevirtual (methodCP "mark" "clojure.asm.commons.GeneratorAdapter" () (class "clojure.asm.Label")))) 
                                      (248 (astore 6)) 
                                      (250 (aload_0)) 
                                      (251 (getfield (fieldCP "bindingInits" "clojure.lang.Compiler$LetFnExpr" (class "clojure.lang.PersistentVector")))) 
                                      (254 (invokevirtual (methodCP "seq" "clojure.lang.PersistentVector" () (class "clojure.lang.ISeq")))) 
                                      (257 (astore 7)) 
                                      (259 (aload 7)) ;;at TAG_10
                                      (261 (ifnull 394)) ;;to TAG_6
                                      (264 (aload 7)) 
                                      (266 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (271 (checkcast (class "clojure.lang.Compiler$BindingInit"))) 
                                      (274 (astore 8)) 
                                      (276 (aload 8)) 
                                      (278 (getfield (fieldCP "binding" "clojure.lang.Compiler$BindingInit" (class "clojure.lang.Compiler$LocalBinding")))) 
                                      (281 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (284 (astore 9)) 
                                      (286 (aload 9)) 
                                      (288 (ldc 1)) ;;STRING:: "__auto__"
                                      (290 (invokevirtual (methodCP "endsWith" "java.lang.String" ((class "java.lang.String")) boolean))) 
                                      (293 (ifeq 319)) ;;to TAG_7
                                      (296 (new (class "java.lang.StringBuilder"))) 
                                      (299 (dup)) 
                                      (300 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (303 (aload 9)) 
                                      (305 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (308 (invokestatic (methodCP "nextID" "clojure.lang.RT" () int))) 
                                      (311 (invokevirtual (methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder")))) 
                                      (314 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (317 (astore 9)) 
                                      (319 (aload 8)) ;;at TAG_7
                                      (321 (getfield (fieldCP "init" "clojure.lang.Compiler$BindingInit" (class "clojure.lang.Compiler$Expr")))) 
                                      (324 (invokestatic (methodCP "maybePrimitiveType" "clojure.lang.Compiler" ((class "clojure.lang.Compiler$Expr")) (class "java.lang.Class")))) 
                                      (327 (astore 10)) 
                                      (329 (aload 10)) 
                                      (331 (ifnull 361)) ;;to TAG_8
                                      (334 (aload_3)) 
                                      (335 (aload 9)) 
                                      (337 (aload 10)) 
                                      (339 (invokestatic (methodCP "getDescriptor" "clojure.asm.Type" ((class "java.lang.Class")) (class "java.lang.String")))) 
                                      (342 (aconst_null)) 
                                      (343 (aload 5)) 
                                      (345 (aload 6)) 
                                      (347 (aload 8)) 
                                      (349 (getfield (fieldCP "binding" "clojure.lang.Compiler$BindingInit" (class "clojure.lang.Compiler$LocalBinding")))) 
                                      (352 (getfield (fieldCP "idx" "clojure.lang.Compiler$LocalBinding" int))) 
                                      (355 (invokevirtual (methodCP "visitLocalVariable" "clojure.asm.commons.GeneratorAdapter" ((class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (class "clojure.asm.Label") (class "clojure.asm.Label") int) void))) 
                                      (358 (goto 382)) ;;to TAG_9
                                      (361 (aload_3)) ;;at TAG_8
                                      (362 (aload 9)) 
                                      (364 (ldc 2)) ;;STRING:: "Ljava/lang/Object;"
                                      (366 (aconst_null)) 
                                      (367 (aload 5)) 
                                      (369 (aload 6)) 
                                      (371 (aload 8)) 
                                      (373 (getfield (fieldCP "binding" "clojure.lang.Compiler$BindingInit" (class "clojure.lang.Compiler$LocalBinding")))) 
                                      (376 (getfield (fieldCP "idx" "clojure.lang.Compiler$LocalBinding" int))) 
                                      (379 (invokevirtual (methodCP "visitLocalVariable" "clojure.asm.commons.GeneratorAdapter" ((class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (class "clojure.asm.Label") (class "clojure.asm.Label") int) void))) 
                                      (382 (aload 7)) ;;at TAG_9
                                      (384 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (389 (astore 7)) 
                                      (391 (goto 259)) ;;to TAG_10
                                      (394 (return)) ;;at TAG_6
                                      (endofcode 395))
                                   (Exceptions )
                                   (StackMap )))
                        (method "hasJavaClass"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "body" "clojure.lang.Compiler$LetFnExpr" (class "clojure.lang.Compiler$Expr"))))
                                      (4 (invokeinterface
					(methodCP "hasJavaClass" "clojure.lang.Compiler$Expr" () boolean) 1))
                                      (9 (ireturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getJavaClass"
                              (parameters )
                              (returntype . (class "java.lang.Class"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "body" "clojure.lang.Compiler$LetFnExpr" (class "clojure.lang.Compiler$Expr"))))
                                      (4 (invokeinterface
					(methodCP "getJavaClass" "clojure.lang.Compiler$Expr" () (class "java.lang.Class")) 1))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.Compiler$Expr")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Compiler$LetFnExpr-class-table*
  (make-static-class-decls 
   *clojure.lang.Compiler$LetFnExpr*))

(defconst *package-name-map* 
  ("clojure.lang.Compiler$LetFnExpr" . "clojure.lang"))

