; StringSeq-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:53 CDT 2014.
;

(defconst *clojure.lang.StringSeq*
 (make-class-def
      '(class "clojure.lang.StringSeq"
            "clojure.lang.ASeq"
            (constant_pool)
            (fields
                        (field "s" (class "java.lang.CharSequence") (accessflags  *class*  *final*  *public* ) -1)
                        (field "i" int (accessflags  *class*  *final*  *public* ) -1))
            (methods
                        (method "create"
                              (parameters (class "java.lang.CharSequence"))
                              (returntype . (class "clojure.lang.StringSeq"))
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 1) (code_length . 22)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokeinterface (methodCP "length" "java.lang.CharSequence" () int) 1)) 
                                      (6 (ifne 11))  ;;to TAG_0
                                      (9 (aconst_null)) 
                                      (10 (areturn)) 
                                      (11 (new (class "clojure.lang.StringSeq"))) ;;at TAG_0
                                      (14 (dup)) 
                                      (15 (aconst_null)) 
                                      (16 (aload_0)) 
                                      (17 (iconst_0)) 
                                      (18 (invokespecial (methodCP "<init>" "clojure.lang.StringSeq" ((class "clojure.lang.IPersistentMap") (class "java.lang.CharSequence") int) void))) 
                                      (21 (areturn)) 
                                      (endofcode 22))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "clojure.lang.IPersistentMap") (class "java.lang.CharSequence") int)
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokespecial
					(methodCP "<init>" "clojure.lang.ASeq" ((class "clojure.lang.IPersistentMap")) void)))
                                      (5 (aload_0))
                                      (6 (aload_2))
                                      (7 (putfield (fieldCP "s" "clojure.lang.StringSeq" (class "java.lang.CharSequence"))))
                                      (10 (aload_0))
                                      (11 (iload_3))
                                      (12 (putfield (fieldCP "i" "clojure.lang.StringSeq" int)))
                                      (15 (return))
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.Obj"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 27)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (aload_0)) 
                                      (2 (invokevirtual (methodCP "meta" "clojure.lang.StringSeq" () (class "clojure.lang.IPersistentMap")))) 
                                      (5 (if_acmpne 10))  ;;to TAG_0
                                      (8 (aload_0)) 
                                      (9 (areturn)) 
                                      (10 (new (class "clojure.lang.StringSeq"))) ;;at TAG_0
                                      (13 (dup)) 
                                      (14 (aload_1)) 
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "s" "clojure.lang.StringSeq" (class "java.lang.CharSequence")))) 
                                      (19 (aload_0)) 
                                      (20 (getfield (fieldCP "i" "clojure.lang.StringSeq" int))) 
                                      (23 (invokespecial (methodCP "<init>" "clojure.lang.StringSeq" ((class "clojure.lang.IPersistentMap") (class "java.lang.CharSequence") int) void))) 
                                      (26 (areturn)) 
                                      (endofcode 27))
                                   (Exceptions )
                                   (StackMap )))
                        (method "first"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 17)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "s" "clojure.lang.StringSeq" (class "java.lang.CharSequence"))))
                                      (4 (aload_0))
                                      (5 (getfield (fieldCP "i" "clojure.lang.StringSeq" int)))
                                      (8 (invokeinterface
					(methodCP "charAt" "java.lang.CharSequence" (int) char) 2))
                                      (13 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (16 (areturn))
                                      (endofcode 17))
                                   (Exceptions )
                                   (StackMap )))
                        (method "next"
                              (parameters )
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 1) (code_length . 42)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "i" "clojure.lang.StringSeq" int))) 
                                      (4 (iconst_1)) 
                                      (5 (iadd)) 
                                      (6 (aload_0)) 
                                      (7 (getfield (fieldCP "s" "clojure.lang.StringSeq" (class "java.lang.CharSequence")))) 
                                      (10 (invokeinterface (methodCP "length" "java.lang.CharSequence" () int) 1)) 
                                      (15 (if_icmpge 40))  ;;to TAG_0
                                      (18 (new (class "clojure.lang.StringSeq"))) 
                                      (21 (dup)) 
                                      (22 (aload_0)) 
                                      (23 (getfield (fieldCP "_meta" "clojure.lang.StringSeq" (class "clojure.lang.IPersistentMap")))) 
                                      (26 (aload_0)) 
                                      (27 (getfield (fieldCP "s" "clojure.lang.StringSeq" (class "java.lang.CharSequence")))) 
                                      (30 (aload_0)) 
                                      (31 (getfield (fieldCP "i" "clojure.lang.StringSeq" int))) 
                                      (34 (iconst_1)) 
                                      (35 (iadd)) 
                                      (36 (invokespecial (methodCP "<init>" "clojure.lang.StringSeq" ((class "clojure.lang.IPersistentMap") (class "java.lang.CharSequence") int) void))) 
                                      (39 (areturn)) 
                                      (40 (aconst_null)) ;;at TAG_0
                                      (41 (areturn)) 
                                      (endofcode 42))
                                   (Exceptions )
                                   (StackMap )))
                        (method "index"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "i" "clojure.lang.StringSeq" int)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "count"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "s" "clojure.lang.StringSeq" (class "java.lang.CharSequence"))))
                                      (4 (invokeinterface
					(methodCP "length" "java.lang.CharSequence" () int) 1))
                                      (9 (aload_0))
                                      (10 (getfield (fieldCP "i" "clojure.lang.StringSeq" int)))
                                      (13 (isub))
                                      (14 (ireturn))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.IObj"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "withMeta" "clojure.lang.StringSeq" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.Obj"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.IndexedSeq")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *StringSeq-class-table*
  (make-static-class-decls 
   *clojure.lang.StringSeq*))

(defconst *package-name-map* 
  ("clojure.lang.StringSeq" . "clojure.lang"))

