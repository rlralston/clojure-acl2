; EdnReader$ListReader-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:51 CDT 2014.
;

(defconst *clojure.lang.EdnReader$ListReader*
 (make-class-def
      '(class "clojure.lang.EdnReader$ListReader"
            "clojure.lang.AFn"
            (constant_pool)
            (fields)
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFn" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 9) (code_length . 80)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (checkcast (class "java.io.PushbackReader"))) 
                                      (4 (astore 4)) 
                                      (6 (iconst_m1)) 
                                      (7 (istore 5)) 
                                      (9 (iconst_m1)) 
                                      (10 (istore 6)) 
                                      (12 (aload 4)) 
                                      (14 (instanceof (class "clojure.lang.LineNumberingPushbackReader"))) 
                                      (17 (ifeq 42))  ;;to TAG_0
                                      (20 (aload 4)) 
                                      (22 (checkcast (class "clojure.lang.LineNumberingPushbackReader"))) 
                                      (25 (invokevirtual (methodCP "getLineNumber" "clojure.lang.LineNumberingPushbackReader" () int))) 
                                      (28 (istore 5)) 
                                      (30 (aload 4)) 
                                      (32 (checkcast (class "clojure.lang.LineNumberingPushbackReader"))) 
                                      (35 (invokevirtual (methodCP "getColumnNumber" "clojure.lang.LineNumberingPushbackReader" () int))) 
                                      (38 (iconst_1)) 
                                      (39 (isub)) 
                                      (40 (istore 6)) 
                                      (42 (bipush 41)) ;;at TAG_0
                                      (44 (aload 4)) 
                                      (46 (iconst_1)) 
                                      (47 (aload_3)) 
                                      (48 (invokestatic (methodCP "readDelimitedList" "clojure.lang.EdnReader" (char (class "java.io.PushbackReader") boolean (class "java.lang.Object")) (class "java.util.List")))) 
                                      (51 (astore 7)) 
                                      (53 (aload 7)) 
                                      (55 (invokeinterface (methodCP "isEmpty" "java.util.List" () boolean) 1)) 
                                      (60 (ifeq 67)) ;;to TAG_1
                                      (63 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentList" (class "clojure.lang.PersistentList$EmptyList")))) 
                                      (66 (areturn)) 
                                      (67 (aload 7)) ;;at TAG_1
                                      (69 (invokestatic (methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList")))) 
                                      (72 (checkcast (class "clojure.lang.IObj"))) 
                                      (75 (astore 8)) 
                                      (77 (aload 8)) 
                                      (79 (areturn)) 
                                      (endofcode 80))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *EdnReader$ListReader-class-table*
  (make-static-class-decls 
   *clojure.lang.EdnReader$ListReader*))

(defconst *package-name-map* 
  ("clojure.lang.EdnReader$ListReader" . "clojure.lang"))

