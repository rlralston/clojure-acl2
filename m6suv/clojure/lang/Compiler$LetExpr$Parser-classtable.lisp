; Compiler$LetExpr$Parser-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:50 CDT 2014.
;

(defconst *clojure.lang.Compiler$LetExpr$Parser*
 (make-class-def
      '(class "clojure.lang.Compiler$LetExpr$Parser"
            "java.lang.Object"
            (constant_pool
                        (STRING  "Bad binding form, expected vector")
                        (STRING  "Bad binding form, expected matched symbol expression pairs")
                        (STRING  "Bad binding form, expected symbol, got: ")
                        (STRING  "Can\nt let qualified name: ")
                        (STRING  "")
                        (STRING  "box")
                        (STRING  "Auto-boxing loop arg: ")
                        (STRING  "longCast")
                        (STRING  "doubleCast"))
            (fields)
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "parse"
                              (parameters (class "clojure.lang.Compiler$C") (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.Compiler$Expr"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 12) (max_locals . 25) (code_length . 913)
                                   (parsedcode
                                      (0 (aload_2)) 
                                      (1 (checkcast (class "clojure.lang.ISeq"))) 
                                      (4 (astore_3)) 
                                      (5 (aload_3)) 
                                      (6 (invokestatic (methodCP "first" "clojure.lang.RT" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (9 (getstatic (fieldCP "LOOP" "clojure.lang.Compiler" (class "clojure.lang.Symbol")))) 
                                      (12 (invokevirtual (methodCP "equals" "java.lang.Object" ((class "java.lang.Object")) boolean))) 
                                      (15 (istore 4)) 
                                      (17 (aload_3)) 
                                      (18 (invokestatic (methodCP "second" "clojure.lang.RT" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (21 (instanceof (class "clojure.lang.IPersistentVector"))) 
                                      (24 (ifne 37)) ;;to TAG_0
                                      (27 (new (class "java.lang.IllegalArgumentException"))) 
                                      (30 (dup)) 
                                      (31 (ldc 0)) ;;STRING:: "Bad binding form, expected vector"
                                      (33 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (36 (athrow)) 
                                      (37 (aload_3)) ;;at TAG_0
                                      (38 (invokestatic (methodCP "second" "clojure.lang.RT" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (41 (checkcast (class "clojure.lang.IPersistentVector"))) 
                                      (44 (astore 5)) 
                                      (46 (aload 5)) 
                                      (48 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (53 (iconst_2)) 
                                      (54 (irem)) 
                                      (55 (ifeq 68)) ;;to TAG_1
                                      (58 (new (class "java.lang.IllegalArgumentException"))) 
                                      (61 (dup)) 
                                      (62 (ldc 1)) ;;STRING:: "Bad binding form, expected matched symbol expression pairs"
                                      (64 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (67 (athrow)) 
                                      (68 (aload_3)) ;;at TAG_1
                                      (69 (invokestatic (methodCP "next" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (72 (invokestatic (methodCP "next" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (75 (astore 6)) 
                                      (77 (aload_1)) 
                                      (78 (getstatic (fieldCP "EVAL" "clojure.lang.Compiler$C" (class "clojure.lang.Compiler$C")))) 
                                      (81 (if_acmpeq 96)) ;;to TAG_2
                                      (84 (aload_1)) 
                                      (85 (getstatic (fieldCP "EXPRESSION" "clojure.lang.Compiler$C" (class "clojure.lang.Compiler$C")))) 
                                      (88 (if_acmpne 114)) ;;to TAG_3
                                      (91 (iload 4)) 
                                      (93 (ifeq 114)) ;;to TAG_3
                                      (96 (aload_1)) ;;at TAG_2
                                      (97 (getstatic (fieldCP "FNONCE" "clojure.lang.Compiler" (class "clojure.lang.Symbol")))) 
                                      (100 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) 
                                      (103 (aload_3)) 
                                      (104 (invokestatic (methodCP "list" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (107 (invokestatic (methodCP "list" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (110 (invokestatic (methodCP "analyze" "clojure.lang.Compiler" ((class "clojure.lang.Compiler$C") (class "java.lang.Object")) (class "clojure.lang.Compiler$Expr")))) 
                                      (113 (areturn)) 
                                      (114 (getstatic (fieldCP "METHOD" "clojure.lang.Compiler" (class "clojure.lang.Var")))) ;;at TAG_3
                                      (117 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (120 (checkcast (class "clojure.lang.Compiler$ObjMethod"))) 
                                      (123 (astore 7)) 
                                      (125 (aload 7)) 
                                      (127 (getfield (fieldCP "locals" "clojure.lang.Compiler$ObjMethod" (class "clojure.lang.IPersistentMap")))) 
                                      (130 (astore 8)) 
                                      (132 (aload 7)) 
                                      (134 (getfield (fieldCP "indexlocals" "clojure.lang.Compiler$ObjMethod" (class "clojure.lang.IPersistentMap")))) 
                                      (137 (astore 9)) 
                                      (139 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) 
                                      (142 (astore 10)) 
                                      (144 (iconst_0)) 
                                      (145 (istore 11)) 
                                      (147 (iload 11)) ;;at TAG_5
                                      (149 (aload 5)) 
                                      (151 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (156 (iconst_2)) 
                                      (157 (idiv)) 
                                      (158 (if_icmpge 179)) ;;to TAG_4
                                      (161 (aload 10)) 
                                      (163 (getstatic (fieldCP "F" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (166 (invokeinterface (methodCP "cons" "clojure.lang.IPersistentVector" ((class "java.lang.Object")) (class "clojure.lang.IPersistentVector")) 2)) 
                                      (171 (astore 10)) 
                                      (173 (iinc 11 1)) 
                                      (176 (goto 147)) ;;to TAG_5
                                      (179 (iconst_4)) ;;at TAG_4
                                      (180 (anewarray (class "java.lang.Object"))) 
                                      (183 (dup)) 
                                      (184 (iconst_0)) 
                                      (185 (getstatic (fieldCP "LOCAL_ENV" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (188 (aastore)) 
                                      (189 (dup)) 
                                      (190 (iconst_1)) 
                                      (191 (getstatic (fieldCP "LOCAL_ENV" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (194 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (197 (aastore)) 
                                      (198 (dup)) 
                                      (199 (iconst_2)) 
                                      (200 (getstatic (fieldCP "NEXT_LOCAL_NUM" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (203 (aastore)) 
                                      (204 (dup)) 
                                      (205 (iconst_3)) 
                                      (206 (getstatic (fieldCP "NEXT_LOCAL_NUM" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (209 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (212 (aastore)) 
                                      (213 (invokestatic (methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (216 (astore 11)) 
                                      (218 (aload 7)) 
                                      (220 (aload 8)) 
                                      (222 (putfield (fieldCP "locals" "clojure.lang.Compiler$ObjMethod" (class "clojure.lang.IPersistentMap")))) 
                                      (225 (aload 7)) 
                                      (227 (aload 9)) 
                                      (229 (putfield (fieldCP "indexlocals" "clojure.lang.Compiler$ObjMethod" (class "clojure.lang.IPersistentMap")))) 
                                      (232 (iload 4)) 
                                      (234 (ifeq 250)) ;;to TAG_6
                                      (237 (aload 11)) 
                                      (239 (getstatic (fieldCP "LOOP_LOCALS" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (242 (aconst_null)) 
                                      (243 (invokeinterface (methodCP "assoc" "clojure.lang.IPersistentMap" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.IPersistentMap")) 3)) 
                                      (248 (astore 11)) 
                                      (250 (aload 11)) ;;at TAG_6
                                      (252 (invokestatic (methodCP "pushThreadBindings" "clojure.lang.Var" ((class "clojure.lang.Associative")) void))) 
                                      (255 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) 
                                      (258 (astore 12)) 
                                      (260 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) 
                                      (263 (astore 13)) 
                                      (265 (iconst_0)) 
                                      (266 (istore 14)) 
                                      (268 (iload 14)) ;;at TAG_14
                                      (270 (aload 5)) 
                                      (272 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (277 (if_icmpge 643)) ;;to TAG_7
                                      (280 (aload 5)) 
                                      (282 (iload 14)) 
                                      (284 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (289 (instanceof (class "clojure.lang.Symbol"))) 
                                      (292 (ifne 330)) ;;to TAG_8
                                      (295 (new (class "java.lang.IllegalArgumentException"))) 
                                      (298 (dup)) 
                                      (299 (new (class "java.lang.StringBuilder"))) 
                                      (302 (dup)) 
                                      (303 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (306 (ldc 2)) ;;STRING:: "Bad binding form, expected symbol, got: "
                                      (308 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (311 (aload 5)) 
                                      (313 (iload 14)) 
                                      (315 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (320 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (323 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (326 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (329 (athrow)) 
                                      (330 (aload 5)) ;;at TAG_8
                                      (332 (iload 14)) 
                                      (334 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (339 (checkcast (class "clojure.lang.Symbol"))) 
                                      (342 (astore 15)) 
                                      (344 (aload 15)) 
                                      (346 (invokevirtual (methodCP "getNamespace" "clojure.lang.Symbol" () (class "java.lang.String")))) 
                                      (349 (ifnull 376)) ;;to TAG_9
                                      (352 (new (class "java.lang.StringBuilder"))) 
                                      (355 (dup)) 
                                      (356 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (359 (ldc 3)) ;;STRING:: "Can\nt let qualified name: "
                                      (361 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (364 (aload 15)) 
                                      (366 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (369 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (372 (invokestatic (methodCP "runtimeException" "clojure.lang.Util" ((class "java.lang.String")) (class "java.lang.RuntimeException")))) 
                                      (375 (athrow)) 
                                      (376 (getstatic (fieldCP "EXPRESSION" "clojure.lang.Compiler$C" (class "clojure.lang.Compiler$C")))) ;;at TAG_9
                                      (379 (aload 5)) 
                                      (381 (iload 14)) 
                                      (383 (iconst_1)) 
                                      (384 (iadd)) 
                                      (385 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (390 (aload 15)) 
                                      (392 (getfield (fieldCP "name" "clojure.lang.Symbol" (class "java.lang.String")))) 
                                      (395 (invokestatic (methodCP "access$100" "clojure.lang.Compiler" ((class "clojure.lang.Compiler$C") (class "java.lang.Object") (class "java.lang.String")) (class "clojure.lang.Compiler$Expr")))) 
                                      (398 (astore 16)) 
                                      (400 (iload 4)) 
                                      (402 (ifeq 586)) ;;to TAG_10
                                      (405 (aload 10)) 
                                      (407 (ifnull 499)) ;;to TAG_11
                                      (410 (aload 10)) 
                                      (412 (iload 14)) 
                                      (414 (iconst_2)) 
                                      (415 (idiv)) 
                                      (416 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (421 (invokestatic (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean))) 
                                      (424 (ifeq 499)) ;;to TAG_11
                                      (427 (new (class "clojure.lang.Compiler$StaticMethodExpr"))) 
                                      (430 (dup)) 
                                      (431 (ldc 4)) ;;STRING:: ""
                                      (433 (iconst_0)) 
                                      (434 (iconst_0)) 
                                      (435 (aconst_null)) 
                                      (436 (ldc_w )) 
                                      (439 (ldc 5)) ;;STRING:: "box"
                                      (441 (iconst_1)) 
                                      (442 (anewarray (class "java.lang.Object"))) 
                                      (445 (dup)) 
                                      (446 (iconst_0)) 
                                      (447 (aload 16)) 
                                      (449 (aastore)) 
                                      (450 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (453 (invokespecial (methodCP "<init>" "clojure.lang.Compiler$StaticMethodExpr" ((class "java.lang.String") int int (class "clojure.lang.Symbol") (class "java.lang.Class") (class "java.lang.String") (class "clojure.lang.IPersistentVector")) void))) 
                                      (456 (astore 16)) 
                                      (458 (getstatic (fieldCP "WARN_ON_REFLECTION" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (461 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (464 (invokestatic (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean))) 
                                      (467 (ifeq 586)) ;;to TAG_10
                                      (470 (invokestatic (methodCP "errPrintWriter" "clojure.lang.RT" () (class "java.io.PrintWriter")))) 
                                      (473 (new (class "java.lang.StringBuilder"))) 
                                      (476 (dup)) 
                                      (477 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (480 (ldc 6)) ;;STRING:: "Auto-boxing loop arg: "
                                      (482 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (485 (aload 15)) 
                                      (487 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (490 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (493 (invokevirtual (methodCP "println" "java.io.PrintWriter" ((class "java.lang.String")) void))) 
                                      (496 (goto 586)) ;;to TAG_10
                                      (499 (aload 16)) ;;at TAG_11
                                      (501 (invokestatic (methodCP "maybePrimitiveType" "clojure.lang.Compiler" ((class "clojure.lang.Compiler$Expr")) (class "java.lang.Class")))) 
                                      (504 (getstatic (fieldCP "TYPE" "java.lang.Integer" (class "java.lang.Class")))) 
                                      (507 (if_acmpne 544)) ;;to TAG_12
                                      (510 (new (class "clojure.lang.Compiler$StaticMethodExpr"))) 
                                      (513 (dup)) 
                                      (514 (ldc 4)) ;;STRING:: ""
                                      (516 (iconst_0)) 
                                      (517 (iconst_0)) 
                                      (518 (aconst_null)) 
                                      (519 (ldc_w )) 
                                      (522 (ldc 7)) ;;STRING:: "longCast"
                                      (524 (iconst_1)) 
                                      (525 (anewarray (class "java.lang.Object"))) 
                                      (528 (dup)) 
                                      (529 (iconst_0)) 
                                      (530 (aload 16)) 
                                      (532 (aastore)) 
                                      (533 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (536 (invokespecial (methodCP "<init>" "clojure.lang.Compiler$StaticMethodExpr" ((class "java.lang.String") int int (class "clojure.lang.Symbol") (class "java.lang.Class") (class "java.lang.String") (class "clojure.lang.IPersistentVector")) void))) 
                                      (539 (astore 16)) 
                                      (541 (goto 586)) ;;to TAG_10
                                      (544 (aload 16)) ;;at TAG_12
                                      (546 (invokestatic (methodCP "maybePrimitiveType" "clojure.lang.Compiler" ((class "clojure.lang.Compiler$Expr")) (class "java.lang.Class")))) 
                                      (549 (getstatic (fieldCP "TYPE" "java.lang.Float" (class "java.lang.Class")))) 
                                      (552 (if_acmpne 586)) ;;to TAG_10
                                      (555 (new (class "clojure.lang.Compiler$StaticMethodExpr"))) 
                                      (558 (dup)) 
                                      (559 (ldc 4)) ;;STRING:: ""
                                      (561 (iconst_0)) 
                                      (562 (iconst_0)) 
                                      (563 (aconst_null)) 
                                      (564 (ldc_w )) 
                                      (567 (ldc 8)) ;;STRING:: "doubleCast"
                                      (569 (iconst_1)) 
                                      (570 (anewarray (class "java.lang.Object"))) 
                                      (573 (dup)) 
                                      (574 (iconst_0)) 
                                      (575 (aload 16)) 
                                      (577 (aastore)) 
                                      (578 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (581 (invokespecial (methodCP "<init>" "clojure.lang.Compiler$StaticMethodExpr" ((class "java.lang.String") int int (class "clojure.lang.Symbol") (class "java.lang.Class") (class "java.lang.String") (class "clojure.lang.IPersistentVector")) void))) 
                                      (584 (astore 16)) 
                                      (586 (aload 15)) ;;at TAG_10
                                      (588 (aload 15)) 
                                      (590 (invokestatic (methodCP "access$500" "clojure.lang.Compiler" ((class "java.lang.Object")) (class "clojure.lang.Symbol")))) 
                                      (593 (aload 16)) 
                                      (595 (iconst_0)) 
                                      (596 (invokestatic (methodCP "access$900" "clojure.lang.Compiler" ((class "clojure.lang.Symbol") (class "clojure.lang.Symbol") (class "clojure.lang.Compiler$Expr") boolean) (class "clojure.lang.Compiler$LocalBinding")))) 
                                      (599 (astore 17)) 
                                      (601 (new (class "clojure.lang.Compiler$BindingInit"))) 
                                      (604 (dup)) 
                                      (605 (aload 17)) 
                                      (607 (aload 16)) 
                                      (609 (invokespecial (methodCP "<init>" "clojure.lang.Compiler$BindingInit" ((class "clojure.lang.Compiler$LocalBinding") (class "clojure.lang.Compiler$Expr")) void))) 
                                      (612 (astore 18)) 
                                      (614 (aload 12)) 
                                      (616 (aload 18)) 
                                      (618 (invokevirtual (methodCP "cons" "clojure.lang.PersistentVector" ((class "java.lang.Object")) (class "clojure.lang.PersistentVector")))) 
                                      (621 (astore 12)) 
                                      (623 (iload 4)) 
                                      (625 (ifeq 637))  ;;to TAG_13
                                      (628 (aload 13)) 
                                      (630 (aload 17)) 
                                      (632 (invokevirtual (methodCP "cons" "clojure.lang.PersistentVector" ((class "java.lang.Object")) (class "clojure.lang.PersistentVector")))) 
                                      (635 (astore 13)) 
                                      (637 (iinc 14 2)) ;;at TAG_13
                                      (640 (goto 268)) ;;to TAG_14
                                      (643 (iload 4)) ;;at TAG_7
                                      (645 (ifeq 657)) ;;to TAG_15
                                      (648 (getstatic (fieldCP "LOOP_LOCALS" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (651 (aload 13)) 
                                      (653 (invokevirtual (methodCP "set" "clojure.lang.Var" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (656 (pop)) 
                                      (657 (iconst_0)) ;;at TAG_15
                                      (658 (istore 15)) 
                                      (660 (iload 4)) ;;at TAG_27
                                      (662 (ifeq 749)) ;;to TAG_16
                                      (665 (new (class "clojure.lang.Compiler$PathNode"))) 
                                      (668 (dup)) 
                                      (669 (getstatic (fieldCP "PATH" "clojure.lang.Compiler$PATHTYPE" (class "clojure.lang.Compiler$PATHTYPE")))) 
                                      (672 (getstatic (fieldCP "CLEAR_PATH" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (675 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (678 (checkcast (class "clojure.lang.Compiler$PathNode"))) 
                                      (681 (invokespecial (methodCP "<init>" "clojure.lang.Compiler$PathNode" ((class "clojure.lang.Compiler$PATHTYPE") (class "clojure.lang.Compiler$PathNode")) void))) 
                                      (684 (astore 16)) 
                                      (686 (bipush 6)) 
                                      (688 (anewarray (class "java.lang.Object"))) 
                                      (691 (dup)) 
                                      (692 (iconst_0)) 
                                      (693 (getstatic (fieldCP "CLEAR_PATH" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (696 (aastore)) 
                                      (697 (dup)) 
                                      (698 (iconst_1)) 
                                      (699 (new (class "clojure.lang.Compiler$PathNode"))) 
                                      (702 (dup)) 
                                      (703 (getstatic (fieldCP "PATH" "clojure.lang.Compiler$PATHTYPE" (class "clojure.lang.Compiler$PATHTYPE")))) 
                                      (706 (aload 16)) 
                                      (708 (invokespecial (methodCP "<init>" "clojure.lang.Compiler$PathNode" ((class "clojure.lang.Compiler$PATHTYPE") (class "clojure.lang.Compiler$PathNode")) void))) 
                                      (711 (aastore)) 
                                      (712 (dup)) 
                                      (713 (iconst_2)) 
                                      (714 (getstatic (fieldCP "CLEAR_ROOT" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (717 (aastore)) 
                                      (718 (dup)) 
                                      (719 (iconst_3)) 
                                      (720 (new (class "clojure.lang.Compiler$PathNode"))) 
                                      (723 (dup)) 
                                      (724 (getstatic (fieldCP "PATH" "clojure.lang.Compiler$PATHTYPE" (class "clojure.lang.Compiler$PATHTYPE")))) 
                                      (727 (aload 16)) 
                                      (729 (invokespecial (methodCP "<init>" "clojure.lang.Compiler$PathNode" ((class "clojure.lang.Compiler$PATHTYPE") (class "clojure.lang.Compiler$PathNode")) void))) 
                                      (732 (aastore)) 
                                      (733 (dup)) 
                                      (734 (iconst_4)) 
                                      (735 (getstatic (fieldCP "NO_RECUR" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (738 (aastore)) 
                                      (739 (dup)) 
                                      (740 (iconst_5)) 
                                      (741 (aconst_null)) 
                                      (742 (aastore)) 
                                      (743 (invokestatic (methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (746 (invokestatic (methodCP "pushThreadBindings" "clojure.lang.Var" ((class "clojure.lang.Associative")) void))) 
                                      (749 (new (class "clojure.lang.Compiler$BodyExpr$Parser"))) ;;at TAG_16
                                      (752 (dup)) 
                                      (753 (invokespecial (methodCP "<init>" "clojure.lang.Compiler$BodyExpr$Parser" () void))) 
                                      (756 (iload 4)) 
                                      (758 (ifeq 767)) ;;to TAG_17
                                      (761 (getstatic (fieldCP "RETURN" "clojure.lang.Compiler$C" (class "clojure.lang.Compiler$C")))) 
                                      (764 (goto 768)) ;;to TAG_18
                                      (767 (aload_1)) ;;at TAG_17
                                      (768 (aload 6)) ;;at TAG_18
                                      (770 (invokevirtual (methodCP "parse" "clojure.lang.Compiler$BodyExpr$Parser" ((class "clojure.lang.Compiler$C") (class "java.lang.Object")) (class "clojure.lang.Compiler$Expr")))) 
                                      (773 (astore 14)) 
                                      (775 (jsr 789)) ;;to TAG_19
                                      (778 (goto 863)) ;;to TAG_20;;at TAG_28
                                      (781 (astore 19)) ;;at TAG_29
                                      (783 (jsr 789)) ;;to TAG_19
                                      (786 (aload 19)) ;;at TAG_30
                                      (788 (athrow)) 
                                      (789 (astore 20)) ;;at TAG_19
                                      (791 (iload 4)) 
                                      (793 (ifeq 861)) ;;to TAG_21
                                      (796 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) 
                                      (799 (iconst_0)) 
                                      (800 (istore 21)) 
                                      (802 (iload 21)) ;;at TAG_23
                                      (804 (aload 13)) 
                                      (806 (invokevirtual (methodCP "count" "clojure.lang.PersistentVector" () int))) 
                                      (809 (if_icmpge 861)) ;;to TAG_21
                                      (812 (aload 13)) 
                                      (814 (iload 21)) 
                                      (816 (invokevirtual (methodCP "nth" "clojure.lang.PersistentVector" (int) (class "java.lang.Object")))) 
                                      (819 (checkcast (class "clojure.lang.Compiler$LocalBinding"))) 
                                      (822 (astore 22)) 
                                      (824 (aload 22)) 
                                      (826 (getfield (fieldCP "recurMistmatch" "clojure.lang.Compiler$LocalBinding" boolean))) 
                                      (829 (ifeq 855)) ;;to TAG_22
                                      (832 (aload 10)) 
                                      (834 (iload 21)) 
                                      (836 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (839 (getstatic (fieldCP "T" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (842 (invokeinterface (methodCP "assoc" "clojure.lang.IPersistentVector" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.Associative")) 3)) 
                                      (847 (checkcast (class "clojure.lang.IPersistentVector"))) 
                                      (850 (astore 10)) 
                                      (852 (iconst_1)) 
                                      (853 (istore 15)) 
                                      (855 (iinc 21 1)) ;;at TAG_22
                                      (858 (goto 802)) ;;to TAG_23
                                      (861 (ret 20)) ;;at TAG_21
                                      (863 (iload 15)) ;;at TAG_20
                                      (865 (ifne 889)) ;;to TAG_24
                                      (868 (new (class "clojure.lang.Compiler$LetExpr"))) 
                                      (871 (dup)) 
                                      (872 (aload 12)) 
                                      (874 (aload 14)) 
                                      (876 (iload 4)) 
                                      (878 (invokespecial (methodCP "<init>" "clojure.lang.Compiler$LetExpr" ((class "clojure.lang.PersistentVector") (class "clojure.lang.Compiler$Expr") boolean) void))) 
                                      (881 (astore 16)) 
                                      (883 (jsr 903)) ;;to TAG_25
                                      (886 (aload 16)) ;;at TAG_31
                                      (888 (areturn)) 
                                      (889 (jsr 903)) ;;to TAG_25;;at TAG_24
                                      (892 (goto 910)) ;;to TAG_26;;at TAG_33
                                      (895 (astore 23)) ;;at TAG_32
                                      (897 (jsr 903)) ;;to TAG_25
                                      (900 (aload 23)) ;;at TAG_34
                                      (902 (athrow)) 
                                      (903 (astore 24)) ;;at TAG_25
                                      (905 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) 
                                      (908 (ret 24)) 
                                      (910 (goto 179)) ;;to TAG_4;;at TAG_26
                                      (endofcode 913))
                                   (Exceptions 
                                     (handler 660 778  781 (class "java.lang.Throwable"))
                                     (handler 781 786  781 (class "java.lang.Throwable"))
                                     (handler 250 886  895 (class "java.lang.Throwable"))
                                     (handler 889 892  895 (class "java.lang.Throwable"))
                                     (handler 895 900  895 (class "java.lang.Throwable")))
                                   (StackMap ))))
            (interfaces "clojure.lang.Compiler$IParser")
            (accessflags  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Compiler$LetExpr$Parser-class-table*
  (make-static-class-decls 
   *clojure.lang.Compiler$LetExpr$Parser*))

(defconst *package-name-map* 
  ("clojure.lang.Compiler$LetExpr$Parser" . "clojure.lang"))

