; PersistentHashMap$ArrayNode$2-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:52 CDT 2014.
;

(defconst *clojure.lang.PersistentHashMap$ArrayNode$2*
 (make-class-def
      '(class "clojure.lang.PersistentHashMap$ArrayNode$2"
            "java.lang.Object"
            (constant_pool)
            (fields
                        (field "val$t2" (class "java.util.List") (accessflags  *class*  *final* ) -1)
                        (field "val$combinef" (class "clojure.lang.IFn") (accessflags  *class*  *final* ) -1)
                        (field "val$fjtask" (class "clojure.lang.IFn") (accessflags  *class*  *final* ) -1)
                        (field "val$fjfork" (class "clojure.lang.IFn") (accessflags  *class*  *final* ) -1)
                        (field "val$fjjoin" (class "clojure.lang.IFn") (accessflags  *class*  *final* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "java.util.List") (class "clojure.lang.IFn") (class "clojure.lang.IFn") (class "clojure.lang.IFn") (class "clojure.lang.IFn"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 6) (code_length . 32)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (putfield (fieldCP "val$t2" "clojure.lang.PersistentHashMap$ArrayNode$2" (class "java.util.List"))))
                                      (5 (aload_0))
                                      (6 (aload_2))
                                      (7 (putfield (fieldCP "val$combinef" "clojure.lang.PersistentHashMap$ArrayNode$2" (class "clojure.lang.IFn"))))
                                      (10 (aload_0))
                                      (11 (aload_3))
                                      (12 (putfield (fieldCP "val$fjtask" "clojure.lang.PersistentHashMap$ArrayNode$2" (class "clojure.lang.IFn"))))
                                      (15 (aload_0))
                                      (16 (aload 4))
                                      (18 (putfield (fieldCP "val$fjfork" "clojure.lang.PersistentHashMap$ArrayNode$2" (class "clojure.lang.IFn"))))
                                      (21 (aload_0))
                                      (22 (aload 5))
                                      (24 (putfield (fieldCP "val$fjjoin" "clojure.lang.PersistentHashMap$ArrayNode$2" (class "clojure.lang.IFn"))))
                                      (27 (aload_0))
                                      (28 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (31 (return))
                                      (endofcode 32))
                                   (Exceptions )
                                   (StackMap )))
                        (method "call"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 1) (code_length . 24)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "val$t2" "clojure.lang.PersistentHashMap$ArrayNode$2" (class "java.util.List"))))
                                      (4 (aload_0))
                                      (5 (getfield (fieldCP "val$combinef" "clojure.lang.PersistentHashMap$ArrayNode$2" (class "clojure.lang.IFn"))))
                                      (8 (aload_0))
                                      (9 (getfield (fieldCP "val$fjtask" "clojure.lang.PersistentHashMap$ArrayNode$2" (class "clojure.lang.IFn"))))
                                      (12 (aload_0))
                                      (13 (getfield (fieldCP "val$fjfork" "clojure.lang.PersistentHashMap$ArrayNode$2" (class "clojure.lang.IFn"))))
                                      (16 (aload_0))
                                      (17 (getfield (fieldCP "val$fjjoin" "clojure.lang.PersistentHashMap$ArrayNode$2" (class "clojure.lang.IFn"))))
                                      (20 (invokestatic
					(methodCP "foldTasks" "clojure.lang.PersistentHashMap$ArrayNode" ((class "java.util.List") (class "clojure.lang.IFn") (class "clojure.lang.IFn") (class "clojure.lang.IFn") (class "clojure.lang.IFn")) (class "java.lang.Object"))))
                                      (23 (areturn))
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "java.util.concurrent.Callable")
            (accessflags  *class*  *final*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "EnclosingMethod")
              (attribute "InnerClasses")))))


(defconst *PersistentHashMap$ArrayNode$2-class-table*
  (make-static-class-decls 
   *clojure.lang.PersistentHashMap$ArrayNode$2*))

(defconst *package-name-map* 
  ("clojure.lang.PersistentHashMap$ArrayNode$2" . "clojure.lang"))

