; Util$4-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:53 CDT 2014.
;

(defconst *clojure.lang.Util$4*
 (make-class-def
      '(class "clojure.lang.Util$4"
            "java.lang.Object"
            (constant_pool)
            (fields)
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "equiv"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 26)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (instanceof (class "clojure.lang.IPersistentCollection"))) 
                                      (4 (ifne 14))  ;;to TAG_0
                                      (7 (aload_2)) 
                                      (8 (instanceof (class "clojure.lang.IPersistentCollection"))) 
                                      (11 (ifeq 20)) ;;to TAG_1
                                      (14 (aload_1)) ;;at TAG_0
                                      (15 (aload_2)) 
                                      (16 (invokestatic (methodCP "pcequiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (19 (ireturn)) 
                                      (20 (aload_1)) ;;at TAG_1
                                      (21 (aload_2)) 
                                      (22 (invokevirtual (methodCP "equals" "java.lang.Object" ((class "java.lang.Object")) boolean))) 
                                      (25 (ireturn)) 
                                      (endofcode 26))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.Util$EquivPred")
            (accessflags  *class*  *final*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "EnclosingMethod")
              (attribute "InnerClasses")))))


(defconst *Util$4-class-table*
  (make-static-class-decls 
   *clojure.lang.Util$4*))

(defconst *package-name-map* 
  ("clojure.lang.Util$4" . "clojure.lang"))

