; Ref-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:52 CDT 2014.
;

(defconst *clojure.lang.Ref*
 (make-class-def
      '(class "clojure.lang.Ref"
            "clojure.lang.ARef"
            (constant_pool
                        (STRING  " is unbound."))
            (fields
                        (field "tvals" (class "clojure.lang.Ref$TVal") (accessflags  *class* ) -1)
                        (field "faults" (class "java.util.concurrent.atomic.AtomicInteger") (accessflags  *class*  *final* ) -1)
                        (field "lock" (class "java.util.concurrent.locks.ReentrantReadWriteLock") (accessflags  *class*  *final* ) -1)
                        (field "tinfo" (class "clojure.lang.LockingTransaction$Info") (accessflags  *class* ) -1)
                        (field "id" long (accessflags  *class*  *final* ) -1)
                        (field "minHistory" int (accessflags  *class*  *volatile* ) -1)
                        (field "maxHistory" int (accessflags  *class*  *volatile* ) -1)
                        (field "ids" (class "java.util.concurrent.atomic.AtomicLong") (accessflags  *class*  *final*  *static* ) -1))
            (methods
                        (method "compareTo"
                              (parameters (class "clojure.lang.Ref"))
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 30)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "id" "clojure.lang.Ref" long))) 
                                      (4 (aload_1)) 
                                      (5 (getfield (fieldCP "id" "clojure.lang.Ref" long))) 
                                      (8 (lcmp)) 
                                      (9 (ifne 14))  ;;to TAG_0
                                      (12 (iconst_0)) 
                                      (13 (ireturn)) 
                                      (14 (aload_0)) ;;at TAG_0
                                      (15 (getfield (fieldCP "id" "clojure.lang.Ref" long))) 
                                      (18 (aload_1)) 
                                      (19 (getfield (fieldCP "id" "clojure.lang.Ref" long))) 
                                      (22 (lcmp)) 
                                      (23 (ifge 28)) ;;to TAG_1
                                      (26 (iconst_m1)) 
                                      (27 (ireturn)) 
                                      (28 (iconst_1)) ;;at TAG_1
                                      (29 (ireturn)) 
                                      (endofcode 30))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getMinHistory"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "minHistory" "clojure.lang.Ref" int)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setMinHistory"
                              (parameters int)
                              (returntype . (class "clojure.lang.Ref"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 7)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (putfield (fieldCP "minHistory" "clojure.lang.Ref" int)))
                                      (5 (aload_0))
                                      (6 (areturn))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getMaxHistory"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "maxHistory" "clojure.lang.Ref" int)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "setMaxHistory"
                              (parameters int)
                              (returntype . (class "clojure.lang.Ref"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 7)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (putfield (fieldCP "maxHistory" "clojure.lang.Ref" int)))
                                      (5 (aload_0))
                                      (6 (areturn))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 7)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aconst_null))
                                      (3 (invokespecial
					(methodCP "<init>" "clojure.lang.Ref" ((class "java.lang.Object") (class "clojure.lang.IPersistentMap")) void)))
                                      (6 (return))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object") (class "clojure.lang.IPersistentMap"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 8) (max_locals . 3) (code_length . 65)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_2))
                                      (2 (invokespecial
					(methodCP "<init>" "clojure.lang.ARef" ((class "clojure.lang.IPersistentMap")) void)))
                                      (5 (aload_0))
                                      (6 (iconst_0))
                                      (7 (putfield (fieldCP "minHistory" "clojure.lang.Ref" int)))
                                      (10 (aload_0))
                                      (11 (bipush 10))
                                      (13 (putfield (fieldCP "maxHistory" "clojure.lang.Ref" int)))
                                      (16 (aload_0))
                                      (17 (getstatic (fieldCP "ids" "clojure.lang.Ref" (class "java.util.concurrent.atomic.AtomicLong"))))
                                      (20 (invokevirtual
					(methodCP "getAndIncrement" "java.util.concurrent.atomic.AtomicLong" () long)))
                                      (23 (putfield (fieldCP "id" "clojure.lang.Ref" long)))
                                      (26 (aload_0))
                                      (27 (new (class "java.util.concurrent.atomic.AtomicInteger")))
                                      (30 (dup))
                                      (31 (invokespecial
					(methodCP "<init>" "java.util.concurrent.atomic.AtomicInteger" () void)))
                                      (34 (putfield (fieldCP "faults" "clojure.lang.Ref" (class "java.util.concurrent.atomic.AtomicInteger"))))
                                      (37 (aload_0))
                                      (38 (new (class "java.util.concurrent.locks.ReentrantReadWriteLock")))
                                      (41 (dup))
                                      (42 (invokespecial
					(methodCP "<init>" "java.util.concurrent.locks.ReentrantReadWriteLock" () void)))
                                      (45 (putfield (fieldCP "lock" "clojure.lang.Ref" (class "java.util.concurrent.locks.ReentrantReadWriteLock"))))
                                      (48 (aload_0))
                                      (49 (new (class "clojure.lang.Ref$TVal")))
                                      (52 (dup))
                                      (53 (aload_1))
                                      (54 (lconst_0))
                                      (55 (invokestatic
					(methodCP "currentTimeMillis" "java.lang.System" () long)))
                                      (58 (invokespecial
					(methodCP "<init>" "clojure.lang.Ref$TVal" ((class "java.lang.Object") long long) void)))
                                      (61 (putfield (fieldCP "tvals" "clojure.lang.Ref" (class "clojure.lang.Ref$TVal"))))
                                      (64 (return))
                                      (endofcode 65))
                                   (Exceptions )
                                   (StackMap )))
                        (method "currentVal"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 80)
                                   (parsedcode
                                      (0 (aload_0)) ;;at TAG_1
                                      (1 (getfield (fieldCP "lock" "clojure.lang.Ref" (class "java.util.concurrent.locks.ReentrantReadWriteLock")))) 
                                      (4 (invokevirtual (methodCP "readLock" "java.util.concurrent.locks.ReentrantReadWriteLock" () (class "java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock")))) 
                                      (7 (invokevirtual (methodCP "lock" "java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock" () void))) 
                                      (10 (aload_0)) 
                                      (11 (getfield (fieldCP "tvals" "clojure.lang.Ref" (class "clojure.lang.Ref$TVal")))) 
                                      (14 (ifnull 37)) ;;to TAG_0
                                      (17 (aload_0)) 
                                      (18 (getfield (fieldCP "tvals" "clojure.lang.Ref" (class "clojure.lang.Ref$TVal")))) 
                                      (21 (getfield (fieldCP "val" "clojure.lang.Ref$TVal" (class "java.lang.Object")))) 
                                      (24 (astore_1)) 
                                      (25 (aload_0)) ;;at TAG_2
                                      (26 (getfield (fieldCP "lock" "clojure.lang.Ref" (class "java.util.concurrent.locks.ReentrantReadWriteLock")))) 
                                      (29 (invokevirtual (methodCP "readLock" "java.util.concurrent.locks.ReentrantReadWriteLock" () (class "java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock")))) 
                                      (32 (invokevirtual (methodCP "unlock" "java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock" () void))) 
                                      (35 (aload_1)) 
                                      (36 (areturn)) 
                                      (37 (new (class "java.lang.IllegalStateException"))) ;;at TAG_0
                                      (40 (dup)) 
                                      (41 (new (class "java.lang.StringBuilder"))) 
                                      (44 (dup)) 
                                      (45 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (48 (aload_0)) 
                                      (49 (invokevirtual (methodCP "toString" "java.lang.Object" () (class "java.lang.String")))) 
                                      (52 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (55 (ldc 0)) ;;STRING:: " is unbound."
                                      (57 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (60 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (63 (invokespecial (methodCP "<init>" "java.lang.IllegalStateException" ((class "java.lang.String")) void))) 
                                      (66 (athrow)) 
                                      (67 (astore_2)) ;;at TAG_3
                                      (68 (aload_0)) ;;at TAG_4
                                      (69 (getfield (fieldCP "lock" "clojure.lang.Ref" (class "java.util.concurrent.locks.ReentrantReadWriteLock")))) 
                                      (72 (invokevirtual (methodCP "readLock" "java.util.concurrent.locks.ReentrantReadWriteLock" () (class "java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock")))) 
                                      (75 (invokevirtual (methodCP "unlock" "java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock" () void))) 
                                      (78 (aload_2)) 
                                      (79 (athrow)) 
                                      (endofcode 80))
                                   (Exceptions 
                                     (handler 0 25  67 (class "java.lang.Throwable"))
                                     (handler 37 68  67 (class "java.lang.Throwable")))
                                   (StackMap )))
                        (method "deref"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 19)
                                   (parsedcode
                                      (0 (invokestatic (methodCP "getRunning" "clojure.lang.LockingTransaction" () (class "clojure.lang.LockingTransaction")))) 
                                      (3 (astore_1)) 
                                      (4 (aload_1)) 
                                      (5 (ifnonnull 13))  ;;to TAG_0
                                      (8 (aload_0)) 
                                      (9 (invokevirtual (methodCP "currentVal" "clojure.lang.Ref" () (class "java.lang.Object")))) 
                                      (12 (areturn)) 
                                      (13 (aload_1)) ;;at TAG_0
                                      (14 (aload_0)) 
                                      (15 (invokevirtual (methodCP "doGet" "clojure.lang.LockingTransaction" ((class "clojure.lang.Ref")) (class "java.lang.Object")))) 
                                      (18 (areturn)) 
                                      (endofcode 19))
                                   (Exceptions )
                                   (StackMap )))
                        (method "set"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 9)
                                   (parsedcode
                                      (0 (invokestatic
					(methodCP "getEx" "clojure.lang.LockingTransaction" () (class "clojure.lang.LockingTransaction"))))
                                      (3 (aload_0))
                                      (4 (aload_1))
                                      (5 (invokevirtual
					(methodCP "doSet" "clojure.lang.LockingTransaction" ((class "clojure.lang.Ref") (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (8 (areturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "commute"
                              (parameters (class "clojure.lang.IFn") (class "clojure.lang.ISeq"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 10)
                                   (parsedcode
                                      (0 (invokestatic
					(methodCP "getEx" "clojure.lang.LockingTransaction" () (class "clojure.lang.LockingTransaction"))))
                                      (3 (aload_0))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (invokevirtual
					(methodCP "doCommute" "clojure.lang.LockingTransaction" ((class "clojure.lang.Ref") (class "clojure.lang.IFn") (class "clojure.lang.ISeq")) (class "java.lang.Object"))))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "alter"
                              (parameters (class "clojure.lang.IFn") (class "clojure.lang.ISeq"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 4) (code_length . 25)
                                   (parsedcode
                                      (0 (invokestatic
					(methodCP "getEx" "clojure.lang.LockingTransaction" () (class "clojure.lang.LockingTransaction"))))
                                      (3 (astore_3))
                                      (4 (aload_3))
                                      (5 (aload_0))
                                      (6 (aload_1))
                                      (7 (aload_3))
                                      (8 (aload_0))
                                      (9 (invokevirtual
					(methodCP "doGet" "clojure.lang.LockingTransaction" ((class "clojure.lang.Ref")) (class "java.lang.Object"))))
                                      (12 (aload_2))
                                      (13 (invokestatic
					(methodCP "cons" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (16 (invokeinterface
					(methodCP "applyTo" "clojure.lang.IFn" ((class "clojure.lang.ISeq")) (class "java.lang.Object")) 2))
                                      (21 (invokevirtual
					(methodCP "doSet" "clojure.lang.LockingTransaction" ((class "clojure.lang.Ref") (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (24 (areturn))
                                      (endofcode 25))
                                   (Exceptions )
                                   (StackMap )))
                        (method "touch"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (invokestatic
					(methodCP "getEx" "clojure.lang.LockingTransaction" () (class "clojure.lang.LockingTransaction"))))
                                      (3 (aload_0))
                                      (4 (invokevirtual
					(methodCP "doEnsure" "clojure.lang.LockingTransaction" ((class "clojure.lang.Ref")) void)))
                                      (7 (return))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isBound"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 48)
                                   (parsedcode
                                      (0 (aload_0)) ;;at TAG_2
                                      (1 (getfield (fieldCP "lock" "clojure.lang.Ref" (class "java.util.concurrent.locks.ReentrantReadWriteLock")))) 
                                      (4 (invokevirtual (methodCP "readLock" "java.util.concurrent.locks.ReentrantReadWriteLock" () (class "java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock")))) 
                                      (7 (invokevirtual (methodCP "lock" "java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock" () void))) 
                                      (10 (aload_0)) 
                                      (11 (getfield (fieldCP "tvals" "clojure.lang.Ref" (class "clojure.lang.Ref$TVal")))) 
                                      (14 (ifnull 21)) ;;to TAG_0
                                      (17 (iconst_1)) 
                                      (18 (goto 22)) ;;to TAG_1
                                      (21 (iconst_0)) ;;at TAG_0
                                      (22 (istore_1)) ;;at TAG_1
                                      (23 (aload_0)) ;;at TAG_3
                                      (24 (getfield (fieldCP "lock" "clojure.lang.Ref" (class "java.util.concurrent.locks.ReentrantReadWriteLock")))) 
                                      (27 (invokevirtual (methodCP "readLock" "java.util.concurrent.locks.ReentrantReadWriteLock" () (class "java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock")))) 
                                      (30 (invokevirtual (methodCP "unlock" "java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock" () void))) 
                                      (33 (iload_1)) 
                                      (34 (ireturn)) 
                                      (35 (astore_2)) ;;at TAG_4
                                      (36 (aload_0)) ;;at TAG_5
                                      (37 (getfield (fieldCP "lock" "clojure.lang.Ref" (class "java.util.concurrent.locks.ReentrantReadWriteLock")))) 
                                      (40 (invokevirtual (methodCP "readLock" "java.util.concurrent.locks.ReentrantReadWriteLock" () (class "java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock")))) 
                                      (43 (invokevirtual (methodCP "unlock" "java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock" () void))) 
                                      (46 (aload_2)) 
                                      (47 (athrow)) 
                                      (endofcode 48))
                                   (Exceptions 
                                     (handler 0 23  35 (class "java.lang.Throwable"))
                                     (handler 35 36  35 (class "java.lang.Throwable")))
                                   (StackMap )))
                        (method "trimHistory"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 66)
                                   (parsedcode
                                      (0 (aload_0)) ;;at TAG_2
                                      (1 (getfield (fieldCP "lock" "clojure.lang.Ref" (class "java.util.concurrent.locks.ReentrantReadWriteLock")))) 
                                      (4 (invokevirtual (methodCP "writeLock" "java.util.concurrent.locks.ReentrantReadWriteLock" () (class "java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock")))) 
                                      (7 (invokevirtual (methodCP "lock" "java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock" () void))) 
                                      (10 (aload_0)) 
                                      (11 (getfield (fieldCP "tvals" "clojure.lang.Ref" (class "clojure.lang.Ref$TVal")))) 
                                      (14 (ifnull 39)) ;;to TAG_0
                                      (17 (aload_0)) 
                                      (18 (getfield (fieldCP "tvals" "clojure.lang.Ref" (class "clojure.lang.Ref$TVal")))) 
                                      (21 (aload_0)) 
                                      (22 (getfield (fieldCP "tvals" "clojure.lang.Ref" (class "clojure.lang.Ref$TVal")))) 
                                      (25 (putfield (fieldCP "next" "clojure.lang.Ref$TVal" (class "clojure.lang.Ref$TVal")))) 
                                      (28 (aload_0)) 
                                      (29 (getfield (fieldCP "tvals" "clojure.lang.Ref" (class "clojure.lang.Ref$TVal")))) 
                                      (32 (aload_0)) 
                                      (33 (getfield (fieldCP "tvals" "clojure.lang.Ref" (class "clojure.lang.Ref$TVal")))) 
                                      (36 (putfield (fieldCP "prior" "clojure.lang.Ref$TVal" (class "clojure.lang.Ref$TVal")))) 
                                      (39 (aload_0)) ;;at TAG_0
                                      (40 (getfield (fieldCP "lock" "clojure.lang.Ref" (class "java.util.concurrent.locks.ReentrantReadWriteLock")))) 
                                      (43 (invokevirtual (methodCP "writeLock" "java.util.concurrent.locks.ReentrantReadWriteLock" () (class "java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock")))) 
                                      (46 (invokevirtual (methodCP "unlock" "java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock" () void))) 
                                      (49 (goto 65)) ;;to TAG_1
                                      (52 (astore_1)) ;;at TAG_3
                                      (53 (aload_0)) ;;at TAG_4
                                      (54 (getfield (fieldCP "lock" "clojure.lang.Ref" (class "java.util.concurrent.locks.ReentrantReadWriteLock")))) 
                                      (57 (invokevirtual (methodCP "writeLock" "java.util.concurrent.locks.ReentrantReadWriteLock" () (class "java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock")))) 
                                      (60 (invokevirtual (methodCP "unlock" "java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock" () void))) 
                                      (63 (aload_1)) 
                                      (64 (athrow)) 
                                      (65 (return)) ;;at TAG_1
                                      (endofcode 66))
                                   (Exceptions 
                                     (handler 0 39  52 (class "java.lang.Throwable"))
                                     (handler 52 53  52 (class "java.lang.Throwable")))
                                   (StackMap )))
                        (method "getHistoryCount"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 40)
                                   (parsedcode
                                      (0 (aload_0)) ;;at TAG_0
                                      (1 (getfield (fieldCP "lock" "clojure.lang.Ref" (class "java.util.concurrent.locks.ReentrantReadWriteLock")))) 
                                      (4 (invokevirtual (methodCP "writeLock" "java.util.concurrent.locks.ReentrantReadWriteLock" () (class "java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock")))) 
                                      (7 (invokevirtual (methodCP "lock" "java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock" () void))) 
                                      (10 (aload_0)) 
                                      (11 (invokevirtual (methodCP "histCount" "clojure.lang.Ref" () int))) 
                                      (14 (istore_1)) 
                                      (15 (aload_0)) ;;at TAG_1
                                      (16 (getfield (fieldCP "lock" "clojure.lang.Ref" (class "java.util.concurrent.locks.ReentrantReadWriteLock")))) 
                                      (19 (invokevirtual (methodCP "writeLock" "java.util.concurrent.locks.ReentrantReadWriteLock" () (class "java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock")))) 
                                      (22 (invokevirtual (methodCP "unlock" "java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock" () void))) 
                                      (25 (iload_1)) 
                                      (26 (ireturn)) 
                                      (27 (astore_2)) ;;at TAG_2
                                      (28 (aload_0)) ;;at TAG_3
                                      (29 (getfield (fieldCP "lock" "clojure.lang.Ref" (class "java.util.concurrent.locks.ReentrantReadWriteLock")))) 
                                      (32 (invokevirtual (methodCP "writeLock" "java.util.concurrent.locks.ReentrantReadWriteLock" () (class "java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock")))) 
                                      (35 (invokevirtual (methodCP "unlock" "java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock" () void))) 
                                      (38 (aload_2)) 
                                      (39 (athrow)) 
                                      (endofcode 40))
                                   (Exceptions 
                                     (handler 0 15  27 (class "java.lang.Throwable"))
                                     (handler 27 28  27 (class "java.lang.Throwable")))
                                   (StackMap )))
                        (method "histCount"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 40)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "tvals" "clojure.lang.Ref" (class "clojure.lang.Ref$TVal")))) 
                                      (4 (ifnonnull 9)) ;;to TAG_0
                                      (7 (iconst_0)) 
                                      (8 (ireturn)) 
                                      (9 (iconst_0)) ;;at TAG_0
                                      (10 (istore_1)) 
                                      (11 (aload_0)) 
                                      (12 (getfield (fieldCP "tvals" "clojure.lang.Ref" (class "clojure.lang.Ref$TVal")))) 
                                      (15 (getfield (fieldCP "next" "clojure.lang.Ref$TVal" (class "clojure.lang.Ref$TVal")))) 
                                      (18 (astore_2)) 
                                      (19 (aload_2)) ;;at TAG_2
                                      (20 (aload_0)) 
                                      (21 (getfield (fieldCP "tvals" "clojure.lang.Ref" (class "clojure.lang.Ref$TVal")))) 
                                      (24 (if_acmpeq 38)) ;;to TAG_1
                                      (27 (iinc 1 1)) 
                                      (30 (aload_2)) 
                                      (31 (getfield (fieldCP "next" "clojure.lang.Ref$TVal" (class "clojure.lang.Ref$TVal")))) 
                                      (34 (astore_2)) 
                                      (35 (goto 19))  ;;to TAG_2
                                      (38 (iload_1)) ;;at TAG_1
                                      (39 (ireturn)) 
                                      (endofcode 40))
                                   (Exceptions )
                                   (StackMap )))
                        (method "fn"
                              (parameters )
                              (returntype . (class "clojure.lang.IFn"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "deref" "clojure.lang.Ref" () (class "java.lang.Object"))))
                                      (4 (checkcast (class "clojure.lang.IFn")))
                                      (7 (areturn))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "call"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "invoke" "clojure.lang.Ref" () (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "run"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0)) ;;at TAG_1
                                      (1 (invokevirtual (methodCP "invoke" "clojure.lang.Ref" () (class "java.lang.Object")))) 
                                      (4 (pop)) 
                                      (5 (goto 14)) ;;to TAG_0;;at TAG_2
                                      (8 (astore_1)) ;;at TAG_3
                                      (9 (aload_1)) 
                                      (10 (invokestatic (methodCP "sneakyThrow" "clojure.lang.Util" ((class "java.lang.Throwable")) (class "java.lang.RuntimeException")))) 
                                      (13 (athrow)) 
                                      (14 (return)) ;;at TAG_0
                                      (endofcode 15))
                                   (Exceptions 
                                     (handler 0 5  8 (class "java.lang.Exception")))
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1))
                                      (9 (areturn))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (10 (areturn))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 12)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (11 (areturn))
                                      (endofcode 12))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4))
                                      (12 (areturn))
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 5) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5))
                                      (14 (areturn))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 6) (code_length . 17)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 6))
                                      (16 (areturn))
                                      (endofcode 17))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 7) (code_length . 19)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 7))
                                      (18 (areturn))
                                      (endofcode 19))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 8) (max_locals . 8) (code_length . 21)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 8))
                                      (20 (areturn))
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 9) (max_locals . 9) (code_length . 23)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 9))
                                      (22 (areturn))
                                      (endofcode 23))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 10) (max_locals . 10) (code_length . 25)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 10))
                                      (24 (areturn))
                                      (endofcode 25))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 11) (max_locals . 11) (code_length . 27)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 11))
                                      (26 (areturn))
                                      (endofcode 27))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 12) (max_locals . 12) (code_length . 29)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 12))
                                      (28 (areturn))
                                      (endofcode 29))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 13) (max_locals . 13) (code_length . 31)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 13))
                                      (30 (areturn))
                                      (endofcode 31))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 14) (max_locals . 14) (code_length . 33)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 14))
                                      (32 (areturn))
                                      (endofcode 33))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 15) (max_locals . 15) (code_length . 35)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (aload 14))
                                      (29 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 15))
                                      (34 (areturn))
                                      (endofcode 35))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 16) (max_locals . 16) (code_length . 37)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (aload 14))
                                      (29 (aload 15))
                                      (31 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 16))
                                      (36 (areturn))
                                      (endofcode 37))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 17) (max_locals . 17) (code_length . 39)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (aload 14))
                                      (29 (aload 15))
                                      (31 (aload 16))
                                      (33 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 17))
                                      (38 (areturn))
                                      (endofcode 39))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 18) (max_locals . 18) (code_length . 41)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (aload 14))
                                      (29 (aload 15))
                                      (31 (aload 16))
                                      (33 (aload 17))
                                      (35 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 18))
                                      (40 (areturn))
                                      (endofcode 41))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 19) (max_locals . 19) (code_length . 43)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (aload 14))
                                      (29 (aload 15))
                                      (31 (aload 16))
                                      (33 (aload 17))
                                      (35 (aload 18))
                                      (37 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 19))
                                      (42 (areturn))
                                      (endofcode 43))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 20) (max_locals . 20) (code_length . 45)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (aload 14))
                                      (29 (aload 15))
                                      (31 (aload 16))
                                      (33 (aload 17))
                                      (35 (aload 18))
                                      (37 (aload 19))
                                      (39 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 20))
                                      (44 (areturn))
                                      (endofcode 45))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 21) (max_locals . 21) (code_length . 47)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (aload 14))
                                      (29 (aload 15))
                                      (31 (aload 16))
                                      (33 (aload 17))
                                      (35 (aload 18))
                                      (37 (aload 19))
                                      (39 (aload 20))
                                      (41 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 21))
                                      (46 (areturn))
                                      (endofcode 47))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (array (class "java.lang.Object")))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public*  *transient* )
                              (code
                                   (max_stack . 22) (max_locals . 22) (code_length . 49)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokevirtual
					(methodCP "fn" "clojure.lang.Ref" () (class "clojure.lang.IFn"))))
                                      (4 (aload_1))
                                      (5 (aload_2))
                                      (6 (aload_3))
                                      (7 (aload 4))
                                      (9 (aload 5))
                                      (11 (aload 6))
                                      (13 (aload 7))
                                      (15 (aload 8))
                                      (17 (aload 9))
                                      (19 (aload 10))
                                      (21 (aload 11))
                                      (23 (aload 12))
                                      (25 (aload 13))
                                      (27 (aload 14))
                                      (29 (aload 15))
                                      (31 (aload 16))
                                      (33 (aload 17))
                                      (35 (aload 18))
                                      (37 (aload 19))
                                      (39 (aload 20))
                                      (41 (aload 21))
                                      (43 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (array (class "java.lang.Object"))) (class "java.lang.Object")) 22))
                                      (48 (areturn))
                                      (endofcode 49))
                                   (Exceptions )
                                   (StackMap )))
                        (method "applyTo"
                              (parameters (class "clojure.lang.ISeq"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokestatic
					(methodCP "applyToHelper" "clojure.lang.AFn" ((class "clojure.lang.IFn") (class "clojure.lang.ISeq")) (class "java.lang.Object"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "compareTo"
                              (parameters (class "java.lang.Object"))
                              (returntype . int)
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 9)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (checkcast (class "clojure.lang.Ref")))
                                      (5 (invokevirtual
					(methodCP "compareTo" "clojure.lang.Ref" ((class "clojure.lang.Ref")) int)))
                                      (8 (ireturn))
                                      (endofcode 9))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 11)
                                   (parsedcode
                                      (0 (new (class "java.util.concurrent.atomic.AtomicLong")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.util.concurrent.atomic.AtomicLong" () void)))
                                      (7 (putstatic (fieldCP "ids" "clojure.lang.Ref" (class "java.util.concurrent.atomic.AtomicLong"))))
                                      (10 (return))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.IFn" "java.lang.Comparable" "clojure.lang.IRef")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "Signature")
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Ref-class-table*
  (make-static-class-decls 
   *clojure.lang.Ref*))

(defconst *package-name-map* 
  ("clojure.lang.Ref" . "clojure.lang"))

