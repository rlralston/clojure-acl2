; LispReader$MapReader-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:52 CDT 2014.
;

(defconst *clojure.lang.LispReader$MapReader*
 (make-class-def
      '(class "clojure.lang.LispReader$MapReader"
            "clojure.lang.AFn"
            (constant_pool
                        (STRING  "Map literal must contain an even number of forms"))
            (fields)
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFn" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 5) (code_length . 40)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (checkcast (class "java.io.PushbackReader"))) 
                                      (4 (astore_3)) 
                                      (5 (bipush 125)) 
                                      (7 (aload_3)) 
                                      (8 (iconst_1)) 
                                      (9 (invokestatic (methodCP "readDelimitedList" "clojure.lang.LispReader" (char (class "java.io.PushbackReader") boolean) (class "java.util.List")))) 
                                      (12 (invokeinterface (methodCP "toArray" "java.util.List" () (array (class "java.lang.Object"))) 1)) 
                                      (17 (astore 4)) 
                                      (19 (aload 4)) 
                                      (21 (arraylength)) 
                                      (22 (iconst_1)) 
                                      (23 (iand)) 
                                      (24 (iconst_1)) 
                                      (25 (if_icmpne 34))  ;;to TAG_0
                                      (28 (ldc 0)) ;;STRING:: "Map literal must contain an even number of forms"
                                      (30 (invokestatic (methodCP "runtimeException" "clojure.lang.Util" ((class "java.lang.String")) (class "java.lang.RuntimeException")))) 
                                      (33 (athrow)) 
                                      (34 (aload 4)) ;;at TAG_0
                                      (36 (invokestatic (methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (39 (areturn)) 
                                      (endofcode 40))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *LispReader$MapReader-class-table*
  (make-static-class-decls 
   *clojure.lang.LispReader$MapReader*))

(defconst *package-name-map* 
  ("clojure.lang.LispReader$MapReader" . "clojure.lang"))

