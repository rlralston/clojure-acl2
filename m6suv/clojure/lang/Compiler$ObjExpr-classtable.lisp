; Compiler$ObjExpr-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:50 CDT 2014.
;

(defconst *clojure.lang.Compiler$ObjExpr*
 (make-class-def
      '(class "clojure.lang.Compiler$ObjExpr"
            "java.lang.Object"
            (constant_pool
                        (STRING  "const__")
                        (STRING  "__")
                        (STRING  "SMAP\n")
                        (STRING  ".java\n")
                        (STRING  "Clojure\n")
                        (STRING  "*S Clojure\n")
                        (STRING  "*F\n")
                        (STRING  "+ 1 ")
                        (STRING  "\n")
                        (STRING  "*L\n")
                        (STRING  "%d#1,%d:%d\n")
                        (STRING  "*E")
                        (STRING  "void <clinit> ()")
                        (STRING  "__meta")
                        (STRING  "<init>")
                        (STRING  "clojure.lang.IPersistentMap meta()")
                        (STRING  "clojure.lang.IObj withMeta(clojure.lang.IPersistentMap)")
                        (STRING  "void swapThunk(int,clojure.lang.ILookupThunk)")
                        (STRING  "void <init>(clojure.lang.Keyword)")
                        (STRING  "TRUE")
                        (STRING  "FALSE")
                        (STRING  "Integer valueOf(int)")
                        (STRING  "Long valueOf(long)")
                        (STRING  "Double valueOf(double)")
                        (STRING  "Character valueOf(char)")
                        (STRING  "Can\nt embed unknown primitive in code: ")
                        (STRING  "TYPE")
                        (STRING  "Class forName(String)")
                        (STRING  "clojure.lang.Symbol intern(String,String)")
                        (STRING  "clojure.lang.Keyword keyword(String,String)")
                        (STRING  "clojure.lang.Var var(String,String)")
                        (STRING  "getBasis")
                        (STRING  "Value")
                        (STRING  "()")
                        (STRING  " create(clojure.lang.IPersistentMap)")
                        (STRING  "clojure.lang.IPersistentMap map(Object[])")
                        (STRING  "clojure.lang.IPersistentVector vector(Object[])")
                        (STRING  "EMPTY")
                        (STRING  "clojure.lang.PersistentHashSet create(Object[])")
                        (STRING  "java.util.List asList(Object[])")
                        (STRING  "clojure.lang.IPersistentList create(java.util.List)")
                        (STRING  "java.util.regex.Pattern compile(String)")
                        (STRING  "Can\nt embed object in code, maybe print-dup not defined: ")
                        (STRING  "Can\nt embed unreadable object in code: ")
                        (STRING  "#<")
                        (STRING  "unsynchronized-mutable")
                        (STRING  "volatile-mutable")
                        (STRING  "Cannot assign to non-mutable: ")
                        (STRING  "Must assign primitive to primitive mutable: ")
                        (STRING  "__site__")
                        (STRING  "__thunk__")
                        (STRING  "__cached_class__")
                        (STRING  "__cached_var__")
                        (STRING  "__cached_proto_fn__")
                        (STRING  "__cached_proto_impl__")
                        (STRING  "__var__callsite__")
                        (STRING  "void <init>()")
                        (STRING  "clojure.lang.Keyword intern(String, String)")
                        (STRING  "clojure.lang.Symbol intern(String)")
                        (STRING  "clojure.lang.Var intern(clojure.lang.Symbol, clojure.lang.Symbol)")
                        (STRING  "Class getClass()")
                        (STRING  "ClassLoader getClassLoader()")
                        (STRING  "Object[] getConstants(int)")
                        (STRING  "Object readString(String)")
                        (STRING  "Object get()")
                        (STRING  "Object getRawRoot()"))
            (fields
                        (field "CONST_PREFIX" (class "java.lang.String") (accessflags  *class*  *final*  *static* ) 0)
                        (field "name" (class "java.lang.String") (accessflags  *class* ) -1)
                        (field "internalName" (class "java.lang.String") (accessflags  *class* ) -1)
                        (field "thisName" (class "java.lang.String") (accessflags  *class* ) -1)
                        (field "objtype" (class "clojure.asm.Type") (accessflags  *class* ) -1)
                        (field "tag" (class "java.lang.Object") (accessflags  *class*  *final*  *public* ) -1)
                        (field "closes" (class "clojure.lang.IPersistentMap") (accessflags  *class* ) -1)
                        (field "closesExprs" (class "clojure.lang.IPersistentVector") (accessflags  *class* ) -1)
                        (field "volatiles" (class "clojure.lang.IPersistentSet") (accessflags  *class* ) -1)
                        (field "fields" (class "clojure.lang.IPersistentMap") (accessflags  *class* ) -1)
                        (field "hintedFields" (class "clojure.lang.IPersistentVector") (accessflags  *class* ) -1)
                        (field "keywords" (class "clojure.lang.IPersistentMap") (accessflags  *class* ) -1)
                        (field "vars" (class "clojure.lang.IPersistentMap") (accessflags  *class* ) -1)
                        (field "compiledClass" (class "java.lang.Class") (accessflags  *class* ) -1)
                        (field "line" int (accessflags  *class* ) -1)
                        (field "column" int (accessflags  *class* ) -1)
                        (field "constants" (class "clojure.lang.PersistentVector") (accessflags  *class* ) -1)
                        (field "constantsID" int (accessflags  *class* ) -1)
                        (field "altCtorDrops" int (accessflags  *class* ) -1)
                        (field "keywordCallsites" (class "clojure.lang.IPersistentVector") (accessflags  *class* ) -1)
                        (field "protocolCallsites" (class "clojure.lang.IPersistentVector") (accessflags  *class* ) -1)
                        (field "varCallsites" (class "clojure.lang.IPersistentSet") (accessflags  *class* ) -1)
                        (field "onceOnly" boolean (accessflags  *class* ) -1)
                        (field "src" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "voidctor" (class "clojure.asm.commons.Method") (accessflags  *class*  *final*  *static* ) -1)
                        (field "classMeta" (class "clojure.lang.IPersistentMap") (accessflags  *class*  *protected* ) -1)
                        (field "isStatic" boolean (accessflags  *class*  *protected* ) -1)
                        (field "kwintern" (class "clojure.asm.commons.Method") (accessflags  *class*  *final*  *static* ) -1)
                        (field "symintern" (class "clojure.asm.commons.Method") (accessflags  *class*  *final*  *static* ) -1)
                        (field "varintern" (class "clojure.asm.commons.Method") (accessflags  *class*  *final*  *static* ) -1)
                        (field "DYNAMIC_CLASSLOADER_TYPE" (class "clojure.asm.Type") (accessflags  *class*  *final*  *static* ) -1)
                        (field "getClassMethod" (class "clojure.asm.commons.Method") (accessflags  *class*  *final*  *static* ) -1)
                        (field "getClassLoaderMethod" (class "clojure.asm.commons.Method") (accessflags  *class*  *final*  *static* ) -1)
                        (field "getConstantsMethod" (class "clojure.asm.commons.Method") (accessflags  *class*  *final*  *static* ) -1)
                        (field "readStringMethod" (class "clojure.asm.commons.Method") (accessflags  *class*  *final*  *static* ) -1)
                        (field "ILOOKUP_SITE_TYPE" (class "clojure.asm.Type") (accessflags  *class*  *final*  *static* ) -1)
                        (field "ILOOKUP_THUNK_TYPE" (class "clojure.asm.Type") (accessflags  *class*  *final*  *static* ) -1)
                        (field "KEYWORD_LOOKUPSITE_TYPE" (class "clojure.asm.Type") (accessflags  *class*  *final*  *static* ) -1)
                        (field "loader" (class "clojure.lang.DynamicClassLoader") (accessflags  *class*  *private* ) -1)
                        (field "bytecode" (array byte) (accessflags  *class*  *private* ) -1)
                        (field "varGetMethod" (class "clojure.asm.commons.Method") (accessflags  *class*  *final*  *static* ) -1)
                        (field "varGetRawMethod" (class "clojure.asm.commons.Method") (accessflags  *class*  *final*  *static* ) -1))
            (methods
                        (method "name"
                              (parameters )
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "name" "clojure.lang.Compiler$ObjExpr" (class "java.lang.String"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "internalName"
                              (parameters )
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "internalName" "clojure.lang.Compiler$ObjExpr" (class "java.lang.String"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "thisName"
                              (parameters )
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "thisName" "clojure.lang.Compiler$ObjExpr" (class "java.lang.String"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "objtype"
                              (parameters )
                              (returntype . (class "clojure.asm.Type"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "closes"
                              (parameters )
                              (returntype . (class "clojure.lang.IPersistentMap"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "closes" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "keywords"
                              (parameters )
                              (returntype . (class "clojure.lang.IPersistentMap"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "keywords" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "vars"
                              (parameters )
                              (returntype . (class "clojure.lang.IPersistentMap"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "vars" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "compiledClass"
                              (parameters )
                              (returntype . (class "java.lang.Class"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "compiledClass" "clojure.lang.Compiler$ObjExpr" (class "java.lang.Class"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "line"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "line" "clojure.lang.Compiler$ObjExpr" int)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "column"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "column" "clojure.lang.Compiler$ObjExpr" int)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "constants"
                              (parameters )
                              (returntype . (class "clojure.lang.PersistentVector"))
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "constants" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.PersistentVector"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "constantsID"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *final*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "constantsID" "clojure.lang.Compiler$ObjExpr" int)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 67)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (aload_0))
                                      (5 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashMap" (class "clojure.lang.PersistentHashMap"))))
                                      (8 (putfield (fieldCP "closes" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap"))))
                                      (11 (aload_0))
                                      (12 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector"))))
                                      (15 (putfield (fieldCP "closesExprs" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentVector"))))
                                      (18 (aload_0))
                                      (19 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashSet" (class "clojure.lang.PersistentHashSet"))))
                                      (22 (putfield (fieldCP "volatiles" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentSet"))))
                                      (25 (aload_0))
                                      (26 (aconst_null))
                                      (27 (putfield (fieldCP "fields" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap"))))
                                      (30 (aload_0))
                                      (31 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector"))))
                                      (34 (putfield (fieldCP "hintedFields" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentVector"))))
                                      (37 (aload_0))
                                      (38 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashMap" (class "clojure.lang.PersistentHashMap"))))
                                      (41 (putfield (fieldCP "keywords" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap"))))
                                      (44 (aload_0))
                                      (45 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentHashMap" (class "clojure.lang.PersistentHashMap"))))
                                      (48 (putfield (fieldCP "vars" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap"))))
                                      (51 (aload_0))
                                      (52 (iconst_0))
                                      (53 (putfield (fieldCP "altCtorDrops" "clojure.lang.Compiler$ObjExpr" int)))
                                      (56 (aload_0))
                                      (57 (iconst_0))
                                      (58 (putfield (fieldCP "onceOnly" "clojure.lang.Compiler$ObjExpr" boolean)))
                                      (61 (aload_0))
                                      (62 (aload_1))
                                      (63 (putfield (fieldCP "tag" "clojure.lang.Compiler$ObjExpr" (class "java.lang.Object"))))
                                      (66 (return))
                                      (endofcode 67))
                                   (Exceptions )
                                   (StackMap )))
                        (method "trimGenID"
                              (parameters (class "java.lang.String"))
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 23)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (ldc 1)) ;;STRING:: "__"
                                      (3 (invokevirtual (methodCP "lastIndexOf" "java.lang.String" ((class "java.lang.String")) int))) 
                                      (6 (istore_1)) 
                                      (7 (iload_1)) 
                                      (8 (iconst_m1)) 
                                      (9 (if_icmpne 16))  ;;to TAG_0
                                      (12 (aload_0)) 
                                      (13 (goto 22)) ;;to TAG_1
                                      (16 (aload_0)) ;;at TAG_0
                                      (17 (iconst_0)) 
                                      (18 (iload_1)) 
                                      (19 (invokevirtual (methodCP "substring" "java.lang.String" (int int) (class "java.lang.String")))) 
                                      (22 (areturn)) ;;at TAG_1
                                      (endofcode 23))
                                   (Exceptions )
                                   (StackMap )))
                        (method "ctorTypes"
                              (parameters )
                              (returntype . (array (class "clojure.asm.Type")))
                              (accessflags  *class* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 136)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "supportsMeta" "clojure.lang.Compiler$ObjExpr" () boolean))) 
                                      (4 (ifne 13)) ;;to TAG_0
                                      (7 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) 
                                      (10 (goto 26)) ;;to TAG_1
                                      (13 (iconst_1)) ;;at TAG_0
                                      (14 (anewarray (class "java.lang.Object"))) 
                                      (17 (dup)) 
                                      (18 (iconst_0)) 
                                      (19 (getstatic (fieldCP "IPERSISTENTMAP_TYPE" "clojure.lang.Compiler" (class "clojure.asm.Type")))) 
                                      (22 (aastore)) 
                                      (23 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (26 (astore_1)) ;;at TAG_1
                                      (27 (aload_0)) 
                                      (28 (getfield (fieldCP "closes" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (31 (invokestatic (methodCP "keys" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (34 (astore_2)) 
                                      (35 (aload_2)) ;;at TAG_5
                                      (36 (ifnull 93))  ;;to TAG_2
                                      (39 (aload_2)) 
                                      (40 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (45 (checkcast (class "clojure.lang.Compiler$LocalBinding"))) 
                                      (48 (astore_3)) 
                                      (49 (aload_3)) 
                                      (50 (invokevirtual (methodCP "getPrimitiveType" "clojure.lang.Compiler$LocalBinding" () (class "java.lang.Class")))) 
                                      (53 (ifnull 73)) ;;to TAG_3
                                      (56 (aload_1)) 
                                      (57 (aload_3)) 
                                      (58 (invokevirtual (methodCP "getPrimitiveType" "clojure.lang.Compiler$LocalBinding" () (class "java.lang.Class")))) 
                                      (61 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (64 (invokeinterface (methodCP "cons" "clojure.lang.IPersistentVector" ((class "java.lang.Object")) (class "clojure.lang.IPersistentVector")) 2)) 
                                      (69 (astore_1)) 
                                      (70 (goto 83)) ;;to TAG_4
                                      (73 (aload_1)) ;;at TAG_3
                                      (74 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (77 (invokeinterface (methodCP "cons" "clojure.lang.IPersistentVector" ((class "java.lang.Object")) (class "clojure.lang.IPersistentVector")) 2)) 
                                      (82 (astore_1)) 
                                      (83 (aload_2)) ;;at TAG_4
                                      (84 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (89 (astore_2)) 
                                      (90 (goto 35)) ;;to TAG_5
                                      (93 (aload_1)) ;;at TAG_2
                                      (94 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (99 (anewarray (class "clojure.asm.Type"))) 
                                      (102 (astore_2)) 
                                      (103 (iconst_0)) 
                                      (104 (istore_3)) 
                                      (105 (iload_3)) ;;at TAG_7
                                      (106 (aload_1)) 
                                      (107 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (112 (if_icmpge 134)) ;;to TAG_6
                                      (115 (aload_2)) 
                                      (116 (iload_3)) 
                                      (117 (aload_1)) 
                                      (118 (iload_3)) 
                                      (119 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (124 (checkcast (class "clojure.asm.Type"))) 
                                      (127 (aastore)) 
                                      (128 (iinc 3 1)) 
                                      (131 (goto 105)) ;;to TAG_7
                                      (134 (aload_2)) ;;at TAG_6
                                      (135 (areturn)) 
                                      (endofcode 136))
                                   (Exceptions )
                                   (StackMap )))
                        (method "compile"
                              (parameters (class "java.lang.String") (array (class "java.lang.String")) boolean)
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 7) (max_locals . 25) (code_length . 1956)
                                   (parsedcode
                                      (0 (new (class "clojure.asm.ClassWriter"))) 
                                      (3 (dup)) 
                                      (4 (iconst_1)) 
                                      (5 (invokespecial (methodCP "<init>" "clojure.asm.ClassWriter" (int) void))) 
                                      (8 (astore 4)) 
                                      (10 (aload 4)) 
                                      (12 (astore 5)) 
                                      (14 (aload 5)) 
                                      (16 (bipush 49)) 
                                      (18 (bipush 49)) 
                                      (20 (aload_0)) 
                                      (21 (getfield (fieldCP "internalName" "clojure.lang.Compiler$ObjExpr" (class "java.lang.String")))) 
                                      (24 (aconst_null)) 
                                      (25 (aload_1)) 
                                      (26 (aload_2)) 
                                      (27 (invokeinterface (methodCP "visit" "clojure.asm.ClassVisitor" (int int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (array (class "java.lang.String"))) void) 7)) 
                                      (32 (getstatic (fieldCP "SOURCE" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (35 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (38 (checkcast (class "java.lang.String"))) 
                                      (41 (astore 6)) 
                                      (43 (getstatic (fieldCP "LINE_BEFORE" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (46 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (49 (checkcast (class "java.lang.Integer"))) 
                                      (52 (invokevirtual (methodCP "intValue" "java.lang.Integer" () int))) 
                                      (55 (istore 7)) 
                                      (57 (getstatic (fieldCP "LINE_AFTER" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (60 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (63 (checkcast (class "java.lang.Integer"))) 
                                      (66 (invokevirtual (methodCP "intValue" "java.lang.Integer" () int))) 
                                      (69 (iconst_1)) 
                                      (70 (iadd)) 
                                      (71 (istore 8)) 
                                      (73 (getstatic (fieldCP "COLUMN_BEFORE" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (76 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (79 (checkcast (class "java.lang.Integer"))) 
                                      (82 (invokevirtual (methodCP "intValue" "java.lang.Integer" () int))) 
                                      (85 (istore 9)) 
                                      (87 (getstatic (fieldCP "COLUMN_AFTER" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (90 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (93 (checkcast (class "java.lang.Integer"))) 
                                      (96 (invokevirtual (methodCP "intValue" "java.lang.Integer" () int))) 
                                      (99 (iconst_1)) 
                                      (100 (iadd)) 
                                      (101 (istore 10)) 
                                      (103 (aload 6)) 
                                      (105 (ifnull 277))  ;;to TAG_0
                                      (108 (getstatic (fieldCP "SOURCE_PATH" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (111 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (114 (ifnull 277))  ;;to TAG_0
                                      (117 (new (class "java.lang.StringBuilder"))) 
                                      (120 (dup)) 
                                      (121 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (124 (ldc 2)) ;;STRING:: "SMAP\n"
                                      (126 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (129 (aload 6)) 
                                      (131 (bipush 46)) 
                                      (133 (invokevirtual (methodCP "lastIndexOf" "java.lang.String" (int) int))) 
                                      (136 (ifle 155)) ;;to TAG_1
                                      (139 (aload 6)) 
                                      (141 (iconst_0)) 
                                      (142 (aload 6)) 
                                      (144 (bipush 46)) 
                                      (146 (invokevirtual (methodCP "lastIndexOf" "java.lang.String" (int) int))) 
                                      (149 (invokevirtual (methodCP "substring" "java.lang.String" (int int) (class "java.lang.String")))) 
                                      (152 (goto 157)) ;;to TAG_2
                                      (155 (aload 6)) ;;at TAG_1
                                      (157 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) ;;at TAG_2
                                      (160 (ldc 3)) ;;STRING:: ".java\n"
                                      (162 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (165 (ldc 4)) ;;STRING:: "Clojure\n"
                                      (167 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (170 (ldc 5)) ;;STRING:: "*S Clojure\n"
                                      (172 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (175 (ldc 6)) ;;STRING:: "*F\n"
                                      (177 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (180 (ldc 7)) ;;STRING:: "+ 1 "
                                      (182 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (185 (aload 6)) 
                                      (187 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (190 (ldc 8)) ;;STRING:: "\n"
                                      (192 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (195 (getstatic (fieldCP "SOURCE_PATH" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (198 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (201 (checkcast (class "java.lang.String"))) 
                                      (204 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (207 (ldc 8)) ;;STRING:: "\n"
                                      (209 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (212 (ldc 9)) ;;STRING:: "*L\n"
                                      (214 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (217 (ldc 10)) ;;STRING:: "%d#1,%d:%d\n"
                                      (219 (iconst_3)) 
                                      (220 (anewarray (class "java.lang.Object"))) 
                                      (223 (dup)) 
                                      (224 (iconst_0)) 
                                      (225 (iload 7)) 
                                      (227 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (230 (aastore)) 
                                      (231 (dup)) 
                                      (232 (iconst_1)) 
                                      (233 (iload 8)) 
                                      (235 (iload 7)) 
                                      (237 (isub)) 
                                      (238 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (241 (aastore)) 
                                      (242 (dup)) 
                                      (243 (iconst_2)) 
                                      (244 (iload 7)) 
                                      (246 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (249 (aastore)) 
                                      (250 (invokestatic (methodCP "format" "java.lang.String" ((class "java.lang.String") (array (class "java.lang.Object"))) (class "java.lang.String")))) 
                                      (253 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (256 (ldc 11)) ;;STRING:: "*E"
                                      (258 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (261 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (264 (astore 11)) 
                                      (266 (aload 5)) 
                                      (268 (aload 6)) 
                                      (270 (aload 11)) 
                                      (272 (invokeinterface (methodCP "visitSource" "clojure.asm.ClassVisitor" ((class "java.lang.String") (class "java.lang.String")) void) 3)) 
                                      (277 (aload 5)) ;;at TAG_0
                                      (279 (aload_0)) 
                                      (280 (getfield (fieldCP "classMeta" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (283 (invokestatic (methodCP "addAnnotation" "clojure.lang.Compiler" ((class "java.lang.Object") (class "clojure.lang.IPersistentMap")) void))) 
                                      (286 (iconst_0)) 
                                      (287 (istore 11)) 
                                      (289 (iload 11)) ;;at TAG_4
                                      (291 (aload_0)) 
                                      (292 (getfield (fieldCP "constants" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.PersistentVector")))) 
                                      (295 (invokevirtual (methodCP "count" "clojure.lang.PersistentVector" () int))) 
                                      (298 (if_icmpge 334)) ;;to TAG_3
                                      (301 (aload 5)) 
                                      (303 (bipush 25)) 
                                      (305 (aload_0)) 
                                      (306 (iload 11)) 
                                      (308 (invokevirtual (methodCP "constantName" "clojure.lang.Compiler$ObjExpr" (int) (class "java.lang.String")))) 
                                      (311 (aload_0)) 
                                      (312 (iload 11)) 
                                      (314 (invokevirtual (methodCP "constantType" "clojure.lang.Compiler$ObjExpr" (int) (class "clojure.asm.Type")))) 
                                      (317 (invokevirtual (methodCP "getDescriptor" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (320 (aconst_null)) 
                                      (321 (aconst_null)) 
                                      (322 (invokeinterface (methodCP "visitField" "clojure.asm.ClassVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (class "java.lang.Object")) (class "clojure.asm.FieldVisitor")) 6)) 
                                      (327 (pop)) 
                                      (328 (iinc 11 1)) 
                                      (331 (goto 289)) ;;to TAG_4
                                      (334 (iconst_0)) ;;at TAG_3
                                      (335 (istore 11)) 
                                      (337 (iload 11)) ;;at TAG_6
                                      (339 (aload_0)) 
                                      (340 (getfield (fieldCP "keywordCallsites" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (343 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (348 (if_icmpge 405)) ;;to TAG_5
                                      (351 (aload 5)) 
                                      (353 (bipush 24)) 
                                      (355 (aload_0)) 
                                      (356 (iload 11)) 
                                      (358 (invokevirtual (methodCP "siteNameStatic" "clojure.lang.Compiler$ObjExpr" (int) (class "java.lang.String")))) 
                                      (361 (getstatic (fieldCP "KEYWORD_LOOKUPSITE_TYPE" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (364 (invokevirtual (methodCP "getDescriptor" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (367 (aconst_null)) 
                                      (368 (aconst_null)) 
                                      (369 (invokeinterface (methodCP "visitField" "clojure.asm.ClassVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (class "java.lang.Object")) (class "clojure.asm.FieldVisitor")) 6)) 
                                      (374 (pop)) 
                                      (375 (aload 5)) 
                                      (377 (bipush 8)) 
                                      (379 (aload_0)) 
                                      (380 (iload 11)) 
                                      (382 (invokevirtual (methodCP "thunkNameStatic" "clojure.lang.Compiler$ObjExpr" (int) (class "java.lang.String")))) 
                                      (385 (getstatic (fieldCP "ILOOKUP_THUNK_TYPE" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (388 (invokevirtual (methodCP "getDescriptor" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (391 (aconst_null)) 
                                      (392 (aconst_null)) 
                                      (393 (invokeinterface (methodCP "visitField" "clojure.asm.ClassVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (class "java.lang.Object")) (class "clojure.asm.FieldVisitor")) 6)) 
                                      (398 (pop)) 
                                      (399 (iinc 11 1)) 
                                      (402 (goto 337)) ;;to TAG_6
                                      (405 (new (class "clojure.asm.commons.GeneratorAdapter"))) ;;at TAG_5
                                      (408 (dup)) 
                                      (409 (bipush 9)) 
                                      (411 (ldc 12)) ;;STRING:: "void <clinit> ()"
                                      (413 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (416 (aconst_null)) 
                                      (417 (aconst_null)) 
                                      (418 (aload 5)) 
                                      (420 (invokespecial (methodCP "<init>" "clojure.asm.commons.GeneratorAdapter" (int (class "clojure.asm.commons.Method") (class "java.lang.String") (array (class "clojure.asm.Type")) (class "clojure.asm.ClassVisitor")) void))) 
                                      (423 (astore 11)) 
                                      (425 (aload 11)) 
                                      (427 (invokevirtual (methodCP "visitCode" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (430 (aload 11)) 
                                      (432 (aload_0)) 
                                      (433 (getfield (fieldCP "line" "clojure.lang.Compiler$ObjExpr" int))) 
                                      (436 (aload 11)) 
                                      (438 (invokevirtual (methodCP "mark" "clojure.asm.commons.GeneratorAdapter" () (class "clojure.asm.Label")))) 
                                      (441 (invokevirtual (methodCP "visitLineNumber" "clojure.asm.commons.GeneratorAdapter" (int (class "clojure.asm.Label")) void))) 
                                      (444 (aload_0)) 
                                      (445 (getfield (fieldCP "constants" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.PersistentVector")))) 
                                      (448 (invokevirtual (methodCP "count" "clojure.lang.PersistentVector" () int))) 
                                      (451 (ifle 460)) ;;to TAG_7
                                      (454 (aload_0)) 
                                      (455 (aload 11)) 
                                      (457 (invokevirtual (methodCP "emitConstants" "clojure.lang.Compiler$ObjExpr" ((class "clojure.asm.commons.GeneratorAdapter")) void))) 
                                      (460 (aload_0)) ;;at TAG_7
                                      (461 (getfield (fieldCP "keywordCallsites" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (464 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (469 (ifle 478)) ;;to TAG_8
                                      (472 (aload_0)) 
                                      (473 (aload 11)) 
                                      (475 (invokespecial (methodCP "emitKeywordCallsites" "clojure.lang.Compiler$ObjExpr" ((class "clojure.asm.commons.GeneratorAdapter")) void))) 
                                      (478 (aload 11)) ;;at TAG_8
                                      (480 (invokevirtual (methodCP "returnValue" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (483 (aload 11)) 
                                      (485 (invokevirtual (methodCP "endMethod" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (488 (aload_0)) 
                                      (489 (invokevirtual (methodCP "supportsMeta" "clojure.lang.Compiler$ObjExpr" () boolean))) 
                                      (492 (ifeq 515)) ;;to TAG_9
                                      (495 (aload 5)) 
                                      (497 (bipush 16)) 
                                      (499 (ldc 13)) ;;STRING:: "__meta"
                                      (501 (getstatic (fieldCP "IPERSISTENTMAP_TYPE" "clojure.lang.Compiler" (class "clojure.asm.Type")))) 
                                      (504 (invokevirtual (methodCP "getDescriptor" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (507 (aconst_null)) 
                                      (508 (aconst_null)) 
                                      (509 (invokeinterface (methodCP "visitField" "clojure.asm.ClassVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (class "java.lang.Object")) (class "clojure.asm.FieldVisitor")) 6)) 
                                      (514 (pop)) 
                                      (515 (aload_0)) ;;at TAG_9
                                      (516 (getfield (fieldCP "closes" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (519 (invokestatic (methodCP "keys" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (522 (astore 12)) 
                                      (524 (aload 12)) ;;at TAG_21
                                      (526 (ifnull 747)) ;;to TAG_10
                                      (529 (aload 12)) 
                                      (531 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (536 (checkcast (class "clojure.lang.Compiler$LocalBinding"))) 
                                      (539 (astore 13)) 
                                      (541 (aload_0)) 
                                      (542 (invokevirtual (methodCP "isDeftype" "clojure.lang.Compiler$ObjExpr" () boolean))) 
                                      (545 (ifeq 659)) ;;to TAG_11
                                      (548 (aload_0)) 
                                      (549 (aload 13)) 
                                      (551 (invokevirtual (methodCP "isVolatile" "clojure.lang.Compiler$ObjExpr" ((class "clojure.lang.Compiler$LocalBinding")) boolean))) 
                                      (554 (ifeq 562)) ;;to TAG_12
                                      (557 (bipush 64)) 
                                      (559 (goto 577)) ;;to TAG_13
                                      (562 (aload_0)) ;;at TAG_12
                                      (563 (aload 13)) 
                                      (565 (invokevirtual (methodCP "isMutable" "clojure.lang.Compiler$ObjExpr" ((class "clojure.lang.Compiler$LocalBinding")) boolean))) 
                                      (568 (ifeq 575)) ;;to TAG_14
                                      (571 (iconst_0)) 
                                      (572 (goto 577)) ;;to TAG_13
                                      (575 (bipush 17)) ;;at TAG_14
                                      (577 (istore 14)) ;;at TAG_13
                                      (579 (aload 13)) 
                                      (581 (invokevirtual (methodCP "getPrimitiveType" "clojure.lang.Compiler$LocalBinding" () (class "java.lang.Class")))) 
                                      (584 (ifnull 619)) ;;to TAG_15
                                      (587 (aload 5)) 
                                      (589 (iload 14)) 
                                      (591 (aload 13)) 
                                      (593 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (596 (aload 13)) 
                                      (598 (invokevirtual (methodCP "getPrimitiveType" "clojure.lang.Compiler$LocalBinding" () (class "java.lang.Class")))) 
                                      (601 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (604 (invokevirtual (methodCP "getDescriptor" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (607 (aconst_null)) 
                                      (608 (aconst_null)) 
                                      (609 (invokeinterface (methodCP "visitField" "clojure.asm.ClassVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (class "java.lang.Object")) (class "clojure.asm.FieldVisitor")) 6)) 
                                      (614 (astore 15)) 
                                      (616 (goto 643)) ;;to TAG_16
                                      (619 (aload 5)) ;;at TAG_15
                                      (621 (iload 14)) 
                                      (623 (aload 13)) 
                                      (625 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (628 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (631 (invokevirtual (methodCP "getDescriptor" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (634 (aconst_null)) 
                                      (635 (aconst_null)) 
                                      (636 (invokeinterface (methodCP "visitField" "clojure.asm.ClassVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (class "java.lang.Object")) (class "clojure.asm.FieldVisitor")) 6)) 
                                      (641 (astore 15)) 
                                      (643 (aload 15)) ;;at TAG_16
                                      (645 (aload 13)) 
                                      (647 (getfield (fieldCP "sym" "clojure.lang.Compiler$LocalBinding" (class "clojure.lang.Symbol")))) 
                                      (650 (invokestatic (methodCP "meta" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.IPersistentMap")))) 
                                      (653 (invokestatic (methodCP "addAnnotation" "clojure.lang.Compiler" ((class "java.lang.Object") (class "clojure.lang.IPersistentMap")) void))) 
                                      (656 (goto 735)) ;;to TAG_17
                                      (659 (aload 13)) ;;at TAG_11
                                      (661 (invokevirtual (methodCP "getPrimitiveType" "clojure.lang.Compiler$LocalBinding" () (class "java.lang.Class")))) 
                                      (664 (ifnull 713)) ;;to TAG_18
                                      (667 (aload 5)) 
                                      (669 (iconst_0)) 
                                      (670 (aload_0)) 
                                      (671 (aload 13)) 
                                      (673 (invokevirtual (methodCP "isVolatile" "clojure.lang.Compiler$ObjExpr" ((class "clojure.lang.Compiler$LocalBinding")) boolean))) 
                                      (676 (ifeq 684)) ;;to TAG_19
                                      (679 (bipush 64)) 
                                      (681 (goto 685)) ;;to TAG_20
                                      (684 (iconst_0)) ;;at TAG_19
                                      (685 (iadd)) ;;at TAG_20
                                      (686 (aload 13)) 
                                      (688 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (691 (aload 13)) 
                                      (693 (invokevirtual (methodCP "getPrimitiveType" "clojure.lang.Compiler$LocalBinding" () (class "java.lang.Class")))) 
                                      (696 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (699 (invokevirtual (methodCP "getDescriptor" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (702 (aconst_null)) 
                                      (703 (aconst_null)) 
                                      (704 (invokeinterface (methodCP "visitField" "clojure.asm.ClassVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (class "java.lang.Object")) (class "clojure.asm.FieldVisitor")) 6)) 
                                      (709 (pop)) 
                                      (710 (goto 735)) ;;to TAG_17
                                      (713 (aload 5)) ;;at TAG_18
                                      (715 (iconst_0)) 
                                      (716 (aload 13)) 
                                      (718 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (721 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (724 (invokevirtual (methodCP "getDescriptor" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (727 (aconst_null)) 
                                      (728 (aconst_null)) 
                                      (729 (invokeinterface (methodCP "visitField" "clojure.asm.ClassVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (class "java.lang.Object")) (class "clojure.asm.FieldVisitor")) 6)) 
                                      (734 (pop)) 
                                      (735 (aload 12)) ;;at TAG_17
                                      (737 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (742 (astore 12)) 
                                      (744 (goto 524)) ;;to TAG_21
                                      (747 (iconst_0)) ;;at TAG_10
                                      (748 (istore 12)) 
                                      (750 (iload 12)) ;;at TAG_23
                                      (752 (aload_0)) 
                                      (753 (getfield (fieldCP "protocolCallsites" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (756 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (761 (if_icmpge 839)) ;;to TAG_22
                                      (764 (aload 5)) 
                                      (766 (iconst_2)) 
                                      (767 (aload_0)) 
                                      (768 (iload 12)) 
                                      (770 (invokevirtual (methodCP "cachedClassName" "clojure.lang.Compiler$ObjExpr" (int) (class "java.lang.String")))) 
                                      (773 (getstatic (fieldCP "CLASS_TYPE" "clojure.lang.Compiler" (class "clojure.asm.Type")))) 
                                      (776 (invokevirtual (methodCP "getDescriptor" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (779 (aconst_null)) 
                                      (780 (aconst_null)) 
                                      (781 (invokeinterface (methodCP "visitField" "clojure.asm.ClassVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (class "java.lang.Object")) (class "clojure.asm.FieldVisitor")) 6)) 
                                      (786 (pop)) 
                                      (787 (aload 5)) 
                                      (789 (iconst_2)) 
                                      (790 (aload_0)) 
                                      (791 (iload 12)) 
                                      (793 (invokevirtual (methodCP "cachedProtoFnName" "clojure.lang.Compiler$ObjExpr" (int) (class "java.lang.String")))) 
                                      (796 (invokestatic (methodCP "access$1400" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (799 (invokevirtual (methodCP "getDescriptor" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (802 (aconst_null)) 
                                      (803 (aconst_null)) 
                                      (804 (invokeinterface (methodCP "visitField" "clojure.asm.ClassVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (class "java.lang.Object")) (class "clojure.asm.FieldVisitor")) 6)) 
                                      (809 (pop)) 
                                      (810 (aload 5)) 
                                      (812 (iconst_2)) 
                                      (813 (aload_0)) 
                                      (814 (iload 12)) 
                                      (816 (invokevirtual (methodCP "cachedProtoImplName" "clojure.lang.Compiler$ObjExpr" (int) (class "java.lang.String")))) 
                                      (819 (invokestatic (methodCP "access$1200" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (822 (invokevirtual (methodCP "getDescriptor" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (825 (aconst_null)) 
                                      (826 (aconst_null)) 
                                      (827 (invokeinterface (methodCP "visitField" "clojure.asm.ClassVisitor" (int (class "java.lang.String") (class "java.lang.String") (class "java.lang.String") (class "java.lang.Object")) (class "clojure.asm.FieldVisitor")) 6)) 
                                      (832 (pop)) 
                                      (833 (iinc 12 1)) 
                                      (836 (goto 750)) ;;to TAG_23
                                      (839 (new (class "clojure.asm.commons.Method"))) ;;at TAG_22
                                      (842 (dup)) 
                                      (843 (ldc 14)) ;;STRING:: "<init>"
                                      (845 (getstatic (fieldCP "VOID_TYPE" "clojure.asm.Type" (class "clojure.asm.Type")))) 
                                      (848 (aload_0)) 
                                      (849 (invokevirtual (methodCP "ctorTypes" "clojure.lang.Compiler$ObjExpr" () (array (class "clojure.asm.Type"))))) 
                                      (852 (invokespecial (methodCP "<init>" "clojure.asm.commons.Method" ((class "java.lang.String") (class "clojure.asm.Type") (array (class "clojure.asm.Type"))) void))) 
                                      (855 (astore 12)) 
                                      (857 (new (class "clojure.asm.commons.GeneratorAdapter"))) 
                                      (860 (dup)) 
                                      (861 (iconst_1)) 
                                      (862 (aload 12)) 
                                      (864 (aconst_null)) 
                                      (865 (aconst_null)) 
                                      (866 (aload 5)) 
                                      (868 (invokespecial (methodCP "<init>" "clojure.asm.commons.GeneratorAdapter" (int (class "clojure.asm.commons.Method") (class "java.lang.String") (array (class "clojure.asm.Type")) (class "clojure.asm.ClassVisitor")) void))) 
                                      (871 (astore 13)) 
                                      (873 (aload 13)) 
                                      (875 (invokevirtual (methodCP "newLabel" "clojure.asm.commons.GeneratorAdapter" () (class "clojure.asm.Label")))) 
                                      (878 (astore 14)) 
                                      (880 (aload 13)) 
                                      (882 (invokevirtual (methodCP "newLabel" "clojure.asm.commons.GeneratorAdapter" () (class "clojure.asm.Label")))) 
                                      (885 (astore 15)) 
                                      (887 (aload 13)) 
                                      (889 (invokevirtual (methodCP "visitCode" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (892 (aload 13)) 
                                      (894 (aload_0)) 
                                      (895 (getfield (fieldCP "line" "clojure.lang.Compiler$ObjExpr" int))) 
                                      (898 (aload 13)) 
                                      (900 (invokevirtual (methodCP "mark" "clojure.asm.commons.GeneratorAdapter" () (class "clojure.asm.Label")))) 
                                      (903 (invokevirtual (methodCP "visitLineNumber" "clojure.asm.commons.GeneratorAdapter" (int (class "clojure.asm.Label")) void))) 
                                      (906 (aload 13)) 
                                      (908 (aload 14)) 
                                      (910 (invokevirtual (methodCP "visitLabel" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Label")) void))) 
                                      (913 (aload 13)) 
                                      (915 (invokevirtual (methodCP "loadThis" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (918 (aload 13)) 
                                      (920 (aload_1)) 
                                      (921 (invokestatic (methodCP "getObjectType" "clojure.asm.Type" ((class "java.lang.String")) (class "clojure.asm.Type")))) 
                                      (924 (getstatic (fieldCP "voidctor" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.commons.Method")))) 
                                      (927 (invokevirtual (methodCP "invokeConstructor" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (930 (aload_0)) 
                                      (931 (invokevirtual (methodCP "supportsMeta" "clojure.lang.Compiler$ObjExpr" () boolean))) 
                                      (934 (ifeq 970)) ;;to TAG_24
                                      (937 (aload 13)) 
                                      (939 (invokevirtual (methodCP "loadThis" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (942 (aload 13)) 
                                      (944 (getstatic (fieldCP "IPERSISTENTMAP_TYPE" "clojure.lang.Compiler" (class "clojure.asm.Type")))) 
                                      (947 (bipush 21)) 
                                      (949 (invokevirtual (methodCP "getOpcode" "clojure.asm.Type" (int) int))) 
                                      (952 (iconst_1)) 
                                      (953 (invokevirtual (methodCP "visitVarInsn" "clojure.asm.commons.GeneratorAdapter" (int int) void))) 
                                      (956 (aload 13)) 
                                      (958 (aload_0)) 
                                      (959 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (962 (ldc 13)) ;;STRING:: "__meta"
                                      (964 (getstatic (fieldCP "IPERSISTENTMAP_TYPE" "clojure.lang.Compiler" (class "clojure.asm.Type")))) 
                                      (967 (invokevirtual (methodCP "putField" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (970 (aload_0)) ;;at TAG_24
                                      (971 (invokevirtual (methodCP "supportsMeta" "clojure.lang.Compiler$ObjExpr" () boolean))) 
                                      (974 (ifeq 981)) ;;to TAG_25
                                      (977 (iconst_2)) 
                                      (978 (goto 982)) ;;to TAG_26
                                      (981 (iconst_1)) ;;at TAG_25
                                      (982 (istore 16)) ;;at TAG_26
                                      (984 (aload_0)) 
                                      (985 (getfield (fieldCP "closes" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (988 (invokestatic (methodCP "keys" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (991 (astore 17)) 
                                      (993 (aload 17)) ;;at TAG_31
                                      (995 (ifnull 1155)) ;;to TAG_27
                                      (998 (aload 17)) 
                                      (1000 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (1005 (checkcast (class "clojure.lang.Compiler$LocalBinding"))) 
                                      (1008 (astore 18)) 
                                      (1010 (aload 13)) 
                                      (1012 (invokevirtual (methodCP "loadThis" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1015 (aload 18)) 
                                      (1017 (invokevirtual (methodCP "getPrimitiveType" "clojure.lang.Compiler$LocalBinding" () (class "java.lang.Class")))) 
                                      (1020 (astore 19)) 
                                      (1022 (aload 19)) 
                                      (1024 (ifnull 1085)) ;;to TAG_28
                                      (1027 (aload 13)) 
                                      (1029 (aload 19)) 
                                      (1031 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (1034 (bipush 21)) 
                                      (1036 (invokevirtual (methodCP "getOpcode" "clojure.asm.Type" (int) int))) 
                                      (1039 (iload 16)) 
                                      (1041 (invokevirtual (methodCP "visitVarInsn" "clojure.asm.commons.GeneratorAdapter" (int int) void))) 
                                      (1044 (aload 13)) 
                                      (1046 (aload_0)) 
                                      (1047 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (1050 (aload 18)) 
                                      (1052 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (1055 (aload 19)) 
                                      (1057 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (1060 (invokevirtual (methodCP "putField" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (1063 (aload 19)) 
                                      (1065 (getstatic (fieldCP "TYPE" "java.lang.Long" (class "java.lang.Class")))) 
                                      (1068 (if_acmpeq 1079)) ;;to TAG_29
                                      (1071 (aload 19)) 
                                      (1073 (getstatic (fieldCP "TYPE" "java.lang.Double" (class "java.lang.Class")))) 
                                      (1076 (if_acmpne 1117)) ;;to TAG_30
                                      (1079 (iinc 16 1)) ;;at TAG_29
                                      (1082 (goto 1117)) ;;to TAG_30
                                      (1085 (aload 13)) ;;at TAG_28
                                      (1087 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (1090 (bipush 21)) 
                                      (1092 (invokevirtual (methodCP "getOpcode" "clojure.asm.Type" (int) int))) 
                                      (1095 (iload 16)) 
                                      (1097 (invokevirtual (methodCP "visitVarInsn" "clojure.asm.commons.GeneratorAdapter" (int int) void))) 
                                      (1100 (aload 13)) 
                                      (1102 (aload_0)) 
                                      (1103 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (1106 (aload 18)) 
                                      (1108 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (1111 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (1114 (invokevirtual (methodCP "putField" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (1117 (aload_0)) ;;at TAG_30
                                      (1118 (aload_0)) 
                                      (1119 (getfield (fieldCP "closesExprs" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (1122 (new (class "clojure.lang.Compiler$LocalBindingExpr"))) 
                                      (1125 (dup)) 
                                      (1126 (aload 18)) 
                                      (1128 (aconst_null)) 
                                      (1129 (invokespecial (methodCP "<init>" "clojure.lang.Compiler$LocalBindingExpr" ((class "clojure.lang.Compiler$LocalBinding") (class "clojure.lang.Symbol")) void))) 
                                      (1132 (invokeinterface (methodCP "cons" "clojure.lang.IPersistentVector" ((class "java.lang.Object")) (class "clojure.lang.IPersistentVector")) 2)) 
                                      (1137 (putfield (fieldCP "closesExprs" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (1140 (aload 17)) 
                                      (1142 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (1147 (astore 17)) 
                                      (1149 (iinc 16 1)) 
                                      (1152 (goto 993)) ;;to TAG_31
                                      (1155 (aload 13)) ;;at TAG_27
                                      (1157 (aload 15)) 
                                      (1159 (invokevirtual (methodCP "visitLabel" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Label")) void))) 
                                      (1162 (aload 13)) 
                                      (1164 (invokevirtual (methodCP "returnValue" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1167 (aload 13)) 
                                      (1169 (invokevirtual (methodCP "endMethod" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1172 (aload_0)) 
                                      (1173 (getfield (fieldCP "altCtorDrops" "clojure.lang.Compiler$ObjExpr" int))) 
                                      (1176 (ifle 1329)) ;;to TAG_32
                                      (1179 (aload_0)) 
                                      (1180 (invokevirtual (methodCP "ctorTypes" "clojure.lang.Compiler$ObjExpr" () (array (class "clojure.asm.Type"))))) 
                                      (1183 (astore 17)) 
                                      (1185 (aload 17)) 
                                      (1187 (arraylength)) 
                                      (1188 (aload_0)) 
                                      (1189 (getfield (fieldCP "altCtorDrops" "clojure.lang.Compiler$ObjExpr" int))) 
                                      (1192 (isub)) 
                                      (1193 (anewarray (class "clojure.asm.Type"))) 
                                      (1196 (astore 18)) 
                                      (1198 (iconst_0)) 
                                      (1199 (istore 19)) 
                                      (1201 (iload 19)) ;;at TAG_34
                                      (1203 (aload 18)) 
                                      (1205 (arraylength)) 
                                      (1206 (if_icmpge 1225)) ;;to TAG_33
                                      (1209 (aload 18)) 
                                      (1211 (iload 19)) 
                                      (1213 (aload 17)) 
                                      (1215 (iload 19)) 
                                      (1217 (aaload)) 
                                      (1218 (aastore)) 
                                      (1219 (iinc 19 1)) 
                                      (1222 (goto 1201)) ;;to TAG_34
                                      (1225 (new (class "clojure.asm.commons.Method"))) ;;at TAG_33
                                      (1228 (dup)) 
                                      (1229 (ldc 14)) ;;STRING:: "<init>"
                                      (1231 (getstatic (fieldCP "VOID_TYPE" "clojure.asm.Type" (class "clojure.asm.Type")))) 
                                      (1234 (aload 18)) 
                                      (1236 (invokespecial (methodCP "<init>" "clojure.asm.commons.Method" ((class "java.lang.String") (class "clojure.asm.Type") (array (class "clojure.asm.Type"))) void))) 
                                      (1239 (astore 19)) 
                                      (1241 (new (class "clojure.asm.commons.GeneratorAdapter"))) 
                                      (1244 (dup)) 
                                      (1245 (iconst_1)) 
                                      (1246 (aload 19)) 
                                      (1248 (aconst_null)) 
                                      (1249 (aconst_null)) 
                                      (1250 (aload 5)) 
                                      (1252 (invokespecial (methodCP "<init>" "clojure.asm.commons.GeneratorAdapter" (int (class "clojure.asm.commons.Method") (class "java.lang.String") (array (class "clojure.asm.Type")) (class "clojure.asm.ClassVisitor")) void))) 
                                      (1255 (astore 13)) 
                                      (1257 (aload 13)) 
                                      (1259 (invokevirtual (methodCP "visitCode" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1262 (aload 13)) 
                                      (1264 (invokevirtual (methodCP "loadThis" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1267 (aload 13)) 
                                      (1269 (invokevirtual (methodCP "loadArgs" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1272 (iconst_0)) 
                                      (1273 (istore 20)) 
                                      (1275 (iload 20)) ;;at TAG_36
                                      (1277 (aload_0)) 
                                      (1278 (getfield (fieldCP "altCtorDrops" "clojure.lang.Compiler$ObjExpr" int))) 
                                      (1281 (if_icmpge 1296)) ;;to TAG_35
                                      (1284 (aload 13)) 
                                      (1286 (iconst_1)) 
                                      (1287 (invokevirtual (methodCP "visitInsn" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (1290 (iinc 20 1)) 
                                      (1293 (goto 1275)) ;;to TAG_36
                                      (1296 (aload 13)) ;;at TAG_35
                                      (1298 (aload_0)) 
                                      (1299 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (1302 (new (class "clojure.asm.commons.Method"))) 
                                      (1305 (dup)) 
                                      (1306 (ldc 14)) ;;STRING:: "<init>"
                                      (1308 (getstatic (fieldCP "VOID_TYPE" "clojure.asm.Type" (class "clojure.asm.Type")))) 
                                      (1311 (aload 17)) 
                                      (1313 (invokespecial (methodCP "<init>" "clojure.asm.commons.Method" ((class "java.lang.String") (class "clojure.asm.Type") (array (class "clojure.asm.Type"))) void))) 
                                      (1316 (invokevirtual (methodCP "invokeConstructor" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (1319 (aload 13)) 
                                      (1321 (invokevirtual (methodCP "returnValue" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1324 (aload 13)) 
                                      (1326 (invokevirtual (methodCP "endMethod" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1329 (aload_0)) ;;at TAG_32
                                      (1330 (invokevirtual (methodCP "supportsMeta" "clojure.lang.Compiler$ObjExpr" () boolean))) 
                                      (1333 (ifeq 1702)) ;;to TAG_37
                                      (1336 (aload_0)) 
                                      (1337 (invokevirtual (methodCP "ctorTypes" "clojure.lang.Compiler$ObjExpr" () (array (class "clojure.asm.Type"))))) 
                                      (1340 (astore 17)) 
                                      (1342 (aload 17)) 
                                      (1344 (arraylength)) 
                                      (1345 (iconst_1)) 
                                      (1346 (isub)) 
                                      (1347 (anewarray (class "clojure.asm.Type"))) 
                                      (1350 (astore 18)) 
                                      (1352 (iconst_1)) 
                                      (1353 (istore 19)) 
                                      (1355 (iload 19)) ;;at TAG_39
                                      (1357 (aload 17)) 
                                      (1359 (arraylength)) 
                                      (1360 (if_icmpge 1381)) ;;to TAG_38
                                      (1363 (aload 18)) 
                                      (1365 (iload 19)) 
                                      (1367 (iconst_1)) 
                                      (1368 (isub)) 
                                      (1369 (aload 17)) 
                                      (1371 (iload 19)) 
                                      (1373 (aaload)) 
                                      (1374 (aastore)) 
                                      (1375 (iinc 19 1)) 
                                      (1378 (goto 1355)) ;;to TAG_39
                                      (1381 (new (class "clojure.asm.commons.Method"))) ;;at TAG_38
                                      (1384 (dup)) 
                                      (1385 (ldc 14)) ;;STRING:: "<init>"
                                      (1387 (getstatic (fieldCP "VOID_TYPE" "clojure.asm.Type" (class "clojure.asm.Type")))) 
                                      (1390 (aload 18)) 
                                      (1392 (invokespecial (methodCP "<init>" "clojure.asm.commons.Method" ((class "java.lang.String") (class "clojure.asm.Type") (array (class "clojure.asm.Type"))) void))) 
                                      (1395 (astore 19)) 
                                      (1397 (new (class "clojure.asm.commons.GeneratorAdapter"))) 
                                      (1400 (dup)) 
                                      (1401 (iconst_1)) 
                                      (1402 (aload 19)) 
                                      (1404 (aconst_null)) 
                                      (1405 (aconst_null)) 
                                      (1406 (aload 5)) 
                                      (1408 (invokespecial (methodCP "<init>" "clojure.asm.commons.GeneratorAdapter" (int (class "clojure.asm.commons.Method") (class "java.lang.String") (array (class "clojure.asm.Type")) (class "clojure.asm.ClassVisitor")) void))) 
                                      (1411 (astore 13)) 
                                      (1413 (aload 13)) 
                                      (1415 (invokevirtual (methodCP "visitCode" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1418 (aload 13)) 
                                      (1420 (invokevirtual (methodCP "loadThis" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1423 (aload 13)) 
                                      (1425 (iconst_1)) 
                                      (1426 (invokevirtual (methodCP "visitInsn" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (1429 (aload 13)) 
                                      (1431 (invokevirtual (methodCP "loadArgs" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1434 (aload 13)) 
                                      (1436 (aload_0)) 
                                      (1437 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (1440 (new (class "clojure.asm.commons.Method"))) 
                                      (1443 (dup)) 
                                      (1444 (ldc 14)) ;;STRING:: "<init>"
                                      (1446 (getstatic (fieldCP "VOID_TYPE" "clojure.asm.Type" (class "clojure.asm.Type")))) 
                                      (1449 (aload 17)) 
                                      (1451 (invokespecial (methodCP "<init>" "clojure.asm.commons.Method" ((class "java.lang.String") (class "clojure.asm.Type") (array (class "clojure.asm.Type"))) void))) 
                                      (1454 (invokevirtual (methodCP "invokeConstructor" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (1457 (aload 13)) 
                                      (1459 (invokevirtual (methodCP "returnValue" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1462 (aload 13)) 
                                      (1464 (invokevirtual (methodCP "endMethod" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1467 (ldc 15)) ;;STRING:: "clojure.lang.IPersistentMap meta()"
                                      (1469 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (1472 (astore 20)) 
                                      (1474 (new (class "clojure.asm.commons.GeneratorAdapter"))) 
                                      (1477 (dup)) 
                                      (1478 (iconst_1)) 
                                      (1479 (aload 20)) 
                                      (1481 (aconst_null)) 
                                      (1482 (aconst_null)) 
                                      (1483 (aload 5)) 
                                      (1485 (invokespecial (methodCP "<init>" "clojure.asm.commons.GeneratorAdapter" (int (class "clojure.asm.commons.Method") (class "java.lang.String") (array (class "clojure.asm.Type")) (class "clojure.asm.ClassVisitor")) void))) 
                                      (1488 (astore 21)) 
                                      (1490 (aload 21)) 
                                      (1492 (invokevirtual (methodCP "visitCode" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1495 (aload 21)) 
                                      (1497 (invokevirtual (methodCP "loadThis" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1500 (aload 21)) 
                                      (1502 (aload_0)) 
                                      (1503 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (1506 (ldc 13)) ;;STRING:: "__meta"
                                      (1508 (getstatic (fieldCP "IPERSISTENTMAP_TYPE" "clojure.lang.Compiler" (class "clojure.asm.Type")))) 
                                      (1511 (invokevirtual (methodCP "getField" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (1514 (aload 21)) 
                                      (1516 (invokevirtual (methodCP "returnValue" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1519 (aload 21)) 
                                      (1521 (invokevirtual (methodCP "endMethod" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1524 (ldc 16)) ;;STRING:: "clojure.lang.IObj withMeta(clojure.lang.IPersistentMap)"
                                      (1526 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (1529 (astore 20)) 
                                      (1531 (new (class "clojure.asm.commons.GeneratorAdapter"))) 
                                      (1534 (dup)) 
                                      (1535 (iconst_1)) 
                                      (1536 (aload 20)) 
                                      (1538 (aconst_null)) 
                                      (1539 (aconst_null)) 
                                      (1540 (aload 5)) 
                                      (1542 (invokespecial (methodCP "<init>" "clojure.asm.commons.GeneratorAdapter" (int (class "clojure.asm.commons.Method") (class "java.lang.String") (array (class "clojure.asm.Type")) (class "clojure.asm.ClassVisitor")) void))) 
                                      (1545 (astore 21)) 
                                      (1547 (aload 21)) 
                                      (1549 (invokevirtual (methodCP "visitCode" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1552 (aload 21)) 
                                      (1554 (aload_0)) 
                                      (1555 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (1558 (invokevirtual (methodCP "newInstance" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type")) void))) 
                                      (1561 (aload 21)) 
                                      (1563 (invokevirtual (methodCP "dup" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1566 (aload 21)) 
                                      (1568 (iconst_0)) 
                                      (1569 (invokevirtual (methodCP "loadArg" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (1572 (aload_0)) 
                                      (1573 (getfield (fieldCP "closes" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (1576 (invokestatic (methodCP "keys" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (1579 (astore 22)) 
                                      (1581 (aload 22)) ;;at TAG_43
                                      (1583 (ifnull 1669)) ;;to TAG_40
                                      (1586 (aload 22)) 
                                      (1588 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (1593 (checkcast (class "clojure.lang.Compiler$LocalBinding"))) 
                                      (1596 (astore 23)) 
                                      (1598 (aload 21)) 
                                      (1600 (invokevirtual (methodCP "loadThis" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1603 (aload 23)) 
                                      (1605 (invokevirtual (methodCP "getPrimitiveType" "clojure.lang.Compiler$LocalBinding" () (class "java.lang.Class")))) 
                                      (1608 (astore 24)) 
                                      (1610 (aload 24)) 
                                      (1612 (ifnull 1637)) ;;to TAG_41
                                      (1615 (aload 21)) 
                                      (1617 (aload_0)) 
                                      (1618 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (1621 (aload 23)) 
                                      (1623 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (1626 (aload 24)) 
                                      (1628 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (1631 (invokevirtual (methodCP "getField" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (1634 (goto 1654)) ;;to TAG_42
                                      (1637 (aload 21)) ;;at TAG_41
                                      (1639 (aload_0)) 
                                      (1640 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (1643 (aload 23)) 
                                      (1645 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (1648 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (1651 (invokevirtual (methodCP "getField" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (1654 (aload 22)) ;;at TAG_42
                                      (1656 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (1661 (astore 22)) 
                                      (1663 (iinc 16 1)) 
                                      (1666 (goto 1581)) ;;to TAG_43
                                      (1669 (aload 21)) ;;at TAG_40
                                      (1671 (aload_0)) 
                                      (1672 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (1675 (new (class "clojure.asm.commons.Method"))) 
                                      (1678 (dup)) 
                                      (1679 (ldc 14)) ;;STRING:: "<init>"
                                      (1681 (getstatic (fieldCP "VOID_TYPE" "clojure.asm.Type" (class "clojure.asm.Type")))) 
                                      (1684 (aload 17)) 
                                      (1686 (invokespecial (methodCP "<init>" "clojure.asm.commons.Method" ((class "java.lang.String") (class "clojure.asm.Type") (array (class "clojure.asm.Type"))) void))) 
                                      (1689 (invokevirtual (methodCP "invokeConstructor" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (1692 (aload 21)) 
                                      (1694 (invokevirtual (methodCP "returnValue" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1697 (aload 21)) 
                                      (1699 (invokevirtual (methodCP "endMethod" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1702 (aload_0)) ;;at TAG_37
                                      (1703 (aload 5)) 
                                      (1705 (invokevirtual (methodCP "emitStatics" "clojure.lang.Compiler$ObjExpr" ((class "clojure.asm.ClassVisitor")) void))) 
                                      (1708 (aload_0)) 
                                      (1709 (aload 5)) 
                                      (1711 (invokevirtual (methodCP "emitMethods" "clojure.lang.Compiler$ObjExpr" ((class "clojure.asm.ClassVisitor")) void))) 
                                      (1714 (aload_0)) 
                                      (1715 (getfield (fieldCP "keywordCallsites" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (1718 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (1723 (ifle 1916)) ;;to TAG_44
                                      (1726 (ldc 17)) ;;STRING:: "void swapThunk(int,clojure.lang.ILookupThunk)"
                                      (1728 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (1731 (astore 17)) 
                                      (1733 (new (class "clojure.asm.commons.GeneratorAdapter"))) 
                                      (1736 (dup)) 
                                      (1737 (iconst_1)) 
                                      (1738 (aload 17)) 
                                      (1740 (aconst_null)) 
                                      (1741 (aconst_null)) 
                                      (1742 (aload 5)) 
                                      (1744 (invokespecial (methodCP "<init>" "clojure.asm.commons.GeneratorAdapter" (int (class "clojure.asm.commons.Method") (class "java.lang.String") (array (class "clojure.asm.Type")) (class "clojure.asm.ClassVisitor")) void))) 
                                      (1747 (astore 18)) 
                                      (1749 (aload 18)) 
                                      (1751 (invokevirtual (methodCP "visitCode" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1754 (aload 18)) 
                                      (1756 (invokevirtual (methodCP "newLabel" "clojure.asm.commons.GeneratorAdapter" () (class "clojure.asm.Label")))) 
                                      (1759 (astore 19)) 
                                      (1761 (aload_0)) 
                                      (1762 (getfield (fieldCP "keywordCallsites" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (1765 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (1770 (anewarray (class "clojure.asm.Label"))) 
                                      (1773 (astore 20)) 
                                      (1775 (iconst_0)) 
                                      (1776 (istore 21)) 
                                      (1778 (iload 21)) ;;at TAG_46
                                      (1780 (aload_0)) 
                                      (1781 (getfield (fieldCP "keywordCallsites" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (1784 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (1789 (if_icmpge 1808)) ;;to TAG_45
                                      (1792 (aload 20)) 
                                      (1794 (iload 21)) 
                                      (1796 (aload 18)) 
                                      (1798 (invokevirtual (methodCP "newLabel" "clojure.asm.commons.GeneratorAdapter" () (class "clojure.asm.Label")))) 
                                      (1801 (aastore)) 
                                      (1802 (iinc 21 1)) 
                                      (1805 (goto 1778)) ;;to TAG_46
                                      (1808 (aload 18)) ;;at TAG_45
                                      (1810 (iconst_0)) 
                                      (1811 (invokevirtual (methodCP "loadArg" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (1814 (aload 18)) 
                                      (1816 (iconst_0)) 
                                      (1817 (aload_0)) 
                                      (1818 (getfield (fieldCP "keywordCallsites" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (1821 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (1826 (iconst_1)) 
                                      (1827 (isub)) 
                                      (1828 (aload 19)) 
                                      (1830 (aload 20)) 
                                      (1832 (invokevirtual (methodCP "visitTableSwitchInsn" "clojure.asm.commons.GeneratorAdapter" (int int (class "clojure.asm.Label") (array (class "clojure.asm.Label"))) void))) 
                                      (1835 (iconst_0)) 
                                      (1836 (istore 21)) 
                                      (1838 (iload 21)) ;;at TAG_48
                                      (1840 (aload_0)) 
                                      (1841 (getfield (fieldCP "keywordCallsites" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (1844 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (1849 (if_icmpge 1899)) ;;to TAG_47
                                      (1852 (aload 18)) 
                                      (1854 (aload 20)) 
                                      (1856 (iload 21)) 
                                      (1858 (aaload)) 
                                      (1859 (invokevirtual (methodCP "mark" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Label")) void))) 
                                      (1862 (aload 18)) 
                                      (1864 (iconst_1)) 
                                      (1865 (invokevirtual (methodCP "loadArg" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (1868 (aload 18)) 
                                      (1870 (aload_0)) 
                                      (1871 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (1874 (aload_0)) 
                                      (1875 (iload 21)) 
                                      (1877 (invokevirtual (methodCP "thunkNameStatic" "clojure.lang.Compiler$ObjExpr" (int) (class "java.lang.String")))) 
                                      (1880 (getstatic (fieldCP "ILOOKUP_THUNK_TYPE" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (1883 (invokevirtual (methodCP "putStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (1886 (aload 18)) 
                                      (1888 (aload 19)) 
                                      (1890 (invokevirtual (methodCP "goTo" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Label")) void))) 
                                      (1893 (iinc 21 1)) 
                                      (1896 (goto 1838)) ;;to TAG_48
                                      (1899 (aload 18)) ;;at TAG_47
                                      (1901 (aload 19)) 
                                      (1903 (invokevirtual (methodCP "mark" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Label")) void))) 
                                      (1906 (aload 18)) 
                                      (1908 (invokevirtual (methodCP "returnValue" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1911 (aload 18)) 
                                      (1913 (invokevirtual (methodCP "endMethod" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (1916 (aload 5)) ;;at TAG_44
                                      (1918 (invokeinterface (methodCP "visitEnd" "clojure.asm.ClassVisitor" () void) 1)) 
                                      (1923 (aload_0)) 
                                      (1924 (aload 4)) 
                                      (1926 (invokevirtual (methodCP "toByteArray" "clojure.asm.ClassWriter" () (array byte)))) 
                                      (1929 (putfield (fieldCP "bytecode" "clojure.lang.Compiler$ObjExpr" (array byte)))) 
                                      (1932 (getstatic (fieldCP "COMPILE_FILES" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (1935 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (1938 (invokestatic (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean))) 
                                      (1941 (ifeq 1955)) ;;to TAG_49
                                      (1944 (aload_0)) 
                                      (1945 (getfield (fieldCP "internalName" "clojure.lang.Compiler$ObjExpr" (class "java.lang.String")))) 
                                      (1948 (aload_0)) 
                                      (1949 (getfield (fieldCP "bytecode" "clojure.lang.Compiler$ObjExpr" (array byte)))) 
                                      (1952 (invokestatic (methodCP "writeClassFile" "clojure.lang.Compiler" ((class "java.lang.String") (array byte)) void))) 
                                      (1955 (return)) ;;at TAG_49
                                      (endofcode 1956))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emitKeywordCallsites"
                              (parameters (class "clojure.asm.commons.GeneratorAdapter"))
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 101)
                                   (parsedcode
                                      (0 (iconst_0)) 
                                      (1 (istore_2)) 
                                      (2 (iload_2)) ;;at TAG_1
                                      (3 (aload_0)) 
                                      (4 (getfield (fieldCP "keywordCallsites" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (7 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (12 (if_icmpge 100))  ;;to TAG_0
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "keywordCallsites" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (19 (iload_2)) 
                                      (20 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (25 (checkcast (class "clojure.lang.Keyword"))) 
                                      (28 (astore_3)) 
                                      (29 (aload_1)) 
                                      (30 (getstatic (fieldCP "KEYWORD_LOOKUPSITE_TYPE" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (33 (invokevirtual (methodCP "newInstance" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type")) void))) 
                                      (36 (aload_1)) 
                                      (37 (invokevirtual (methodCP "dup" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (40 (aload_0)) 
                                      (41 (aload_3)) 
                                      (42 (aload_1)) 
                                      (43 (invokevirtual (methodCP "emitValue" "clojure.lang.Compiler$ObjExpr" ((class "java.lang.Object") (class "clojure.asm.commons.GeneratorAdapter")) void))) 
                                      (46 (aload_1)) 
                                      (47 (getstatic (fieldCP "KEYWORD_LOOKUPSITE_TYPE" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (50 (ldc 18)) ;;STRING:: "void <init>(clojure.lang.Keyword)"
                                      (52 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (55 (invokevirtual (methodCP "invokeConstructor" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (58 (aload_1)) 
                                      (59 (invokevirtual (methodCP "dup" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (62 (aload_1)) 
                                      (63 (aload_0)) 
                                      (64 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (67 (aload_0)) 
                                      (68 (iload_2)) 
                                      (69 (invokevirtual (methodCP "siteNameStatic" "clojure.lang.Compiler$ObjExpr" (int) (class "java.lang.String")))) 
                                      (72 (getstatic (fieldCP "KEYWORD_LOOKUPSITE_TYPE" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (75 (invokevirtual (methodCP "putStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (78 (aload_1)) 
                                      (79 (aload_0)) 
                                      (80 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (83 (aload_0)) 
                                      (84 (iload_2)) 
                                      (85 (invokevirtual (methodCP "thunkNameStatic" "clojure.lang.Compiler$ObjExpr" (int) (class "java.lang.String")))) 
                                      (88 (getstatic (fieldCP "ILOOKUP_THUNK_TYPE" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (91 (invokevirtual (methodCP "putStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (94 (iinc 2 1)) 
                                      (97 (goto 2)) ;;to TAG_1
                                      (100 (return)) ;;at TAG_0
                                      (endofcode 101))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emitStatics"
                              (parameters (class "clojure.asm.ClassVisitor"))
                              (returntype . void)
                              (accessflags  *class*  *protected* )
                              (code
                                   (max_stack . 0) (max_locals . 2) (code_length . 1)
                                   (parsedcode
                                      (0 (return))
                                      (endofcode 1))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emitMethods"
                              (parameters (class "clojure.asm.ClassVisitor"))
                              (returntype . void)
                              (accessflags  *class*  *protected* )
                              (code
                                   (max_stack . 0) (max_locals . 2) (code_length . 1)
                                   (parsedcode
                                      (0 (return))
                                      (endofcode 1))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emitListAsObjectArray"
                              (parameters (class "java.lang.Object") (class "clojure.asm.commons.GeneratorAdapter"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 3) (max_locals . 5) (code_length . 78)
                                   (parsedcode
                                      (0 (aload_2)) 
                                      (1 (aload_1)) 
                                      (2 (checkcast (class "java.util.List"))) 
                                      (5 (invokeinterface (methodCP "size" "java.util.List" () int) 1)) 
                                      (10 (invokevirtual (methodCP "push" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (13 (aload_2)) 
                                      (14 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (17 (invokevirtual (methodCP "newArray" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type")) void))) 
                                      (20 (iconst_0)) 
                                      (21 (istore_3)) 
                                      (22 (aload_1)) 
                                      (23 (checkcast (class "java.util.List"))) 
                                      (26 (invokeinterface (methodCP "iterator" "java.util.List" () (class "java.util.Iterator")) 1)) 
                                      (31 (astore 4)) 
                                      (33 (aload 4)) ;;at TAG_1
                                      (35 (invokeinterface (methodCP "hasNext" "java.util.Iterator" () boolean) 1)) 
                                      (40 (ifeq 77))  ;;to TAG_0
                                      (43 (aload_2)) 
                                      (44 (invokevirtual (methodCP "dup" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (47 (aload_2)) 
                                      (48 (iload_3)) 
                                      (49 (invokevirtual (methodCP "push" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (52 (aload_0)) 
                                      (53 (aload 4)) 
                                      (55 (invokeinterface (methodCP "next" "java.util.Iterator" () (class "java.lang.Object")) 1)) 
                                      (60 (aload_2)) 
                                      (61 (invokevirtual (methodCP "emitValue" "clojure.lang.Compiler$ObjExpr" ((class "java.lang.Object") (class "clojure.asm.commons.GeneratorAdapter")) void))) 
                                      (64 (aload_2)) 
                                      (65 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (68 (invokevirtual (methodCP "arrayStore" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type")) void))) 
                                      (71 (iinc 3 1)) 
                                      (74 (goto 33)) ;;to TAG_1
                                      (77 (return)) ;;at TAG_0
                                      (endofcode 78))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emitValue"
                              (parameters (class "java.lang.Object") (class "clojure.asm.commons.GeneratorAdapter"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 7) (max_locals . 13) (code_length . 1401)
                                   (parsedcode
                                      (0 (iconst_1)) 
                                      (1 (istore_3)) 
                                      (2 (aload_1)) 
                                      (3 (ifnonnull 14))  ;;to TAG_0
                                      (6 (aload_2)) 
                                      (7 (iconst_1)) 
                                      (8 (invokevirtual (methodCP "visitInsn" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (11 (goto 1327)) ;;to TAG_1
                                      (14 (aload_1)) ;;at TAG_0
                                      (15 (instanceof (class "java.lang.String"))) 
                                      (18 (ifeq 32)) ;;to TAG_2
                                      (21 (aload_2)) 
                                      (22 (aload_1)) 
                                      (23 (checkcast (class "java.lang.String"))) 
                                      (26 (invokevirtual (methodCP "push" "clojure.asm.commons.GeneratorAdapter" ((class "java.lang.String")) void))) 
                                      (29 (goto 1327)) ;;to TAG_1
                                      (32 (aload_1)) ;;at TAG_2
                                      (33 (instanceof (class "java.lang.Boolean"))) 
                                      (36 (ifeq 79)) ;;to TAG_3
                                      (39 (aload_1)) 
                                      (40 (checkcast (class "java.lang.Boolean"))) 
                                      (43 (invokevirtual (methodCP "booleanValue" "java.lang.Boolean" () boolean))) 
                                      (46 (ifeq 64)) ;;to TAG_4
                                      (49 (aload_2)) 
                                      (50 (getstatic (fieldCP "BOOLEAN_OBJECT_TYPE" "clojure.lang.Compiler" (class "clojure.asm.Type")))) 
                                      (53 (ldc 19)) ;;STRING:: "TRUE"
                                      (55 (getstatic (fieldCP "BOOLEAN_OBJECT_TYPE" "clojure.lang.Compiler" (class "clojure.asm.Type")))) 
                                      (58 (invokevirtual (methodCP "getStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (61 (goto 1327)) ;;to TAG_1
                                      (64 (aload_2)) ;;at TAG_4
                                      (65 (getstatic (fieldCP "BOOLEAN_OBJECT_TYPE" "clojure.lang.Compiler" (class "clojure.asm.Type")))) 
                                      (68 (ldc 20)) ;;STRING:: "FALSE"
                                      (70 (getstatic (fieldCP "BOOLEAN_OBJECT_TYPE" "clojure.lang.Compiler" (class "clojure.asm.Type")))) 
                                      (73 (invokevirtual (methodCP "getStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (76 (goto 1327)) ;;to TAG_1
                                      (79 (aload_1)) ;;at TAG_3
                                      (80 (instanceof (class "java.lang.Integer"))) 
                                      (83 (ifeq 115)) ;;to TAG_5
                                      (86 (aload_2)) 
                                      (87 (aload_1)) 
                                      (88 (checkcast (class "java.lang.Integer"))) 
                                      (91 (invokevirtual (methodCP "intValue" "java.lang.Integer" () int))) 
                                      (94 (invokevirtual (methodCP "push" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (97 (aload_2)) 
                                      (98 (ldc_w )) 
                                      (101 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (104 (ldc 21)) ;;STRING:: "Integer valueOf(int)"
                                      (106 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (109 (invokevirtual (methodCP "invokeStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (112 (goto 1327)) ;;to TAG_1
                                      (115 (aload_1)) ;;at TAG_5
                                      (116 (instanceof (class "java.lang.Long"))) 
                                      (119 (ifeq 151)) ;;to TAG_6
                                      (122 (aload_2)) 
                                      (123 (aload_1)) 
                                      (124 (checkcast (class "java.lang.Long"))) 
                                      (127 (invokevirtual (methodCP "longValue" "java.lang.Long" () long))) 
                                      (130 (invokevirtual (methodCP "push" "clojure.asm.commons.GeneratorAdapter" (long) void))) 
                                      (133 (aload_2)) 
                                      (134 (ldc_w )) 
                                      (137 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (140 (ldc 22)) ;;STRING:: "Long valueOf(long)"
                                      (142 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (145 (invokevirtual (methodCP "invokeStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (148 (goto 1327)) ;;to TAG_1
                                      (151 (aload_1)) ;;at TAG_6
                                      (152 (instanceof (class "java.lang.Double"))) 
                                      (155 (ifeq 187)) ;;to TAG_7
                                      (158 (aload_2)) 
                                      (159 (aload_1)) 
                                      (160 (checkcast (class "java.lang.Double"))) 
                                      (163 (invokevirtual (methodCP "doubleValue" "java.lang.Double" () double))) 
                                      (166 (invokevirtual (methodCP "push" "clojure.asm.commons.GeneratorAdapter" (double) void))) 
                                      (169 (aload_2)) 
                                      (170 (ldc_w )) 
                                      (173 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (176 (ldc 23)) ;;STRING:: "Double valueOf(double)"
                                      (178 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (181 (invokevirtual (methodCP "invokeStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (184 (goto 1327)) ;;to TAG_1
                                      (187 (aload_1)) ;;at TAG_7
                                      (188 (instanceof (class "java.lang.Character"))) 
                                      (191 (ifeq 223)) ;;to TAG_8
                                      (194 (aload_2)) 
                                      (195 (aload_1)) 
                                      (196 (checkcast (class "java.lang.Character"))) 
                                      (199 (invokevirtual (methodCP "charValue" "java.lang.Character" () char))) 
                                      (202 (invokevirtual (methodCP "push" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (205 (aload_2)) 
                                      (206 (ldc_w )) 
                                      (209 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (212 (ldc 24)) ;;STRING:: "Character valueOf(char)"
                                      (214 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (217 (invokevirtual (methodCP "invokeStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (220 (goto 1327)) ;;to TAG_1
                                      (223 (aload_1)) ;;at TAG_8
                                      (224 (instanceof (class "java.lang.Class"))) 
                                      (227 (ifeq 466)) ;;to TAG_9
                                      (230 (aload_1)) 
                                      (231 (checkcast (class "java.lang.Class"))) 
                                      (234 (astore 4)) 
                                      (236 (aload 4)) 
                                      (238 (invokevirtual (methodCP "isPrimitive" "java.lang.Class" () boolean))) 
                                      (241 (ifeq 436)) ;;to TAG_10
                                      (244 (aload 4)) 
                                      (246 (getstatic (fieldCP "TYPE" "java.lang.Boolean" (class "java.lang.Class")))) 
                                      (249 (if_acmpne 263)) ;;to TAG_11
                                      (252 (ldc_w )) 
                                      (255 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (258 (astore 5)) 
                                      (260 (goto 419)) ;;to TAG_12
                                      (263 (aload 4)) ;;at TAG_11
                                      (265 (getstatic (fieldCP "TYPE" "java.lang.Byte" (class "java.lang.Class")))) 
                                      (268 (if_acmpne 282)) ;;to TAG_13
                                      (271 (ldc_w )) 
                                      (274 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (277 (astore 5)) 
                                      (279 (goto 419)) ;;to TAG_12
                                      (282 (aload 4)) ;;at TAG_13
                                      (284 (getstatic (fieldCP "TYPE" "java.lang.Character" (class "java.lang.Class")))) 
                                      (287 (if_acmpne 301)) ;;to TAG_14
                                      (290 (ldc_w )) 
                                      (293 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (296 (astore 5)) 
                                      (298 (goto 419)) ;;to TAG_12
                                      (301 (aload 4)) ;;at TAG_14
                                      (303 (getstatic (fieldCP "TYPE" "java.lang.Double" (class "java.lang.Class")))) 
                                      (306 (if_acmpne 320)) ;;to TAG_15
                                      (309 (ldc_w )) 
                                      (312 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (315 (astore 5)) 
                                      (317 (goto 419)) ;;to TAG_12
                                      (320 (aload 4)) ;;at TAG_15
                                      (322 (getstatic (fieldCP "TYPE" "java.lang.Float" (class "java.lang.Class")))) 
                                      (325 (if_acmpne 339)) ;;to TAG_16
                                      (328 (ldc_w )) 
                                      (331 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (334 (astore 5)) 
                                      (336 (goto 419)) ;;to TAG_12
                                      (339 (aload 4)) ;;at TAG_16
                                      (341 (getstatic (fieldCP "TYPE" "java.lang.Integer" (class "java.lang.Class")))) 
                                      (344 (if_acmpne 358)) ;;to TAG_17
                                      (347 (ldc_w )) 
                                      (350 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (353 (astore 5)) 
                                      (355 (goto 419)) ;;to TAG_12
                                      (358 (aload 4)) ;;at TAG_17
                                      (360 (getstatic (fieldCP "TYPE" "java.lang.Long" (class "java.lang.Class")))) 
                                      (363 (if_acmpne 377)) ;;to TAG_18
                                      (366 (ldc_w )) 
                                      (369 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (372 (astore 5)) 
                                      (374 (goto 419)) ;;to TAG_12
                                      (377 (aload 4)) ;;at TAG_18
                                      (379 (getstatic (fieldCP "TYPE" "java.lang.Short" (class "java.lang.Class")))) 
                                      (382 (if_acmpne 396)) ;;to TAG_19
                                      (385 (ldc_w )) 
                                      (388 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (391 (astore 5)) 
                                      (393 (goto 419)) ;;to TAG_12
                                      (396 (new (class "java.lang.StringBuilder"))) ;;at TAG_19
                                      (399 (dup)) 
                                      (400 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (403 (ldc 25)) ;;STRING:: "Can\nt embed unknown primitive in code: "
                                      (405 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (408 (aload_1)) 
                                      (409 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (412 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (415 (invokestatic (methodCP "runtimeException" "clojure.lang.Util" ((class "java.lang.String")) (class "java.lang.RuntimeException")))) 
                                      (418 (athrow)) 
                                      (419 (aload_2)) ;;at TAG_12
                                      (420 (aload 5)) 
                                      (422 (ldc 26)) ;;STRING:: "TYPE"
                                      (424 (ldc_w )) 
                                      (427 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (430 (invokevirtual (methodCP "getStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (433 (goto 463)) ;;to TAG_20
                                      (436 (aload_2)) ;;at TAG_10
                                      (437 (aload 4)) 
                                      (439 (invokevirtual (methodCP "getName" "java.lang.Class" () (class "java.lang.String")))) 
                                      (442 (invokestatic (methodCP "destubClassName" "clojure.lang.Compiler" ((class "java.lang.String")) (class "java.lang.String")))) 
                                      (445 (invokevirtual (methodCP "push" "clojure.asm.commons.GeneratorAdapter" ((class "java.lang.String")) void))) 
                                      (448 (aload_2)) 
                                      (449 (ldc_w )) 
                                      (452 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (455 (ldc 27)) ;;STRING:: "Class forName(String)"
                                      (457 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (460 (invokevirtual (methodCP "invokeStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (463 (goto 1327)) ;;to TAG_1;;at TAG_20
                                      (466 (aload_1)) ;;at TAG_9
                                      (467 (instanceof (class "clojure.lang.Symbol"))) 
                                      (470 (ifeq 513)) ;;to TAG_21
                                      (473 (aload_2)) 
                                      (474 (aload_1)) 
                                      (475 (checkcast (class "clojure.lang.Symbol"))) 
                                      (478 (getfield (fieldCP "ns" "clojure.lang.Symbol" (class "java.lang.String")))) 
                                      (481 (invokevirtual (methodCP "push" "clojure.asm.commons.GeneratorAdapter" ((class "java.lang.String")) void))) 
                                      (484 (aload_2)) 
                                      (485 (aload_1)) 
                                      (486 (checkcast (class "clojure.lang.Symbol"))) 
                                      (489 (getfield (fieldCP "name" "clojure.lang.Symbol" (class "java.lang.String")))) 
                                      (492 (invokevirtual (methodCP "push" "clojure.asm.commons.GeneratorAdapter" ((class "java.lang.String")) void))) 
                                      (495 (aload_2)) 
                                      (496 (ldc_w )) 
                                      (499 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (502 (ldc 28)) ;;STRING:: "clojure.lang.Symbol intern(String,String)"
                                      (504 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (507 (invokevirtual (methodCP "invokeStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (510 (goto 1327)) ;;to TAG_1
                                      (513 (aload_1)) ;;at TAG_21
                                      (514 (instanceof (class "clojure.lang.Keyword"))) 
                                      (517 (ifeq 563)) ;;to TAG_22
                                      (520 (aload_2)) 
                                      (521 (aload_1)) 
                                      (522 (checkcast (class "clojure.lang.Keyword"))) 
                                      (525 (getfield (fieldCP "sym" "clojure.lang.Keyword" (class "clojure.lang.Symbol")))) 
                                      (528 (getfield (fieldCP "ns" "clojure.lang.Symbol" (class "java.lang.String")))) 
                                      (531 (invokevirtual (methodCP "push" "clojure.asm.commons.GeneratorAdapter" ((class "java.lang.String")) void))) 
                                      (534 (aload_2)) 
                                      (535 (aload_1)) 
                                      (536 (checkcast (class "clojure.lang.Keyword"))) 
                                      (539 (getfield (fieldCP "sym" "clojure.lang.Keyword" (class "clojure.lang.Symbol")))) 
                                      (542 (getfield (fieldCP "name" "clojure.lang.Symbol" (class "java.lang.String")))) 
                                      (545 (invokevirtual (methodCP "push" "clojure.asm.commons.GeneratorAdapter" ((class "java.lang.String")) void))) 
                                      (548 (aload_2)) 
                                      (549 (invokestatic (methodCP "access$200" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (552 (ldc 29)) ;;STRING:: "clojure.lang.Keyword keyword(String,String)"
                                      (554 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (557 (invokevirtual (methodCP "invokeStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (560 (goto 1327)) ;;to TAG_1
                                      (563 (aload_1)) ;;at TAG_22
                                      (564 (instanceof (class "clojure.lang.Var"))) 
                                      (567 (ifeq 618)) ;;to TAG_23
                                      (570 (aload_1)) 
                                      (571 (checkcast (class "clojure.lang.Var"))) 
                                      (574 (astore 4)) 
                                      (576 (aload_2)) 
                                      (577 (aload 4)) 
                                      (579 (getfield (fieldCP "ns" "clojure.lang.Var" (class "clojure.lang.Namespace")))) 
                                      (582 (getfield (fieldCP "name" "clojure.lang.Namespace" (class "clojure.lang.Symbol")))) 
                                      (585 (invokevirtual (methodCP "toString" "clojure.lang.Symbol" () (class "java.lang.String")))) 
                                      (588 (invokevirtual (methodCP "push" "clojure.asm.commons.GeneratorAdapter" ((class "java.lang.String")) void))) 
                                      (591 (aload_2)) 
                                      (592 (aload 4)) 
                                      (594 (getfield (fieldCP "sym" "clojure.lang.Var" (class "clojure.lang.Symbol")))) 
                                      (597 (invokevirtual (methodCP "toString" "clojure.lang.Symbol" () (class "java.lang.String")))) 
                                      (600 (invokevirtual (methodCP "push" "clojure.asm.commons.GeneratorAdapter" ((class "java.lang.String")) void))) 
                                      (603 (aload_2)) 
                                      (604 (invokestatic (methodCP "access$200" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (607 (ldc 30)) ;;STRING:: "clojure.lang.Var var(String,String)"
                                      (609 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (612 (invokevirtual (methodCP "invokeStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (615 (goto 1327)) ;;to TAG_1
                                      (618 (aload_1)) ;;at TAG_23
                                      (619 (instanceof (class "clojure.lang.IType"))) 
                                      (622 (ifeq 849)) ;;to TAG_24
                                      (625 (new (class "clojure.asm.commons.Method"))) 
                                      (628 (dup)) 
                                      (629 (ldc 14)) ;;STRING:: "<init>"
                                      (631 (aload_1)) 
                                      (632 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (635 (invokevirtual (methodCP "getConstructors" "java.lang.Class" () (array (class "java.lang.reflect.Constructor"))))) 
                                      (638 (iconst_0)) 
                                      (639 (aaload)) 
                                      (640 (invokestatic (methodCP "getConstructorDescriptor" "clojure.asm.Type" ((class "java.lang.reflect.Constructor")) (class "java.lang.String")))) 
                                      (643 (invokespecial (methodCP "<init>" "clojure.asm.commons.Method" ((class "java.lang.String") (class "java.lang.String")) void))) 
                                      (646 (astore 4)) 
                                      (648 (aload_2)) 
                                      (649 (aload_1)) 
                                      (650 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (653 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (656 (invokevirtual (methodCP "newInstance" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type")) void))) 
                                      (659 (aload_2)) 
                                      (660 (invokevirtual (methodCP "dup" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (663 (aload_1)) 
                                      (664 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (667 (ldc 31)) ;;STRING:: "getBasis"
                                      (669 (iconst_0)) 
                                      (670 (anewarray (class "java.lang.Object"))) 
                                      (673 (invokestatic (methodCP "invokeStaticMethod" "clojure.lang.Reflector" ((class "java.lang.Class") (class "java.lang.String") (array (class "java.lang.Object"))) (class "java.lang.Object")))) 
                                      (676 (checkcast (class "clojure.lang.IPersistentVector"))) 
                                      (679 (astore 5)) 
                                      (681 (aload 5)) 
                                      (683 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (686 (astore 6)) 
                                      (688 (aload 6)) ;;at TAG_27
                                      (690 (ifnull 833)) ;;to TAG_25
                                      (693 (aload 6)) 
                                      (695 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (700 (checkcast (class "clojure.lang.Symbol"))) 
                                      (703 (astore 7)) 
                                      (705 (aload 7)) 
                                      (707 (invokestatic (methodCP "access$500" "clojure.lang.Compiler" ((class "java.lang.Object")) (class "clojure.lang.Symbol")))) 
                                      (710 (invokestatic (methodCP "tagClass" "clojure.lang.Compiler" ((class "java.lang.Object")) (class "java.lang.Class")))) 
                                      (713 (astore 8)) 
                                      (715 (aload_1)) 
                                      (716 (aload 7)) 
                                      (718 (getfield (fieldCP "name" "clojure.lang.Symbol" (class "java.lang.String")))) 
                                      (721 (invokestatic (methodCP "getInstanceField" "clojure.lang.Reflector" ((class "java.lang.Object") (class "java.lang.String")) (class "java.lang.Object")))) 
                                      (724 (astore 9)) 
                                      (726 (aload_0)) 
                                      (727 (aload 9)) 
                                      (729 (aload_2)) 
                                      (730 (invokevirtual (methodCP "emitValue" "clojure.lang.Compiler$ObjExpr" ((class "java.lang.Object") (class "clojure.asm.commons.GeneratorAdapter")) void))) 
                                      (733 (aload 8)) 
                                      (735 (invokevirtual (methodCP "isPrimitive" "java.lang.Class" () boolean))) 
                                      (738 (ifeq 821)) ;;to TAG_26
                                      (741 (aload 8)) 
                                      (743 (invokestatic (methodCP "boxClass" "clojure.lang.Compiler" ((class "java.lang.Class")) (class "java.lang.Class")))) 
                                      (746 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (749 (astore 10)) 
                                      (751 (aload 8)) 
                                      (753 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (756 (invokevirtual (methodCP "getDescriptor" "clojure.asm.Type" () (class "java.lang.String")))) 
                                      (759 (astore 11)) 
                                      (761 (aload 8)) 
                                      (763 (invokevirtual (methodCP "getName" "java.lang.Class" () (class "java.lang.String")))) 
                                      (766 (astore 12)) 
                                      (768 (aload_2)) 
                                      (769 (aload 10)) 
                                      (771 (new (class "clojure.asm.commons.Method"))) 
                                      (774 (dup)) 
                                      (775 (new (class "java.lang.StringBuilder"))) 
                                      (778 (dup)) 
                                      (779 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (782 (aload 12)) 
                                      (784 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (787 (ldc 32)) ;;STRING:: "Value"
                                      (789 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (792 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (795 (new (class "java.lang.StringBuilder"))) 
                                      (798 (dup)) 
                                      (799 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (802 (ldc 33)) ;;STRING:: "()"
                                      (804 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (807 (aload 11)) 
                                      (809 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (812 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (815 (invokespecial (methodCP "<init>" "clojure.asm.commons.Method" ((class "java.lang.String") (class "java.lang.String")) void))) 
                                      (818 (invokevirtual (methodCP "invokeVirtual" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (821 (aload 6)) ;;at TAG_26
                                      (823 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (828 (astore 6)) 
                                      (830 (goto 688)) ;;to TAG_27
                                      (833 (aload_2)) ;;at TAG_25
                                      (834 (aload_1)) 
                                      (835 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (838 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (841 (aload 4)) 
                                      (843 (invokevirtual (methodCP "invokeConstructor" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (846 (goto 1327)) ;;to TAG_1
                                      (849 (aload_1)) ;;at TAG_24
                                      (850 (instanceof (class "clojure.lang.IRecord"))) 
                                      (853 (ifeq 914)) ;;to TAG_28
                                      (856 (new (class "java.lang.StringBuilder"))) 
                                      (859 (dup)) 
                                      (860 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (863 (aload_1)) 
                                      (864 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (867 (invokevirtual (methodCP "getName" "java.lang.Class" () (class "java.lang.String")))) 
                                      (870 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (873 (ldc 34)) ;;STRING:: " create(clojure.lang.IPersistentMap)"
                                      (875 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (878 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (881 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (884 (astore 4)) 
                                      (886 (aload_0)) 
                                      (887 (aload_1)) 
                                      (888 (checkcast (class "java.util.Map"))) 
                                      (891 (invokestatic (methodCP "create" "clojure.lang.PersistentArrayMap" ((class "java.util.Map")) (class "clojure.lang.IPersistentMap")))) 
                                      (894 (aload_2)) 
                                      (895 (invokevirtual (methodCP "emitValue" "clojure.lang.Compiler$ObjExpr" ((class "java.lang.Object") (class "clojure.asm.commons.GeneratorAdapter")) void))) 
                                      (898 (aload_2)) 
                                      (899 (aload_1)) 
                                      (900 (invokevirtual (methodCP "getClass" "java.lang.Object" () (class "java.lang.Class")))) 
                                      (903 (invokestatic (methodCP "getType" "clojure.lang.Compiler" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (906 (aload 4)) 
                                      (908 (invokevirtual (methodCP "invokeStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (911 (goto 1327)) ;;to TAG_1
                                      (914 (aload_1)) ;;at TAG_28
                                      (915 (instanceof (class "clojure.lang.IPersistentMap"))) 
                                      (918 (ifeq 1023)) ;;to TAG_29
                                      (921 (new (class "java.util.ArrayList"))) 
                                      (924 (dup)) 
                                      (925 (invokespecial (methodCP "<init>" "java.util.ArrayList" () void))) 
                                      (928 (astore 4)) 
                                      (930 (aload_1)) 
                                      (931 (checkcast (class "java.util.Map"))) 
                                      (934 (invokeinterface (methodCP "entrySet" "java.util.Map" () (class "java.util.Set")) 1)) 
                                      (939 (invokeinterface (methodCP "iterator" "java.util.Set" () (class "java.util.Iterator")) 1)) 
                                      (944 (astore 5)) 
                                      (946 (aload 5)) ;;at TAG_31
                                      (948 (invokeinterface (methodCP "hasNext" "java.util.Iterator" () boolean) 1)) 
                                      (953 (ifeq 1001)) ;;to TAG_30
                                      (956 (aload 5)) 
                                      (958 (invokeinterface (methodCP "next" "java.util.Iterator" () (class "java.lang.Object")) 1)) 
                                      (963 (checkcast (class "java.util.Map$Entry"))) 
                                      (966 (astore 6)) 
                                      (968 (aload 4)) 
                                      (970 (aload 6)) 
                                      (972 (invokeinterface (methodCP "getKey" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (977 (invokeinterface (methodCP "add" "java.util.List" ((class "java.lang.Object")) boolean) 2)) 
                                      (982 (pop)) 
                                      (983 (aload 4)) 
                                      (985 (aload 6)) 
                                      (987 (invokeinterface (methodCP "getValue" "java.util.Map$Entry" () (class "java.lang.Object")) 1)) 
                                      (992 (invokeinterface (methodCP "add" "java.util.List" ((class "java.lang.Object")) boolean) 2)) 
                                      (997 (pop)) 
                                      (998 (goto 946)) ;;to TAG_31
                                      (1001 (aload_0)) ;;at TAG_30
                                      (1002 (aload 4)) 
                                      (1004 (aload_2)) 
                                      (1005 (invokevirtual (methodCP "emitListAsObjectArray" "clojure.lang.Compiler$ObjExpr" ((class "java.lang.Object") (class "clojure.asm.commons.GeneratorAdapter")) void))) 
                                      (1008 (aload_2)) 
                                      (1009 (invokestatic (methodCP "access$200" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (1012 (ldc 35)) ;;STRING:: "clojure.lang.IPersistentMap map(Object[])"
                                      (1014 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (1017 (invokevirtual (methodCP "invokeStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (1020 (goto 1327)) ;;to TAG_1
                                      (1023 (aload_1)) ;;at TAG_29
                                      (1024 (instanceof (class "clojure.lang.IPersistentVector"))) 
                                      (1027 (ifeq 1051)) ;;to TAG_32
                                      (1030 (aload_0)) 
                                      (1031 (aload_1)) 
                                      (1032 (aload_2)) 
                                      (1033 (invokevirtual (methodCP "emitListAsObjectArray" "clojure.lang.Compiler$ObjExpr" ((class "java.lang.Object") (class "clojure.asm.commons.GeneratorAdapter")) void))) 
                                      (1036 (aload_2)) 
                                      (1037 (invokestatic (methodCP "access$200" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (1040 (ldc 36)) ;;STRING:: "clojure.lang.IPersistentVector vector(Object[])"
                                      (1042 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (1045 (invokevirtual (methodCP "invokeStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (1048 (goto 1327)) ;;to TAG_1
                                      (1051 (aload_1)) ;;at TAG_32
                                      (1052 (instanceof (class "clojure.lang.PersistentHashSet"))) 
                                      (1055 (ifeq 1115)) ;;to TAG_33
                                      (1058 (aload_1)) 
                                      (1059 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (1062 (astore 4)) 
                                      (1064 (aload 4)) 
                                      (1066 (ifnonnull 1090)) ;;to TAG_34
                                      (1069 (aload_2)) 
                                      (1070 (ldc_w )) 
                                      (1073 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (1076 (ldc 37)) ;;STRING:: "EMPTY"
                                      (1078 (ldc_w )) 
                                      (1081 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (1084 (invokevirtual (methodCP "getStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (1087 (goto 1112)) ;;to TAG_35
                                      (1090 (aload_0)) ;;at TAG_34
                                      (1091 (aload 4)) 
                                      (1093 (aload_2)) 
                                      (1094 (invokevirtual (methodCP "emitListAsObjectArray" "clojure.lang.Compiler$ObjExpr" ((class "java.lang.Object") (class "clojure.asm.commons.GeneratorAdapter")) void))) 
                                      (1097 (aload_2)) 
                                      (1098 (ldc_w )) 
                                      (1101 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (1104 (ldc 38)) ;;STRING:: "clojure.lang.PersistentHashSet create(Object[])"
                                      (1106 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (1109 (invokevirtual (methodCP "invokeStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (1112 (goto 1327)) ;;to TAG_1;;at TAG_35
                                      (1115 (aload_1)) ;;at TAG_33
                                      (1116 (instanceof (class "clojure.lang.ISeq"))) 
                                      (1119 (ifne 1129)) ;;to TAG_36
                                      (1122 (aload_1)) 
                                      (1123 (instanceof (class "clojure.lang.IPersistentList"))) 
                                      (1126 (ifeq 1168)) ;;to TAG_37
                                      (1129 (aload_0)) ;;at TAG_36
                                      (1130 (aload_1)) 
                                      (1131 (aload_2)) 
                                      (1132 (invokevirtual (methodCP "emitListAsObjectArray" "clojure.lang.Compiler$ObjExpr" ((class "java.lang.Object") (class "clojure.asm.commons.GeneratorAdapter")) void))) 
                                      (1135 (aload_2)) 
                                      (1136 (ldc_w )) 
                                      (1139 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (1142 (ldc 39)) ;;STRING:: "java.util.List asList(Object[])"
                                      (1144 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (1147 (invokevirtual (methodCP "invokeStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (1150 (aload_2)) 
                                      (1151 (ldc_w )) 
                                      (1154 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (1157 (ldc 40)) ;;STRING:: "clojure.lang.IPersistentList create(java.util.List)"
                                      (1159 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (1162 (invokevirtual (methodCP "invokeStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (1165 (goto 1327)) ;;to TAG_1
                                      (1168 (aload_1)) ;;at TAG_37
                                      (1169 (instanceof (class "java.util.regex.Pattern"))) 
                                      (1172 (ifeq 1203)) ;;to TAG_38
                                      (1175 (aload_0)) 
                                      (1176 (aload_1)) 
                                      (1177 (invokevirtual (methodCP "toString" "java.lang.Object" () (class "java.lang.String")))) 
                                      (1180 (aload_2)) 
                                      (1181 (invokevirtual (methodCP "emitValue" "clojure.lang.Compiler$ObjExpr" ((class "java.lang.Object") (class "clojure.asm.commons.GeneratorAdapter")) void))) 
                                      (1184 (aload_2)) 
                                      (1185 (ldc_w )) 
                                      (1188 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (1191 (ldc_w 41)) ;;STRING:: "java.util.regex.Pattern compile(String)"
                                      (1194 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (1197 (invokevirtual (methodCP "invokeStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (1200 (goto 1327)) ;;to TAG_1
                                      (1203 (aconst_null)) ;;at TAG_38
                                      (1204 (astore 4)) 
                                      (1206 (aload_1)) ;;at TAG_43
                                      (1207 (invokestatic (methodCP "printString" "clojure.lang.RT" ((class "java.lang.Object")) (class "java.lang.String")))) 
                                      (1210 (astore 4)) 
                                      (1212 (goto 1241)) ;;to TAG_39;;at TAG_44
                                      (1215 (astore 5)) ;;at TAG_45
                                      (1217 (new (class "java.lang.StringBuilder"))) 
                                      (1220 (dup)) 
                                      (1221 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (1224 (ldc_w 42)) ;;STRING:: "Can\nt embed object in code, maybe print-dup not defined: "
                                      (1227 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (1230 (aload_1)) 
                                      (1231 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (1234 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (1237 (invokestatic (methodCP "runtimeException" "clojure.lang.Util" ((class "java.lang.String")) (class "java.lang.RuntimeException")))) 
                                      (1240 (athrow)) 
                                      (1241 (aload 4)) ;;at TAG_39
                                      (1243 (invokevirtual (methodCP "length" "java.lang.String" () int))) 
                                      (1246 (ifne 1273)) ;;to TAG_40
                                      (1249 (new (class "java.lang.StringBuilder"))) 
                                      (1252 (dup)) 
                                      (1253 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (1256 (ldc_w 43)) ;;STRING:: "Can\nt embed unreadable object in code: "
                                      (1259 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (1262 (aload_1)) 
                                      (1263 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (1266 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (1269 (invokestatic (methodCP "runtimeException" "clojure.lang.Util" ((class "java.lang.String")) (class "java.lang.RuntimeException")))) 
                                      (1272 (athrow)) 
                                      (1273 (aload 4)) ;;at TAG_40
                                      (1275 (ldc_w 44)) ;;STRING:: "#<"
                                      (1278 (invokevirtual (methodCP "startsWith" "java.lang.String" ((class "java.lang.String")) boolean))) 
                                      (1281 (ifeq 1309)) ;;to TAG_41
                                      (1284 (new (class "java.lang.StringBuilder"))) 
                                      (1287 (dup)) 
                                      (1288 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (1291 (ldc_w 43)) ;;STRING:: "Can\nt embed unreadable object in code: "
                                      (1294 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (1297 (aload 4)) 
                                      (1299 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (1302 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (1305 (invokestatic (methodCP "runtimeException" "clojure.lang.Util" ((class "java.lang.String")) (class "java.lang.RuntimeException")))) 
                                      (1308 (athrow)) 
                                      (1309 (aload_2)) ;;at TAG_41
                                      (1310 (aload 4)) 
                                      (1312 (invokevirtual (methodCP "push" "clojure.asm.commons.GeneratorAdapter" ((class "java.lang.String")) void))) 
                                      (1315 (aload_2)) 
                                      (1316 (invokestatic (methodCP "access$200" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (1319 (getstatic (fieldCP "readStringMethod" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.commons.Method")))) 
                                      (1322 (invokevirtual (methodCP "invokeStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (1325 (iconst_0)) 
                                      (1326 (istore_3)) 
                                      (1327 (iload_3)) ;;at TAG_1
                                      (1328 (ifeq 1400)) ;;to TAG_42
                                      (1331 (aload_1)) 
                                      (1332 (instanceof (class "clojure.lang.IObj"))) 
                                      (1335 (ifeq 1400)) ;;to TAG_42
                                      (1338 (aload_1)) 
                                      (1339 (checkcast (class "clojure.lang.IObj"))) 
                                      (1342 (invokeinterface (methodCP "meta" "clojure.lang.IObj" () (class "clojure.lang.IPersistentMap")) 1)) 
                                      (1347 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (1350 (ifle 1400)) ;;to TAG_42
                                      (1353 (aload_2)) 
                                      (1354 (getstatic (fieldCP "IOBJ_TYPE" "clojure.lang.Compiler" (class "clojure.asm.Type")))) 
                                      (1357 (invokevirtual (methodCP "checkCast" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type")) void))) 
                                      (1360 (aload_1)) 
                                      (1361 (checkcast (class "clojure.lang.IObj"))) 
                                      (1364 (invokeinterface (methodCP "meta" "clojure.lang.IObj" () (class "clojure.lang.IPersistentMap")) 1)) 
                                      (1369 (astore 4)) 
                                      (1371 (aload_0)) 
                                      (1372 (aload 4)) 
                                      (1374 (invokestatic (methodCP "elideMeta" "clojure.lang.Compiler" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (1377 (aload_2)) 
                                      (1378 (invokevirtual (methodCP "emitValue" "clojure.lang.Compiler$ObjExpr" ((class "java.lang.Object") (class "clojure.asm.commons.GeneratorAdapter")) void))) 
                                      (1381 (aload_2)) 
                                      (1382 (getstatic (fieldCP "IPERSISTENTMAP_TYPE" "clojure.lang.Compiler" (class "clojure.asm.Type")))) 
                                      (1385 (invokevirtual (methodCP "checkCast" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type")) void))) 
                                      (1388 (aload_2)) 
                                      (1389 (getstatic (fieldCP "IOBJ_TYPE" "clojure.lang.Compiler" (class "clojure.asm.Type")))) 
                                      (1392 (ldc 16)) ;;STRING:: "clojure.lang.IObj withMeta(clojure.lang.IPersistentMap)"
                                      (1394 (invokestatic (methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method")))) 
                                      (1397 (invokevirtual (methodCP "invokeInterface" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (1400 (return)) ;;at TAG_42
                                      (endofcode 1401))
                                   (Exceptions 
                                     (handler 1206 1212  1215 (class "java.lang.Exception")))
                                   (StackMap )))
                        (method "emitConstants"
                              (parameters (class "clojure.asm.commons.GeneratorAdapter"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 5) (max_locals . 5) (code_length . 101)
                                   (parsedcode
                                      (0 (iconst_2)) ;;at TAG_4
                                      (1 (anewarray (class "java.lang.Object"))) 
                                      (4 (dup)) 
                                      (5 (iconst_0)) 
                                      (6 (getstatic (fieldCP "PRINT_DUP" "clojure.lang.RT" (class "clojure.lang.Var")))) 
                                      (9 (aastore)) 
                                      (10 (dup)) 
                                      (11 (iconst_1)) 
                                      (12 (getstatic (fieldCP "T" "clojure.lang.RT" (class "java.lang.Boolean")))) 
                                      (15 (aastore)) 
                                      (16 (invokestatic (methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (19 (invokestatic (methodCP "pushThreadBindings" "clojure.lang.Var" ((class "clojure.lang.Associative")) void))) 
                                      (22 (iconst_0)) 
                                      (23 (istore_2)) 
                                      (24 (iload_2)) ;;at TAG_1
                                      (25 (aload_0)) 
                                      (26 (getfield (fieldCP "constants" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.PersistentVector")))) 
                                      (29 (invokevirtual (methodCP "count" "clojure.lang.PersistentVector" () int))) 
                                      (32 (if_icmpge 81)) ;;to TAG_0
                                      (35 (aload_0)) 
                                      (36 (aload_0)) 
                                      (37 (getfield (fieldCP "constants" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.PersistentVector")))) 
                                      (40 (iload_2)) 
                                      (41 (invokevirtual (methodCP "nth" "clojure.lang.PersistentVector" (int) (class "java.lang.Object")))) 
                                      (44 (aload_1)) 
                                      (45 (invokevirtual (methodCP "emitValue" "clojure.lang.Compiler$ObjExpr" ((class "java.lang.Object") (class "clojure.asm.commons.GeneratorAdapter")) void))) 
                                      (48 (aload_1)) 
                                      (49 (aload_0)) 
                                      (50 (iload_2)) 
                                      (51 (invokevirtual (methodCP "constantType" "clojure.lang.Compiler$ObjExpr" (int) (class "clojure.asm.Type")))) 
                                      (54 (invokevirtual (methodCP "checkCast" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type")) void))) 
                                      (57 (aload_1)) 
                                      (58 (aload_0)) 
                                      (59 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (62 (aload_0)) 
                                      (63 (iload_2)) 
                                      (64 (invokevirtual (methodCP "constantName" "clojure.lang.Compiler$ObjExpr" (int) (class "java.lang.String")))) 
                                      (67 (aload_0)) 
                                      (68 (iload_2)) 
                                      (69 (invokevirtual (methodCP "constantType" "clojure.lang.Compiler$ObjExpr" (int) (class "clojure.asm.Type")))) 
                                      (72 (invokevirtual (methodCP "putStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (75 (iinc 2 1)) 
                                      (78 (goto 24)) ;;to TAG_1
                                      (81 (jsr 93))  ;;to TAG_2;;at TAG_0
                                      (84 (goto 100)) ;;to TAG_3;;at TAG_5
                                      (87 (astore_3)) ;;at TAG_6
                                      (88 (jsr 93))  ;;to TAG_2
                                      (91 (aload_3)) ;;at TAG_7
                                      (92 (athrow)) 
                                      (93 (astore 4)) ;;at TAG_2
                                      (95 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) 
                                      (98 (ret 4)) 
                                      (100 (return)) ;;at TAG_3
                                      (endofcode 101))
                                   (Exceptions 
                                     (handler 0 84  87 (class "java.lang.Throwable"))
                                     (handler 87 91  87 (class "java.lang.Throwable")))
                                   (StackMap )))
                        (method "isMutable"
                              (parameters (class "clojure.lang.Compiler$LocalBinding"))
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 53)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (aload_1)) 
                                      (2 (invokevirtual (methodCP "isVolatile" "clojure.lang.Compiler$ObjExpr" ((class "clojure.lang.Compiler$LocalBinding")) boolean))) 
                                      (5 (ifne 47)) ;;to TAG_0
                                      (8 (aload_0)) 
                                      (9 (getfield (fieldCP "fields" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (12 (aload_1)) 
                                      (13 (getfield (fieldCP "sym" "clojure.lang.Compiler$LocalBinding" (class "clojure.lang.Symbol")))) 
                                      (16 (invokestatic (methodCP "contains" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (19 (invokestatic (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean))) 
                                      (22 (ifeq 51)) ;;to TAG_1
                                      (25 (aload_1)) 
                                      (26 (getfield (fieldCP "sym" "clojure.lang.Compiler$LocalBinding" (class "clojure.lang.Symbol")))) 
                                      (29 (invokevirtual (methodCP "meta" "clojure.lang.Symbol" () (class "clojure.lang.IPersistentMap")))) 
                                      (32 (ldc_w 45)) ;;STRING:: "unsynchronized-mutable"
                                      (35 (invokestatic (methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String")) (class "clojure.lang.Keyword")))) 
                                      (38 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (41 (invokestatic (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean))) 
                                      (44 (ifeq 51)) ;;to TAG_1
                                      (47 (iconst_1)) ;;at TAG_0
                                      (48 (goto 52))  ;;to TAG_2
                                      (51 (iconst_0)) ;;at TAG_1
                                      (52 (ireturn)) ;;at TAG_2
                                      (endofcode 53))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isVolatile"
                              (parameters (class "clojure.lang.Compiler$LocalBinding"))
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 45)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "fields" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (4 (aload_1)) 
                                      (5 (getfield (fieldCP "sym" "clojure.lang.Compiler$LocalBinding" (class "clojure.lang.Symbol")))) 
                                      (8 (invokestatic (methodCP "contains" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (11 (invokestatic (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean))) 
                                      (14 (ifeq 43))  ;;to TAG_0
                                      (17 (aload_1)) 
                                      (18 (getfield (fieldCP "sym" "clojure.lang.Compiler$LocalBinding" (class "clojure.lang.Symbol")))) 
                                      (21 (invokevirtual (methodCP "meta" "clojure.lang.Symbol" () (class "clojure.lang.IPersistentMap")))) 
                                      (24 (ldc_w 46)) ;;STRING:: "volatile-mutable"
                                      (27 (invokestatic (methodCP "intern" "clojure.lang.Keyword" ((class "java.lang.String")) (class "clojure.lang.Keyword")))) 
                                      (30 (invokestatic (methodCP "get" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (33 (invokestatic (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean))) 
                                      (36 (ifeq 43))  ;;to TAG_0
                                      (39 (iconst_1)) 
                                      (40 (goto 44)) ;;to TAG_1
                                      (43 (iconst_0)) ;;at TAG_0
                                      (44 (ireturn)) ;;at TAG_1
                                      (endofcode 45))
                                   (Exceptions )
                                   (StackMap )))
                        (method "isDeftype"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "fields" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (4 (ifnull 11))  ;;to TAG_0
                                      (7 (iconst_1)) 
                                      (8 (goto 12)) ;;to TAG_1
                                      (11 (iconst_0)) ;;at TAG_0
                                      (12 (ireturn)) ;;at TAG_1
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "supportsMeta"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "isDeftype" "clojure.lang.Compiler$ObjExpr" () boolean))) 
                                      (4 (ifne 11))  ;;to TAG_0
                                      (7 (iconst_1)) 
                                      (8 (goto 12)) ;;to TAG_1
                                      (11 (iconst_0)) ;;at TAG_0
                                      (12 (ireturn)) ;;at TAG_1
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emitClearCloses"
                              (parameters (class "clojure.asm.commons.GeneratorAdapter"))
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 0) (max_locals . 2) (code_length . 1)
                                   (parsedcode
                                      (0 (return))
                                      (endofcode 1))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getCompiledClass"
                              (parameters )
                              (returntype . (class "java.lang.Class"))
                              (accessflags  *class*  *super*  *synchronized* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 57)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "compiledClass" "clojure.lang.Compiler$ObjExpr" (class "java.lang.Class")))) 
                                      (4 (ifnonnull 52)) ;;to TAG_0
                                      (7 (aload_0)) ;;at TAG_1
                                      (8 (getstatic (fieldCP "LOADER" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (11 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (14 (checkcast (class "clojure.lang.DynamicClassLoader"))) 
                                      (17 (putfield (fieldCP "loader" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.DynamicClassLoader")))) 
                                      (20 (aload_0)) 
                                      (21 (aload_0)) 
                                      (22 (getfield (fieldCP "loader" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.DynamicClassLoader")))) 
                                      (25 (aload_0)) 
                                      (26 (getfield (fieldCP "name" "clojure.lang.Compiler$ObjExpr" (class "java.lang.String")))) 
                                      (29 (aload_0)) 
                                      (30 (getfield (fieldCP "bytecode" "clojure.lang.Compiler$ObjExpr" (array byte)))) 
                                      (33 (aload_0)) 
                                      (34 (getfield (fieldCP "src" "clojure.lang.Compiler$ObjExpr" (class "java.lang.Object")))) 
                                      (37 (invokevirtual (methodCP "defineClass" "clojure.lang.DynamicClassLoader" ((class "java.lang.String") (array byte) (class "java.lang.Object")) (class "java.lang.Class")))) 
                                      (40 (putfield (fieldCP "compiledClass" "clojure.lang.Compiler$ObjExpr" (class "java.lang.Class")))) 
                                      (43 (goto 52)) ;;to TAG_0;;at TAG_2
                                      (46 (astore_1)) ;;at TAG_3
                                      (47 (aload_1)) 
                                      (48 (invokestatic (methodCP "sneakyThrow" "clojure.lang.Util" ((class "java.lang.Throwable")) (class "java.lang.RuntimeException")))) 
                                      (51 (athrow)) 
                                      (52 (aload_0)) ;;at TAG_0
                                      (53 (getfield (fieldCP "compiledClass" "clojure.lang.Compiler$ObjExpr" (class "java.lang.Class")))) 
                                      (56 (areturn)) 
                                      (endofcode 57))
                                   (Exceptions 
                                     (handler 7 43  46 (class "java.lang.Exception")))
                                   (StackMap )))
                        (method "eval"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 2) (code_length . 23)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "isDeftype" "clojure.lang.Compiler$ObjExpr" () boolean))) 
                                      (4 (ifeq 9)) ;;to TAG_0
                                      (7 (aconst_null)) 
                                      (8 (areturn)) 
                                      (9 (aload_0)) ;;at TAG_0
                                      (10 (invokevirtual (methodCP "getCompiledClass" "clojure.lang.Compiler$ObjExpr" () (class "java.lang.Class")))) 
                                      (13 (invokevirtual (methodCP "newInstance" "java.lang.Class" () (class "java.lang.Object")))) 
                                      (16 (areturn)) ;;at TAG_1
                                      (17 (astore_1)) ;;at TAG_2
                                      (18 (aload_1)) 
                                      (19 (invokestatic (methodCP "sneakyThrow" "clojure.lang.Util" ((class "java.lang.Throwable")) (class "java.lang.RuntimeException")))) 
                                      (22 (athrow)) 
                                      (endofcode 23))
                                   (Exceptions 
                                     (handler 9 16  17 (class "java.lang.Exception")))
                                   (StackMap )))
                        (method "emitLetFnInits"
                              (parameters (class "clojure.asm.commons.GeneratorAdapter") (class "clojure.lang.Compiler$ObjExpr") (class "clojure.lang.IPersistentSet"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 7) (code_length . 130)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (aload_0)) 
                                      (2 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (5 (invokevirtual (methodCP "checkCast" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type")) void))) 
                                      (8 (aload_0)) 
                                      (9 (getfield (fieldCP "closes" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (12 (invokestatic (methodCP "keys" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (15 (astore 4)) 
                                      (17 (aload 4)) ;;at TAG_3
                                      (19 (ifnull 125)) ;;to TAG_0
                                      (22 (aload 4)) 
                                      (24 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (29 (checkcast (class "clojure.lang.Compiler$LocalBinding"))) 
                                      (32 (astore 5)) 
                                      (34 (aload_3)) 
                                      (35 (aload 5)) 
                                      (37 (invokeinterface (methodCP "contains" "clojure.lang.IPersistentSet" ((class "java.lang.Object")) boolean) 2)) 
                                      (42 (ifeq 113)) ;;to TAG_1
                                      (45 (aload 5)) 
                                      (47 (invokevirtual (methodCP "getPrimitiveType" "clojure.lang.Compiler$LocalBinding" () (class "java.lang.Class")))) 
                                      (50 (astore 6)) 
                                      (52 (aload_1)) 
                                      (53 (invokevirtual (methodCP "dup" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (56 (aload 6)) 
                                      (58 (ifnull 89))  ;;to TAG_2
                                      (61 (aload_2)) 
                                      (62 (aload_1)) 
                                      (63 (aload 5)) 
                                      (65 (invokespecial (methodCP "emitUnboxedLocal" "clojure.lang.Compiler$ObjExpr" ((class "clojure.asm.commons.GeneratorAdapter") (class "clojure.lang.Compiler$LocalBinding")) void))) 
                                      (68 (aload_1)) 
                                      (69 (aload_0)) 
                                      (70 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (73 (aload 5)) 
                                      (75 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (78 (aload 6)) 
                                      (80 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (83 (invokevirtual (methodCP "putField" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (86 (goto 113)) ;;to TAG_1
                                      (89 (aload_2)) ;;at TAG_2
                                      (90 (aload_1)) 
                                      (91 (aload 5)) 
                                      (93 (iconst_0)) 
                                      (94 (invokespecial (methodCP "emitLocal" "clojure.lang.Compiler$ObjExpr" ((class "clojure.asm.commons.GeneratorAdapter") (class "clojure.lang.Compiler$LocalBinding") boolean) void))) 
                                      (97 (aload_1)) 
                                      (98 (aload_0)) 
                                      (99 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (102 (aload 5)) 
                                      (104 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (107 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (110 (invokevirtual (methodCP "putField" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (113 (aload 4)) ;;at TAG_1
                                      (115 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (120 (astore 4)) 
                                      (122 (goto 17)) ;;to TAG_3
                                      (125 (aload_1)) ;;at TAG_0
                                      (126 (invokevirtual (methodCP "pop" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (129 (return)) 
                                      (endofcode 130))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emit"
                              (parameters (class "clojure.lang.Compiler$C") (class "clojure.lang.Compiler$ObjExpr") (class "clojure.asm.commons.GeneratorAdapter"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 7) (code_length . 150)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (invokevirtual (methodCP "isDeftype" "clojure.lang.Compiler$ObjExpr" () boolean))) 
                                      (4 (ifeq 15)) ;;to TAG_0
                                      (7 (aload_3)) 
                                      (8 (iconst_1)) 
                                      (9 (invokevirtual (methodCP "visitInsn" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (12 (goto 138)) ;;to TAG_1
                                      (15 (aload_3)) ;;at TAG_0
                                      (16 (aload_0)) 
                                      (17 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (20 (invokevirtual (methodCP "newInstance" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type")) void))) 
                                      (23 (aload_3)) 
                                      (24 (invokevirtual (methodCP "dup" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (27 (aload_0)) 
                                      (28 (invokevirtual (methodCP "supportsMeta" "clojure.lang.Compiler$ObjExpr" () boolean))) 
                                      (31 (ifeq 39))  ;;to TAG_2
                                      (34 (aload_3)) 
                                      (35 (iconst_1)) 
                                      (36 (invokevirtual (methodCP "visitInsn" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (39 (aload_0)) ;;at TAG_2
                                      (40 (getfield (fieldCP "closesExprs" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentVector")))) 
                                      (43 (invokestatic (methodCP "seq" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (46 (astore 4)) 
                                      (48 (aload 4)) ;;at TAG_6
                                      (50 (ifnull 114)) ;;to TAG_3
                                      (53 (aload 4)) 
                                      (55 (invokeinterface (methodCP "first" "clojure.lang.ISeq" () (class "java.lang.Object")) 1)) 
                                      (60 (checkcast (class "clojure.lang.Compiler$LocalBindingExpr"))) 
                                      (63 (astore 5)) 
                                      (65 (aload 5)) 
                                      (67 (getfield (fieldCP "b" "clojure.lang.Compiler$LocalBindingExpr" (class "clojure.lang.Compiler$LocalBinding")))) 
                                      (70 (astore 6)) 
                                      (72 (aload 6)) 
                                      (74 (invokevirtual (methodCP "getPrimitiveType" "clojure.lang.Compiler$LocalBinding" () (class "java.lang.Class")))) 
                                      (77 (ifnull 90)) ;;to TAG_4
                                      (80 (aload_2)) 
                                      (81 (aload_3)) 
                                      (82 (aload 6)) 
                                      (84 (invokespecial (methodCP "emitUnboxedLocal" "clojure.lang.Compiler$ObjExpr" ((class "clojure.asm.commons.GeneratorAdapter") (class "clojure.lang.Compiler$LocalBinding")) void))) 
                                      (87 (goto 102)) ;;to TAG_5
                                      (90 (aload_2)) ;;at TAG_4
                                      (91 (aload_3)) 
                                      (92 (aload 6)) 
                                      (94 (aload 5)) 
                                      (96 (getfield (fieldCP "shouldClear" "clojure.lang.Compiler$LocalBindingExpr" boolean))) 
                                      (99 (invokespecial (methodCP "emitLocal" "clojure.lang.Compiler$ObjExpr" ((class "clojure.asm.commons.GeneratorAdapter") (class "clojure.lang.Compiler$LocalBinding") boolean) void))) 
                                      (102 (aload 4)) ;;at TAG_5
                                      (104 (invokeinterface (methodCP "next" "clojure.lang.ISeq" () (class "clojure.lang.ISeq")) 1)) 
                                      (109 (astore 4)) 
                                      (111 (goto 48)) ;;to TAG_6
                                      (114 (aload_3)) ;;at TAG_3
                                      (115 (aload_0)) 
                                      (116 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (119 (new (class "clojure.asm.commons.Method"))) 
                                      (122 (dup)) 
                                      (123 (ldc 14)) ;;STRING:: "<init>"
                                      (125 (getstatic (fieldCP "VOID_TYPE" "clojure.asm.Type" (class "clojure.asm.Type")))) 
                                      (128 (aload_0)) 
                                      (129 (invokevirtual (methodCP "ctorTypes" "clojure.lang.Compiler$ObjExpr" () (array (class "clojure.asm.Type"))))) 
                                      (132 (invokespecial (methodCP "<init>" "clojure.asm.commons.Method" ((class "java.lang.String") (class "clojure.asm.Type") (array (class "clojure.asm.Type"))) void))) 
                                      (135 (invokevirtual (methodCP "invokeConstructor" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (138 (aload_1)) ;;at TAG_1
                                      (139 (getstatic (fieldCP "STATEMENT" "clojure.lang.Compiler$C" (class "clojure.lang.Compiler$C")))) 
                                      (142 (if_acmpne 149)) ;;to TAG_7
                                      (145 (aload_3)) 
                                      (146 (invokevirtual (methodCP "pop" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (149 (return)) ;;at TAG_7
                                      (endofcode 150))
                                   (Exceptions )
                                   (StackMap )))
                        (method "hasJavaClass"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iconst_1))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getJavaClass"
                              (parameters )
                              (returntype . (class "java.lang.Class"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 35)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "compiledClass" "clojure.lang.Compiler$ObjExpr" (class "java.lang.Class")))) 
                                      (4 (ifnull 14)) ;;to TAG_0
                                      (7 (aload_0)) 
                                      (8 (getfield (fieldCP "compiledClass" "clojure.lang.Compiler$ObjExpr" (class "java.lang.Class")))) 
                                      (11 (goto 34)) ;;to TAG_1
                                      (14 (aload_0)) ;;at TAG_0
                                      (15 (getfield (fieldCP "tag" "clojure.lang.Compiler$ObjExpr" (class "java.lang.Object")))) 
                                      (18 (ifnull 31))  ;;to TAG_2
                                      (21 (aload_0)) 
                                      (22 (getfield (fieldCP "tag" "clojure.lang.Compiler$ObjExpr" (class "java.lang.Object")))) 
                                      (25 (invokestatic (methodCP "tagToClass" "clojure.lang.Compiler$HostExpr" ((class "java.lang.Object")) (class "java.lang.Class")))) 
                                      (28 (goto 34)) ;;to TAG_1
                                      (31 (ldc_w )) ;;at TAG_2
                                      (34 (areturn)) ;;at TAG_1
                                      (endofcode 35))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emitAssignLocal"
                              (parameters (class "clojure.asm.commons.GeneratorAdapter") (class "clojure.lang.Compiler$LocalBinding") (class "clojure.lang.Compiler$Expr"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 6) (code_length . 169)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (aload_2)) 
                                      (2 (invokevirtual (methodCP "isMutable" "clojure.lang.Compiler$ObjExpr" ((class "clojure.lang.Compiler$LocalBinding")) boolean))) 
                                      (5 (ifne 39)) ;;to TAG_0
                                      (8 (new (class "java.lang.IllegalArgumentException"))) 
                                      (11 (dup)) 
                                      (12 (new (class "java.lang.StringBuilder"))) 
                                      (15 (dup)) 
                                      (16 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (19 (ldc_w 47)) ;;STRING:: "Cannot assign to non-mutable: "
                                      (22 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (25 (aload_2)) 
                                      (26 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (29 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (32 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (35 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (38 (athrow)) 
                                      (39 (aload_2)) ;;at TAG_0
                                      (40 (invokevirtual (methodCP "getPrimitiveType" "clojure.lang.Compiler$LocalBinding" () (class "java.lang.Class")))) 
                                      (43 (astore 4)) 
                                      (45 (aload_1)) 
                                      (46 (invokevirtual (methodCP "loadThis" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (49 (aload 4)) 
                                      (51 (ifnull 142)) ;;to TAG_1
                                      (54 (aload_3)) 
                                      (55 (instanceof (class "clojure.lang.Compiler$MaybePrimitiveExpr"))) 
                                      (58 (ifeq 73))  ;;to TAG_2
                                      (61 (aload_3)) 
                                      (62 (checkcast (class "clojure.lang.Compiler$MaybePrimitiveExpr"))) 
                                      (65 (invokeinterface (methodCP "canEmitPrimitive" "clojure.lang.Compiler$MaybePrimitiveExpr" () boolean) 1)) 
                                      (70 (ifne 104)) ;;to TAG_3
                                      (73 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_2
                                      (76 (dup)) 
                                      (77 (new (class "java.lang.StringBuilder"))) 
                                      (80 (dup)) 
                                      (81 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (84 (ldc_w 48)) ;;STRING:: "Must assign primitive to primitive mutable: "
                                      (87 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (90 (aload_2)) 
                                      (91 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (94 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (97 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (100 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (103 (athrow)) 
                                      (104 (aload_3)) ;;at TAG_3
                                      (105 (checkcast (class "clojure.lang.Compiler$MaybePrimitiveExpr"))) 
                                      (108 (astore 5)) 
                                      (110 (aload 5)) 
                                      (112 (getstatic (fieldCP "EXPRESSION" "clojure.lang.Compiler$C" (class "clojure.lang.Compiler$C")))) 
                                      (115 (aload_0)) 
                                      (116 (aload_1)) 
                                      (117 (invokeinterface (methodCP "emitUnboxed" "clojure.lang.Compiler$MaybePrimitiveExpr" ((class "clojure.lang.Compiler$C") (class "clojure.lang.Compiler$ObjExpr") (class "clojure.asm.commons.GeneratorAdapter")) void) 4)) 
                                      (122 (aload_1)) 
                                      (123 (aload_0)) 
                                      (124 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (127 (aload_2)) 
                                      (128 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (131 (aload 4)) 
                                      (133 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (136 (invokevirtual (methodCP "putField" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (139 (goto 168)) ;;to TAG_4
                                      (142 (aload_3)) ;;at TAG_1
                                      (143 (getstatic (fieldCP "EXPRESSION" "clojure.lang.Compiler$C" (class "clojure.lang.Compiler$C")))) 
                                      (146 (aload_0)) 
                                      (147 (aload_1)) 
                                      (148 (invokeinterface (methodCP "emit" "clojure.lang.Compiler$Expr" ((class "clojure.lang.Compiler$C") (class "clojure.lang.Compiler$ObjExpr") (class "clojure.asm.commons.GeneratorAdapter")) void) 4)) 
                                      (153 (aload_1)) 
                                      (154 (aload_0)) 
                                      (155 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (158 (aload_2)) 
                                      (159 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (162 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (165 (invokevirtual (methodCP "putField" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (168 (return)) ;;at TAG_4
                                      (endofcode 169))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emitLocal"
                              (parameters (class "clojure.asm.commons.GeneratorAdapter") (class "clojure.lang.Compiler$LocalBinding") boolean)
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 4) (max_locals . 6) (code_length . 280)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "closes" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (4 (aload_2)) 
                                      (5 (invokeinterface (methodCP "containsKey" "clojure.lang.IPersistentMap" ((class "java.lang.Object")) boolean) 2)) 
                                      (10 (ifeq 115)) ;;to TAG_0
                                      (13 (aload_2)) 
                                      (14 (invokevirtual (methodCP "getPrimitiveType" "clojure.lang.Compiler$LocalBinding" () (class "java.lang.Class")))) 
                                      (17 (astore 4)) 
                                      (19 (aload_1)) 
                                      (20 (invokevirtual (methodCP "loadThis" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (23 (aload 4)) 
                                      (25 (ifnull 55))  ;;to TAG_1
                                      (28 (aload_1)) 
                                      (29 (aload_0)) 
                                      (30 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (33 (aload_2)) 
                                      (34 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (37 (aload 4)) 
                                      (39 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (42 (invokevirtual (methodCP "getField" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (45 (aload_0)) 
                                      (46 (aload_1)) 
                                      (47 (aload 4)) 
                                      (49 (invokestatic (methodCP "emitBoxReturn" "clojure.lang.Compiler$HostExpr" ((class "clojure.lang.Compiler$ObjExpr") (class "clojure.asm.commons.GeneratorAdapter") (class "java.lang.Class")) void))) 
                                      (52 (goto 112)) ;;to TAG_2
                                      (55 (aload_1)) ;;at TAG_1
                                      (56 (aload_0)) 
                                      (57 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (60 (aload_2)) 
                                      (61 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (64 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (67 (invokevirtual (methodCP "getField" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (70 (aload_0)) 
                                      (71 (getfield (fieldCP "onceOnly" "clojure.lang.Compiler$ObjExpr" boolean))) 
                                      (74 (ifeq 112)) ;;to TAG_2
                                      (77 (iload_3)) 
                                      (78 (ifeq 112)) ;;to TAG_2
                                      (81 (aload_2)) 
                                      (82 (getfield (fieldCP "canBeCleared" "clojure.lang.Compiler$LocalBinding" boolean))) 
                                      (85 (ifeq 112)) ;;to TAG_2
                                      (88 (aload_1)) 
                                      (89 (invokevirtual (methodCP "loadThis" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (92 (aload_1)) 
                                      (93 (iconst_1)) 
                                      (94 (invokevirtual (methodCP "visitInsn" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (97 (aload_1)) 
                                      (98 (aload_0)) 
                                      (99 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (102 (aload_2)) 
                                      (103 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (106 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (109 (invokevirtual (methodCP "putField" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (112 (goto 279)) ;;to TAG_3;;at TAG_2
                                      (115 (aload_0)) ;;at TAG_0
                                      (116 (getfield (fieldCP "isStatic" "clojure.lang.Compiler$ObjExpr" boolean))) 
                                      (119 (ifeq 126)) ;;to TAG_4
                                      (122 (iconst_0)) 
                                      (123 (goto 127)) ;;to TAG_5
                                      (126 (iconst_1)) ;;at TAG_4
                                      (127 (istore 4)) ;;at TAG_5
                                      (129 (aload_2)) 
                                      (130 (invokevirtual (methodCP "getPrimitiveType" "clojure.lang.Compiler$LocalBinding" () (class "java.lang.Class")))) 
                                      (133 (astore 5)) 
                                      (135 (aload_2)) 
                                      (136 (getfield (fieldCP "isArg" "clojure.lang.Compiler$LocalBinding" boolean))) 
                                      (139 (ifeq 198)) ;;to TAG_6
                                      (142 (aload_1)) 
                                      (143 (aload_2)) 
                                      (144 (getfield (fieldCP "idx" "clojure.lang.Compiler$LocalBinding" int))) 
                                      (147 (iload 4)) 
                                      (149 (isub)) 
                                      (150 (invokevirtual (methodCP "loadArg" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (153 (aload 5)) 
                                      (155 (ifnull 168)) ;;to TAG_7
                                      (158 (aload_0)) 
                                      (159 (aload_1)) 
                                      (160 (aload 5)) 
                                      (162 (invokestatic (methodCP "emitBoxReturn" "clojure.lang.Compiler$HostExpr" ((class "clojure.lang.Compiler$ObjExpr") (class "clojure.asm.commons.GeneratorAdapter") (class "java.lang.Class")) void))) 
                                      (165 (goto 279)) ;;to TAG_3
                                      (168 (iload_3)) ;;at TAG_7
                                      (169 (ifeq 279)) ;;to TAG_3
                                      (172 (aload_2)) 
                                      (173 (getfield (fieldCP "canBeCleared" "clojure.lang.Compiler$LocalBinding" boolean))) 
                                      (176 (ifeq 279)) ;;to TAG_3
                                      (179 (aload_1)) 
                                      (180 (iconst_1)) 
                                      (181 (invokevirtual (methodCP "visitInsn" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (184 (aload_1)) 
                                      (185 (aload_2)) 
                                      (186 (getfield (fieldCP "idx" "clojure.lang.Compiler$LocalBinding" int))) 
                                      (189 (iload 4)) 
                                      (191 (isub)) 
                                      (192 (invokevirtual (methodCP "storeArg" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (195 (goto 279)) ;;to TAG_3
                                      (198 (aload 5)) ;;at TAG_6
                                      (200 (ifnull 231)) ;;to TAG_8
                                      (203 (aload_1)) 
                                      (204 (aload 5)) 
                                      (206 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (209 (bipush 21)) 
                                      (211 (invokevirtual (methodCP "getOpcode" "clojure.asm.Type" (int) int))) 
                                      (214 (aload_2)) 
                                      (215 (getfield (fieldCP "idx" "clojure.lang.Compiler$LocalBinding" int))) 
                                      (218 (invokevirtual (methodCP "visitVarInsn" "clojure.asm.commons.GeneratorAdapter" (int int) void))) 
                                      (221 (aload_0)) 
                                      (222 (aload_1)) 
                                      (223 (aload 5)) 
                                      (225 (invokestatic (methodCP "emitBoxReturn" "clojure.lang.Compiler$HostExpr" ((class "clojure.lang.Compiler$ObjExpr") (class "clojure.asm.commons.GeneratorAdapter") (class "java.lang.Class")) void))) 
                                      (228 (goto 279)) ;;to TAG_3
                                      (231 (aload_1)) ;;at TAG_8
                                      (232 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (235 (bipush 21)) 
                                      (237 (invokevirtual (methodCP "getOpcode" "clojure.asm.Type" (int) int))) 
                                      (240 (aload_2)) 
                                      (241 (getfield (fieldCP "idx" "clojure.lang.Compiler$LocalBinding" int))) 
                                      (244 (invokevirtual (methodCP "visitVarInsn" "clojure.asm.commons.GeneratorAdapter" (int int) void))) 
                                      (247 (iload_3)) 
                                      (248 (ifeq 279)) ;;to TAG_3
                                      (251 (aload_2)) 
                                      (252 (getfield (fieldCP "canBeCleared" "clojure.lang.Compiler$LocalBinding" boolean))) 
                                      (255 (ifeq 279)) ;;to TAG_3
                                      (258 (aload_1)) 
                                      (259 (iconst_1)) 
                                      (260 (invokevirtual (methodCP "visitInsn" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (263 (aload_1)) 
                                      (264 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (267 (bipush 54)) 
                                      (269 (invokevirtual (methodCP "getOpcode" "clojure.asm.Type" (int) int))) 
                                      (272 (aload_2)) 
                                      (273 (getfield (fieldCP "idx" "clojure.lang.Compiler$LocalBinding" int))) 
                                      (276 (invokevirtual (methodCP "visitVarInsn" "clojure.asm.commons.GeneratorAdapter" (int int) void))) 
                                      (279 (return)) ;;at TAG_3
                                      (endofcode 280))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emitUnboxedLocal"
                              (parameters (class "clojure.asm.commons.GeneratorAdapter") (class "clojure.lang.Compiler$LocalBinding"))
                              (returntype . void)
                              (accessflags  *class*  *private* )
                              (code
                                   (max_stack . 4) (max_locals . 5) (code_length . 95)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "isStatic" "clojure.lang.Compiler$ObjExpr" boolean))) 
                                      (4 (ifeq 11)) ;;to TAG_0
                                      (7 (iconst_0)) 
                                      (8 (goto 12)) ;;to TAG_1
                                      (11 (iconst_1)) ;;at TAG_0
                                      (12 (istore_3)) ;;at TAG_1
                                      (13 (aload_2)) 
                                      (14 (invokevirtual (methodCP "getPrimitiveType" "clojure.lang.Compiler$LocalBinding" () (class "java.lang.Class")))) 
                                      (17 (astore 4)) 
                                      (19 (aload_0)) 
                                      (20 (getfield (fieldCP "closes" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (23 (aload_2)) 
                                      (24 (invokeinterface (methodCP "containsKey" "clojure.lang.IPersistentMap" ((class "java.lang.Object")) boolean) 2)) 
                                      (29 (ifeq 56))  ;;to TAG_2
                                      (32 (aload_1)) 
                                      (33 (invokevirtual (methodCP "loadThis" "clojure.asm.commons.GeneratorAdapter" () void))) 
                                      (36 (aload_1)) 
                                      (37 (aload_0)) 
                                      (38 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type")))) 
                                      (41 (aload_2)) 
                                      (42 (getfield (fieldCP "name" "clojure.lang.Compiler$LocalBinding" (class "java.lang.String")))) 
                                      (45 (aload 4)) 
                                      (47 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (50 (invokevirtual (methodCP "getField" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void))) 
                                      (53 (goto 94)) ;;to TAG_3
                                      (56 (aload_2)) ;;at TAG_2
                                      (57 (getfield (fieldCP "isArg" "clojure.lang.Compiler$LocalBinding" boolean))) 
                                      (60 (ifeq 76)) ;;to TAG_4
                                      (63 (aload_1)) 
                                      (64 (aload_2)) 
                                      (65 (getfield (fieldCP "idx" "clojure.lang.Compiler$LocalBinding" int))) 
                                      (68 (iload_3)) 
                                      (69 (isub)) 
                                      (70 (invokevirtual (methodCP "loadArg" "clojure.asm.commons.GeneratorAdapter" (int) void))) 
                                      (73 (goto 94)) ;;to TAG_3
                                      (76 (aload_1)) ;;at TAG_4
                                      (77 (aload 4)) 
                                      (79 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (82 (bipush 21)) 
                                      (84 (invokevirtual (methodCP "getOpcode" "clojure.asm.Type" (int) int))) 
                                      (87 (aload_2)) 
                                      (88 (getfield (fieldCP "idx" "clojure.lang.Compiler$LocalBinding" int))) 
                                      (91 (invokevirtual (methodCP "visitVarInsn" "clojure.asm.commons.GeneratorAdapter" (int int) void))) 
                                      (94 (return)) ;;at TAG_3
                                      (endofcode 95))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emitVar"
                              (parameters (class "clojure.asm.commons.GeneratorAdapter") (class "clojure.lang.Var"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 24)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "vars" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap"))))
                                      (4 (aload_2))
                                      (5 (invokeinterface
					(methodCP "valAt" "clojure.lang.IPersistentMap" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (10 (checkcast (class "java.lang.Integer")))
                                      (13 (astore_3))
                                      (14 (aload_0))
                                      (15 (aload_1))
                                      (16 (aload_3))
                                      (17 (invokevirtual
					(methodCP "intValue" "java.lang.Integer" () int)))
                                      (20 (invokevirtual
					(methodCP "emitConstant" "clojure.lang.Compiler$ObjExpr" ((class "clojure.asm.commons.GeneratorAdapter") int) void)))
                                      (23 (return))
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emitVarValue"
                              (parameters (class "clojure.asm.commons.GeneratorAdapter") (class "clojure.lang.Var"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 63)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "vars" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap")))) 
                                      (4 (aload_2)) 
                                      (5 (invokeinterface (methodCP "valAt" "clojure.lang.IPersistentMap" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (10 (checkcast (class "java.lang.Integer"))) 
                                      (13 (astore_3)) 
                                      (14 (aload_2)) 
                                      (15 (invokevirtual (methodCP "isDynamic" "clojure.lang.Var" () boolean))) 
                                      (18 (ifne 43))  ;;to TAG_0
                                      (21 (aload_0)) 
                                      (22 (aload_1)) 
                                      (23 (aload_3)) 
                                      (24 (invokevirtual (methodCP "intValue" "java.lang.Integer" () int))) 
                                      (27 (invokevirtual (methodCP "emitConstant" "clojure.lang.Compiler$ObjExpr" ((class "clojure.asm.commons.GeneratorAdapter") int) void))) 
                                      (30 (aload_1)) 
                                      (31 (invokestatic (methodCP "access$000" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (34 (getstatic (fieldCP "varGetRawMethod" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.commons.Method")))) 
                                      (37 (invokevirtual (methodCP "invokeVirtual" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (40 (goto 62)) ;;to TAG_1
                                      (43 (aload_0)) ;;at TAG_0
                                      (44 (aload_1)) 
                                      (45 (aload_3)) 
                                      (46 (invokevirtual (methodCP "intValue" "java.lang.Integer" () int))) 
                                      (49 (invokevirtual (methodCP "emitConstant" "clojure.lang.Compiler$ObjExpr" ((class "clojure.asm.commons.GeneratorAdapter") int) void))) 
                                      (52 (aload_1)) 
                                      (53 (invokestatic (methodCP "access$000" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) 
                                      (56 (getstatic (fieldCP "varGetMethod" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.commons.Method")))) 
                                      (59 (invokevirtual (methodCP "invokeVirtual" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "clojure.asm.commons.Method")) void))) 
                                      (62 (return)) ;;at TAG_1
                                      (endofcode 63))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emitKeyword"
                              (parameters (class "clojure.asm.commons.GeneratorAdapter") (class "clojure.lang.Keyword"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 24)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "keywords" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.IPersistentMap"))))
                                      (4 (aload_2))
                                      (5 (invokeinterface
					(methodCP "valAt" "clojure.lang.IPersistentMap" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (10 (checkcast (class "java.lang.Integer")))
                                      (13 (astore_3))
                                      (14 (aload_0))
                                      (15 (aload_1))
                                      (16 (aload_3))
                                      (17 (invokevirtual
					(methodCP "intValue" "java.lang.Integer" () int)))
                                      (20 (invokevirtual
					(methodCP "emitConstant" "clojure.lang.Compiler$ObjExpr" ((class "clojure.asm.commons.GeneratorAdapter") int) void)))
                                      (23 (return))
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emitConstant"
                              (parameters (class "clojure.asm.commons.GeneratorAdapter") int)
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 3) (code_length . 19)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (aload_0))
                                      (2 (getfield (fieldCP "objtype" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type"))))
                                      (5 (aload_0))
                                      (6 (iload_2))
                                      (7 (invokevirtual
					(methodCP "constantName" "clojure.lang.Compiler$ObjExpr" (int) (class "java.lang.String"))))
                                      (10 (aload_0))
                                      (11 (iload_2))
                                      (12 (invokevirtual
					(methodCP "constantType" "clojure.lang.Compiler$ObjExpr" (int) (class "clojure.asm.Type"))))
                                      (15 (invokevirtual
					(methodCP "getStatic" "clojure.asm.commons.GeneratorAdapter" ((class "clojure.asm.Type") (class "java.lang.String") (class "clojure.asm.Type")) void)))
                                      (18 (return))
                                      (endofcode 19))
                                   (Exceptions )
                                   (StackMap )))
                        (method "constantName"
                              (parameters int)
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 21)
                                   (parsedcode
                                      (0 (new (class "java.lang.StringBuilder")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.StringBuilder" () void)))
                                      (7 (ldc_w 0))       ;;STRING:: "const__"
                                      (10 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (13 (iload_1))
                                      (14 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder"))))
                                      (17 (invokevirtual
					(methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String"))))
                                      (20 (areturn))
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap )))
                        (method "siteName"
                              (parameters int)
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 21)
                                   (parsedcode
                                      (0 (new (class "java.lang.StringBuilder")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.StringBuilder" () void)))
                                      (7 (ldc_w 49))      ;;STRING:: "__site__"
                                      (10 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (13 (iload_1))
                                      (14 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder"))))
                                      (17 (invokevirtual
					(methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String"))))
                                      (20 (areturn))
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap )))
                        (method "siteNameStatic"
                              (parameters int)
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 24)
                                   (parsedcode
                                      (0 (new (class "java.lang.StringBuilder")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.StringBuilder" () void)))
                                      (7 (aload_0))
                                      (8 (iload_1))
                                      (9 (invokevirtual
					(methodCP "siteName" "clojure.lang.Compiler$ObjExpr" (int) (class "java.lang.String"))))
                                      (12 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (15 (ldc 1))        ;;STRING:: "__"
                                      (17 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (20 (invokevirtual
					(methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String"))))
                                      (23 (areturn))
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap )))
                        (method "thunkName"
                              (parameters int)
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 21)
                                   (parsedcode
                                      (0 (new (class "java.lang.StringBuilder")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.StringBuilder" () void)))
                                      (7 (ldc_w 50))      ;;STRING:: "__thunk__"
                                      (10 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (13 (iload_1))
                                      (14 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder"))))
                                      (17 (invokevirtual
					(methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String"))))
                                      (20 (areturn))
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap )))
                        (method "cachedClassName"
                              (parameters int)
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 21)
                                   (parsedcode
                                      (0 (new (class "java.lang.StringBuilder")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.StringBuilder" () void)))
                                      (7 (ldc_w 51))      ;;STRING:: "__cached_class__"
                                      (10 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (13 (iload_1))
                                      (14 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder"))))
                                      (17 (invokevirtual
					(methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String"))))
                                      (20 (areturn))
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap )))
                        (method "cachedVarName"
                              (parameters int)
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 21)
                                   (parsedcode
                                      (0 (new (class "java.lang.StringBuilder")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.StringBuilder" () void)))
                                      (7 (ldc_w 52))      ;;STRING:: "__cached_var__"
                                      (10 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (13 (iload_1))
                                      (14 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder"))))
                                      (17 (invokevirtual
					(methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String"))))
                                      (20 (areturn))
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap )))
                        (method "cachedProtoFnName"
                              (parameters int)
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 21)
                                   (parsedcode
                                      (0 (new (class "java.lang.StringBuilder")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.StringBuilder" () void)))
                                      (7 (ldc_w 53))      ;;STRING:: "__cached_proto_fn__"
                                      (10 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (13 (iload_1))
                                      (14 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder"))))
                                      (17 (invokevirtual
					(methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String"))))
                                      (20 (areturn))
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap )))
                        (method "cachedProtoImplName"
                              (parameters int)
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 21)
                                   (parsedcode
                                      (0 (new (class "java.lang.StringBuilder")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.StringBuilder" () void)))
                                      (7 (ldc_w 54))      ;;STRING:: "__cached_proto_impl__"
                                      (10 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (13 (iload_1))
                                      (14 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder"))))
                                      (17 (invokevirtual
					(methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String"))))
                                      (20 (areturn))
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap )))
                        (method "varCallsiteName"
                              (parameters int)
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 21)
                                   (parsedcode
                                      (0 (new (class "java.lang.StringBuilder")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.StringBuilder" () void)))
                                      (7 (ldc_w 55))      ;;STRING:: "__var__callsite__"
                                      (10 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (13 (iload_1))
                                      (14 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder"))))
                                      (17 (invokevirtual
					(methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String"))))
                                      (20 (areturn))
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap )))
                        (method "thunkNameStatic"
                              (parameters int)
                              (returntype . (class "java.lang.String"))
                              (accessflags  *class* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 24)
                                   (parsedcode
                                      (0 (new (class "java.lang.StringBuilder")))
                                      (3 (dup))
                                      (4 (invokespecial
					(methodCP "<init>" "java.lang.StringBuilder" () void)))
                                      (7 (aload_0))
                                      (8 (iload_1))
                                      (9 (invokevirtual
					(methodCP "thunkName" "clojure.lang.Compiler$ObjExpr" (int) (class "java.lang.String"))))
                                      (12 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (15 (ldc 1))        ;;STRING:: "__"
                                      (17 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (20 (invokevirtual
					(methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String"))))
                                      (23 (areturn))
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap )))
                        (method "constantType"
                              (parameters int)
                              (returntype . (class "clojure.asm.Type"))
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 125)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "constants" "clojure.lang.Compiler$ObjExpr" (class "clojure.lang.PersistentVector")))) 
                                      (4 (iload_1)) 
                                      (5 (invokevirtual (methodCP "nth" "clojure.lang.PersistentVector" (int) (class "java.lang.Object")))) 
                                      (8 (astore_2)) 
                                      (9 (aload_2)) 
                                      (10 (invokestatic (methodCP "classOf" "clojure.lang.Util" ((class "java.lang.Object")) (class "java.lang.Class")))) 
                                      (13 (astore_3)) 
                                      (14 (aload_3)) 
                                      (15 (ifnull 121)) ;;to TAG_0
                                      (18 (aload_3)) 
                                      (19 (invokevirtual (methodCP "getModifiers" "java.lang.Class" () int))) 
                                      (22 (invokestatic (methodCP "isPublic" "java.lang.reflect.Modifier" (int) boolean))) 
                                      (25 (ifeq 121)) ;;to TAG_0
                                      (28 (ldc_w )) 
                                      (31 (aload_3)) 
                                      (32 (invokevirtual (methodCP "isAssignableFrom" "java.lang.Class" ((class "java.lang.Class")) boolean))) 
                                      (35 (ifeq 45)) ;;to TAG_1
                                      (38 (ldc_w )) 
                                      (41 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (44 (areturn)) 
                                      (45 (aload_3)) ;;at TAG_1
                                      (46 (ldc_w )) 
                                      (49 (if_acmpne 59))  ;;to TAG_2
                                      (52 (ldc_w )) 
                                      (55 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (58 (areturn)) 
                                      (59 (ldc_w )) ;;at TAG_2
                                      (62 (aload_3)) 
                                      (63 (invokevirtual (methodCP "isAssignableFrom" "java.lang.Class" ((class "java.lang.Class")) boolean))) 
                                      (66 (ifeq 76)) ;;to TAG_3
                                      (69 (ldc_w )) 
                                      (72 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (75 (areturn)) 
                                      (76 (ldc_w )) ;;at TAG_3
                                      (79 (aload_3)) 
                                      (80 (invokevirtual (methodCP "isAssignableFrom" "java.lang.Class" ((class "java.lang.Class")) boolean))) 
                                      (83 (ifeq 93)) ;;to TAG_4
                                      (86 (ldc_w )) 
                                      (89 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (92 (areturn)) 
                                      (93 (aload_3)) ;;at TAG_4
                                      (94 (ldc_w )) 
                                      (97 (if_acmpne 107)) ;;to TAG_5
                                      (100 (ldc_w )) 
                                      (103 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (106 (areturn)) 
                                      (107 (aload_3)) ;;at TAG_5
                                      (108 (ldc_w )) 
                                      (111 (if_acmpne 121)) ;;to TAG_0
                                      (114 (ldc_w )) 
                                      (117 (invokestatic (methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type")))) 
                                      (120 (areturn)) 
                                      (121 (invokestatic (methodCP "access$600" "clojure.lang.Compiler" () (class "clojure.asm.Type")))) ;;at TAG_0
                                      (124 (areturn)) 
                                      (endofcode 125))
                                   (Exceptions )
                                   (StackMap )))
                        (method "access$1600"
                              (parameters (class "clojure.lang.Compiler$ObjExpr") (class "clojure.asm.commons.GeneratorAdapter") (class "clojure.lang.Compiler$LocalBinding"))
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 3) (max_locals . 3) (code_length . 7)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aload_2))
                                      (3 (invokespecial
					(methodCP "emitUnboxedLocal" "clojure.lang.Compiler$ObjExpr" ((class "clojure.asm.commons.GeneratorAdapter") (class "clojure.lang.Compiler$LocalBinding")) void)))
                                      (6 (return))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap )))
                        (method "access$1700"
                              (parameters (class "clojure.lang.Compiler$ObjExpr") (class "clojure.asm.commons.GeneratorAdapter") (class "clojure.lang.Compiler$LocalBinding") boolean)
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 4) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (aload_2))
                                      (3 (iload_3))
                                      (4 (invokespecial
					(methodCP "emitLocal" "clojure.lang.Compiler$ObjExpr" ((class "clojure.asm.commons.GeneratorAdapter") (class "clojure.lang.Compiler$LocalBinding") boolean) void)))
                                      (7 (return))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 0) (code_length . 127)
                                   (parsedcode
                                      (0 (ldc_w 56))      ;;STRING:: "void <init>()"
                                      (3 (invokestatic
					(methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method"))))
                                      (6 (putstatic (fieldCP "voidctor" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.commons.Method"))))
                                      (9 (ldc_w 57))      ;;STRING:: "clojure.lang.Keyword intern(String, String)"
                                      (12 (invokestatic
					(methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method"))))
                                      (15 (putstatic (fieldCP "kwintern" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.commons.Method"))))
                                      (18 (ldc_w 58))     ;;STRING:: "clojure.lang.Symbol intern(String)"
                                      (21 (invokestatic
					(methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method"))))
                                      (24 (putstatic (fieldCP "symintern" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.commons.Method"))))
                                      (27 (ldc_w 59))     ;;STRING:: "clojure.lang.Var intern(clojure.lang.Symbol, clojure.lang.Symbol)"
                                      (30 (invokestatic
					(methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method"))))
                                      (33 (putstatic (fieldCP "varintern" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.commons.Method"))))
                                      (36 (ldc_w ))
                                      (39 (invokestatic
					(methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type"))))
                                      (42 (putstatic (fieldCP "DYNAMIC_CLASSLOADER_TYPE" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type"))))
                                      (45 (ldc_w 60))     ;;STRING:: "Class getClass()"
                                      (48 (invokestatic
					(methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method"))))
                                      (51 (putstatic (fieldCP "getClassMethod" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.commons.Method"))))
                                      (54 (ldc_w 61))     ;;STRING:: "ClassLoader getClassLoader()"
                                      (57 (invokestatic
					(methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method"))))
                                      (60 (putstatic (fieldCP "getClassLoaderMethod" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.commons.Method"))))
                                      (63 (ldc_w 62))     ;;STRING:: "Object[] getConstants(int)"
                                      (66 (invokestatic
					(methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method"))))
                                      (69 (putstatic (fieldCP "getConstantsMethod" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.commons.Method"))))
                                      (72 (ldc_w 63))     ;;STRING:: "Object readString(String)"
                                      (75 (invokestatic
					(methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method"))))
                                      (78 (putstatic (fieldCP "readStringMethod" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.commons.Method"))))
                                      (81 (ldc_w ))
                                      (84 (invokestatic
					(methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type"))))
                                      (87 (putstatic (fieldCP "ILOOKUP_SITE_TYPE" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type"))))
                                      (90 (ldc_w ))
                                      (93 (invokestatic
					(methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type"))))
                                      (96 (putstatic (fieldCP "ILOOKUP_THUNK_TYPE" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type"))))
                                      (99 (ldc_w ))
                                      (102 (invokestatic
					(methodCP "getType" "clojure.asm.Type" ((class "java.lang.Class")) (class "clojure.asm.Type"))))
                                      (105 (putstatic (fieldCP "KEYWORD_LOOKUPSITE_TYPE" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.Type"))))
                                      (108 (ldc_w 64))    ;;STRING:: "Object get()"
                                      (111 (invokestatic
					(methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method"))))
                                      (114 (putstatic (fieldCP "varGetMethod" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.commons.Method"))))
                                      (117 (ldc_w 65))    ;;STRING:: "Object getRawRoot()"
                                      (120 (invokestatic
					(methodCP "getMethod" "clojure.asm.commons.Method" ((class "java.lang.String")) (class "clojure.asm.commons.Method"))))
                                      (123 (putstatic (fieldCP "varGetRawMethod" "clojure.lang.Compiler$ObjExpr" (class "clojure.asm.commons.Method"))))
                                      (126 (return))
                                      (endofcode 127))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.Compiler$Expr")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Compiler$ObjExpr-class-table*
  (make-static-class-decls 
   *clojure.lang.Compiler$ObjExpr*))

(defconst *package-name-map* 
  ("clojure.lang.Compiler$ObjExpr" . "clojure.lang"))

