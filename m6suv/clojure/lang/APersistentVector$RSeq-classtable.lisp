; APersistentVector$RSeq-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:50 CDT 2014.
;

(defconst *clojure.lang.APersistentVector$RSeq*
 (make-class-def
      '(class "clojure.lang.APersistentVector$RSeq"
            "clojure.lang.ASeq"
            (constant_pool)
            (fields
                        (field "v" (class "clojure.lang.IPersistentVector") (accessflags  *class*  *final* ) -1)
                        (field "i" int (accessflags  *class*  *final* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "clojure.lang.IPersistentVector") int)
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.ASeq" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "v" "clojure.lang.APersistentVector$RSeq" (class "clojure.lang.IPersistentVector"))))
                                      (9 (aload_0))
                                      (10 (iload_2))
                                      (11 (putfield (fieldCP "i" "clojure.lang.APersistentVector$RSeq" int)))
                                      (14 (return))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "clojure.lang.IPersistentMap") (class "clojure.lang.IPersistentVector") int)
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 2) (max_locals . 4) (code_length . 16)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokespecial
					(methodCP "<init>" "clojure.lang.ASeq" ((class "clojure.lang.IPersistentMap")) void)))
                                      (5 (aload_0))
                                      (6 (aload_2))
                                      (7 (putfield (fieldCP "v" "clojure.lang.APersistentVector$RSeq" (class "clojure.lang.IPersistentVector"))))
                                      (10 (aload_0))
                                      (11 (iload_3))
                                      (12 (putfield (fieldCP "i" "clojure.lang.APersistentVector$RSeq" int)))
                                      (15 (return))
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap )))
                        (method "first"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 14)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "v" "clojure.lang.APersistentVector$RSeq" (class "clojure.lang.IPersistentVector"))))
                                      (4 (aload_0))
                                      (5 (getfield (fieldCP "i" "clojure.lang.APersistentVector$RSeq" int)))
                                      (8 (invokeinterface
					(methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2))
                                      (13 (areturn))
                                      (endofcode 14))
                                   (Exceptions )
                                   (StackMap )))
                        (method "next"
                              (parameters )
                              (returntype . (class "clojure.lang.ISeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 1) (code_length . 27)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "i" "clojure.lang.APersistentVector$RSeq" int))) 
                                      (4 (ifle 25))  ;;to TAG_0
                                      (7 (new (class "clojure.lang.APersistentVector$RSeq"))) 
                                      (10 (dup)) 
                                      (11 (aload_0)) 
                                      (12 (getfield (fieldCP "v" "clojure.lang.APersistentVector$RSeq" (class "clojure.lang.IPersistentVector")))) 
                                      (15 (aload_0)) 
                                      (16 (getfield (fieldCP "i" "clojure.lang.APersistentVector$RSeq" int))) 
                                      (19 (iconst_1)) 
                                      (20 (isub)) 
                                      (21 (invokespecial (methodCP "<init>" "clojure.lang.APersistentVector$RSeq" ((class "clojure.lang.IPersistentVector") int) void))) 
                                      (24 (areturn)) 
                                      (25 (aconst_null)) ;;at TAG_0
                                      (26 (areturn)) 
                                      (endofcode 27))
                                   (Exceptions )
                                   (StackMap )))
                        (method "index"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "i" "clojure.lang.APersistentVector$RSeq" int)))
                                      (4 (ireturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "count"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 1) (code_length . 7)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "i" "clojure.lang.APersistentVector$RSeq" int)))
                                      (4 (iconst_1))
                                      (5 (iadd))
                                      (6 (ireturn))
                                      (endofcode 7))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.APersistentVector$RSeq"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 17)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.APersistentVector$RSeq")))
                                      (3 (dup))
                                      (4 (aload_1))
                                      (5 (aload_0))
                                      (6 (getfield (fieldCP "v" "clojure.lang.APersistentVector$RSeq" (class "clojure.lang.IPersistentVector"))))
                                      (9 (aload_0))
                                      (10 (getfield (fieldCP "i" "clojure.lang.APersistentVector$RSeq" int)))
                                      (13 (invokespecial
					(methodCP "<init>" "clojure.lang.APersistentVector$RSeq" ((class "clojure.lang.IPersistentMap") (class "clojure.lang.IPersistentVector") int) void)))
                                      (16 (areturn))
                                      (endofcode 17))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.Obj"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "withMeta" "clojure.lang.APersistentVector$RSeq" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.APersistentVector$RSeq"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap )))
                        (method "withMeta"
                              (parameters (class "clojure.lang.IPersistentMap"))
                              (returntype . (class "clojure.lang.IObj"))
                              (accessflags  *class*  *public*  *volatile* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 6)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokevirtual
					(methodCP "withMeta" "clojure.lang.APersistentVector$RSeq" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.APersistentVector$RSeq"))))
                                      (5 (areturn))
                                      (endofcode 6))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.IndexedSeq" "clojure.lang.Counted")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *APersistentVector$RSeq-class-table*
  (make-static-class-decls 
   *clojure.lang.APersistentVector$RSeq*))

(defconst *package-name-map* 
  ("clojure.lang.APersistentVector$RSeq" . "clojure.lang"))

