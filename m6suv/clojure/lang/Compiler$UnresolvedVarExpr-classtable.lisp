; Compiler$UnresolvedVarExpr-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:51 CDT 2014.
;

(defconst *clojure.lang.Compiler$UnresolvedVarExpr*
 (make-class-def
      '(class "clojure.lang.Compiler$UnresolvedVarExpr"
            "java.lang.Object"
            (constant_pool
                        (STRING  "UnresolvedVarExpr has no Java class")
                        (STRING  "UnresolvedVarExpr cannot be evalled"))
            (fields
                        (field "symbol" (class "clojure.lang.Symbol") (accessflags  *class*  *final*  *public* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "clojure.lang.Symbol"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "symbol" "clojure.lang.Compiler$UnresolvedVarExpr" (class "clojure.lang.Symbol"))))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "hasJavaClass"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iconst_0))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getJavaClass"
                              (parameters )
                              (returntype . (class "java.lang.Class"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 10)
                                   (parsedcode
                                      (0 (new (class "java.lang.IllegalArgumentException")))
                                      (3 (dup))
                                      (4 (ldc 0))         ;;STRING:: "UnresolvedVarExpr has no Java class"
                                      (6 (invokespecial
					(methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void)))
                                      (9 (athrow))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "emit"
                              (parameters (class "clojure.lang.Compiler$C") (class "clojure.lang.Compiler$ObjExpr") (class "clojure.asm.commons.GeneratorAdapter"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 0) (max_locals . 4) (code_length . 1)
                                   (parsedcode
                                      (0 (return))
                                      (endofcode 1))
                                   (Exceptions )
                                   (StackMap )))
                        (method "eval"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 1) (code_length . 10)
                                   (parsedcode
                                      (0 (new (class "java.lang.IllegalArgumentException")))
                                      (3 (dup))
                                      (4 (ldc 1))         ;;STRING:: "UnresolvedVarExpr cannot be evalled"
                                      (6 (invokespecial
					(methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void)))
                                      (9 (athrow))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "clojure.lang.Compiler$Expr")
            (accessflags  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Compiler$UnresolvedVarExpr-class-table*
  (make-static-class-decls 
   *clojure.lang.Compiler$UnresolvedVarExpr*))

(defconst *package-name-map* 
  ("clojure.lang.Compiler$UnresolvedVarExpr" . "clojure.lang"))

