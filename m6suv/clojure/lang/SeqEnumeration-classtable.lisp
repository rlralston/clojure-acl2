; SeqEnumeration-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:53 CDT 2014.
;

(defconst *clojure.lang.SeqEnumeration*
 (make-class-def
      '(class "clojure.lang.SeqEnumeration"
            "java.lang.Object"
            (constant_pool)
            (fields
                        (field "seq" (class "clojure.lang.ISeq") (accessflags  *class* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "clojure.lang.ISeq"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "seq" "clojure.lang.SeqEnumeration" (class "clojure.lang.ISeq"))))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "hasMoreElements"
                              (parameters )
                              (returntype . boolean)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 13)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "seq" "clojure.lang.SeqEnumeration" (class "clojure.lang.ISeq")))) 
                                      (4 (ifnull 11))  ;;to TAG_0
                                      (7 (iconst_1)) 
                                      (8 (goto 12)) ;;to TAG_1
                                      (11 (iconst_0)) ;;at TAG_0
                                      (12 (ireturn)) ;;at TAG_1
                                      (endofcode 13))
                                   (Exceptions )
                                   (StackMap )))
                        (method "nextElement"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 21)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "seq" "clojure.lang.SeqEnumeration" (class "clojure.lang.ISeq"))))
                                      (4 (invokestatic
					(methodCP "first" "clojure.lang.RT" ((class "java.lang.Object")) (class "java.lang.Object"))))
                                      (7 (astore_1))
                                      (8 (aload_0))
                                      (9 (aload_0))
                                      (10 (getfield (fieldCP "seq" "clojure.lang.SeqEnumeration" (class "clojure.lang.ISeq"))))
                                      (13 (invokestatic
					(methodCP "next" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq"))))
                                      (16 (putfield (fieldCP "seq" "clojure.lang.SeqEnumeration" (class "clojure.lang.ISeq"))))
                                      (19 (aload_1))
                                      (20 (areturn))
                                      (endofcode 21))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces "java.util.Enumeration")
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *SeqEnumeration-class-table*
  (make-static-class-decls 
   *clojure.lang.SeqEnumeration*))

(defconst *package-name-map* 
  ("clojure.lang.SeqEnumeration" . "clojure.lang"))

