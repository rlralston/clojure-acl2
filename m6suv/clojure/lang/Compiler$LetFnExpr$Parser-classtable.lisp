; Compiler$LetFnExpr$Parser-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:50 CDT 2014.
;

(defconst *clojure.lang.Compiler$LetFnExpr$Parser*
 (make-class-def
      '(class "clojure.lang.Compiler$LetFnExpr$Parser"
            "java.lang.Object"
            (constant_pool
                        (STRING  "Bad binding form, expected vector")
                        (STRING  "Bad binding form, expected matched symbol expression pairs")
                        (STRING  "Bad binding form, expected symbol, got: ")
                        (STRING  "Can\nt let qualified name: "))
            (fields)
            (methods
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "java.lang.Object" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "parse"
                              (parameters (class "clojure.lang.Compiler$C") (class "java.lang.Object"))
                              (returntype . (class "clojure.lang.Compiler$Expr"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 16) (code_length . 437)
                                   (parsedcode
                                      (0 (aload_2)) 
                                      (1 (checkcast (class "clojure.lang.ISeq"))) 
                                      (4 (astore_3)) 
                                      (5 (aload_3)) 
                                      (6 (invokestatic (methodCP "second" "clojure.lang.RT" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (9 (instanceof (class "clojure.lang.IPersistentVector"))) 
                                      (12 (ifne 25)) ;;to TAG_0
                                      (15 (new (class "java.lang.IllegalArgumentException"))) 
                                      (18 (dup)) 
                                      (19 (ldc 0)) ;;STRING:: "Bad binding form, expected vector"
                                      (21 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (24 (athrow)) 
                                      (25 (aload_3)) ;;at TAG_0
                                      (26 (invokestatic (methodCP "second" "clojure.lang.RT" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (29 (checkcast (class "clojure.lang.IPersistentVector"))) 
                                      (32 (astore 4)) 
                                      (34 (aload 4)) 
                                      (36 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (41 (iconst_2)) 
                                      (42 (irem)) 
                                      (43 (ifeq 56))  ;;to TAG_1
                                      (46 (new (class "java.lang.IllegalArgumentException"))) 
                                      (49 (dup)) 
                                      (50 (ldc 1)) ;;STRING:: "Bad binding form, expected matched symbol expression pairs"
                                      (52 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (55 (athrow)) 
                                      (56 (aload_3)) ;;at TAG_1
                                      (57 (invokestatic (methodCP "next" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (60 (invokestatic (methodCP "next" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (63 (astore 5)) 
                                      (65 (aload_1)) 
                                      (66 (getstatic (fieldCP "EVAL" "clojure.lang.Compiler$C" (class "clojure.lang.Compiler$C")))) 
                                      (69 (if_acmpne 90)) ;;to TAG_2
                                      (72 (aload_1)) 
                                      (73 (getstatic (fieldCP "FNONCE" "clojure.lang.Compiler" (class "clojure.lang.Symbol")))) 
                                      (76 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) 
                                      (79 (aload_3)) 
                                      (80 (invokestatic (methodCP "list" "clojure.lang.RT" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (83 (invokestatic (methodCP "list" "clojure.lang.RT" ((class "java.lang.Object")) (class "clojure.lang.ISeq")))) 
                                      (86 (invokestatic (methodCP "analyze" "clojure.lang.Compiler" ((class "clojure.lang.Compiler$C") (class "java.lang.Object")) (class "clojure.lang.Compiler$Expr")))) 
                                      (89 (areturn)) 
                                      (90 (iconst_4)) ;;at TAG_2
                                      (91 (anewarray (class "java.lang.Object"))) 
                                      (94 (dup)) 
                                      (95 (iconst_0)) 
                                      (96 (getstatic (fieldCP "LOCAL_ENV" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (99 (aastore)) 
                                      (100 (dup)) 
                                      (101 (iconst_1)) 
                                      (102 (getstatic (fieldCP "LOCAL_ENV" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (105 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (108 (aastore)) 
                                      (109 (dup)) 
                                      (110 (iconst_2)) 
                                      (111 (getstatic (fieldCP "NEXT_LOCAL_NUM" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (114 (aastore)) 
                                      (115 (dup)) 
                                      (116 (iconst_3)) 
                                      (117 (getstatic (fieldCP "NEXT_LOCAL_NUM" "clojure.lang.Compiler" (class "clojure.lang.Var")))) 
                                      (120 (invokevirtual (methodCP "deref" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (123 (aastore)) 
                                      (124 (invokestatic (methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (127 (astore 6)) 
                                      (129 (aload 6)) ;;at TAG_10
                                      (131 (invokestatic (methodCP "pushThreadBindings" "clojure.lang.Var" ((class "clojure.lang.Associative")) void))) 
                                      (134 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) 
                                      (137 (astore 7)) 
                                      (139 (iconst_0)) 
                                      (140 (istore 8)) 
                                      (142 (iload 8)) ;;at TAG_6
                                      (144 (aload 4)) 
                                      (146 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (151 (if_icmpge 285)) ;;to TAG_3
                                      (154 (aload 4)) 
                                      (156 (iload 8)) 
                                      (158 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (163 (instanceof (class "clojure.lang.Symbol"))) 
                                      (166 (ifne 204)) ;;to TAG_4
                                      (169 (new (class "java.lang.IllegalArgumentException"))) 
                                      (172 (dup)) 
                                      (173 (new (class "java.lang.StringBuilder"))) 
                                      (176 (dup)) 
                                      (177 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (180 (ldc 2)) ;;STRING:: "Bad binding form, expected symbol, got: "
                                      (182 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (185 (aload 4)) 
                                      (187 (iload 8)) 
                                      (189 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (194 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (197 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (200 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (203 (athrow)) 
                                      (204 (aload 4)) ;;at TAG_4
                                      (206 (iload 8)) 
                                      (208 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (213 (checkcast (class "clojure.lang.Symbol"))) 
                                      (216 (astore 9)) 
                                      (218 (aload 9)) 
                                      (220 (invokevirtual (methodCP "getNamespace" "clojure.lang.Symbol" () (class "java.lang.String")))) 
                                      (223 (ifnull 250)) ;;to TAG_5
                                      (226 (new (class "java.lang.StringBuilder"))) 
                                      (229 (dup)) 
                                      (230 (invokespecial (methodCP "<init>" "java.lang.StringBuilder" () void))) 
                                      (233 (ldc 3)) ;;STRING:: "Can\nt let qualified name: "
                                      (235 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder")))) 
                                      (238 (aload 9)) 
                                      (240 (invokevirtual (methodCP "append" "java.lang.StringBuilder" ((class "java.lang.Object")) (class "java.lang.StringBuilder")))) 
                                      (243 (invokevirtual (methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String")))) 
                                      (246 (invokestatic (methodCP "runtimeException" "clojure.lang.Util" ((class "java.lang.String")) (class "java.lang.RuntimeException")))) 
                                      (249 (athrow)) 
                                      (250 (aload 9)) ;;at TAG_5
                                      (252 (aload 9)) 
                                      (254 (invokestatic (methodCP "access$500" "clojure.lang.Compiler" ((class "java.lang.Object")) (class "clojure.lang.Symbol")))) 
                                      (257 (aconst_null)) 
                                      (258 (iconst_0)) 
                                      (259 (invokestatic (methodCP "access$900" "clojure.lang.Compiler" ((class "clojure.lang.Symbol") (class "clojure.lang.Symbol") (class "clojure.lang.Compiler$Expr") boolean) (class "clojure.lang.Compiler$LocalBinding")))) 
                                      (262 (astore 10)) 
                                      (264 (aload 10)) 
                                      (266 (iconst_0)) 
                                      (267 (putfield (fieldCP "canBeCleared" "clojure.lang.Compiler$LocalBinding" boolean))) 
                                      (270 (aload 7)) 
                                      (272 (aload 10)) 
                                      (274 (invokevirtual (methodCP "cons" "clojure.lang.PersistentVector" ((class "java.lang.Object")) (class "clojure.lang.PersistentVector")))) 
                                      (277 (astore 7)) 
                                      (279 (iinc 8 2)) 
                                      (282 (goto 142)) ;;to TAG_6
                                      (285 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) ;;at TAG_3
                                      (288 (astore 8)) 
                                      (290 (iconst_0)) 
                                      (291 (istore 9)) 
                                      (293 (iload 9)) ;;at TAG_8
                                      (295 (aload 4)) 
                                      (297 (invokeinterface (methodCP "count" "clojure.lang.IPersistentVector" () int) 1)) 
                                      (302 (if_icmpge 392)) ;;to TAG_7
                                      (305 (aload 4)) 
                                      (307 (iload 9)) 
                                      (309 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (314 (checkcast (class "clojure.lang.Symbol"))) 
                                      (317 (astore 10)) 
                                      (319 (getstatic (fieldCP "EXPRESSION" "clojure.lang.Compiler$C" (class "clojure.lang.Compiler$C")))) 
                                      (322 (aload 4)) 
                                      (324 (iload 9)) 
                                      (326 (iconst_1)) 
                                      (327 (iadd)) 
                                      (328 (invokeinterface (methodCP "nth" "clojure.lang.IPersistentVector" (int) (class "java.lang.Object")) 2)) 
                                      (333 (aload 10)) 
                                      (335 (getfield (fieldCP "name" "clojure.lang.Symbol" (class "java.lang.String")))) 
                                      (338 (invokestatic (methodCP "access$100" "clojure.lang.Compiler" ((class "clojure.lang.Compiler$C") (class "java.lang.Object") (class "java.lang.String")) (class "clojure.lang.Compiler$Expr")))) 
                                      (341 (astore 11)) 
                                      (343 (aload 7)) 
                                      (345 (iload 9)) 
                                      (347 (iconst_2)) 
                                      (348 (idiv)) 
                                      (349 (invokevirtual (methodCP "nth" "clojure.lang.PersistentVector" (int) (class "java.lang.Object")))) 
                                      (352 (checkcast (class "clojure.lang.Compiler$LocalBinding"))) 
                                      (355 (astore 12)) 
                                      (357 (aload 12)) 
                                      (359 (aload 11)) 
                                      (361 (putfield (fieldCP "init" "clojure.lang.Compiler$LocalBinding" (class "clojure.lang.Compiler$Expr")))) 
                                      (364 (new (class "clojure.lang.Compiler$BindingInit"))) 
                                      (367 (dup)) 
                                      (368 (aload 12)) 
                                      (370 (aload 11)) 
                                      (372 (invokespecial (methodCP "<init>" "clojure.lang.Compiler$BindingInit" ((class "clojure.lang.Compiler$LocalBinding") (class "clojure.lang.Compiler$Expr")) void))) 
                                      (375 (astore 13)) 
                                      (377 (aload 8)) 
                                      (379 (aload 13)) 
                                      (381 (invokevirtual (methodCP "cons" "clojure.lang.PersistentVector" ((class "java.lang.Object")) (class "clojure.lang.PersistentVector")))) 
                                      (384 (astore 8)) 
                                      (386 (iinc 9 2)) 
                                      (389 (goto 293)) ;;to TAG_8
                                      (392 (new (class "clojure.lang.Compiler$LetFnExpr"))) ;;at TAG_7
                                      (395 (dup)) 
                                      (396 (aload 8)) 
                                      (398 (new (class "clojure.lang.Compiler$BodyExpr$Parser"))) 
                                      (401 (dup)) 
                                      (402 (invokespecial (methodCP "<init>" "clojure.lang.Compiler$BodyExpr$Parser" () void))) 
                                      (405 (aload_1)) 
                                      (406 (aload 5)) 
                                      (408 (invokevirtual (methodCP "parse" "clojure.lang.Compiler$BodyExpr$Parser" ((class "clojure.lang.Compiler$C") (class "java.lang.Object")) (class "clojure.lang.Compiler$Expr")))) 
                                      (411 (invokespecial (methodCP "<init>" "clojure.lang.Compiler$LetFnExpr" ((class "clojure.lang.PersistentVector") (class "clojure.lang.Compiler$Expr")) void))) 
                                      (414 (astore 9)) 
                                      (416 (jsr 430)) ;;to TAG_9
                                      (419 (aload 9)) ;;at TAG_11
                                      (421 (areturn)) 
                                      (422 (astore 14)) ;;at TAG_12
                                      (424 (jsr 430)) ;;to TAG_9
                                      (427 (aload 14)) ;;at TAG_13
                                      (429 (athrow)) 
                                      (430 (astore 15)) ;;at TAG_9
                                      (432 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) 
                                      (435 (ret 15)) 
                                      (endofcode 437))
                                   (Exceptions 
                                     (handler 129 419  422 (class "java.lang.Throwable"))
                                     (handler 422 427  422 (class "java.lang.Throwable")))
                                   (StackMap ))))
            (interfaces "clojure.lang.Compiler$IParser")
            (accessflags  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *Compiler$LetFnExpr$Parser-class-table*
  (make-static-class-decls 
   *clojure.lang.Compiler$LetFnExpr$Parser*))

(defconst *package-name-map* 
  ("clojure.lang.Compiler$LetFnExpr$Parser" . "clojure.lang"))

