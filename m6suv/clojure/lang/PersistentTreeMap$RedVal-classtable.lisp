; PersistentTreeMap$RedVal-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:52 CDT 2014.
;

(defconst *clojure.lang.PersistentTreeMap$RedVal*
 (make-class-def
      '(class "clojure.lang.PersistentTreeMap$RedVal"
            "clojure.lang.PersistentTreeMap$Red"
            (constant_pool)
            (fields
                        (field "val" (class "java.lang.Object") (accessflags  *class*  *final* ) -1))
            (methods
                        (method "<init>"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 11)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (aload_1))
                                      (2 (invokespecial
					(methodCP "<init>" "clojure.lang.PersistentTreeMap$Red" ((class "java.lang.Object")) void)))
                                      (5 (aload_0))
                                      (6 (aload_2))
                                      (7 (putfield (fieldCP "val" "clojure.lang.PersistentTreeMap$RedVal" (class "java.lang.Object"))))
                                      (10 (return))
                                      (endofcode 11))
                                   (Exceptions )
                                   (StackMap )))
                        (method "val"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (getfield (fieldCP "val" "clojure.lang.PersistentTreeMap$RedVal" (class "java.lang.Object"))))
                                      (4 (areturn))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "blacken"
                              (parameters )
                              (returntype . (class "clojure.lang.PersistentTreeMap$Node"))
                              (accessflags  *class* )
                              (code
                                   (max_stack . 4) (max_locals . 1) (code_length . 16)
                                   (parsedcode
                                      (0 (new (class "clojure.lang.PersistentTreeMap$BlackVal")))
                                      (3 (dup))
                                      (4 (aload_0))
                                      (5 (getfield (fieldCP "key" "clojure.lang.PersistentTreeMap$RedVal" (class "java.lang.Object"))))
                                      (8 (aload_0))
                                      (9 (getfield (fieldCP "val" "clojure.lang.PersistentTreeMap$RedVal" (class "java.lang.Object"))))
                                      (12 (invokespecial
					(methodCP "<init>" "clojure.lang.PersistentTreeMap$BlackVal" ((class "java.lang.Object") (class "java.lang.Object")) void)))
                                      (15 (areturn))
                                      (endofcode 16))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "InnerClasses")))))


(defconst *PersistentTreeMap$RedVal-class-table*
  (make-static-class-decls 
   *clojure.lang.PersistentTreeMap$RedVal*))

(defconst *package-name-map* 
  ("clojure.lang.PersistentTreeMap$RedVal" . "clojure.lang"))

