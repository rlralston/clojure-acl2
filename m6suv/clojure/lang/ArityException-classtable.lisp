; ArityException-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:50 CDT 2014.
;

(defconst *clojure.lang.ArityException*
 (make-class-def
      '(class "clojure.lang.ArityException"
            "java.lang.IllegalArgumentException"
            (constant_pool
                        (STRING  "Wrong number of args (")
                        (STRING  ") passed to: "))
            (fields
                        (field "actual" int (accessflags  *class*  *final*  *public* ) -1)
                        (field "name" (class "java.lang.String") (accessflags  *class*  *final*  *public* ) -1))
            (methods
                        (method "<init>"
                              (parameters int (class "java.lang.String"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 3) (code_length . 8)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (iload_1))
                                      (2 (aload_2))
                                      (3 (aconst_null))
                                      (4 (invokespecial
					(methodCP "<init>" "clojure.lang.ArityException" (int (class "java.lang.String") (class "java.lang.Throwable")) void)))
                                      (7 (return))
                                      (endofcode 8))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters int (class "java.lang.String") (class "java.lang.Throwable"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 44)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (new (class "java.lang.StringBuilder")))
                                      (4 (dup))
                                      (5 (invokespecial
					(methodCP "<init>" "java.lang.StringBuilder" () void)))
                                      (8 (ldc 0))         ;;STRING:: "Wrong number of args ("
                                      (10 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (13 (iload_1))
                                      (14 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" (int) (class "java.lang.StringBuilder"))))
                                      (17 (ldc 1))        ;;STRING:: ") passed to: "
                                      (19 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (22 (aload_2))
                                      (23 (invokevirtual
					(methodCP "append" "java.lang.StringBuilder" ((class "java.lang.String")) (class "java.lang.StringBuilder"))))
                                      (26 (invokevirtual
					(methodCP "toString" "java.lang.StringBuilder" () (class "java.lang.String"))))
                                      (29 (aload_3))
                                      (30 (invokespecial
					(methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String") (class "java.lang.Throwable")) void)))
                                      (33 (aload_0))
                                      (34 (iload_1))
                                      (35 (putfield (fieldCP "actual" "clojure.lang.ArityException" int)))
                                      (38 (aload_0))
                                      (39 (aload_2))
                                      (40 (putfield (fieldCP "name" "clojure.lang.ArityException" (class "java.lang.String"))))
                                      (43 (return))
                                      (endofcode 44))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")))))


(defconst *ArityException-class-table*
  (make-static-class-decls 
   *clojure.lang.ArityException*))

(defconst *package-name-map* 
  ("clojure.lang.ArityException" . "clojure.lang"))

