; core$find_protocol_impl-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:42 CDT 2014.
;

(defconst *clojure.core$find_protocol_impl*
 (make-class-def
      '(class "clojure.core$find_protocol_impl"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "instance?")
                        (STRING  "on-interface")
                        (STRING  "class")
                        (STRING  "first")
                        (STRING  "remove")
                        (STRING  "nil?")
                        (STRING  "map")
                        (STRING  "butlast")
                        (STRING  "super-chain")
                        (STRING  "reduce1")
                        (STRING  "pref")
                        (STRING  "filter")
                        (STRING  "disj")
                        (STRING  "supers")
                        (STRING  "java.lang.Object"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 210)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "instance?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$find_protocol_impl" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "on-interface"
                                      (16 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (19 (checkcast (class "clojure.lang.Keyword")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.core$find_protocol_impl" (class "clojure.lang.Keyword"))))
                                      (25 (ldc 0))        ;;STRING:: "clojure.core"
                                      (27 (ldc 3))        ;;STRING:: "class"
                                      (29 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (32 (checkcast (class "clojure.lang.Var")))
                                      (35 (putstatic (fieldCP "const__2" "clojure.core$find_protocol_impl" (class "clojure.lang.Var"))))
                                      (38 (ldc 0))        ;;STRING:: "clojure.core"
                                      (40 (ldc 4))        ;;STRING:: "first"
                                      (42 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (45 (checkcast (class "clojure.lang.Var")))
                                      (48 (putstatic (fieldCP "const__3" "clojure.core$find_protocol_impl" (class "clojure.lang.Var"))))
                                      (51 (ldc 0))        ;;STRING:: "clojure.core"
                                      (53 (ldc 5))        ;;STRING:: "remove"
                                      (55 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (58 (checkcast (class "clojure.lang.Var")))
                                      (61 (putstatic (fieldCP "const__4" "clojure.core$find_protocol_impl" (class "clojure.lang.Var"))))
                                      (64 (ldc 0))        ;;STRING:: "clojure.core"
                                      (66 (ldc 6))        ;;STRING:: "nil?"
                                      (68 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (71 (checkcast (class "clojure.lang.Var")))
                                      (74 (putstatic (fieldCP "const__5" "clojure.core$find_protocol_impl" (class "clojure.lang.Var"))))
                                      (77 (ldc 0))        ;;STRING:: "clojure.core"
                                      (79 (ldc 7))        ;;STRING:: "map"
                                      (81 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (84 (checkcast (class "clojure.lang.Var")))
                                      (87 (putstatic (fieldCP "const__6" "clojure.core$find_protocol_impl" (class "clojure.lang.Var"))))
                                      (90 (ldc 0))        ;;STRING:: "clojure.core"
                                      (92 (ldc 8))        ;;STRING:: "butlast"
                                      (94 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (97 (checkcast (class "clojure.lang.Var")))
                                      (100 (putstatic (fieldCP "const__7" "clojure.core$find_protocol_impl" (class "clojure.lang.Var"))))
                                      (103 (ldc 0))       ;;STRING:: "clojure.core"
                                      (105 (ldc 9))       ;;STRING:: "super-chain"
                                      (107 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (110 (checkcast (class "clojure.lang.Var")))
                                      (113 (putstatic (fieldCP "const__8" "clojure.core$find_protocol_impl" (class "clojure.lang.Var"))))
                                      (116 (ldc 0))       ;;STRING:: "clojure.core"
                                      (118 (ldc 10))      ;;STRING:: "reduce1"
                                      (120 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (123 (checkcast (class "clojure.lang.Var")))
                                      (126 (putstatic (fieldCP "const__9" "clojure.core$find_protocol_impl" (class "clojure.lang.Var"))))
                                      (129 (ldc 0))       ;;STRING:: "clojure.core"
                                      (131 (ldc 11))      ;;STRING:: "pref"
                                      (133 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (136 (checkcast (class "clojure.lang.Var")))
                                      (139 (putstatic (fieldCP "const__10" "clojure.core$find_protocol_impl" (class "clojure.lang.Var"))))
                                      (142 (ldc 0))       ;;STRING:: "clojure.core"
                                      (144 (ldc 12))      ;;STRING:: "filter"
                                      (146 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (149 (checkcast (class "clojure.lang.Var")))
                                      (152 (putstatic (fieldCP "const__11" "clojure.core$find_protocol_impl" (class "clojure.lang.Var"))))
                                      (155 (ldc 0))       ;;STRING:: "clojure.core"
                                      (157 (ldc 13))      ;;STRING:: "disj"
                                      (159 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (162 (checkcast (class "clojure.lang.Var")))
                                      (165 (putstatic (fieldCP "const__12" "clojure.core$find_protocol_impl" (class "clojure.lang.Var"))))
                                      (168 (ldc 0))       ;;STRING:: "clojure.core"
                                      (170 (ldc 14))      ;;STRING:: "supers"
                                      (172 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (175 (checkcast (class "clojure.lang.Var")))
                                      (178 (putstatic (fieldCP "const__13" "clojure.core$find_protocol_impl" (class "clojure.lang.Var"))))
                                      (181 (ldc 15))      ;;STRING:: "java.lang.Object"
                                      (183 (invokestatic
					(methodCP "forName" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.Class"))))
                                      (186 (putstatic (fieldCP "const__14" "clojure.core$find_protocol_impl" (class "java.lang.Object"))))
                                      (189 (new (class "clojure.lang.KeywordLookupSite")))
                                      (192 (dup))
                                      (193 (aconst_null))
                                      (194 (ldc 2))       ;;STRING:: "on-interface"
                                      (196 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (199 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (202 (dup))
                                      (203 (putstatic (fieldCP "__site__0__" "clojure.core$find_protocol_impl" (class "clojure.lang.KeywordLookupSite"))))
                                      (206 (putstatic (fieldCP "__thunk__0__" "clojure.core$find_protocol_impl" (class "clojure.lang.ILookupThunk"))))
                                      (209 (return))
                                      (endofcode 210))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 8) (max_locals . 10) (code_length . 414)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$find_protocol_impl" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (getstatic (fieldCP "__thunk__0__" "clojure.core$find_protocol_impl" (class "clojure.lang.ILookupThunk")))) 
                                      (12 (dup)) 
                                      (13 (aload_1)) 
                                      (14 (dup_x2)) 
                                      (15 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (20 (dup_x2)) 
                                      (21 (if_acmpeq 28)) ;;to TAG_0
                                      (24 (pop)) 
                                      (25 (goto 50))  ;;to TAG_1
                                      (28 (swap)) ;;at TAG_0
                                      (29 (pop)) 
                                      (30 (dup)) 
                                      (31 (getstatic (fieldCP "__site__0__" "clojure.core$find_protocol_impl" (class "clojure.lang.KeywordLookupSite")))) 
                                      (34 (swap)) 
                                      (35 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (40 (dup)) 
                                      (41 (putstatic (fieldCP "__thunk__0__" "clojure.core$find_protocol_impl" (class "clojure.lang.ILookupThunk")))) 
                                      (44 (swap)) 
                                      (45 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (50 (aload_2)) ;;at TAG_1
                                      (51 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (56 (dup)) 
                                      (57 (ifnull 72)) ;;to TAG_2
                                      (60 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (63 (if_acmpeq 73)) ;;to TAG_3
                                      (66 (aload_2)) 
                                      (67 (aconst_null)) 
                                      (68 (astore_2)) 
                                      (69 (goto 413)) ;;to TAG_4
                                      (72 (pop)) ;;at TAG_2
                                      (73 (getstatic (fieldCP "const__2" "clojure.core$find_protocol_impl" (class "clojure.lang.Var")))) ;;at TAG_3
                                      (76 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (79 (checkcast (class "clojure.lang.IFn"))) 
                                      (82 (aload_2)) 
                                      (83 (aconst_null)) 
                                      (84 (astore_2)) 
                                      (85 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (90 (astore_3)) 
                                      (91 (new (class "clojure.core$find_protocol_impl$impl__5844"))) 
                                      (94 (dup)) 
                                      (95 (aload_1)) 
                                      (96 (aconst_null)) 
                                      (97 (astore_1)) 
                                      (98 (invokespecial (methodCP "<init>" "clojure.core$find_protocol_impl$impl__5844" ((class "java.lang.Object")) void))) 
                                      (101 (astore 4)) 
                                      (103 (aload 4)) 
                                      (105 (checkcast (class "clojure.lang.IFn"))) 
                                      (108 (aload_3)) 
                                      (109 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (114 (astore 5)) 
                                      (116 (aload 5)) 
                                      (118 (dup)) 
                                      (119 (ifnull 136)) ;;to TAG_5
                                      (122 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (125 (if_acmpeq 137)) ;;to TAG_6
                                      (128 (aload 5)) 
                                      (130 (aconst_null)) 
                                      (131 (astore 5)) 
                                      (133 (goto 413)) ;;to TAG_4
                                      (136 (pop)) ;;at TAG_5
                                      (137 (aload_3)) ;;at TAG_6
                                      (138 (astore 6)) 
                                      (140 (aload 6)) 
                                      (142 (dup)) 
                                      (143 (ifnull 407)) ;;to TAG_7
                                      (146 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (149 (if_acmpeq 408)) ;;to TAG_8
                                      (152 (getstatic (fieldCP "const__3" "clojure.core$find_protocol_impl" (class "clojure.lang.Var")))) 
                                      (155 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (158 (checkcast (class "clojure.lang.IFn"))) 
                                      (161 (getstatic (fieldCP "const__4" "clojure.core$find_protocol_impl" (class "clojure.lang.Var")))) 
                                      (164 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (167 (checkcast (class "clojure.lang.IFn"))) 
                                      (170 (getstatic (fieldCP "const__5" "clojure.core$find_protocol_impl" (class "clojure.lang.Var")))) 
                                      (173 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (176 (getstatic (fieldCP "const__6" "clojure.core$find_protocol_impl" (class "clojure.lang.Var")))) 
                                      (179 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (182 (checkcast (class "clojure.lang.IFn"))) 
                                      (185 (aload 4)) 
                                      (187 (getstatic (fieldCP "const__7" "clojure.core$find_protocol_impl" (class "clojure.lang.Var")))) 
                                      (190 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (193 (checkcast (class "clojure.lang.IFn"))) 
                                      (196 (getstatic (fieldCP "const__8" "clojure.core$find_protocol_impl" (class "clojure.lang.Var")))) 
                                      (199 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (202 (checkcast (class "clojure.lang.IFn"))) 
                                      (205 (aload_3)) 
                                      (206 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (211 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (216 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (221 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (226 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (231 (astore 7)) 
                                      (233 (aload 7)) 
                                      (235 (dup)) 
                                      (236 (ifnull 253)) ;;to TAG_9
                                      (239 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (242 (if_acmpeq 254)) ;;to TAG_10
                                      (245 (aload 7)) 
                                      (247 (aconst_null)) 
                                      (248 (astore 7)) 
                                      (250 (goto 404)) ;;to TAG_11
                                      (253 (pop)) ;;at TAG_9
                                      (254 (getstatic (fieldCP "const__9" "clojure.core$find_protocol_impl" (class "clojure.lang.Var")))) ;;at TAG_10
                                      (257 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (260 (checkcast (class "clojure.lang.IFn"))) 
                                      (263 (getstatic (fieldCP "const__10" "clojure.core$find_protocol_impl" (class "clojure.lang.Var")))) 
                                      (266 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (269 (getstatic (fieldCP "const__11" "clojure.core$find_protocol_impl" (class "clojure.lang.Var")))) 
                                      (272 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (275 (checkcast (class "clojure.lang.IFn"))) 
                                      (278 (aload 4)) 
                                      (280 (getstatic (fieldCP "const__12" "clojure.core$find_protocol_impl" (class "clojure.lang.Var")))) 
                                      (283 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (286 (checkcast (class "clojure.lang.IFn"))) 
                                      (289 (getstatic (fieldCP "const__13" "clojure.core$find_protocol_impl" (class "clojure.lang.Var")))) 
                                      (292 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (295 (checkcast (class "clojure.lang.IFn"))) 
                                      (298 (aload_3)) 
                                      (299 (aconst_null)) 
                                      (300 (astore_3)) 
                                      (301 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (306 (getstatic (fieldCP "const__14" "clojure.core$find_protocol_impl" (class "java.lang.Object")))) 
                                      (309 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (314 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (319 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (324 (astore 8)) 
                                      (326 (aload 8)) 
                                      (328 (dup)) 
                                      (329 (ifnull 363)) ;;to TAG_12
                                      (332 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (335 (if_acmpeq 364)) ;;to TAG_13
                                      (338 (aload 8)) 
                                      (340 (aconst_null)) 
                                      (341 (astore 8)) 
                                      (343 (astore 9)) 
                                      (345 (aload 4)) 
                                      (347 (checkcast (class "clojure.lang.IFn"))) 
                                      (350 (aload 9)) 
                                      (352 (aconst_null)) 
                                      (353 (astore 9)) 
                                      (355 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (360 (goto 365)) ;;to TAG_14
                                      (363 (pop)) ;;at TAG_12
                                      (364 (aconst_null)) ;;at TAG_13
                                      (365 (astore 8)) ;;at TAG_14
                                      (367 (aload 8)) 
                                      (369 (dup)) 
                                      (370 (ifnull 387)) ;;to TAG_15
                                      (373 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (376 (if_acmpeq 388)) ;;to TAG_16
                                      (379 (aload 8)) 
                                      (381 (aconst_null)) 
                                      (382 (astore 8)) 
                                      (384 (goto 404)) ;;to TAG_11
                                      (387 (pop)) ;;at TAG_15
                                      (388 (aload 4)) ;;at TAG_16
                                      (390 (aconst_null)) 
                                      (391 (astore 4)) 
                                      (393 (checkcast (class "clojure.lang.IFn"))) 
                                      (396 (getstatic (fieldCP "const__14" "clojure.core$find_protocol_impl" (class "java.lang.Object")))) 
                                      (399 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (404 (goto 413)) ;;to TAG_4;;at TAG_11
                                      (407 (pop)) ;;at TAG_7
                                      (408 (aload 6)) ;;at TAG_8
                                      (410 (aconst_null)) 
                                      (411 (astore 6)) 
                                      (413 (areturn)) ;;at TAG_4
                                      (endofcode 414))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 28)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 27 (0 . 0) (20))))  ;;to TAG_0;;to TAG_1
                                      (20 (aload_2)) ;;at TAG_1
                                      (21 (putstatic (fieldCP "__thunk__0__" "clojure.core$find_protocol_impl" (class "clojure.lang.ILookupThunk")))) 
                                      (24 (goto 27))  ;;to TAG_0
                                      (27 (return)) ;;at TAG_0
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$find_protocol_impl-class-table*
  (make-static-class-decls 
   *clojure.core$find_protocol_impl*))

(defconst *package-name-map* 
  ("clojure.core$find_protocol_impl" . "clojure"))

