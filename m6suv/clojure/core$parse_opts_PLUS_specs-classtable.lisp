; core$parse_opts_PLUS_specs-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:44 CDT 2014.
;

(defconst *clojure.core$parse_opts_PLUS_specs*
 (make-class-def
      '(class "clojure.core$parse_opts_PLUS_specs"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "parse-opts")
                        (STRING  "nth")
                        (STRING  "parse-impls")
                        (STRING  "vec")
                        (STRING  "disj")
                        (STRING  "set")
                        (STRING  "map")
                        (STRING  "keys")
                        (STRING  "Object")
                        (STRING  "java.lang.Object")
                        (STRING  "apply")
                        (STRING  "concat")
                        (STRING  "vals")
                        (STRING  "seq")
                        (STRING  "remove")
                        (STRING  "no-print")
                        (STRING  "print-str")
                        (STRING  "java.lang.IllegalArgumentException")
                        (STRING  "Unsupported option(s) -"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__19" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 0) (code_length . 255)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "parse-opts"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "nth"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var"))))
                                      (26 (lconst_0))
                                      (27 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (30 (putstatic (fieldCP "const__2" "clojure.core$parse_opts_PLUS_specs" (class "java.lang.Object"))))
                                      (33 (lconst_1))
                                      (34 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (37 (putstatic (fieldCP "const__3" "clojure.core$parse_opts_PLUS_specs" (class "java.lang.Object"))))
                                      (40 (ldc 0))        ;;STRING:: "clojure.core"
                                      (42 (ldc 3))        ;;STRING:: "parse-impls"
                                      (44 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (47 (checkcast (class "clojure.lang.Var")))
                                      (50 (putstatic (fieldCP "const__4" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var"))))
                                      (53 (ldc 0))        ;;STRING:: "clojure.core"
                                      (55 (ldc 4))        ;;STRING:: "vec"
                                      (57 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (60 (checkcast (class "clojure.lang.Var")))
                                      (63 (putstatic (fieldCP "const__5" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var"))))
                                      (66 (ldc 0))        ;;STRING:: "clojure.core"
                                      (68 (ldc 5))        ;;STRING:: "disj"
                                      (70 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (73 (checkcast (class "clojure.lang.Var")))
                                      (76 (putstatic (fieldCP "const__6" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var"))))
                                      (79 (ldc 0))        ;;STRING:: "clojure.core"
                                      (81 (ldc 6))        ;;STRING:: "set"
                                      (83 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (86 (checkcast (class "clojure.lang.Var")))
                                      (89 (putstatic (fieldCP "const__7" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var"))))
                                      (92 (ldc 0))        ;;STRING:: "clojure.core"
                                      (94 (ldc 7))        ;;STRING:: "map"
                                      (96 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (99 (checkcast (class "clojure.lang.Var")))
                                      (102 (putstatic (fieldCP "const__8" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var"))))
                                      (105 (ldc 0))       ;;STRING:: "clojure.core"
                                      (107 (ldc 8))       ;;STRING:: "keys"
                                      (109 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (112 (checkcast (class "clojure.lang.Var")))
                                      (115 (putstatic (fieldCP "const__9" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var"))))
                                      (118 (aconst_null))
                                      (119 (ldc 9))       ;;STRING:: "Object"
                                      (121 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (124 (checkcast (class "clojure.lang.AFn")))
                                      (127 (putstatic (fieldCP "const__10" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.AFn"))))
                                      (130 (aconst_null))
                                      (131 (ldc 10))      ;;STRING:: "java.lang.Object"
                                      (133 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (136 (checkcast (class "clojure.lang.AFn")))
                                      (139 (putstatic (fieldCP "const__11" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.AFn"))))
                                      (142 (ldc 0))       ;;STRING:: "clojure.core"
                                      (144 (ldc 11))      ;;STRING:: "apply"
                                      (146 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (149 (checkcast (class "clojure.lang.Var")))
                                      (152 (putstatic (fieldCP "const__12" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var"))))
                                      (155 (ldc 0))       ;;STRING:: "clojure.core"
                                      (157 (ldc 12))      ;;STRING:: "concat"
                                      (159 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (162 (checkcast (class "clojure.lang.Var")))
                                      (165 (putstatic (fieldCP "const__13" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var"))))
                                      (168 (ldc 0))       ;;STRING:: "clojure.core"
                                      (170 (ldc 13))      ;;STRING:: "vals"
                                      (172 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (175 (checkcast (class "clojure.lang.Var")))
                                      (178 (putstatic (fieldCP "const__14" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var"))))
                                      (181 (ldc 0))       ;;STRING:: "clojure.core"
                                      (183 (ldc 14))      ;;STRING:: "seq"
                                      (185 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (188 (checkcast (class "clojure.lang.Var")))
                                      (191 (putstatic (fieldCP "const__15" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var"))))
                                      (194 (ldc 0))       ;;STRING:: "clojure.core"
                                      (196 (ldc 15))      ;;STRING:: "remove"
                                      (198 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (201 (checkcast (class "clojure.lang.Var")))
                                      (204 (putstatic (fieldCP "const__16" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var"))))
                                      (207 (aconst_null))
                                      (208 (ldc 16))      ;;STRING:: "no-print"
                                      (210 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (213 (checkcast (class "clojure.lang.Keyword")))
                                      (216 (putstatic (fieldCP "const__17" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Keyword"))))
                                      (219 (iconst_1))
                                      (220 (anewarray (class "java.lang.Object")))
                                      (223 (dup))
                                      (224 (iconst_0))
                                      (225 (aconst_null))
                                      (226 (ldc 16))      ;;STRING:: "no-print"
                                      (228 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (231 (aastore))
                                      (232 (invokestatic
					(methodCP "create" "clojure.lang.PersistentHashSet" ((array (class "java.lang.Object"))) (class "clojure.lang.PersistentHashSet"))))
                                      (235 (checkcast (class "clojure.lang.AFn")))
                                      (238 (putstatic (fieldCP "const__18" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.AFn"))))
                                      (241 (ldc 0))       ;;STRING:: "clojure.core"
                                      (243 (ldc 17))      ;;STRING:: "print-str"
                                      (245 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (248 (checkcast (class "clojure.lang.Var")))
                                      (251 (putstatic (fieldCP "const__19" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var"))))
                                      (254 (return))
                                      (endofcode 255))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 9) (max_locals . 10) (code_length . 360)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_1)) 
                                      (10 (aconst_null)) 
                                      (11 (astore_1)) 
                                      (12 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (17 (astore_2)) 
                                      (18 (aload_2)) 
                                      (19 (lconst_0)) 
                                      (20 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (23 (aconst_null)) 
                                      (24 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (27 (astore_3)) 
                                      (28 (aload_2)) 
                                      (29 (aconst_null)) 
                                      (30 (astore_2)) 
                                      (31 (lconst_1)) 
                                      (32 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (35 (aconst_null)) 
                                      (36 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (39 (astore 4)) 
                                      (41 (getstatic (fieldCP "const__4" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var")))) 
                                      (44 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (47 (checkcast (class "clojure.lang.IFn"))) 
                                      (50 (aload 4)) 
                                      (52 (aconst_null)) 
                                      (53 (astore 4)) 
                                      (55 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (60 (astore 5)) 
                                      (62 (getstatic (fieldCP "const__5" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var")))) 
                                      (65 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (68 (checkcast (class "clojure.lang.IFn"))) 
                                      (71 (getstatic (fieldCP "const__6" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var")))) 
                                      (74 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (77 (checkcast (class "clojure.lang.IFn"))) 
                                      (80 (getstatic (fieldCP "const__7" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var")))) 
                                      (83 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (86 (checkcast (class "clojure.lang.IFn"))) 
                                      (89 (getstatic (fieldCP "const__8" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var")))) 
                                      (92 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (95 (checkcast (class "clojure.lang.IFn"))) 
                                      (98 (new (class "clojure.core$parse_opts_PLUS_specs$fn__5702"))) 
                                      (101 (dup)) 
                                      (102 (invokespecial (methodCP "<init>" "clojure.core$parse_opts_PLUS_specs$fn__5702" () void))) 
                                      (105 (getstatic (fieldCP "const__9" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var")))) 
                                      (108 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (111 (checkcast (class "clojure.lang.IFn"))) 
                                      (114 (aload 5)) 
                                      (116 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (121 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (126 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (131 (getstatic (fieldCP "const__10" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.AFn")))) 
                                      (134 (getstatic (fieldCP "const__11" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.AFn")))) 
                                      (137 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (142 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (147 (astore 6)) 
                                      (149 (getstatic (fieldCP "const__8" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var")))) 
                                      (152 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (155 (checkcast (class "clojure.lang.IFn"))) 
                                      (158 (new (class "clojure.core$parse_opts_PLUS_specs$fn__5705"))) 
                                      (161 (dup)) 
                                      (162 (invokespecial (methodCP "<init>" "clojure.core$parse_opts_PLUS_specs$fn__5705" () void))) 
                                      (165 (getstatic (fieldCP "const__12" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var")))) 
                                      (168 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (171 (checkcast (class "clojure.lang.IFn"))) 
                                      (174 (getstatic (fieldCP "const__13" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var")))) 
                                      (177 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (180 (getstatic (fieldCP "const__14" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var")))) 
                                      (183 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (186 (checkcast (class "clojure.lang.IFn"))) 
                                      (189 (aload 5)) 
                                      (191 (aconst_null)) 
                                      (192 (astore 5)) 
                                      (194 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (199 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (204 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (209 (astore 7)) 
                                      (211 (getstatic (fieldCP "const__15" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var")))) 
                                      (214 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (217 (checkcast (class "clojure.lang.IFn"))) 
                                      (220 (getstatic (fieldCP "const__16" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var")))) 
                                      (223 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (226 (checkcast (class "clojure.lang.IFn"))) 
                                      (229 (getstatic (fieldCP "const__18" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.AFn")))) 
                                      (232 (getstatic (fieldCP "const__9" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var")))) 
                                      (235 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (238 (checkcast (class "clojure.lang.IFn"))) 
                                      (241 (aload_3)) 
                                      (242 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (247 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (252 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (257 (astore 8)) 
                                      (259 (aload 8)) 
                                      (261 (dup)) 
                                      (262 (ifnull 327)) ;;to TAG_0
                                      (265 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (268 (if_acmpeq 328)) ;;to TAG_1
                                      (271 (aload 8)) 
                                      (273 (aconst_null)) 
                                      (274 (astore 8)) 
                                      (276 (astore 9)) 
                                      (278 (ldc 18)) ;;STRING:: "java.lang.IllegalArgumentException"
                                      (280 (invokestatic (methodCP "forName" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.Class")))) 
                                      (283 (iconst_1)) 
                                      (284 (anewarray (class "java.lang.Object"))) 
                                      (287 (dup)) 
                                      (288 (iconst_0)) 
                                      (289 (getstatic (fieldCP "const__12" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var")))) 
                                      (292 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (295 (checkcast (class "clojure.lang.IFn"))) 
                                      (298 (getstatic (fieldCP "const__19" "clojure.core$parse_opts_PLUS_specs" (class "clojure.lang.Var")))) 
                                      (301 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (304 (ldc 19)) ;;STRING:: "Unsupported option(s) -"
                                      (306 (aload 9)) 
                                      (308 (aconst_null)) 
                                      (309 (astore 9)) 
                                      (311 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (316 (aastore)) 
                                      (317 (invokestatic (methodCP "invokeConstructor" "clojure.lang.Reflector" ((class "java.lang.Class") (array (class "java.lang.Object"))) (class "java.lang.Object")))) 
                                      (320 (checkcast (class "java.lang.Throwable"))) 
                                      (323 (athrow)) 
                                      (324 (goto 330))  ;;to TAG_2
                                      (327 (pop)) ;;at TAG_0
                                      (328 (aconst_null)) ;;at TAG_1
                                      (329 (pop)) 
                                      (330 (iconst_3)) ;;at TAG_2
                                      (331 (anewarray (class "java.lang.Object"))) 
                                      (334 (dup)) 
                                      (335 (iconst_0)) 
                                      (336 (aload 6)) 
                                      (338 (aconst_null)) 
                                      (339 (astore 6)) 
                                      (341 (aastore)) 
                                      (342 (dup)) 
                                      (343 (iconst_1)) 
                                      (344 (aload 7)) 
                                      (346 (aconst_null)) 
                                      (347 (astore 7)) 
                                      (349 (aastore)) 
                                      (350 (dup)) 
                                      (351 (iconst_2)) 
                                      (352 (aload_3)) 
                                      (353 (aconst_null)) 
                                      (354 (astore_3)) 
                                      (355 (aastore)) 
                                      (356 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (359 (areturn)) 
                                      (endofcode 360))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$parse_opts_PLUS_specs-class-table*
  (make-static-class-decls 
   *clojure.core$parse_opts_PLUS_specs*))

(defconst *package-name-map* 
  ("clojure.core$parse_opts_PLUS_specs" . "clojure"))

