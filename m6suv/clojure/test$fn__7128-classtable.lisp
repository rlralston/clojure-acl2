; test$fn__7128-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:59 CDT 2014.
;

(defconst *clojure.test$fn__7128*
 (make-class-def
      '(class "clojure.test$fn__7128"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.test")
                        (STRING  "use-fixtures")
                        (STRING  "file")
                        (STRING  "column")
                        (STRING  "line")
                        (STRING  "clojure/test.clj")
                        (STRING  "clojure.core")
                        (STRING  "instance?")
                        (STRING  "deref")
                        (STRING  "doc")
                        (STRING  "added")
                        (STRING  "1.1")
                        (STRING  "Wrap test runs in a fixture function to perform setup and\n  teardown. Using a fixture-type of :each wraps every test\n  individually, while:once wraps the whole run in a single function.")
                        (STRING  "default")
                        (STRING  "global-hierarchy"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 0) (code_length . 297)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.test"
                                      (2 (ldc 1))         ;;STRING:: "use-fixtures"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.test$fn__7128" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "file"
                                      (16 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (19 (checkcast (class "clojure.lang.Keyword")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.test$fn__7128" (class "clojure.lang.Keyword"))))
                                      (25 (aconst_null))
                                      (26 (ldc 3))        ;;STRING:: "column"
                                      (28 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (31 (checkcast (class "clojure.lang.Keyword")))
                                      (34 (putstatic (fieldCP "const__2" "clojure.test$fn__7128" (class "clojure.lang.Keyword"))))
                                      (37 (iconst_1))
                                      (38 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (41 (putstatic (fieldCP "const__3" "clojure.test$fn__7128" (class "java.lang.Object"))))
                                      (44 (aconst_null))
                                      (45 (ldc 4))        ;;STRING:: "line"
                                      (47 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (50 (checkcast (class "clojure.lang.Keyword")))
                                      (53 (putstatic (fieldCP "const__4" "clojure.test$fn__7128" (class "clojure.lang.Keyword"))))
                                      (56 (sipush 654))
                                      (59 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (62 (putstatic (fieldCP "const__5" "clojure.test$fn__7128" (class "java.lang.Object"))))
                                      (65 (bipush 6))
                                      (67 (anewarray (class "java.lang.Object")))
                                      (70 (dup))
                                      (71 (iconst_0))
                                      (72 (aconst_null))
                                      (73 (ldc 3))        ;;STRING:: "column"
                                      (75 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (78 (aastore))
                                      (79 (dup))
                                      (80 (iconst_1))
                                      (81 (iconst_1))
                                      (82 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (85 (aastore))
                                      (86 (dup))
                                      (87 (iconst_2))
                                      (88 (aconst_null))
                                      (89 (ldc 4))        ;;STRING:: "line"
                                      (91 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (94 (aastore))
                                      (95 (dup))
                                      (96 (iconst_3))
                                      (97 (sipush 654))
                                      (100 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (103 (aastore))
                                      (104 (dup))
                                      (105 (iconst_4))
                                      (106 (aconst_null))
                                      (107 (ldc 2))       ;;STRING:: "file"
                                      (109 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (112 (aastore))
                                      (113 (dup))
                                      (114 (iconst_5))
                                      (115 (ldc 5))       ;;STRING:: "clojure/test.clj"
                                      (117 (aastore))
                                      (118 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (121 (checkcast (class "clojure.lang.AFn")))
                                      (124 (putstatic (fieldCP "const__6" "clojure.test$fn__7128" (class "clojure.lang.AFn"))))
                                      (127 (ldc 6))       ;;STRING:: "clojure.core"
                                      (129 (ldc 7))       ;;STRING:: "instance?"
                                      (131 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (134 (checkcast (class "clojure.lang.Var")))
                                      (137 (putstatic (fieldCP "const__7" "clojure.test$fn__7128" (class "clojure.lang.Var"))))
                                      (140 (ldc 6))       ;;STRING:: "clojure.core"
                                      (142 (ldc 8))       ;;STRING:: "deref"
                                      (144 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (147 (checkcast (class "clojure.lang.Var")))
                                      (150 (putstatic (fieldCP "const__8" "clojure.test$fn__7128" (class "clojure.lang.Var"))))
                                      (153 (aconst_null))
                                      (154 (ldc 9))       ;;STRING:: "doc"
                                      (156 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (159 (checkcast (class "clojure.lang.Keyword")))
                                      (162 (putstatic (fieldCP "const__9" "clojure.test$fn__7128" (class "clojure.lang.Keyword"))))
                                      (165 (aconst_null))
                                      (166 (ldc 10))      ;;STRING:: "added"
                                      (168 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (171 (checkcast (class "clojure.lang.Keyword")))
                                      (174 (putstatic (fieldCP "const__10" "clojure.test$fn__7128" (class "clojure.lang.Keyword"))))
                                      (177 (bipush 10))
                                      (179 (anewarray (class "java.lang.Object")))
                                      (182 (dup))
                                      (183 (iconst_0))
                                      (184 (aconst_null))
                                      (185 (ldc 3))       ;;STRING:: "column"
                                      (187 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (190 (aastore))
                                      (191 (dup))
                                      (192 (iconst_1))
                                      (193 (iconst_1))
                                      (194 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (197 (aastore))
                                      (198 (dup))
                                      (199 (iconst_2))
                                      (200 (aconst_null))
                                      (201 (ldc 10))      ;;STRING:: "added"
                                      (203 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (206 (aastore))
                                      (207 (dup))
                                      (208 (iconst_3))
                                      (209 (ldc 11))      ;;STRING:: "1.1"
                                      (211 (aastore))
                                      (212 (dup))
                                      (213 (iconst_4))
                                      (214 (aconst_null))
                                      (215 (ldc 9))       ;;STRING:: "doc"
                                      (217 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (220 (aastore))
                                      (221 (dup))
                                      (222 (iconst_5))
                                      (223 (ldc 12))      ;;STRING:: "Wrap test runs in a fixture function to perform setup and\n  teardown. Using a fixture-type of :each wraps every test\n  individually, while:once wraps the whole run in a single function."
                                      (225 (aastore))
                                      (226 (dup))
                                      (227 (bipush 6))
                                      (229 (aconst_null))
                                      (230 (ldc 4))       ;;STRING:: "line"
                                      (232 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (235 (aastore))
                                      (236 (dup))
                                      (237 (bipush 7))
                                      (239 (sipush 654))
                                      (242 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (245 (aastore))
                                      (246 (dup))
                                      (247 (bipush 8))
                                      (249 (aconst_null))
                                      (250 (ldc 2))       ;;STRING:: "file"
                                      (252 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (255 (aastore))
                                      (256 (dup))
                                      (257 (bipush 9))
                                      (259 (ldc 5))       ;;STRING:: "clojure/test.clj"
                                      (261 (aastore))
                                      (262 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (265 (checkcast (class "clojure.lang.AFn")))
                                      (268 (putstatic (fieldCP "const__11" "clojure.test$fn__7128" (class "clojure.lang.AFn"))))
                                      (271 (aconst_null))
                                      (272 (ldc 13))      ;;STRING:: "default"
                                      (274 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (277 (checkcast (class "clojure.lang.Keyword")))
                                      (280 (putstatic (fieldCP "const__12" "clojure.test$fn__7128" (class "clojure.lang.Keyword"))))
                                      (283 (ldc 6))       ;;STRING:: "clojure.core"
                                      (285 (ldc 14))      ;;STRING:: "global-hierarchy"
                                      (287 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (290 (checkcast (class "clojure.lang.Var")))
                                      (293 (putstatic (fieldCP "const__13" "clojure.test$fn__7128" (class "clojure.lang.Var"))))
                                      (296 (return))
                                      (endofcode 297))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 8) (max_locals . 3) (code_length . 108)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.test$fn__7128" (class "clojure.lang.Var")))) 
                                      (3 (dup)) 
                                      (4 (getstatic (fieldCP "const__6" "clojure.test$fn__7128" (class "clojure.lang.AFn")))) 
                                      (7 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (10 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (13 (astore_1)) 
                                      (14 (aload_1)) 
                                      (15 (checkcast (class "clojure.lang.Var"))) 
                                      (18 (invokevirtual (methodCP "hasRoot" "clojure.lang.Var" () boolean))) 
                                      (21 (istore_2)) 
                                      (22 (iload_2)) 
                                      (23 (ifeq 50)) ;;to TAG_0
                                      (26 (getstatic (fieldCP "const__8" "clojure.test$fn__7128" (class "clojure.lang.Var")))) 
                                      (29 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (32 (checkcast (class "clojure.lang.IFn"))) 
                                      (35 (aload_1)) 
                                      (36 (aconst_null)) 
                                      (37 (astore_1)) 
                                      (38 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (43 (instanceof (class "clojure.lang.MultiFn"))) 
                                      (46 (goto 51)) ;;to TAG_1
                                      (49 (pop)) 
                                      (50 (iload_2)) ;;at TAG_0
                                      (51 (ifeq 59))  ;;to TAG_2;;at TAG_1
                                      (54 (aconst_null)) 
                                      (55 (goto 107)) ;;to TAG_3
                                      (58 (pop)) 
                                      (59 (getstatic (fieldCP "const__0" "clojure.test$fn__7128" (class "clojure.lang.Var")))) ;;at TAG_2
                                      (62 (dup)) 
                                      (63 (getstatic (fieldCP "const__11" "clojure.test$fn__7128" (class "clojure.lang.AFn")))) 
                                      (66 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (69 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (72 (dup)) 
                                      (73 (new (class "clojure.lang.MultiFn"))) 
                                      (76 (dup)) 
                                      (77 (ldc 1)) ;;STRING:: "use-fixtures"
                                      (79 (checkcast (class "java.lang.String"))) 
                                      (82 (new (class "clojure.test$fn__7128$fn__7129"))) 
                                      (85 (dup)) 
                                      (86 (invokespecial (methodCP "<init>" "clojure.test$fn__7128$fn__7129" () void))) 
                                      (89 (checkcast (class "clojure.lang.IFn"))) 
                                      (92 (getstatic (fieldCP "const__12" "clojure.test$fn__7128" (class "clojure.lang.Keyword")))) 
                                      (95 (getstatic (fieldCP "const__13" "clojure.test$fn__7128" (class "clojure.lang.Var")))) 
                                      (98 (checkcast (class "clojure.lang.IRef"))) 
                                      (101 (invokespecial (methodCP "<init>" "clojure.lang.MultiFn" ((class "java.lang.String") (class "clojure.lang.IFn") (class "java.lang.Object") (class "clojure.lang.IRef")) void))) 
                                      (104 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (107 (areturn)) ;;at TAG_3
                                      (endofcode 108))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *test$fn__7128-class-table*
  (make-static-class-decls 
   *clojure.test$fn__7128*))

(defconst *package-name-map* 
  ("clojure.test$fn__7128" . "clojure"))

