; pprint$write-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:57 CDT 2014.
;

(defconst *clojure.pprint$write*
 (make-class-def
      '(class "clojure.pprint$write"
            "clojure.lang.RestFn"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "merge")
                        (STRING  "stream")
                        (STRING  "apply")
                        (STRING  "hash-map")
                        (STRING  "clojure.pprint")
                        (STRING  "table-ize")
                        (STRING  "write-option-table")
                        (STRING  "not")
                        (STRING  "=")
                        (STRING  "*print-base*")
                        (LONG 10)
                        (STRING  "*print-radix*")
                        (STRING  "pr")
                        (STRING  "pr-with-base")
                        (STRING  "contains?")
                        (STRING  "*out*")
                        (STRING  "*print-pretty*")
                        (STRING  "pretty-writer?")
                        (STRING  "push-thread-bindings")
                        (STRING  "make-pretty-writer")
                        (STRING  "*print-right-margin*")
                        (STRING  "*print-miser-width*")
                        (STRING  "nil?"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__19" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__20" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__21" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__22" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 0) (code_length . 330)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "merge"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "stream"
                                      (16 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (19 (checkcast (class "clojure.lang.Keyword")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.pprint$write" (class "clojure.lang.Keyword"))))
                                      (25 (iconst_2))
                                      (26 (anewarray (class "java.lang.Object")))
                                      (29 (dup))
                                      (30 (iconst_0))
                                      (31 (aconst_null))
                                      (32 (ldc 2))        ;;STRING:: "stream"
                                      (34 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (37 (aastore))
                                      (38 (dup))
                                      (39 (iconst_1))
                                      (40 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (43 (aastore))
                                      (44 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (47 (checkcast (class "clojure.lang.AFn")))
                                      (50 (putstatic (fieldCP "const__2" "clojure.pprint$write" (class "clojure.lang.AFn"))))
                                      (53 (ldc 0))        ;;STRING:: "clojure.core"
                                      (55 (ldc 3))        ;;STRING:: "apply"
                                      (57 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (60 (checkcast (class "clojure.lang.Var")))
                                      (63 (putstatic (fieldCP "const__3" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (66 (ldc 0))        ;;STRING:: "clojure.core"
                                      (68 (ldc 4))        ;;STRING:: "hash-map"
                                      (70 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (73 (checkcast (class "clojure.lang.Var")))
                                      (76 (putstatic (fieldCP "const__4" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (79 (ldc 5))        ;;STRING:: "clojure.pprint"
                                      (81 (ldc 6))        ;;STRING:: "table-ize"
                                      (83 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (86 (checkcast (class "clojure.lang.Var")))
                                      (89 (putstatic (fieldCP "const__5" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (92 (ldc 5))        ;;STRING:: "clojure.pprint"
                                      (94 (ldc 7))        ;;STRING:: "write-option-table"
                                      (96 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (99 (checkcast (class "clojure.lang.Var")))
                                      (102 (putstatic (fieldCP "const__6" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (105 (ldc 0))       ;;STRING:: "clojure.core"
                                      (107 (ldc 8))       ;;STRING:: "not"
                                      (109 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (112 (checkcast (class "clojure.lang.Var")))
                                      (115 (putstatic (fieldCP "const__7" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (118 (ldc 0))       ;;STRING:: "clojure.core"
                                      (120 (ldc 9))       ;;STRING:: "="
                                      (122 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (125 (checkcast (class "clojure.lang.Var")))
                                      (128 (putstatic (fieldCP "const__8" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (131 (ldc 5))       ;;STRING:: "clojure.pprint"
                                      (133 (ldc 10))      ;;STRING:: "*print-base*"
                                      (135 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (138 (checkcast (class "clojure.lang.Var")))
                                      (141 (putstatic (fieldCP "const__9" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (144 (ldc2_w 11))   ;; LONG:: "10"
                                      (147 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (150 (putstatic (fieldCP "const__10" "clojure.pprint$write" (class "java.lang.Object"))))
                                      (153 (ldc 5))       ;;STRING:: "clojure.pprint"
                                      (155 (ldc 12))      ;;STRING:: "*print-radix*"
                                      (157 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (160 (checkcast (class "clojure.lang.Var")))
                                      (163 (putstatic (fieldCP "const__11" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (166 (ldc 0))       ;;STRING:: "clojure.core"
                                      (168 (ldc 13))      ;;STRING:: "pr"
                                      (170 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (173 (checkcast (class "clojure.lang.Var")))
                                      (176 (putstatic (fieldCP "const__12" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (179 (ldc 5))       ;;STRING:: "clojure.pprint"
                                      (181 (ldc 14))      ;;STRING:: "pr-with-base"
                                      (183 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (186 (checkcast (class "clojure.lang.Var")))
                                      (189 (putstatic (fieldCP "const__13" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (192 (ldc 0))       ;;STRING:: "clojure.core"
                                      (194 (ldc 15))      ;;STRING:: "contains?"
                                      (196 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (199 (checkcast (class "clojure.lang.Var")))
                                      (202 (putstatic (fieldCP "const__14" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (205 (ldc 0))       ;;STRING:: "clojure.core"
                                      (207 (ldc 16))      ;;STRING:: "*out*"
                                      (209 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (212 (checkcast (class "clojure.lang.Var")))
                                      (215 (putstatic (fieldCP "const__15" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (218 (ldc 5))       ;;STRING:: "clojure.pprint"
                                      (220 (ldc 17))      ;;STRING:: "*print-pretty*"
                                      (222 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (225 (checkcast (class "clojure.lang.Var")))
                                      (228 (putstatic (fieldCP "const__16" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (231 (ldc 5))       ;;STRING:: "clojure.pprint"
                                      (233 (ldc 18))      ;;STRING:: "pretty-writer?"
                                      (235 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (238 (checkcast (class "clojure.lang.Var")))
                                      (241 (putstatic (fieldCP "const__17" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (244 (ldc 0))       ;;STRING:: "clojure.core"
                                      (246 (ldc 19))      ;;STRING:: "push-thread-bindings"
                                      (248 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (251 (checkcast (class "clojure.lang.Var")))
                                      (254 (putstatic (fieldCP "const__18" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (257 (ldc 5))       ;;STRING:: "clojure.pprint"
                                      (259 (ldc 20))      ;;STRING:: "make-pretty-writer"
                                      (261 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (264 (checkcast (class "clojure.lang.Var")))
                                      (267 (putstatic (fieldCP "const__19" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (270 (ldc 5))       ;;STRING:: "clojure.pprint"
                                      (272 (ldc 21))      ;;STRING:: "*print-right-margin*"
                                      (274 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (277 (checkcast (class "clojure.lang.Var")))
                                      (280 (putstatic (fieldCP "const__20" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (283 (ldc 5))       ;;STRING:: "clojure.pprint"
                                      (285 (ldc 22))      ;;STRING:: "*print-miser-width*"
                                      (287 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (290 (checkcast (class "clojure.lang.Var")))
                                      (293 (putstatic (fieldCP "const__21" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (296 (ldc 0))       ;;STRING:: "clojure.core"
                                      (298 (ldc 23))      ;;STRING:: "nil?"
                                      (300 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (303 (checkcast (class "clojure.lang.Var")))
                                      (306 (putstatic (fieldCP "const__22" "clojure.pprint$write" (class "clojure.lang.Var"))))
                                      (309 (new (class "clojure.lang.KeywordLookupSite")))
                                      (312 (dup))
                                      (313 (aconst_null))
                                      (314 (ldc 2))       ;;STRING:: "stream"
                                      (316 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (319 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (322 (dup))
                                      (323 (putstatic (fieldCP "__site__0__" "clojure.pprint$write" (class "clojure.lang.KeywordLookupSite"))))
                                      (326 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$write" (class "clojure.lang.ILookupThunk"))))
                                      (329 (return))
                                      (endofcode 330))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.RestFn" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doInvoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 12) (code_length . 631)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (getstatic (fieldCP "const__2" "clojure.pprint$write" (class "clojure.lang.AFn")))) 
                                      (12 (getstatic (fieldCP "const__3" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (15 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (18 (checkcast (class "clojure.lang.IFn"))) 
                                      (21 (getstatic (fieldCP "const__4" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (24 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (27 (aload_2)) 
                                      (28 (aconst_null)) 
                                      (29 (astore_2)) 
                                      (30 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (35 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (40 (astore_3)) 
                                      (41 (getstatic (fieldCP "const__5" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (44 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (47 (checkcast (class "clojure.lang.IFn"))) 
                                      (50 (getstatic (fieldCP "const__6" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (53 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (56 (aload_3)) 
                                      (57 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (62 (checkcast (class "clojure.lang.Associative"))) 
                                      (65 (invokestatic (methodCP "pushThreadBindings" "clojure.lang.Var" ((class "clojure.lang.Associative")) void))) 
                                      (68 (getstatic (fieldCP "const__7" "clojure.pprint$write" (class "clojure.lang.Var")))) ;;at TAG_31
                                      (71 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (74 (checkcast (class "clojure.lang.IFn"))) 
                                      (77 (getstatic (fieldCP "const__9" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (80 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (83 (ldc2_w 11)) ;; LONG:: "10"
                                      (86 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") long) boolean))) 
                                      (89 (ifeq 98)) ;;to TAG_0
                                      (92 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (95 (goto 101)) ;;to TAG_1
                                      (98 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_0
                                      (101 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_1
                                      (106 (astore 4)) 
                                      (108 (aload 4)) 
                                      (110 (dup)) 
                                      (111 (ifnull 128)) ;;to TAG_2
                                      (114 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (117 (if_acmpeq 129)) ;;to TAG_3
                                      (120 (aload 4)) 
                                      (122 (aconst_null)) 
                                      (123 (astore 4)) 
                                      (125 (goto 135)) ;;to TAG_4
                                      (128 (pop)) ;;at TAG_2
                                      (129 (getstatic (fieldCP "const__11" "clojure.pprint$write" (class "clojure.lang.Var")))) ;;at TAG_3
                                      (132 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (135 (dup)) ;;at TAG_4
                                      (136 (ifnull 170)) ;;to TAG_5
                                      (139 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (142 (if_acmpeq 171)) ;;to TAG_6
                                      (145 (iconst_2)) 
                                      (146 (anewarray (class "java.lang.Object"))) 
                                      (149 (dup)) 
                                      (150 (iconst_0)) 
                                      (151 (getstatic (fieldCP "const__12" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (154 (aastore)) 
                                      (155 (dup)) 
                                      (156 (iconst_1)) 
                                      (157 (getstatic (fieldCP "const__13" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (160 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (163 (aastore)) 
                                      (164 (invokestatic (methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (167 (goto 174)) ;;to TAG_7
                                      (170 (pop)) ;;at TAG_5
                                      (171 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentArrayMap" (class "clojure.lang.PersistentArrayMap")))) ;;at TAG_6
                                      (174 (checkcast (class "clojure.lang.Associative"))) ;;at TAG_7
                                      (177 (invokestatic (methodCP "pushThreadBindings" "clojure.lang.Var" ((class "clojure.lang.Associative")) void))) 
                                      (180 (getstatic (fieldCP "const__14" "clojure.pprint$write" (class "clojure.lang.Var")))) ;;at TAG_28
                                      (183 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (186 (checkcast (class "clojure.lang.IFn"))) 
                                      (189 (aload_3)) 
                                      (190 (getstatic (fieldCP "const__1" "clojure.pprint$write" (class "clojure.lang.Keyword")))) 
                                      (193 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (198 (dup)) 
                                      (199 (ifnull 254)) ;;to TAG_8
                                      (202 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (205 (if_acmpeq 255)) ;;to TAG_9
                                      (208 (getstatic (fieldCP "__thunk__0__" "clojure.pprint$write" (class "clojure.lang.ILookupThunk")))) 
                                      (211 (dup)) 
                                      (212 (aload_3)) 
                                      (213 (aconst_null)) 
                                      (214 (astore_3)) 
                                      (215 (dup_x2)) 
                                      (216 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (221 (dup_x2)) 
                                      (222 (if_acmpeq 229)) ;;to TAG_10
                                      (225 (pop)) 
                                      (226 (goto 251)) ;;to TAG_11
                                      (229 (swap)) ;;at TAG_10
                                      (230 (pop)) 
                                      (231 (dup)) 
                                      (232 (getstatic (fieldCP "__site__0__" "clojure.pprint$write" (class "clojure.lang.KeywordLookupSite")))) 
                                      (235 (swap)) 
                                      (236 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (241 (dup)) 
                                      (242 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$write" (class "clojure.lang.ILookupThunk")))) 
                                      (245 (swap)) 
                                      (246 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (251 (goto 258)) ;;to TAG_12;;at TAG_11
                                      (254 (pop)) ;;at TAG_8
                                      (255 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_9
                                      (258 (astore 5)) ;;at TAG_12
                                      (260 (getstatic (fieldCP "const__8" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (263 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (266 (astore 6)) 
                                      (268 (aload 5)) 
                                      (270 (astore 7)) 
                                      (272 (aload 6)) 
                                      (274 (checkcast (class "clojure.lang.IFn"))) 
                                      (277 (aconst_null)) 
                                      (278 (aload 7)) 
                                      (280 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (285 (dup)) 
                                      (286 (ifnull 305))  ;;to TAG_13
                                      (289 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (292 (if_acmpeq 306)) ;;to TAG_14
                                      (295 (new (class "java.io.StringWriter"))) 
                                      (298 (dup)) 
                                      (299 (invokespecial (methodCP "<init>" "java.io.StringWriter" () void))) 
                                      (302 (goto 349)) ;;to TAG_15
                                      (305 (pop)) ;;at TAG_13
                                      (306 (aload 6)) ;;at TAG_14
                                      (308 (aconst_null)) 
                                      (309 (astore 6)) 
                                      (311 (checkcast (class "clojure.lang.IFn"))) 
                                      (314 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (317 (aload 7)) 
                                      (319 (aconst_null)) 
                                      (320 (astore 7)) 
                                      (322 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (327 (dup)) 
                                      (328 (ifnull 346)) ;;to TAG_16
                                      (331 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (334 (if_acmpeq 347)) ;;to TAG_17
                                      (337 (getstatic (fieldCP "const__15" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (340 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (343 (goto 349)) ;;to TAG_15
                                      (346 (pop)) ;;at TAG_16
                                      (347 (aload 5)) ;;at TAG_17
                                      (349 (astore 6)) ;;at TAG_15
                                      (351 (getstatic (fieldCP "const__16" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (354 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (357 (dup)) 
                                      (358 (ifnull 512)) ;;to TAG_18
                                      (361 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (364 (if_acmpeq 513)) ;;to TAG_19
                                      (367 (aload 6)) 
                                      (369 (astore 7)) 
                                      (371 (getstatic (fieldCP "const__7" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (374 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (377 (checkcast (class "clojure.lang.IFn"))) 
                                      (380 (getstatic (fieldCP "const__17" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (383 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (386 (checkcast (class "clojure.lang.IFn"))) 
                                      (389 (aload 7)) 
                                      (391 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (396 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (401 (astore 8)) 
                                      (403 (getstatic (fieldCP "const__18" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (406 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (409 (checkcast (class "clojure.lang.IFn"))) 
                                      (412 (getstatic (fieldCP "const__4" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (415 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (418 (checkcast (class "clojure.lang.IFn"))) 
                                      (421 (getstatic (fieldCP "const__15" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (424 (aload 8)) 
                                      (426 (aconst_null)) 
                                      (427 (astore 8)) 
                                      (429 (dup)) 
                                      (430 (ifnull 473)) ;;to TAG_20
                                      (433 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (436 (if_acmpeq 474)) ;;to TAG_21
                                      (439 (getstatic (fieldCP "const__19" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (442 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (445 (checkcast (class "clojure.lang.IFn"))) 
                                      (448 (aload 7)) 
                                      (450 (aconst_null)) 
                                      (451 (astore 7)) 
                                      (453 (getstatic (fieldCP "const__20" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (456 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (459 (getstatic (fieldCP "const__21" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (462 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (465 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (470 (goto 479)) ;;to TAG_22
                                      (473 (pop)) ;;at TAG_20
                                      (474 (aload 7)) ;;at TAG_21
                                      (476 (aconst_null)) 
                                      (477 (astore 7)) 
                                      (479 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) ;;at TAG_22
                                      (484 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (489 (pop)) 
                                      (490 (new (class "clojure.pprint$write$fn__7583"))) 
                                      (493 (dup)) 
                                      (494 (aload_1)) 
                                      (495 (aconst_null)) 
                                      (496 (astore_1)) 
                                      (497 (invokespecial (methodCP "<init>" "clojure.pprint$write$fn__7583" ((class "java.lang.Object")) void))) 
                                      (500 (checkcast (class "clojure.lang.IFn"))) 
                                      (503 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (508 (pop)) 
                                      (509 (goto 566)) ;;to TAG_23
                                      (512 (pop)) ;;at TAG_18
                                      (513 (getstatic (fieldCP "const__18" "clojure.pprint$write" (class "clojure.lang.Var")))) ;;at TAG_19
                                      (516 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (519 (checkcast (class "clojure.lang.IFn"))) 
                                      (522 (getstatic (fieldCP "const__4" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (525 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (528 (checkcast (class "clojure.lang.IFn"))) 
                                      (531 (getstatic (fieldCP "const__15" "clojure.pprint$write" (class "clojure.lang.Var")))) 
                                      (534 (aload 6)) 
                                      (536 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (541 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (546 (pop)) 
                                      (547 (new (class "clojure.pprint$write$fn__7585"))) 
                                      (550 (dup)) 
                                      (551 (aload_1)) 
                                      (552 (aconst_null)) 
                                      (553 (astore_1)) 
                                      (554 (invokespecial (methodCP "<init>" "clojure.pprint$write$fn__7585" ((class "java.lang.Object")) void))) 
                                      (557 (checkcast (class "clojure.lang.IFn"))) 
                                      (560 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (565 (pop)) 
                                      (566 (aload 5)) ;;at TAG_23
                                      (568 (aconst_null)) 
                                      (569 (astore 5)) 
                                      (571 (aconst_null)) 
                                      (572 (invokestatic (methodCP "identical" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (575 (ifeq 593)) ;;to TAG_24
                                      (578 (aload 6)) 
                                      (580 (aconst_null)) 
                                      (581 (astore 6)) 
                                      (583 (checkcast (class "java.io.StringWriter"))) 
                                      (586 (invokevirtual (methodCP "toString" "java.io.StringWriter" () (class "java.lang.String")))) 
                                      (589 (goto 594)) ;;to TAG_25
                                      (592 (pop)) 
                                      (593 (aconst_null)) ;;at TAG_24
                                      (594 (astore 4)) ;;at TAG_25
                                      (596 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) ;;at TAG_29
                                      (599 (goto 610)) ;;to TAG_26
                                      (602 (astore 9)) ;;at TAG_30
                                      (604 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) 
                                      (607 (aload 9)) 
                                      (609 (athrow)) 
                                      (610 (aload 4)) ;;at TAG_26
                                      (612 (astore 10)) 
                                      (614 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) ;;at TAG_32
                                      (617 (goto 628)) ;;to TAG_27
                                      (620 (astore 11)) ;;at TAG_33
                                      (622 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) 
                                      (625 (aload 11)) 
                                      (627 (athrow)) 
                                      (628 (aload 10)) ;;at TAG_27
                                      (630 (areturn)) 
                                      (endofcode 631))
                                   (Exceptions 
                                     (handler 180 596  602 (class "java.lang.Throwable"))
                                     (handler 68 614  620 (class "java.lang.Throwable")))
                                   (StackMap )))
                        (method "getRequiredArity"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iconst_1))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 28)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 27 (0 . 0) (20))))  ;;to TAG_0;;to TAG_1
                                      (20 (aload_2)) ;;at TAG_1
                                      (21 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$write" (class "clojure.lang.ILookupThunk")))) 
                                      (24 (goto 27))  ;;to TAG_0
                                      (27 (return)) ;;at TAG_0
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$write-class-table*
  (make-static-class-decls 
   *clojure.pprint$write*))

(defconst *package-name-map* 
  ("clojure.pprint$write" . "clojure"))

