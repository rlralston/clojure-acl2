; core$defmethod-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:41 CDT 2014.
;

(defconst *clojure.core$defmethod*
 (make-class-def
      '(class "clojure.core$defmethod"
            "clojure.lang.RestFn"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "seq")
                        (STRING  "concat")
                        (STRING  "list")
                        (STRING  ".")
                        (STRING  "with-meta")
                        (STRING  "tag")
                        (STRING  "clojure.lang.MultiFn")
                        (STRING  "addMethod")
                        (STRING  "fn"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 0) (code_length . 146)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "seq"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$defmethod" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "concat"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$defmethod" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "list"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$defmethod" (class "clojure.lang.Var"))))
                                      (39 (aconst_null))
                                      (40 (ldc 4))        ;;STRING:: "."
                                      (42 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (45 (checkcast (class "clojure.lang.AFn")))
                                      (48 (putstatic (fieldCP "const__3" "clojure.core$defmethod" (class "clojure.lang.AFn"))))
                                      (51 (ldc 0))        ;;STRING:: "clojure.core"
                                      (53 (ldc 5))        ;;STRING:: "with-meta"
                                      (55 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (58 (checkcast (class "clojure.lang.Var")))
                                      (61 (putstatic (fieldCP "const__4" "clojure.core$defmethod" (class "clojure.lang.Var"))))
                                      (64 (aconst_null))
                                      (65 (ldc 6))        ;;STRING:: "tag"
                                      (67 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (70 (checkcast (class "clojure.lang.Keyword")))
                                      (73 (putstatic (fieldCP "const__5" "clojure.core$defmethod" (class "clojure.lang.Keyword"))))
                                      (76 (aconst_null))
                                      (77 (ldc 7))        ;;STRING:: "clojure.lang.MultiFn"
                                      (79 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (82 (checkcast (class "clojure.lang.AFn")))
                                      (85 (putstatic (fieldCP "const__6" "clojure.core$defmethod" (class "clojure.lang.AFn"))))
                                      (88 (iconst_2))
                                      (89 (anewarray (class "java.lang.Object")))
                                      (92 (dup))
                                      (93 (iconst_0))
                                      (94 (aconst_null))
                                      (95 (ldc 6))        ;;STRING:: "tag"
                                      (97 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (100 (aastore))
                                      (101 (dup))
                                      (102 (iconst_1))
                                      (103 (aconst_null))
                                      (104 (ldc 7))       ;;STRING:: "clojure.lang.MultiFn"
                                      (106 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (109 (aastore))
                                      (110 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (113 (checkcast (class "clojure.lang.AFn")))
                                      (116 (putstatic (fieldCP "const__7" "clojure.core$defmethod" (class "clojure.lang.AFn"))))
                                      (119 (ldc 0))       ;;STRING:: "clojure.core"
                                      (121 (ldc 8))       ;;STRING:: "addMethod"
                                      (123 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (126 (checkcast (class "clojure.lang.AFn")))
                                      (129 (putstatic (fieldCP "const__8" "clojure.core$defmethod" (class "clojure.lang.AFn"))))
                                      (132 (ldc 0))       ;;STRING:: "clojure.core"
                                      (134 (ldc 9))       ;;STRING:: "fn"
                                      (136 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (139 (checkcast (class "clojure.lang.AFn")))
                                      (142 (putstatic (fieldCP "const__9" "clojure.core$defmethod" (class "clojure.lang.AFn"))))
                                      (145 (return))
                                      (endofcode 146))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.RestFn" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doInvoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 12) (max_locals . 6) (code_length . 180)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$defmethod" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (checkcast (class "clojure.lang.IFn")))
                                      (9 (getstatic (fieldCP "const__1" "clojure.core$defmethod" (class "clojure.lang.Var"))))
                                      (12 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (15 (checkcast (class "clojure.lang.IFn")))
                                      (18 (getstatic (fieldCP "const__2" "clojure.core$defmethod" (class "clojure.lang.Var"))))
                                      (21 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (24 (checkcast (class "clojure.lang.IFn")))
                                      (27 (getstatic (fieldCP "const__3" "clojure.core$defmethod" (class "clojure.lang.AFn"))))
                                      (30 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (35 (getstatic (fieldCP "const__2" "clojure.core$defmethod" (class "clojure.lang.Var"))))
                                      (38 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (41 (checkcast (class "clojure.lang.IFn")))
                                      (44 (getstatic (fieldCP "const__4" "clojure.core$defmethod" (class "clojure.lang.Var"))))
                                      (47 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (50 (checkcast (class "clojure.lang.IFn")))
                                      (53 (aload_3))
                                      (54 (aconst_null))
                                      (55 (astore_3))
                                      (56 (getstatic (fieldCP "const__7" "clojure.core$defmethod" (class "clojure.lang.AFn"))))
                                      (59 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (64 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (69 (getstatic (fieldCP "const__2" "clojure.core$defmethod" (class "clojure.lang.Var"))))
                                      (72 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (75 (checkcast (class "clojure.lang.IFn")))
                                      (78 (getstatic (fieldCP "const__8" "clojure.core$defmethod" (class "clojure.lang.AFn"))))
                                      (81 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (86 (getstatic (fieldCP "const__2" "clojure.core$defmethod" (class "clojure.lang.Var"))))
                                      (89 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (92 (checkcast (class "clojure.lang.IFn")))
                                      (95 (aload 4))
                                      (97 (aconst_null))
                                      (98 (astore 4))
                                      (100 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (105 (getstatic (fieldCP "const__2" "clojure.core$defmethod" (class "clojure.lang.Var"))))
                                      (108 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (111 (checkcast (class "clojure.lang.IFn")))
                                      (114 (getstatic (fieldCP "const__0" "clojure.core$defmethod" (class "clojure.lang.Var"))))
                                      (117 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (120 (checkcast (class "clojure.lang.IFn")))
                                      (123 (getstatic (fieldCP "const__1" "clojure.core$defmethod" (class "clojure.lang.Var"))))
                                      (126 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (129 (checkcast (class "clojure.lang.IFn")))
                                      (132 (getstatic (fieldCP "const__2" "clojure.core$defmethod" (class "clojure.lang.Var"))))
                                      (135 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (138 (checkcast (class "clojure.lang.IFn")))
                                      (141 (getstatic (fieldCP "const__9" "clojure.core$defmethod" (class "clojure.lang.AFn"))))
                                      (144 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (149 (aload 5))
                                      (151 (aconst_null))
                                      (152 (astore 5))
                                      (154 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (159 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (164 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (169 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 6))
                                      (174 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (179 (areturn))
                                      (endofcode 180))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getRequiredArity"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iconst_4))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$defmethod-class-table*
  (make-static-class-decls 
   *clojure.core$defmethod*))

(defconst *package-name-map* 
  ("clojure.core$defmethod" . "clojure"))

