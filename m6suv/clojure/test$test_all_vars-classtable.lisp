; test$test_all_vars-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:59 CDT 2014.
;

(defconst *clojure.test$test_all_vars*
 (make-class-def
      '(class "clojure.test$test_all_vars"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.test")
                        (STRING  "join-fixtures")
                        (STRING  "once-fixtures")
                        (STRING  "clojure.core")
                        (STRING  "meta")
                        (STRING  "each-fixtures"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__1__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__1__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 95)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.test"
                                      (2 (ldc 1))         ;;STRING:: "join-fixtures"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.test$test_all_vars" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.test"
                                      (15 (ldc 2))        ;;STRING:: "once-fixtures"
                                      (17 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (20 (checkcast (class "clojure.lang.Keyword")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.test$test_all_vars" (class "clojure.lang.Keyword"))))
                                      (26 (ldc 3))        ;;STRING:: "clojure.core"
                                      (28 (ldc 4))        ;;STRING:: "meta"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.test$test_all_vars" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.test"
                                      (41 (ldc 5))        ;;STRING:: "each-fixtures"
                                      (43 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (46 (checkcast (class "clojure.lang.Keyword")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.test$test_all_vars" (class "clojure.lang.Keyword"))))
                                      (52 (new (class "clojure.lang.KeywordLookupSite")))
                                      (55 (dup))
                                      (56 (ldc 0))        ;;STRING:: "clojure.test"
                                      (58 (ldc 2))        ;;STRING:: "once-fixtures"
                                      (60 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (63 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (66 (dup))
                                      (67 (putstatic (fieldCP "__site__0__" "clojure.test$test_all_vars" (class "clojure.lang.KeywordLookupSite"))))
                                      (70 (putstatic (fieldCP "__thunk__0__" "clojure.test$test_all_vars" (class "clojure.lang.ILookupThunk"))))
                                      (73 (new (class "clojure.lang.KeywordLookupSite")))
                                      (76 (dup))
                                      (77 (ldc 0))        ;;STRING:: "clojure.test"
                                      (79 (ldc 5))        ;;STRING:: "each-fixtures"
                                      (81 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (84 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (87 (dup))
                                      (88 (putstatic (fieldCP "__site__1__" "clojure.test$test_all_vars" (class "clojure.lang.KeywordLookupSite"))))
                                      (91 (putstatic (fieldCP "__thunk__1__" "clojure.test$test_all_vars" (class "clojure.lang.ILookupThunk"))))
                                      (94 (return))
                                      (endofcode 95))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 4) (code_length . 165)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.test$test_all_vars" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (getstatic (fieldCP "__thunk__0__" "clojure.test$test_all_vars" (class "clojure.lang.ILookupThunk")))) 
                                      (12 (dup)) 
                                      (13 (getstatic (fieldCP "const__2" "clojure.test$test_all_vars" (class "clojure.lang.Var")))) 
                                      (16 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (19 (checkcast (class "clojure.lang.IFn"))) 
                                      (22 (aload_1)) 
                                      (23 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (28 (dup_x2)) 
                                      (29 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (34 (dup_x2)) 
                                      (35 (if_acmpeq 42)) ;;to TAG_0
                                      (38 (pop)) 
                                      (39 (goto 64)) ;;to TAG_1
                                      (42 (swap)) ;;at TAG_0
                                      (43 (pop)) 
                                      (44 (dup)) 
                                      (45 (getstatic (fieldCP "__site__0__" "clojure.test$test_all_vars" (class "clojure.lang.KeywordLookupSite")))) 
                                      (48 (swap)) 
                                      (49 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (54 (dup)) 
                                      (55 (putstatic (fieldCP "__thunk__0__" "clojure.test$test_all_vars" (class "clojure.lang.ILookupThunk")))) 
                                      (58 (swap)) 
                                      (59 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (64 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_1
                                      (69 (astore_2)) 
                                      (70 (getstatic (fieldCP "const__0" "clojure.test$test_all_vars" (class "clojure.lang.Var")))) 
                                      (73 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (76 (checkcast (class "clojure.lang.IFn"))) 
                                      (79 (getstatic (fieldCP "__thunk__1__" "clojure.test$test_all_vars" (class "clojure.lang.ILookupThunk")))) 
                                      (82 (dup)) 
                                      (83 (getstatic (fieldCP "const__2" "clojure.test$test_all_vars" (class "clojure.lang.Var")))) 
                                      (86 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (89 (checkcast (class "clojure.lang.IFn"))) 
                                      (92 (aload_1)) 
                                      (93 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (98 (dup_x2)) 
                                      (99 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (104 (dup_x2)) 
                                      (105 (if_acmpeq 112))  ;;to TAG_2
                                      (108 (pop)) 
                                      (109 (goto 134)) ;;to TAG_3
                                      (112 (swap)) ;;at TAG_2
                                      (113 (pop)) 
                                      (114 (dup)) 
                                      (115 (getstatic (fieldCP "__site__1__" "clojure.test$test_all_vars" (class "clojure.lang.KeywordLookupSite")))) 
                                      (118 (swap)) 
                                      (119 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (124 (dup)) 
                                      (125 (putstatic (fieldCP "__thunk__1__" "clojure.test$test_all_vars" (class "clojure.lang.ILookupThunk")))) 
                                      (128 (swap)) 
                                      (129 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (134 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_3
                                      (139 (astore_3)) 
                                      (140 (aload_2)) 
                                      (141 (aconst_null)) 
                                      (142 (astore_2)) 
                                      (143 (checkcast (class "clojure.lang.IFn"))) 
                                      (146 (new (class "clojure.test$test_all_vars$fn__7149"))) 
                                      (149 (dup)) 
                                      (150 (aload_3)) 
                                      (151 (aconst_null)) 
                                      (152 (astore_3)) 
                                      (153 (aload_1)) 
                                      (154 (aconst_null)) 
                                      (155 (astore_1)) 
                                      (156 (invokespecial (methodCP "<init>" "clojure.test$test_all_vars$fn__7149" ((class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (159 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (164 (areturn)) 
                                      (endofcode 165))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 39)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 38 (0 . 1) (24 31))))  ;;to TAG_2;;to TAG_0;;to TAG_1
                                      (24 (aload_2)) ;;at TAG_1
                                      (25 (putstatic (fieldCP "__thunk__0__" "clojure.test$test_all_vars" (class "clojure.lang.ILookupThunk")))) 
                                      (28 (goto 38)) ;;to TAG_0
                                      (31 (aload_2)) ;;at TAG_2
                                      (32 (putstatic (fieldCP "__thunk__1__" "clojure.test$test_all_vars" (class "clojure.lang.ILookupThunk")))) 
                                      (35 (goto 38)) ;;to TAG_0
                                      (38 (return)) ;;at TAG_0
                                      (endofcode 39))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *test$test_all_vars-class-table*
  (make-static-class-decls 
   *clojure.test$test_all_vars*))

(defconst *package-name-map* 
  ("clojure.test$test_all_vars" . "clojure"))

