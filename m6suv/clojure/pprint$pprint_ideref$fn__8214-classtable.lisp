; pprint$pprint_ideref$fn__8214-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:56 CDT 2014.
;

(defconst *clojure.pprint$pprint_ideref$fn__8214*
 (make-class-def
      '(class "clojure.pprint$pprint_ideref$fn__8214"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.pprint")
                        (STRING  "start-block")
                        (STRING  "clojure.core")
                        (STRING  "*out*")
                        (STRING  "pprint-indent")
                        (STRING  "block")
                        (STRING  "-")
                        (STRING  "count")
                        (LONG 2)
                        (STRING  "pprint-newline")
                        (STRING  "linear")
                        (STRING  "write-out")
                        (STRING  "future?")
                        (STRING  "not")
                        (STRING  "future-done?")
                        (STRING  "pending")
                        (STRING  "instance?")
                        (STRING  "not-delivered")
                        (STRING  "else")
                        (STRING  "deref")
                        (STRING  "end-block")
                        (STRING  "pop-thread-bindings")
                        (STRING  ">")
                        (STRING  "isRealized"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__19" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "o" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "prefix" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 252)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.pprint"
                                      (2 (ldc 1))         ;;STRING:: "start-block"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var"))))
                                      (13 (ldc 2))        ;;STRING:: "clojure.core"
                                      (15 (ldc 3))        ;;STRING:: "*out*"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (28 (ldc 4))        ;;STRING:: "pprint-indent"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var"))))
                                      (39 (aconst_null))
                                      (40 (ldc 5))        ;;STRING:: "block"
                                      (42 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (45 (checkcast (class "clojure.lang.Keyword")))
                                      (48 (putstatic (fieldCP "const__3" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Keyword"))))
                                      (51 (ldc 2))        ;;STRING:: "clojure.core"
                                      (53 (ldc 6))        ;;STRING:: "-"
                                      (55 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (58 (checkcast (class "clojure.lang.Var")))
                                      (61 (putstatic (fieldCP "const__4" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var"))))
                                      (64 (ldc 2))        ;;STRING:: "clojure.core"
                                      (66 (ldc 7))        ;;STRING:: "count"
                                      (68 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (71 (checkcast (class "clojure.lang.Var")))
                                      (74 (putstatic (fieldCP "const__5" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var"))))
                                      (77 (ldc2_w 8))     ;; LONG:: "2"
                                      (80 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (83 (putstatic (fieldCP "const__6" "clojure.pprint$pprint_ideref$fn__8214" (class "java.lang.Object"))))
                                      (86 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (88 (ldc 9))        ;;STRING:: "pprint-newline"
                                      (90 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (93 (checkcast (class "clojure.lang.Var")))
                                      (96 (putstatic (fieldCP "const__7" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var"))))
                                      (99 (aconst_null))
                                      (100 (ldc 10))      ;;STRING:: "linear"
                                      (102 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (105 (checkcast (class "clojure.lang.Keyword")))
                                      (108 (putstatic (fieldCP "const__8" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Keyword"))))
                                      (111 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (113 (ldc 11))      ;;STRING:: "write-out"
                                      (115 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (118 (checkcast (class "clojure.lang.Var")))
                                      (121 (putstatic (fieldCP "const__9" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var"))))
                                      (124 (ldc 2))       ;;STRING:: "clojure.core"
                                      (126 (ldc 12))      ;;STRING:: "future?"
                                      (128 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (131 (checkcast (class "clojure.lang.Var")))
                                      (134 (putstatic (fieldCP "const__10" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var"))))
                                      (137 (ldc 2))       ;;STRING:: "clojure.core"
                                      (139 (ldc 13))      ;;STRING:: "not"
                                      (141 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (144 (checkcast (class "clojure.lang.Var")))
                                      (147 (putstatic (fieldCP "const__11" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var"))))
                                      (150 (ldc 2))       ;;STRING:: "clojure.core"
                                      (152 (ldc 14))      ;;STRING:: "future-done?"
                                      (154 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (157 (checkcast (class "clojure.lang.Var")))
                                      (160 (putstatic (fieldCP "const__12" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var"))))
                                      (163 (aconst_null))
                                      (164 (ldc 15))      ;;STRING:: "pending"
                                      (166 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (169 (checkcast (class "clojure.lang.Keyword")))
                                      (172 (putstatic (fieldCP "const__13" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Keyword"))))
                                      (175 (ldc 2))       ;;STRING:: "clojure.core"
                                      (177 (ldc 16))      ;;STRING:: "instance?"
                                      (179 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (182 (checkcast (class "clojure.lang.Var")))
                                      (185 (putstatic (fieldCP "const__14" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var"))))
                                      (188 (aconst_null))
                                      (189 (ldc 17))      ;;STRING:: "not-delivered"
                                      (191 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (194 (checkcast (class "clojure.lang.Keyword")))
                                      (197 (putstatic (fieldCP "const__15" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Keyword"))))
                                      (200 (aconst_null))
                                      (201 (ldc 18))      ;;STRING:: "else"
                                      (203 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (206 (checkcast (class "clojure.lang.Keyword")))
                                      (209 (putstatic (fieldCP "const__16" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Keyword"))))
                                      (212 (ldc 2))       ;;STRING:: "clojure.core"
                                      (214 (ldc 19))      ;;STRING:: "deref"
                                      (216 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (219 (checkcast (class "clojure.lang.Var")))
                                      (222 (putstatic (fieldCP "const__17" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var"))))
                                      (225 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (227 (ldc 20))      ;;STRING:: "end-block"
                                      (229 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (232 (checkcast (class "clojure.lang.Var")))
                                      (235 (putstatic (fieldCP "const__18" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var"))))
                                      (238 (ldc 2))       ;;STRING:: "clojure.core"
                                      (240 (ldc 21))      ;;STRING:: "pop-thread-bindings"
                                      (242 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (245 (checkcast (class "clojure.lang.Var")))
                                      (248 (putstatic (fieldCP "const__19" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var"))))
                                      (251 (return))
                                      (endofcode 252))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "o" "clojure.pprint$pprint_ideref$fn__8214" (class "java.lang.Object"))))
                                      (9 (aload_0))
                                      (10 (aload_2))
                                      (11 (putfield (fieldCP "prefix" "clojure.pprint$pprint_ideref$fn__8214" (class "java.lang.Object"))))
                                      (14 (return))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 4) (code_length . 343)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var")))) ;;at TAG_14
                                      (3 (checkcast (class "clojure.lang.IFn"))) 
                                      (6 (getstatic (fieldCP "const__1" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var")))) 
                                      (9 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (12 (aload_0)) 
                                      (13 (getfield (fieldCP "prefix" "clojure.pprint$pprint_ideref$fn__8214" (class "java.lang.Object")))) 
                                      (16 (aconst_null)) 
                                      (17 (ldc 22)) ;;STRING:: ">"
                                      (19 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5)) 
                                      (24 (pop)) 
                                      (25 (getstatic (fieldCP "const__2" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var")))) 
                                      (28 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (31 (checkcast (class "clojure.lang.IFn"))) 
                                      (34 (getstatic (fieldCP "const__3" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Keyword")))) 
                                      (37 (aload_0)) 
                                      (38 (getfield (fieldCP "prefix" "clojure.pprint$pprint_ideref$fn__8214" (class "java.lang.Object")))) 
                                      (41 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (44 (i2l)) 
                                      (45 (ldc2_w 8)) ;; LONG:: "2"
                                      (48 (invokestatic (methodCP "minus" "clojure.lang.Numbers" (long long) long))) 
                                      (51 (invokestatic (methodCP "minus" "clojure.lang.Numbers" (long) long))) 
                                      (54 (invokestatic (methodCP "num" "clojure.lang.Numbers" (long) (class "java.lang.Number")))) 
                                      (57 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (62 (pop)) 
                                      (63 (getstatic (fieldCP "const__7" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var")))) 
                                      (66 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (69 (checkcast (class "clojure.lang.IFn"))) 
                                      (72 (getstatic (fieldCP "const__8" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Keyword")))) 
                                      (75 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (80 (pop)) 
                                      (81 (getstatic (fieldCP "const__9" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var")))) 
                                      (84 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (87 (checkcast (class "clojure.lang.IFn"))) 
                                      (90 (getstatic (fieldCP "const__10" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var")))) 
                                      (93 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (96 (checkcast (class "clojure.lang.IFn"))) 
                                      (99 (aload_0)) 
                                      (100 (getfield (fieldCP "o" "clojure.pprint$pprint_ideref$fn__8214" (class "java.lang.Object")))) 
                                      (103 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (108 (astore_1)) 
                                      (109 (aload_1)) 
                                      (110 (dup)) 
                                      (111 (ifnull 155)) ;;to TAG_0
                                      (114 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (117 (if_acmpeq 156))  ;;to TAG_1
                                      (120 (getstatic (fieldCP "const__11" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var")))) 
                                      (123 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (126 (checkcast (class "clojure.lang.IFn"))) 
                                      (129 (getstatic (fieldCP "const__12" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var")))) 
                                      (132 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (135 (checkcast (class "clojure.lang.IFn"))) 
                                      (138 (aload_0)) 
                                      (139 (getfield (fieldCP "o" "clojure.pprint$pprint_ideref$fn__8214" (class "java.lang.Object")))) 
                                      (142 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (147 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (152 (goto 159)) ;;to TAG_2
                                      (155 (pop)) ;;at TAG_0
                                      (156 (aload_1)) ;;at TAG_1
                                      (157 (aconst_null)) 
                                      (158 (astore_1)) 
                                      (159 (dup)) ;;at TAG_2
                                      (160 (ifnull 175)) ;;to TAG_3
                                      (163 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (166 (if_acmpeq 176)) ;;to TAG_4
                                      (169 (getstatic (fieldCP "const__13" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Keyword")))) 
                                      (172 (goto 281)) ;;to TAG_5
                                      (175 (pop)) ;;at TAG_3
                                      (176 (aload_0)) ;;at TAG_4
                                      (177 (getfield (fieldCP "o" "clojure.pprint$pprint_ideref$fn__8214" (class "java.lang.Object")))) 
                                      (180 (instanceof (class "clojure.lang.IPending"))) 
                                      (183 (istore_1)) 
                                      (184 (iload_1)) 
                                      (185 (ifeq 215)) ;;to TAG_6
                                      (188 (getstatic (fieldCP "const__11" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var")))) 
                                      (191 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (194 (checkcast (class "clojure.lang.IFn"))) 
                                      (197 (aload_0)) 
                                      (198 (getfield (fieldCP "o" "clojure.pprint$pprint_ideref$fn__8214" (class "java.lang.Object")))) 
                                      (201 (ldc 23)) ;;STRING:: "isRealized"
                                      (203 (invokestatic (methodCP "invokeNoArgInstanceMember" "clojure.lang.Reflector" ((class "java.lang.Object") (class "java.lang.String")) (class "java.lang.Object")))) 
                                      (206 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (211 (goto 228)) ;;to TAG_7
                                      (214 (pop)) 
                                      (215 (iload_1)) ;;at TAG_6
                                      (216 (ifeq 225)) ;;to TAG_8
                                      (219 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (222 (goto 228)) ;;to TAG_7
                                      (225 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_8
                                      (228 (dup)) ;;at TAG_7
                                      (229 (ifnull 244)) ;;to TAG_9
                                      (232 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (235 (if_acmpeq 245)) ;;to TAG_10
                                      (238 (getstatic (fieldCP "const__15" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Keyword")))) 
                                      (241 (goto 281)) ;;to TAG_5
                                      (244 (pop)) ;;at TAG_9
                                      (245 (getstatic (fieldCP "const__16" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Keyword")))) ;;at TAG_10
                                      (248 (dup)) 
                                      (249 (ifnull 279)) ;;to TAG_11
                                      (252 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (255 (if_acmpeq 280)) ;;to TAG_12
                                      (258 (getstatic (fieldCP "const__17" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var")))) 
                                      (261 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (264 (checkcast (class "clojure.lang.IFn"))) 
                                      (267 (aload_0)) 
                                      (268 (getfield (fieldCP "o" "clojure.pprint$pprint_ideref$fn__8214" (class "java.lang.Object")))) 
                                      (271 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (276 (goto 281)) ;;to TAG_5
                                      (279 (pop)) ;;at TAG_11
                                      (280 (aconst_null)) ;;at TAG_12
                                      (281 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_5
                                      (286 (pop)) 
                                      (287 (getstatic (fieldCP "const__18" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var")))) 
                                      (290 (checkcast (class "clojure.lang.IFn"))) 
                                      (293 (getstatic (fieldCP "const__1" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var")))) 
                                      (296 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (299 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (304 (astore_2)) 
                                      (305 (getstatic (fieldCP "const__19" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var")))) ;;at TAG_15
                                      (308 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (311 (checkcast (class "clojure.lang.IFn"))) 
                                      (314 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (319 (pop)) 
                                      (320 (goto 341)) ;;to TAG_13
                                      (323 (astore_3)) ;;at TAG_16
                                      (324 (getstatic (fieldCP "const__19" "clojure.pprint$pprint_ideref$fn__8214" (class "clojure.lang.Var")))) 
                                      (327 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (330 (checkcast (class "clojure.lang.IFn"))) 
                                      (333 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (338 (pop)) 
                                      (339 (aload_3)) 
                                      (340 (athrow)) 
                                      (341 (aload_2)) ;;at TAG_13
                                      (342 (areturn)) 
                                      (endofcode 343))
                                   (Exceptions 
                                     (handler 0 305  323 (class "java.lang.Throwable")))
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$pprint_ideref$fn__8214-class-table*
  (make-static-class-decls 
   *clojure.pprint$pprint_ideref$fn__8214*))

(defconst *package-name-map* 
  ("clojure.pprint$pprint_ideref$fn__8214" . "clojure"))

