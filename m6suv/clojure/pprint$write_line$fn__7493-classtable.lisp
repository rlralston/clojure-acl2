; pprint$write_line$fn__7493-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:57 CDT 2014.
;

(defconst *clojure.pprint$write_line$fn__7493*
 (make-class-def
      '(class "clojure.pprint$write_line$fn__7493"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "buffer")
                        (STRING  "clojure.core")
                        (STRING  "deref")
                        (STRING  "alter")
                        (STRING  "assoc")
                        (STRING  "into")
                        (STRING  "not")
                        (STRING  "clojure.pprint")
                        (STRING  "tokens-fit?")
                        (STRING  "write-token-string")
                        (STRING  "identical?"))
            (fields
                        (field "const__0" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "this" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 137)
                                   (parsedcode
                                      (0 (aconst_null))
                                      (1 (ldc 0))         ;;STRING:: "buffer"
                                      (3 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (6 (checkcast (class "clojure.lang.Keyword")))
                                      (9 (putstatic (fieldCP "const__0" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Keyword"))))
                                      (12 (ldc 1))        ;;STRING:: "clojure.core"
                                      (14 (ldc 2))        ;;STRING:: "deref"
                                      (16 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (19 (checkcast (class "clojure.lang.Var")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var"))))
                                      (25 (ldc 1))        ;;STRING:: "clojure.core"
                                      (27 (ldc 3))        ;;STRING:: "alter"
                                      (29 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (32 (checkcast (class "clojure.lang.Var")))
                                      (35 (putstatic (fieldCP "const__2" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var"))))
                                      (38 (ldc 1))        ;;STRING:: "clojure.core"
                                      (40 (ldc 4))        ;;STRING:: "assoc"
                                      (42 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (45 (checkcast (class "clojure.lang.Var")))
                                      (48 (putstatic (fieldCP "const__3" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var"))))
                                      (51 (ldc 1))        ;;STRING:: "clojure.core"
                                      (53 (ldc 5))        ;;STRING:: "into"
                                      (55 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (58 (checkcast (class "clojure.lang.Var")))
                                      (61 (putstatic (fieldCP "const__4" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var"))))
                                      (64 (ldc 1))        ;;STRING:: "clojure.core"
                                      (66 (ldc 6))        ;;STRING:: "not"
                                      (68 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (71 (checkcast (class "clojure.lang.Var")))
                                      (74 (putstatic (fieldCP "const__5" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var"))))
                                      (77 (ldc 7))        ;;STRING:: "clojure.pprint"
                                      (79 (ldc 8))        ;;STRING:: "tokens-fit?"
                                      (81 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (84 (checkcast (class "clojure.lang.Var")))
                                      (87 (putstatic (fieldCP "const__6" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var"))))
                                      (90 (ldc 7))        ;;STRING:: "clojure.pprint"
                                      (92 (ldc 9))        ;;STRING:: "write-token-string"
                                      (94 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (97 (checkcast (class "clojure.lang.Var")))
                                      (100 (putstatic (fieldCP "const__7" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var"))))
                                      (103 (ldc 1))       ;;STRING:: "clojure.core"
                                      (105 (ldc 10))      ;;STRING:: "identical?"
                                      (107 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (110 (checkcast (class "clojure.lang.Var")))
                                      (113 (putstatic (fieldCP "const__8" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var"))))
                                      (116 (new (class "clojure.lang.KeywordLookupSite")))
                                      (119 (dup))
                                      (120 (aconst_null))
                                      (121 (ldc 0))       ;;STRING:: "buffer"
                                      (123 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (126 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (129 (dup))
                                      (130 (putstatic (fieldCP "__site__0__" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.KeywordLookupSite"))))
                                      (133 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.ILookupThunk"))))
                                      (136 (return))
                                      (endofcode 137))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "this" "clojure.pprint$write_line$fn__7493" (class "java.lang.Object"))))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 3) (code_length . 255)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "__thunk__0__" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.ILookupThunk")))) 
                                      (3 (dup)) 
                                      (4 (getstatic (fieldCP "const__1" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var")))) 
                                      (7 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (10 (checkcast (class "clojure.lang.IFn"))) 
                                      (13 (getstatic (fieldCP "const__1" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var")))) 
                                      (16 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (19 (checkcast (class "clojure.lang.IFn"))) 
                                      (22 (aload_0)) 
                                      (23 (getfield (fieldCP "this" "clojure.pprint$write_line$fn__7493" (class "java.lang.Object")))) 
                                      (26 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (31 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (36 (dup_x2)) 
                                      (37 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (42 (dup_x2)) 
                                      (43 (if_acmpeq 50)) ;;to TAG_0
                                      (46 (pop)) 
                                      (47 (goto 72))  ;;to TAG_1
                                      (50 (swap)) ;;at TAG_0
                                      (51 (pop)) 
                                      (52 (dup)) 
                                      (53 (getstatic (fieldCP "__site__0__" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.KeywordLookupSite")))) 
                                      (56 (swap)) 
                                      (57 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (62 (dup)) 
                                      (63 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.ILookupThunk")))) 
                                      (66 (swap)) 
                                      (67 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (72 (astore_1)) ;;at TAG_1
                                      (73 (getstatic (fieldCP "const__2" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var")))) ;;at TAG_8
                                      (76 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (79 (checkcast (class "clojure.lang.IFn"))) 
                                      (82 (getstatic (fieldCP "const__1" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var")))) 
                                      (85 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (88 (checkcast (class "clojure.lang.IFn"))) 
                                      (91 (aload_0)) 
                                      (92 (getfield (fieldCP "this" "clojure.pprint$write_line$fn__7493" (class "java.lang.Object")))) 
                                      (95 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (100 (getstatic (fieldCP "const__3" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var")))) 
                                      (103 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (106 (getstatic (fieldCP "const__0" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Keyword")))) 
                                      (109 (getstatic (fieldCP "const__4" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var")))) 
                                      (112 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (115 (checkcast (class "clojure.lang.IFn"))) 
                                      (118 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) 
                                      (121 (aload_1)) 
                                      (122 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (127 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5)) 
                                      (132 (pop)) 
                                      (133 (getstatic (fieldCP "const__5" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var")))) 
                                      (136 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (139 (checkcast (class "clojure.lang.IFn"))) 
                                      (142 (getstatic (fieldCP "const__6" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var")))) 
                                      (145 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (148 (checkcast (class "clojure.lang.IFn"))) 
                                      (151 (aload_0)) 
                                      (152 (getfield (fieldCP "this" "clojure.pprint$write_line$fn__7493" (class "java.lang.Object")))) 
                                      (155 (aload_1)) 
                                      (156 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (161 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (166 (dup)) 
                                      (167 (ifnull 252)) ;;to TAG_2
                                      (170 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (173 (if_acmpeq 253)) ;;to TAG_3
                                      (176 (getstatic (fieldCP "const__7" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var")))) 
                                      (179 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (182 (checkcast (class "clojure.lang.IFn"))) 
                                      (185 (aload_0)) 
                                      (186 (getfield (fieldCP "this" "clojure.pprint$write_line$fn__7493" (class "java.lang.Object")))) 
                                      (189 (aload_1)) 
                                      (190 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (195 (astore_2)) 
                                      (196 (getstatic (fieldCP "const__5" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.Var")))) 
                                      (199 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (202 (checkcast (class "clojure.lang.IFn"))) 
                                      (205 (aload_1)) 
                                      (206 (aload_2)) 
                                      (207 (invokestatic (methodCP "identical" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (210 (ifeq 219)) ;;to TAG_4
                                      (213 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (216 (goto 222)) ;;to TAG_5
                                      (219 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_4
                                      (222 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_5
                                      (227 (dup)) 
                                      (228 (ifnull 247)) ;;to TAG_6
                                      (231 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (234 (if_acmpeq 248)) ;;to TAG_7
                                      (237 (aload_2)) 
                                      (238 (aconst_null)) 
                                      (239 (astore_2)) 
                                      (240 (astore_1)) 
                                      (241 (goto 73)) ;;to TAG_8
                                      (244 (goto 249)) ;;to TAG_9
                                      (247 (pop)) ;;at TAG_6
                                      (248 (aconst_null)) ;;at TAG_7
                                      (249 (goto 254)) ;;to TAG_10;;at TAG_9
                                      (252 (pop)) ;;at TAG_2
                                      (253 (aconst_null)) ;;at TAG_3
                                      (254 (areturn)) ;;at TAG_10
                                      (endofcode 255))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 28)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 27 (0 . 0) (20))))  ;;to TAG_0;;to TAG_1
                                      (20 (aload_2)) ;;at TAG_1
                                      (21 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$write_line$fn__7493" (class "clojure.lang.ILookupThunk")))) 
                                      (24 (goto 27))  ;;to TAG_0
                                      (27 (return)) ;;at TAG_0
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$write_line$fn__7493-class-table*
  (make-static-class-decls 
   *clojure.pprint$write_line$fn__7493*))

(defconst *package-name-map* 
  ("clojure.pprint$write_line$fn__7493" . "clojure"))

