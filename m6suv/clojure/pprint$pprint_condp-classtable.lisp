; pprint$pprint_condp-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:56 CDT 2014.
;

(defconst *clojure.pprint$pprint_condp*
 (make-class-def
      '(class "clojure.pprint$pprint_condp"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  ">")
                        (STRING  "count")
                        (LONG 3)
                        (STRING  "clojure.pprint")
                        (STRING  "level-exceeded")
                        (STRING  "*out*")
                        (STRING  "push-thread-bindings")
                        (STRING  "*current-level*")
                        (STRING  "inc")
                        (STRING  "var-get")
                        (STRING  "*current-length*")
                        (STRING  "pprint-simple-code-list")
                        (STRING  "#"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 147)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: ">"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$pprint_condp" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "count"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$pprint_condp" (class "clojure.lang.Var"))))
                                      (26 (ldc2_w 3))     ;; LONG:: "3"
                                      (29 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (32 (putstatic (fieldCP "const__2" "clojure.pprint$pprint_condp" (class "java.lang.Object"))))
                                      (35 (ldc 4))        ;;STRING:: "clojure.pprint"
                                      (37 (ldc 5))        ;;STRING:: "level-exceeded"
                                      (39 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (42 (checkcast (class "clojure.lang.Var")))
                                      (45 (putstatic (fieldCP "const__3" "clojure.pprint$pprint_condp" (class "clojure.lang.Var"))))
                                      (48 (ldc 0))        ;;STRING:: "clojure.core"
                                      (50 (ldc 6))        ;;STRING:: "*out*"
                                      (52 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (55 (checkcast (class "clojure.lang.Var")))
                                      (58 (putstatic (fieldCP "const__4" "clojure.pprint$pprint_condp" (class "clojure.lang.Var"))))
                                      (61 (ldc 0))        ;;STRING:: "clojure.core"
                                      (63 (ldc 7))        ;;STRING:: "push-thread-bindings"
                                      (65 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (68 (checkcast (class "clojure.lang.Var")))
                                      (71 (putstatic (fieldCP "const__5" "clojure.pprint$pprint_condp" (class "clojure.lang.Var"))))
                                      (74 (ldc 4))        ;;STRING:: "clojure.pprint"
                                      (76 (ldc 8))        ;;STRING:: "*current-level*"
                                      (78 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (81 (checkcast (class "clojure.lang.Var")))
                                      (84 (putstatic (fieldCP "const__6" "clojure.pprint$pprint_condp" (class "clojure.lang.Var"))))
                                      (87 (ldc 0))        ;;STRING:: "clojure.core"
                                      (89 (ldc 9))        ;;STRING:: "inc"
                                      (91 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (94 (checkcast (class "clojure.lang.Var")))
                                      (97 (putstatic (fieldCP "const__7" "clojure.pprint$pprint_condp" (class "clojure.lang.Var"))))
                                      (100 (ldc 0))       ;;STRING:: "clojure.core"
                                      (102 (ldc 10))      ;;STRING:: "var-get"
                                      (104 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (107 (checkcast (class "clojure.lang.Var")))
                                      (110 (putstatic (fieldCP "const__8" "clojure.pprint$pprint_condp" (class "clojure.lang.Var"))))
                                      (113 (ldc 4))       ;;STRING:: "clojure.pprint"
                                      (115 (ldc 11))      ;;STRING:: "*current-length*"
                                      (117 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (120 (checkcast (class "clojure.lang.Var")))
                                      (123 (putstatic (fieldCP "const__9" "clojure.pprint$pprint_condp" (class "clojure.lang.Var"))))
                                      (126 (lconst_0))
                                      (127 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (130 (putstatic (fieldCP "const__10" "clojure.pprint$pprint_condp" (class "java.lang.Object"))))
                                      (133 (ldc 4))       ;;STRING:: "clojure.pprint"
                                      (135 (ldc 12))      ;;STRING:: "pprint-simple-code-list"
                                      (137 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (140 (checkcast (class "clojure.lang.Var")))
                                      (143 (putstatic (fieldCP "const__11" "clojure.pprint$pprint_condp" (class "clojure.lang.Var"))))
                                      (146 (return))
                                      (endofcode 147))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 2) (code_length . 161)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (4 (i2l)) 
                                      (5 (ldc2_w 3)) ;; LONG:: "3"
                                      (8 (lcmp)) 
                                      (9 (ifle 143)) ;;to TAG_0
                                      (12 (getstatic (fieldCP "const__3" "clojure.pprint$pprint_condp" (class "clojure.lang.Var")))) 
                                      (15 (checkcast (class "clojure.lang.IFn"))) 
                                      (18 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (23 (dup)) 
                                      (24 (ifnull 55)) ;;to TAG_1
                                      (27 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (30 (if_acmpeq 56))  ;;to TAG_2
                                      (33 (getstatic (fieldCP "const__4" "clojure.pprint$pprint_condp" (class "clojure.lang.Var")))) 
                                      (36 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (39 (checkcast (class "java.io.Writer"))) 
                                      (42 (ldc 13)) ;;STRING:: "#"
                                      (44 (checkcast (class "java.lang.String"))) 
                                      (47 (invokevirtual (methodCP "write" "java.io.Writer" ((class "java.lang.String")) void))) 
                                      (50 (aconst_null)) 
                                      (51 (pop)) 
                                      (52 (goto 138)) ;;to TAG_3
                                      (55 (pop)) ;;at TAG_1
                                      (56 (getstatic (fieldCP "const__5" "clojure.pprint$pprint_condp" (class "clojure.lang.Var")))) ;;at TAG_2
                                      (59 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (62 (checkcast (class "clojure.lang.IFn"))) 
                                      (65 (iconst_4)) 
                                      (66 (anewarray (class "java.lang.Object"))) 
                                      (69 (dup)) 
                                      (70 (iconst_0)) 
                                      (71 (getstatic (fieldCP "const__6" "clojure.pprint$pprint_condp" (class "clojure.lang.Var")))) 
                                      (74 (aastore)) 
                                      (75 (dup)) 
                                      (76 (iconst_1)) 
                                      (77 (getstatic (fieldCP "const__8" "clojure.pprint$pprint_condp" (class "clojure.lang.Var")))) 
                                      (80 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (83 (checkcast (class "clojure.lang.IFn"))) 
                                      (86 (getstatic (fieldCP "const__6" "clojure.pprint$pprint_condp" (class "clojure.lang.Var")))) 
                                      (89 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (94 (invokestatic (methodCP "inc" "clojure.lang.Numbers" ((class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (97 (aastore)) 
                                      (98 (dup)) 
                                      (99 (iconst_2)) 
                                      (100 (getstatic (fieldCP "const__9" "clojure.pprint$pprint_condp" (class "clojure.lang.Var")))) 
                                      (103 (aastore)) 
                                      (104 (dup)) 
                                      (105 (iconst_3)) 
                                      (106 (getstatic (fieldCP "const__10" "clojure.pprint$pprint_condp" (class "java.lang.Object")))) 
                                      (109 (aastore)) 
                                      (110 (invokestatic (methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap")))) 
                                      (113 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (118 (pop)) 
                                      (119 (new (class "clojure.pprint$pprint_condp$fn__8391"))) 
                                      (122 (dup)) 
                                      (123 (aload_1)) 
                                      (124 (aconst_null)) 
                                      (125 (astore_1)) 
                                      (126 (invokespecial (methodCP "<init>" "clojure.pprint$pprint_condp$fn__8391" ((class "java.lang.Object")) void))) 
                                      (129 (checkcast (class "clojure.lang.IFn"))) 
                                      (132 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (137 (pop)) 
                                      (138 (aconst_null)) ;;at TAG_3
                                      (139 (goto 160)) ;;to TAG_4
                                      (142 (pop)) 
                                      (143 (getstatic (fieldCP "const__11" "clojure.pprint$pprint_condp" (class "clojure.lang.Var")))) ;;at TAG_0
                                      (146 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (149 (checkcast (class "clojure.lang.IFn"))) 
                                      (152 (aload_1)) 
                                      (153 (aconst_null)) 
                                      (154 (astore_1)) 
                                      (155 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (160 (areturn)) ;;at TAG_4
                                      (endofcode 161))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$pprint_condp-class-table*
  (make-static-class-decls 
   *clojure.pprint$pprint_condp*))

(defconst *package-name-map* 
  ("clojure.pprint$pprint_condp" . "clojure"))

