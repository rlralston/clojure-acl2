; core$delay-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:41 CDT 2014.
;

(defconst *clojure.core$delay*
 (make-class-def
      '(class "clojure.core$delay"
            "clojure.lang.RestFn"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "list")
                        (STRING  "new")
                        (STRING  "clojure.lang.Delay")
                        (STRING  "list*")
                        (STRING  "with-meta")
                        (STRING  "fn*")
                        (STRING  "once")
                        (STRING  "apply")
                        (STRING  "hash-map")
                        (STRING  "seq")
                        (STRING  "concat"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 6) (max_locals . 0) (code_length . 173)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "list"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$delay" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "new"
                                      (16 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (19 (checkcast (class "clojure.lang.AFn")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.core$delay" (class "clojure.lang.AFn"))))
                                      (25 (aconst_null))
                                      (26 (ldc 3))        ;;STRING:: "clojure.lang.Delay"
                                      (28 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (31 (checkcast (class "clojure.lang.AFn")))
                                      (34 (putstatic (fieldCP "const__2" "clojure.core$delay" (class "clojure.lang.AFn"))))
                                      (37 (ldc 0))        ;;STRING:: "clojure.core"
                                      (39 (ldc 4))        ;;STRING:: "list*"
                                      (41 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (44 (checkcast (class "clojure.lang.Var")))
                                      (47 (putstatic (fieldCP "const__3" "clojure.core$delay" (class "clojure.lang.Var"))))
                                      (50 (ldc 0))        ;;STRING:: "clojure.core"
                                      (52 (ldc 5))        ;;STRING:: "with-meta"
                                      (54 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (57 (checkcast (class "clojure.lang.Var")))
                                      (60 (putstatic (fieldCP "const__4" "clojure.core$delay" (class "clojure.lang.Var"))))
                                      (63 (aconst_null))
                                      (64 (ldc 6))        ;;STRING:: "fn*"
                                      (66 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (69 (checkcast (class "clojure.lang.IObj")))
                                      (72 (iconst_2))
                                      (73 (anewarray (class "java.lang.Object")))
                                      (76 (dup))
                                      (77 (iconst_0))
                                      (78 (aconst_null))
                                      (79 (ldc 7))        ;;STRING:: "once"
                                      (81 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (84 (aastore))
                                      (85 (dup))
                                      (86 (iconst_1))
                                      (87 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (90 (aastore))
                                      (91 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (94 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (97 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (102 (checkcast (class "clojure.lang.AFn")))
                                      (105 (putstatic (fieldCP "const__5" "clojure.core$delay" (class "clojure.lang.AFn"))))
                                      (108 (ldc 0))       ;;STRING:: "clojure.core"
                                      (110 (ldc 8))       ;;STRING:: "apply"
                                      (112 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (115 (checkcast (class "clojure.lang.Var")))
                                      (118 (putstatic (fieldCP "const__6" "clojure.core$delay" (class "clojure.lang.Var"))))
                                      (121 (ldc 0))       ;;STRING:: "clojure.core"
                                      (123 (ldc 9))       ;;STRING:: "hash-map"
                                      (125 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (128 (checkcast (class "clojure.lang.Var")))
                                      (131 (putstatic (fieldCP "const__7" "clojure.core$delay" (class "clojure.lang.Var"))))
                                      (134 (ldc 0))       ;;STRING:: "clojure.core"
                                      (136 (ldc 10))      ;;STRING:: "seq"
                                      (138 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (141 (checkcast (class "clojure.lang.Var")))
                                      (144 (putstatic (fieldCP "const__8" "clojure.core$delay" (class "clojure.lang.Var"))))
                                      (147 (ldc 0))       ;;STRING:: "clojure.core"
                                      (149 (ldc 11))      ;;STRING:: "concat"
                                      (151 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (154 (checkcast (class "clojure.lang.Var")))
                                      (157 (putstatic (fieldCP "const__9" "clojure.core$delay" (class "clojure.lang.Var"))))
                                      (160 (aconst_null))
                                      (161 (ldc 7))       ;;STRING:: "once"
                                      (163 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (166 (checkcast (class "clojure.lang.Keyword")))
                                      (169 (putstatic (fieldCP "const__10" "clojure.core$delay" (class "clojure.lang.Keyword"))))
                                      (172 (return))
                                      (endofcode 173))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.RestFn" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doInvoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 13) (max_locals . 4) (code_length . 140)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$delay" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (checkcast (class "clojure.lang.IFn")))
                                      (9 (getstatic (fieldCP "const__1" "clojure.core$delay" (class "clojure.lang.AFn"))))
                                      (12 (getstatic (fieldCP "const__2" "clojure.core$delay" (class "clojure.lang.AFn"))))
                                      (15 (getstatic (fieldCP "const__3" "clojure.core$delay" (class "clojure.lang.Var"))))
                                      (18 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (21 (checkcast (class "clojure.lang.IFn")))
                                      (24 (getstatic (fieldCP "const__4" "clojure.core$delay" (class "clojure.lang.Var"))))
                                      (27 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (30 (checkcast (class "clojure.lang.IFn")))
                                      (33 (getstatic (fieldCP "const__5" "clojure.core$delay" (class "clojure.lang.AFn"))))
                                      (36 (getstatic (fieldCP "const__6" "clojure.core$delay" (class "clojure.lang.Var"))))
                                      (39 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (42 (checkcast (class "clojure.lang.IFn")))
                                      (45 (getstatic (fieldCP "const__7" "clojure.core$delay" (class "clojure.lang.Var"))))
                                      (48 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (51 (getstatic (fieldCP "const__8" "clojure.core$delay" (class "clojure.lang.Var"))))
                                      (54 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (57 (checkcast (class "clojure.lang.IFn")))
                                      (60 (getstatic (fieldCP "const__9" "clojure.core$delay" (class "clojure.lang.Var"))))
                                      (63 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (66 (checkcast (class "clojure.lang.IFn")))
                                      (69 (getstatic (fieldCP "const__0" "clojure.core$delay" (class "clojure.lang.Var"))))
                                      (72 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (75 (checkcast (class "clojure.lang.IFn")))
                                      (78 (getstatic (fieldCP "const__10" "clojure.core$delay" (class "clojure.lang.Keyword"))))
                                      (81 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (86 (getstatic (fieldCP "const__0" "clojure.core$delay" (class "clojure.lang.Var"))))
                                      (89 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (92 (checkcast (class "clojure.lang.IFn")))
                                      (95 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (98 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (103 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (108 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (113 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (118 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (123 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector"))))
                                      (126 (aload_3))
                                      (127 (aconst_null))
                                      (128 (astore_3))
                                      (129 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4))
                                      (134 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4))
                                      (139 (areturn))
                                      (endofcode 140))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getRequiredArity"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iconst_2))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$delay-class-table*
  (make-static-class-decls 
   *clojure.core$delay*))

(defconst *package-name-map* 
  ("clojure.core$delay" . "clojure"))

