; core$bean-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:40 CDT 2014.
;

(defconst *clojure.core$bean*
 (make-class-def
      '(class "clojure.core$bean"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "reduce1")
                        (STRING  "seq")
                        (STRING  "init-proxy")
                        (STRING  "without")
                        (STRING  "assoc")
                        (STRING  "count")
                        (STRING  "cons")
                        (STRING  "valAt")
                        (STRING  "entryAt")
                        (STRING  "containsKey"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 40)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "reduce1"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$bean" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "seq"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$bean" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "init-proxy"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$bean" (class "clojure.lang.Var"))))
                                      (39 (return))
                                      (endofcode 40))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 10) (max_locals . 7) (code_length . 279)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (invokevirtual
					(methodCP "getClass" "java.lang.Object" () (class "java.lang.Class"))))
                                      (4 (astore_2))
                                      (5 (getstatic (fieldCP "const__0" "clojure.core$bean" (class "clojure.lang.Var"))))
                                      (8 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (11 (checkcast (class "clojure.lang.IFn")))
                                      (14 (new (class "clojure.core$bean$fn__5312")))
                                      (17 (dup))
                                      (18 (aload_1))
                                      (19 (aconst_null))
                                      (20 (astore_1))
                                      (21 (invokespecial
					(methodCP "<init>" "clojure.core$bean$fn__5312" ((class "java.lang.Object")) void)))
                                      (24 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentArrayMap" (class "clojure.lang.PersistentArrayMap"))))
                                      (27 (getstatic (fieldCP "const__1" "clojure.core$bean" (class "clojure.lang.Var"))))
                                      (30 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (33 (checkcast (class "clojure.lang.IFn")))
                                      (36 (aload_2))
                                      (37 (aconst_null))
                                      (38 (astore_2))
                                      (39 (checkcast (class "java.lang.Class")))
                                      (42 (invokestatic
					(methodCP "getBeanInfo" "java.beans.Introspector" ((class "java.lang.Class")) (class "java.beans.BeanInfo"))))
                                      (45 (checkcast (class "java.beans.BeanInfo")))
                                      (48 (invokeinterface
					(methodCP "getPropertyDescriptors" "java.beans.BeanInfo" () (array (class "java.beans.PropertyDescriptor"))) 1))
                                      (53 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (58 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4))
                                      (63 (astore_3))
                                      (64 (new (class "clojure.core$bean$v__5317")))
                                      (67 (dup))
                                      (68 (aload_3))
                                      (69 (invokespecial
					(methodCP "<init>" "clojure.core$bean$v__5317" ((class "java.lang.Object")) void)))
                                      (72 (astore 4))
                                      (74 (new (class "clojure.core$bean$snapshot__5319")))
                                      (77 (dup))
                                      (78 (aload_3))
                                      (79 (invokespecial
					(methodCP "<init>" "clojure.core$bean$snapshot__5319" ((class "java.lang.Object")) void)))
                                      (82 (astore 5))
                                      (84 (new (class "clojure.core.proxy$clojure.lang.APersistentMap$0")))
                                      (87 (dup))
                                      (88 (invokespecial
					(methodCP "<init>" "clojure.core.proxy$clojure.lang.APersistentMap$0" () void)))
                                      (91 (astore 6))
                                      (93 (getstatic (fieldCP "const__2" "clojure.core$bean" (class "clojure.lang.Var"))))
                                      (96 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (99 (checkcast (class "clojure.lang.IFn")))
                                      (102 (aload 6))
                                      (104 (bipush 16))
                                      (106 (anewarray (class "java.lang.Object")))
                                      (109 (dup))
                                      (110 (iconst_0))
                                      (111 (ldc 2))       ;;STRING:: "seq"
                                      (113 (aastore))
                                      (114 (dup))
                                      (115 (iconst_1))
                                      (116 (new (class "clojure.core$bean$fn__5323")))
                                      (119 (dup))
                                      (120 (aload_3))
                                      (121 (aload 4))
                                      (123 (invokespecial
					(methodCP "<init>" "clojure.core$bean$fn__5323" ((class "java.lang.Object") (class "java.lang.Object")) void)))
                                      (126 (aastore))
                                      (127 (dup))
                                      (128 (iconst_2))
                                      (129 (ldc 4))       ;;STRING:: "without"
                                      (131 (aastore))
                                      (132 (dup))
                                      (133 (iconst_3))
                                      (134 (new (class "clojure.core$bean$fn__5330")))
                                      (137 (dup))
                                      (138 (aload 5))
                                      (140 (invokespecial
					(methodCP "<init>" "clojure.core$bean$fn__5330" ((class "java.lang.Object")) void)))
                                      (143 (aastore))
                                      (144 (dup))
                                      (145 (iconst_4))
                                      (146 (ldc 5))       ;;STRING:: "assoc"
                                      (148 (aastore))
                                      (149 (dup))
                                      (150 (iconst_5))
                                      (151 (new (class "clojure.core$bean$fn__5332")))
                                      (154 (dup))
                                      (155 (aload 5))
                                      (157 (invokespecial
					(methodCP "<init>" "clojure.core$bean$fn__5332" ((class "java.lang.Object")) void)))
                                      (160 (aastore))
                                      (161 (dup))
                                      (162 (bipush 6))
                                      (164 (ldc 6))       ;;STRING:: "count"
                                      (166 (aastore))
                                      (167 (dup))
                                      (168 (bipush 7))
                                      (170 (new (class "clojure.core$bean$fn__5334")))
                                      (173 (dup))
                                      (174 (aload_3))
                                      (175 (invokespecial
					(methodCP "<init>" "clojure.core$bean$fn__5334" ((class "java.lang.Object")) void)))
                                      (178 (aastore))
                                      (179 (dup))
                                      (180 (bipush 8))
                                      (182 (ldc 7))       ;;STRING:: "cons"
                                      (184 (aastore))
                                      (185 (dup))
                                      (186 (bipush 9))
                                      (188 (new (class "clojure.core$bean$fn__5336")))
                                      (191 (dup))
                                      (192 (aload 5))
                                      (194 (aconst_null))
                                      (195 (astore 5))
                                      (197 (invokespecial
					(methodCP "<init>" "clojure.core$bean$fn__5336" ((class "java.lang.Object")) void)))
                                      (200 (aastore))
                                      (201 (dup))
                                      (202 (bipush 10))
                                      (204 (ldc 8))       ;;STRING:: "valAt"
                                      (206 (aastore))
                                      (207 (dup))
                                      (208 (bipush 11))
                                      (210 (new (class "clojure.core$bean$fn__5338")))
                                      (213 (dup))
                                      (214 (aload_3))
                                      (215 (aload 4))
                                      (217 (invokespecial
					(methodCP "<init>" "clojure.core$bean$fn__5338" ((class "java.lang.Object") (class "java.lang.Object")) void)))
                                      (220 (aastore))
                                      (221 (dup))
                                      (222 (bipush 12))
                                      (224 (ldc 9))       ;;STRING:: "entryAt"
                                      (226 (aastore))
                                      (227 (dup))
                                      (228 (bipush 13))
                                      (230 (new (class "clojure.core$bean$fn__5340")))
                                      (233 (dup))
                                      (234 (aload_3))
                                      (235 (aload 4))
                                      (237 (aconst_null))
                                      (238 (astore 4))
                                      (240 (invokespecial
					(methodCP "<init>" "clojure.core$bean$fn__5340" ((class "java.lang.Object") (class "java.lang.Object")) void)))
                                      (243 (aastore))
                                      (244 (dup))
                                      (245 (bipush 14))
                                      (247 (ldc 10))      ;;STRING:: "containsKey"
                                      (249 (aastore))
                                      (250 (dup))
                                      (251 (bipush 15))
                                      (253 (new (class "clojure.core$bean$fn__5342")))
                                      (256 (dup))
                                      (257 (aload_3))
                                      (258 (aconst_null))
                                      (259 (astore_3))
                                      (260 (invokespecial
					(methodCP "<init>" "clojure.core$bean$fn__5342" ((class "java.lang.Object")) void)))
                                      (263 (aastore))
                                      (264 (invokestatic
					(methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (267 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (272 (pop))
                                      (273 (aload 6))
                                      (275 (aconst_null))
                                      (276 (astore 6))
                                      (278 (areturn))
                                      (endofcode 279))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$bean-class-table*
  (make-static-class-decls 
   *clojure.core$bean*))

(defconst *package-name-map* 
  ("clojure.core$bean" . "clojure"))

