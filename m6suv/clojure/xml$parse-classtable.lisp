; xml$parse-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:59 CDT 2014.
;

(defconst *clojure.xml$parse*
 (make-class-def
      '(class "clojure.xml$parse"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.xml")
                        (STRING  "parse")
                        (STRING  "startparse-sax")
                        (STRING  "clojure.core")
                        (STRING  "push-thread-bindings")
                        (STRING  "hash-map")
                        (STRING  "*stack*")
                        (STRING  "*current*")
                        (STRING  "struct")
                        (STRING  "element")
                        (STRING  "*state*")
                        (STRING  "between")
                        (STRING  "*sb*")
                        (STRING  "content-handler")
                        (STRING  "content")
                        (STRING  "pop-thread-bindings"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 208)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.xml"
                                      (2 (ldc 1))         ;;STRING:: "parse"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.xml$parse" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.xml"
                                      (15 (ldc 2))        ;;STRING:: "startparse-sax"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.xml$parse" (class "clojure.lang.Var"))))
                                      (26 (ldc 3))        ;;STRING:: "clojure.core"
                                      (28 (ldc 4))        ;;STRING:: "push-thread-bindings"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.xml$parse" (class "clojure.lang.Var"))))
                                      (39 (ldc 3))        ;;STRING:: "clojure.core"
                                      (41 (ldc 5))        ;;STRING:: "hash-map"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.xml$parse" (class "clojure.lang.Var"))))
                                      (52 (ldc 0))        ;;STRING:: "clojure.xml"
                                      (54 (ldc 6))        ;;STRING:: "*stack*"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.xml$parse" (class "clojure.lang.Var"))))
                                      (65 (ldc 0))        ;;STRING:: "clojure.xml"
                                      (67 (ldc 7))        ;;STRING:: "*current*"
                                      (69 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (72 (checkcast (class "clojure.lang.Var")))
                                      (75 (putstatic (fieldCP "const__5" "clojure.xml$parse" (class "clojure.lang.Var"))))
                                      (78 (ldc 3))        ;;STRING:: "clojure.core"
                                      (80 (ldc 8))        ;;STRING:: "struct"
                                      (82 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (85 (checkcast (class "clojure.lang.Var")))
                                      (88 (putstatic (fieldCP "const__6" "clojure.xml$parse" (class "clojure.lang.Var"))))
                                      (91 (ldc 0))        ;;STRING:: "clojure.xml"
                                      (93 (ldc 9))        ;;STRING:: "element"
                                      (95 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (98 (checkcast (class "clojure.lang.Var")))
                                      (101 (putstatic (fieldCP "const__7" "clojure.xml$parse" (class "clojure.lang.Var"))))
                                      (104 (ldc 0))       ;;STRING:: "clojure.xml"
                                      (106 (ldc 10))      ;;STRING:: "*state*"
                                      (108 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (111 (checkcast (class "clojure.lang.Var")))
                                      (114 (putstatic (fieldCP "const__8" "clojure.xml$parse" (class "clojure.lang.Var"))))
                                      (117 (aconst_null))
                                      (118 (ldc 11))      ;;STRING:: "between"
                                      (120 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (123 (checkcast (class "clojure.lang.Keyword")))
                                      (126 (putstatic (fieldCP "const__9" "clojure.xml$parse" (class "clojure.lang.Keyword"))))
                                      (129 (ldc 0))       ;;STRING:: "clojure.xml"
                                      (131 (ldc 12))      ;;STRING:: "*sb*"
                                      (133 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (136 (checkcast (class "clojure.lang.Var")))
                                      (139 (putstatic (fieldCP "const__10" "clojure.xml$parse" (class "clojure.lang.Var"))))
                                      (142 (ldc 0))       ;;STRING:: "clojure.xml"
                                      (144 (ldc 13))      ;;STRING:: "content-handler"
                                      (146 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (149 (checkcast (class "clojure.lang.Var")))
                                      (152 (putstatic (fieldCP "const__11" "clojure.xml$parse" (class "clojure.lang.Var"))))
                                      (155 (aconst_null))
                                      (156 (ldc 14))      ;;STRING:: "content"
                                      (158 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (161 (checkcast (class "clojure.lang.Keyword")))
                                      (164 (putstatic (fieldCP "const__12" "clojure.xml$parse" (class "clojure.lang.Keyword"))))
                                      (167 (lconst_0))
                                      (168 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (171 (putstatic (fieldCP "const__13" "clojure.xml$parse" (class "java.lang.Object"))))
                                      (174 (ldc 3))       ;;STRING:: "clojure.core"
                                      (176 (ldc 15))      ;;STRING:: "pop-thread-bindings"
                                      (178 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (181 (checkcast (class "clojure.lang.Var")))
                                      (184 (putstatic (fieldCP "const__14" "clojure.xml$parse" (class "clojure.lang.Var"))))
                                      (187 (new (class "clojure.lang.KeywordLookupSite")))
                                      (190 (dup))
                                      (191 (aconst_null))
                                      (192 (ldc 14))      ;;STRING:: "content"
                                      (194 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (197 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (200 (dup))
                                      (201 (putstatic (fieldCP "__site__0__" "clojure.xml$parse" (class "clojure.lang.KeywordLookupSite"))))
                                      (204 (putstatic (fieldCP "__thunk__0__" "clojure.xml$parse" (class "clojure.lang.ILookupThunk"))))
                                      (207 (return))
                                      (endofcode 208))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 10) (max_locals . 5) (code_length . 185)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__2" "clojure.xml$parse" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (getstatic (fieldCP "const__3" "clojure.xml$parse" (class "clojure.lang.Var")))) 
                                      (12 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (15 (checkcast (class "clojure.lang.IFn"))) 
                                      (18 (getstatic (fieldCP "const__4" "clojure.xml$parse" (class "clojure.lang.Var")))) 
                                      (21 (aconst_null)) 
                                      (22 (getstatic (fieldCP "const__5" "clojure.xml$parse" (class "clojure.lang.Var")))) 
                                      (25 (getstatic (fieldCP "const__6" "clojure.xml$parse" (class "clojure.lang.Var")))) 
                                      (28 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (31 (checkcast (class "clojure.lang.IFn"))) 
                                      (34 (getstatic (fieldCP "const__7" "clojure.xml$parse" (class "clojure.lang.Var")))) 
                                      (37 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (40 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (45 (getstatic (fieldCP "const__8" "clojure.xml$parse" (class "clojure.lang.Var")))) 
                                      (48 (getstatic (fieldCP "const__9" "clojure.xml$parse" (class "clojure.lang.Keyword")))) 
                                      (51 (getstatic (fieldCP "const__10" "clojure.xml$parse" (class "clojure.lang.Var")))) 
                                      (54 (aconst_null)) 
                                      (55 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 9)) 
                                      (60 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (65 (pop)) 
                                      (66 (aload_2)) ;;at TAG_3
                                      (67 (aconst_null)) 
                                      (68 (astore_2)) 
                                      (69 (checkcast (class "clojure.lang.IFn"))) 
                                      (72 (aload_1)) 
                                      (73 (aconst_null)) 
                                      (74 (astore_1)) 
                                      (75 (getstatic (fieldCP "const__11" "clojure.xml$parse" (class "clojure.lang.Var")))) 
                                      (78 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (81 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (86 (pop)) 
                                      (87 (getstatic (fieldCP "__thunk__0__" "clojure.xml$parse" (class "clojure.lang.ILookupThunk")))) 
                                      (90 (dup)) 
                                      (91 (getstatic (fieldCP "const__5" "clojure.xml$parse" (class "clojure.lang.Var")))) 
                                      (94 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (97 (dup_x2)) 
                                      (98 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (103 (dup_x2)) 
                                      (104 (if_acmpeq 111)) ;;to TAG_0
                                      (107 (pop)) 
                                      (108 (goto 133)) ;;to TAG_1
                                      (111 (swap)) ;;at TAG_0
                                      (112 (pop)) 
                                      (113 (dup)) 
                                      (114 (getstatic (fieldCP "__site__0__" "clojure.xml$parse" (class "clojure.lang.KeywordLookupSite")))) 
                                      (117 (swap)) 
                                      (118 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (123 (dup)) 
                                      (124 (putstatic (fieldCP "__thunk__0__" "clojure.xml$parse" (class "clojure.lang.ILookupThunk")))) 
                                      (127 (swap)) 
                                      (128 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (133 (checkcast (class "clojure.lang.IFn"))) ;;at TAG_1
                                      (136 (getstatic (fieldCP "const__13" "clojure.xml$parse" (class "java.lang.Object")))) 
                                      (139 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (144 (astore_3)) 
                                      (145 (getstatic (fieldCP "const__14" "clojure.xml$parse" (class "clojure.lang.Var")))) ;;at TAG_4
                                      (148 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (151 (checkcast (class "clojure.lang.IFn"))) 
                                      (154 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (159 (pop)) 
                                      (160 (goto 183))  ;;to TAG_2
                                      (163 (astore 4)) ;;at TAG_5
                                      (165 (getstatic (fieldCP "const__14" "clojure.xml$parse" (class "clojure.lang.Var")))) 
                                      (168 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (171 (checkcast (class "clojure.lang.IFn"))) 
                                      (174 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (179 (pop)) 
                                      (180 (aload 4)) 
                                      (182 (athrow)) 
                                      (183 (aload_3)) ;;at TAG_2
                                      (184 (areturn)) 
                                      (endofcode 185))
                                   (Exceptions 
                                     (handler 66 145  163 (class "java.lang.Throwable")))
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 24)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.xml$parse" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (checkcast (class "clojure.lang.IFn")))
                                      (9 (aload_1))
                                      (10 (aconst_null))
                                      (11 (astore_1))
                                      (12 (getstatic (fieldCP "const__1" "clojure.xml$parse" (class "clojure.lang.Var"))))
                                      (15 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (18 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (23 (areturn))
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 28)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 27 (0 . 0) (20))))  ;;to TAG_0;;to TAG_1
                                      (20 (aload_2)) ;;at TAG_1
                                      (21 (putstatic (fieldCP "__thunk__0__" "clojure.xml$parse" (class "clojure.lang.ILookupThunk")))) 
                                      (24 (goto 27))  ;;to TAG_0
                                      (27 (return)) ;;at TAG_0
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *xml$parse-class-table*
  (make-static-class-decls 
   *clojure.xml$parse*))

(defconst *package-name-map* 
  ("clojure.xml$parse" . "clojure"))

