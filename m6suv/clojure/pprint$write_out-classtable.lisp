; pprint$write_out-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:57 CDT 2014.
;

(defconst *clojure.pprint$write_out*
 (make-class-def
      '(class "clojure.pprint$write_out"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.pprint")
                        (STRING  "*current-length*")
                        (STRING  "clojure.core")
                        (STRING  "*print-length*")
                        (STRING  ">=")
                        (STRING  "not")
                        (STRING  "*print-pretty*")
                        (STRING  "pr")
                        (STRING  "print")
                        (STRING  "inc")
                        (STRING  "*print-pprint-dispatch*")
                        (STRING  "..."))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 118)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.pprint"
                                      (2 (ldc 1))         ;;STRING:: "*current-length*"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$write_out" (class "clojure.lang.Var"))))
                                      (13 (ldc 2))        ;;STRING:: "clojure.core"
                                      (15 (ldc 3))        ;;STRING:: "*print-length*"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$write_out" (class "clojure.lang.Var"))))
                                      (26 (ldc 2))        ;;STRING:: "clojure.core"
                                      (28 (ldc 4))        ;;STRING:: ">="
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.pprint$write_out" (class "clojure.lang.Var"))))
                                      (39 (ldc 2))        ;;STRING:: "clojure.core"
                                      (41 (ldc 5))        ;;STRING:: "not"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.pprint$write_out" (class "clojure.lang.Var"))))
                                      (52 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (54 (ldc 6))        ;;STRING:: "*print-pretty*"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.pprint$write_out" (class "clojure.lang.Var"))))
                                      (65 (ldc 2))        ;;STRING:: "clojure.core"
                                      (67 (ldc 7))        ;;STRING:: "pr"
                                      (69 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (72 (checkcast (class "clojure.lang.Var")))
                                      (75 (putstatic (fieldCP "const__5" "clojure.pprint$write_out" (class "clojure.lang.Var"))))
                                      (78 (ldc 2))        ;;STRING:: "clojure.core"
                                      (80 (ldc 8))        ;;STRING:: "print"
                                      (82 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (85 (checkcast (class "clojure.lang.Var")))
                                      (88 (putstatic (fieldCP "const__6" "clojure.pprint$write_out" (class "clojure.lang.Var"))))
                                      (91 (ldc 2))        ;;STRING:: "clojure.core"
                                      (93 (ldc 9))        ;;STRING:: "inc"
                                      (95 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (98 (checkcast (class "clojure.lang.Var")))
                                      (101 (putstatic (fieldCP "const__7" "clojure.pprint$write_out" (class "clojure.lang.Var"))))
                                      (104 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (106 (ldc 10))      ;;STRING:: "*print-pprint-dispatch*"
                                      (108 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (111 (checkcast (class "clojure.lang.Var")))
                                      (114 (putstatic (fieldCP "const__8" "clojure.pprint$write_out" (class "clojure.lang.Var"))))
                                      (117 (return))
                                      (endofcode 118))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 4) (code_length . 222)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$write_out" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (astore_2)) 
                                      (7 (aload_2)) 
                                      (8 (dup)) 
                                      (9 (ifnull 73)) ;;to TAG_0
                                      (12 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (15 (if_acmpeq 74))  ;;to TAG_1
                                      (18 (getstatic (fieldCP "const__1" "clojure.pprint$write_out" (class "clojure.lang.Var")))) 
                                      (21 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (24 (astore_3)) 
                                      (25 (aload_3)) 
                                      (26 (dup)) 
                                      (27 (ifnull 66)) ;;to TAG_2
                                      (30 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (33 (if_acmpeq 67)) ;;to TAG_3
                                      (36 (getstatic (fieldCP "const__0" "clojure.pprint$write_out" (class "clojure.lang.Var")))) 
                                      (39 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (42 (getstatic (fieldCP "const__1" "clojure.pprint$write_out" (class "clojure.lang.Var")))) 
                                      (45 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (48 (invokestatic (methodCP "gte" "clojure.lang.Numbers" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (51 (ifeq 60)) ;;to TAG_4
                                      (54 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (57 (goto 63)) ;;to TAG_5
                                      (60 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_4
                                      (63 (goto 70)) ;;to TAG_6;;at TAG_5
                                      (66 (pop)) ;;at TAG_2
                                      (67 (aload_3)) ;;at TAG_3
                                      (68 (aconst_null)) 
                                      (69 (astore_3)) 
                                      (70 (goto 77)) ;;to TAG_7;;at TAG_6
                                      (73 (pop)) ;;at TAG_0
                                      (74 (aload_2)) ;;at TAG_1
                                      (75 (aconst_null)) 
                                      (76 (astore_2)) 
                                      (77 (astore_2)) ;;at TAG_7
                                      (78 (getstatic (fieldCP "const__3" "clojure.pprint$write_out" (class "clojure.lang.Var")))) 
                                      (81 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (84 (checkcast (class "clojure.lang.IFn"))) 
                                      (87 (getstatic (fieldCP "const__4" "clojure.pprint$write_out" (class "clojure.lang.Var")))) 
                                      (90 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (93 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (98 (dup)) 
                                      (99 (ifnull 129)) ;;to TAG_8
                                      (102 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (105 (if_acmpeq 130)) ;;to TAG_9
                                      (108 (getstatic (fieldCP "const__5" "clojure.pprint$write_out" (class "clojure.lang.Var")))) 
                                      (111 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (114 (checkcast (class "clojure.lang.IFn"))) 
                                      (117 (aload_1)) 
                                      (118 (aconst_null)) 
                                      (119 (astore_1)) 
                                      (120 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (125 (pop)) 
                                      (126 (goto 218)) ;;to TAG_10
                                      (129 (pop)) ;;at TAG_8
                                      (130 (aload_2)) ;;at TAG_9
                                      (131 (dup)) 
                                      (132 (ifnull 161)) ;;to TAG_11
                                      (135 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (138 (if_acmpeq 162)) ;;to TAG_12
                                      (141 (getstatic (fieldCP "const__6" "clojure.pprint$write_out" (class "clojure.lang.Var")))) 
                                      (144 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (147 (checkcast (class "clojure.lang.IFn"))) 
                                      (150 (ldc 11)) ;;STRING:: "..."
                                      (152 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (157 (pop)) 
                                      (158 (goto 218)) ;;to TAG_10
                                      (161 (pop)) ;;at TAG_11
                                      (162 (getstatic (fieldCP "const__0" "clojure.pprint$write_out" (class "clojure.lang.Var")))) ;;at TAG_12
                                      (165 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (168 (dup)) 
                                      (169 (ifnull 197)) ;;to TAG_13
                                      (172 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (175 (if_acmpeq 198)) ;;to TAG_14
                                      (178 (getstatic (fieldCP "const__0" "clojure.pprint$write_out" (class "clojure.lang.Var")))) 
                                      (181 (getstatic (fieldCP "const__0" "clojure.pprint$write_out" (class "clojure.lang.Var")))) 
                                      (184 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (187 (invokestatic (methodCP "inc" "clojure.lang.Numbers" ((class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (190 (invokevirtual (methodCP "set" "clojure.lang.Var" ((class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (193 (pop)) 
                                      (194 (goto 200)) ;;to TAG_15
                                      (197 (pop)) ;;at TAG_13
                                      (198 (aconst_null)) ;;at TAG_14
                                      (199 (pop)) 
                                      (200 (getstatic (fieldCP "const__8" "clojure.pprint$write_out" (class "clojure.lang.Var")))) ;;at TAG_15
                                      (203 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (206 (checkcast (class "clojure.lang.IFn"))) 
                                      (209 (aload_1)) 
                                      (210 (aconst_null)) 
                                      (211 (astore_1)) 
                                      (212 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (217 (pop)) 
                                      (218 (aload_2)) ;;at TAG_10
                                      (219 (aconst_null)) 
                                      (220 (astore_2)) 
                                      (221 (areturn)) 
                                      (endofcode 222))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$write_out-class-table*
  (make-static-class-decls 
   *clojure.pprint$write_out*))

(defconst *package-name-map* 
  ("clojure.pprint$write_out" . "clojure"))

