; pprint$map_params$fn__8090-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:56 CDT 2014.
;

(defconst *clojure.pprint$map_params$fn__8090*
 (make-class-def
      '(class "clojure.pprint$map_params$fn__8090"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "first")
                        (STRING  "not")
                        (STRING  "nil?")
                        (STRING  "contains?")
                        (STRING  "clojure.pprint")
                        (STRING  "special-params")
                        (STRING  "instance?")
                        (STRING  "second")
                        (STRING  "format-error")
                        (STRING  "str")
                        (STRING  "name")
                        (STRING  "directive")
                        (STRING  "class")
                        (STRING  "Parameter ")
                        (STRING  " has bad type in directive \"")
                        (STRING  "\": "))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "def" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 176)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "first"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "not"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "nil?"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "contains?"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var"))))
                                      (52 (ldc 5))        ;;STRING:: "clojure.pprint"
                                      (54 (ldc 6))        ;;STRING:: "special-params"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var"))))
                                      (65 (ldc 0))        ;;STRING:: "clojure.core"
                                      (67 (ldc 7))        ;;STRING:: "instance?"
                                      (69 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (72 (checkcast (class "clojure.lang.Var")))
                                      (75 (putstatic (fieldCP "const__5" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var"))))
                                      (78 (ldc 0))        ;;STRING:: "clojure.core"
                                      (80 (ldc 8))        ;;STRING:: "second"
                                      (82 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (85 (checkcast (class "clojure.lang.Var")))
                                      (88 (putstatic (fieldCP "const__6" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var"))))
                                      (91 (ldc 5))        ;;STRING:: "clojure.pprint"
                                      (93 (ldc 9))        ;;STRING:: "format-error"
                                      (95 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (98 (checkcast (class "clojure.lang.Var")))
                                      (101 (putstatic (fieldCP "const__7" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var"))))
                                      (104 (ldc 0))       ;;STRING:: "clojure.core"
                                      (106 (ldc 10))      ;;STRING:: "str"
                                      (108 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (111 (checkcast (class "clojure.lang.Var")))
                                      (114 (putstatic (fieldCP "const__8" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var"))))
                                      (117 (ldc 0))       ;;STRING:: "clojure.core"
                                      (119 (ldc 11))      ;;STRING:: "name"
                                      (121 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (124 (checkcast (class "clojure.lang.Var")))
                                      (127 (putstatic (fieldCP "const__9" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var"))))
                                      (130 (aconst_null))
                                      (131 (ldc 12))      ;;STRING:: "directive"
                                      (133 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (136 (checkcast (class "clojure.lang.Keyword")))
                                      (139 (putstatic (fieldCP "const__10" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Keyword"))))
                                      (142 (ldc 0))       ;;STRING:: "clojure.core"
                                      (144 (ldc 13))      ;;STRING:: "class"
                                      (146 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (149 (checkcast (class "clojure.lang.Var")))
                                      (152 (putstatic (fieldCP "const__11" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var"))))
                                      (155 (new (class "clojure.lang.KeywordLookupSite")))
                                      (158 (dup))
                                      (159 (aconst_null))
                                      (160 (ldc 12))      ;;STRING:: "directive"
                                      (162 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (165 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (168 (dup))
                                      (169 (putstatic (fieldCP "__site__0__" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.KeywordLookupSite"))))
                                      (172 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.ILookupThunk"))))
                                      (175 (return))
                                      (endofcode 176))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "def" "clojure.pprint$map_params$fn__8090" (class "java.lang.Object"))))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 10) (max_locals . 6) (code_length . 307)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_1)) 
                                      (10 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (15 (astore_3)) 
                                      (16 (getstatic (fieldCP "const__1" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var")))) 
                                      (19 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (22 (checkcast (class "clojure.lang.IFn"))) 
                                      (25 (aload_3)) 
                                      (26 (aconst_null)) 
                                      (27 (invokestatic (methodCP "identical" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (30 (istore 4)) 
                                      (32 (iload 4)) 
                                      (34 (ifeq 55)) ;;to TAG_0
                                      (37 (iload 4)) 
                                      (39 (ifeq 48))  ;;to TAG_1
                                      (42 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (45 (goto 51)) ;;to TAG_2
                                      (48 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_1
                                      (51 (goto 143)) ;;to TAG_3;;at TAG_2
                                      (54 (pop)) 
                                      (55 (getstatic (fieldCP "const__3" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var")))) ;;at TAG_0
                                      (58 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (61 (checkcast (class "clojure.lang.IFn"))) 
                                      (64 (getstatic (fieldCP "const__4" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var")))) 
                                      (67 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (70 (aload_3)) 
                                      (71 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (76 (astore 5)) 
                                      (78 (aload 5)) 
                                      (80 (dup)) 
                                      (81 (ifnull 98)) ;;to TAG_4
                                      (84 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (87 (if_acmpeq 99)) ;;to TAG_5
                                      (90 (aload 5)) 
                                      (92 (aconst_null)) 
                                      (93 (astore 5)) 
                                      (95 (goto 143)) ;;to TAG_3
                                      (98 (pop)) ;;at TAG_4
                                      (99 (getstatic (fieldCP "const__5" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var")))) ;;at TAG_5
                                      (102 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (105 (checkcast (class "clojure.lang.IFn"))) 
                                      (108 (getstatic (fieldCP "const__6" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var")))) 
                                      (111 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (114 (checkcast (class "clojure.lang.IFn"))) 
                                      (117 (getstatic (fieldCP "const__6" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var")))) 
                                      (120 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (123 (checkcast (class "clojure.lang.IFn"))) 
                                      (126 (aload_2)) 
                                      (127 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (132 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (137 (aload_3)) 
                                      (138 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (143 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) ;;at TAG_3
                                      (148 (dup)) 
                                      (149 (ifnull 304)) ;;to TAG_6
                                      (152 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (155 (if_acmpeq 305)) ;;to TAG_7
                                      (158 (getstatic (fieldCP "const__7" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var")))) 
                                      (161 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (164 (checkcast (class "clojure.lang.IFn"))) 
                                      (167 (getstatic (fieldCP "const__8" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var")))) 
                                      (170 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (173 (checkcast (class "clojure.lang.IFn"))) 
                                      (176 (ldc 14)) ;;STRING:: "Parameter "
                                      (178 (getstatic (fieldCP "const__9" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var")))) 
                                      (181 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (184 (checkcast (class "clojure.lang.IFn"))) 
                                      (187 (getstatic (fieldCP "const__0" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var")))) 
                                      (190 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (193 (checkcast (class "clojure.lang.IFn"))) 
                                      (196 (aload_2)) 
                                      (197 (aconst_null)) 
                                      (198 (astore_2)) 
                                      (199 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (204 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (209 (ldc 15)) ;;STRING:: " has bad type in directive \""
                                      (211 (getstatic (fieldCP "__thunk__0__" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.ILookupThunk")))) 
                                      (214 (dup)) 
                                      (215 (aload_0)) 
                                      (216 (getfield (fieldCP "def" "clojure.pprint$map_params$fn__8090" (class "java.lang.Object")))) 
                                      (219 (dup_x2)) 
                                      (220 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (225 (dup_x2)) 
                                      (226 (if_acmpeq 233)) ;;to TAG_8
                                      (229 (pop)) 
                                      (230 (goto 255)) ;;to TAG_9
                                      (233 (swap)) ;;at TAG_8
                                      (234 (pop)) 
                                      (235 (dup)) 
                                      (236 (getstatic (fieldCP "__site__0__" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.KeywordLookupSite")))) 
                                      (239 (swap)) 
                                      (240 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (245 (dup)) 
                                      (246 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.ILookupThunk")))) 
                                      (249 (swap)) 
                                      (250 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (255 (ldc 16)) ;;at TAG_9;;STRING:: "\": "
                                      (257 (getstatic (fieldCP "const__11" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var")))) 
                                      (260 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (263 (checkcast (class "clojure.lang.IFn"))) 
                                      (266 (aload_3)) 
                                      (267 (aconst_null)) 
                                      (268 (astore_3)) 
                                      (269 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (274 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 7)) 
                                      (279 (getstatic (fieldCP "const__6" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.Var")))) 
                                      (282 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (285 (checkcast (class "clojure.lang.IFn"))) 
                                      (288 (aload_1)) 
                                      (289 (aconst_null)) 
                                      (290 (astore_1)) 
                                      (291 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (296 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (301 (goto 306)) ;;to TAG_10
                                      (304 (pop)) ;;at TAG_6
                                      (305 (aconst_null)) ;;at TAG_7
                                      (306 (areturn)) ;;at TAG_10
                                      (endofcode 307))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 28)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 27 (0 . 0) (20))))  ;;to TAG_0;;to TAG_1
                                      (20 (aload_2)) ;;at TAG_1
                                      (21 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$map_params$fn__8090" (class "clojure.lang.ILookupThunk")))) 
                                      (24 (goto 27))  ;;to TAG_0
                                      (27 (return)) ;;at TAG_0
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$map_params$fn__8090-class-table*
  (make-static-class-decls 
   *clojure.pprint$map_params$fn__8090*))

(defconst *package-name-map* 
  ("clojure.pprint$map_params$fn__8090" . "clojure"))

