; core$every_pred$epn__6410-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:42 CDT 2014.
;

(defconst *clojure.core$every_pred$epn__6410*
 (make-class-def
      '(class "clojure.core$every_pred$epn__6410"
            "clojure.lang.RestFn"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "every?")
                        (STRING  "boolean"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "ps" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 27)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "every?"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$every_pred$epn__6410" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "boolean"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$every_pred$epn__6410" (class "clojure.lang.Var"))))
                                      (26 (return))
                                      (endofcode 27))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.RestFn" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "ps" "clojure.core$every_pred$epn__6410" (class "java.lang.Object"))))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "doInvoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 6) (code_length . 87)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (checkcast (class "clojure.lang.IFn"))) 
                                      (4 (aload_1)) 
                                      (5 (aconst_null)) 
                                      (6 (astore_1)) 
                                      (7 (aload_2)) 
                                      (8 (aconst_null)) 
                                      (9 (astore_2)) 
                                      (10 (aload_3)) 
                                      (11 (aconst_null)) 
                                      (12 (astore_3)) 
                                      (13 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (18 (astore 5)) 
                                      (20 (aload 5)) 
                                      (22 (dup)) 
                                      (23 (ifnull 65)) ;;to TAG_0
                                      (26 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (29 (if_acmpeq 66)) ;;to TAG_1
                                      (32 (getstatic (fieldCP "const__0" "clojure.core$every_pred$epn__6410" (class "clojure.lang.Var")))) 
                                      (35 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (38 (checkcast (class "clojure.lang.IFn"))) 
                                      (41 (new (class "clojure.core$every_pred$epn__6410$fn__6420"))) 
                                      (44 (dup)) 
                                      (45 (aload 4)) 
                                      (47 (aconst_null)) 
                                      (48 (astore 4)) 
                                      (50 (invokespecial (methodCP "<init>" "clojure.core$every_pred$epn__6410$fn__6420" ((class "java.lang.Object")) void))) 
                                      (53 (aload_0)) 
                                      (54 (getfield (fieldCP "ps" "clojure.core$every_pred$epn__6410" (class "java.lang.Object")))) 
                                      (57 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (62 (goto 71))  ;;to TAG_2
                                      (65 (pop)) ;;at TAG_0
                                      (66 (aload 5)) ;;at TAG_1
                                      (68 (aconst_null)) 
                                      (69 (astore 5)) 
                                      (71 (invokestatic (methodCP "booleanCast" "clojure.lang.RT" ((class "java.lang.Object")) boolean))) ;;at TAG_2
                                      (74 (ifeq 83)) ;;to TAG_3
                                      (77 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (80 (goto 86)) ;;to TAG_4
                                      (83 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_3
                                      (86 (areturn)) ;;at TAG_4
                                      (endofcode 87))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 4) (code_length . 35)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$every_pred$epn__6410" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (checkcast (class "clojure.lang.IFn")))
                                      (9 (new (class "clojure.core$every_pred$epn__6410$fn__6416")))
                                      (12 (dup))
                                      (13 (aload_2))
                                      (14 (aconst_null))
                                      (15 (astore_2))
                                      (16 (aload_3))
                                      (17 (aconst_null))
                                      (18 (astore_3))
                                      (19 (aload_1))
                                      (20 (aconst_null))
                                      (21 (astore_1))
                                      (22 (invokespecial
					(methodCP "<init>" "clojure.core$every_pred$epn__6410$fn__6416" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) void)))
                                      (25 (aload_0))
                                      (26 (getfield (fieldCP "ps" "clojure.core$every_pred$epn__6410" (class "java.lang.Object"))))
                                      (29 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (34 (areturn))
                                      (endofcode 35))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 3) (code_length . 32)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$every_pred$epn__6410" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (checkcast (class "clojure.lang.IFn")))
                                      (9 (new (class "clojure.core$every_pred$epn__6410$fn__6413")))
                                      (12 (dup))
                                      (13 (aload_2))
                                      (14 (aconst_null))
                                      (15 (astore_2))
                                      (16 (aload_1))
                                      (17 (aconst_null))
                                      (18 (astore_1))
                                      (19 (invokespecial
					(methodCP "<init>" "clojure.core$every_pred$epn__6410$fn__6413" ((class "java.lang.Object") (class "java.lang.Object")) void)))
                                      (22 (aload_0))
                                      (23 (getfield (fieldCP "ps" "clojure.core$every_pred$epn__6410" (class "java.lang.Object"))))
                                      (26 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (31 (areturn))
                                      (endofcode 32))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 2) (code_length . 29)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$every_pred$epn__6410" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (checkcast (class "clojure.lang.IFn")))
                                      (9 (new (class "clojure.core$every_pred$epn__6410$fn__6411")))
                                      (12 (dup))
                                      (13 (aload_1))
                                      (14 (aconst_null))
                                      (15 (astore_1))
                                      (16 (invokespecial
					(methodCP "<init>" "clojure.core$every_pred$epn__6410$fn__6411" ((class "java.lang.Object")) void)))
                                      (19 (aload_0))
                                      (20 (getfield (fieldCP "ps" "clojure.core$every_pred$epn__6410" (class "java.lang.Object"))))
                                      (23 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (28 (areturn))
                                      (endofcode 29))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 4)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (3 (areturn))
                                      (endofcode 4))
                                   (Exceptions )
                                   (StackMap )))
                        (method "getRequiredArity"
                              (parameters )
                              (returntype . int)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 2)
                                   (parsedcode
                                      (0 (iconst_3))
                                      (1 (ireturn))
                                      (endofcode 2))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$every_pred$epn__6410-class-table*
  (make-static-class-decls 
   *clojure.core$every_pred$epn__6410*))

(defconst *package-name-map* 
  ("clojure.core$every_pred$epn__6410" . "clojure"))

