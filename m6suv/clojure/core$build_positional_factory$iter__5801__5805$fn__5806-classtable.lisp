; core$build_positional_factory$iter__5801__5805$fn__5806-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:40 CDT 2014.
;

(defconst *clojure.core$build_positional_factory$iter__5801__5805$fn__5806*
 (make-class-def
      '(class "clojure.core$build_positional_factory$iter__5801__5805$fn__5806"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "seq")
                        (STRING  "chunked-seq?")
                        (STRING  "chunk-first")
                        (STRING  "int")
                        (STRING  "count")
                        (STRING  "chunk-buffer")
                        (STRING  "chunk-cons")
                        (STRING  "chunk")
                        (STRING  "chunk-rest")
                        (STRING  "first")
                        (STRING  "cons")
                        (STRING  "list")
                        (STRING  "nth")
                        (STRING  "overage")
                        (STRING  "rest"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "s__5802" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "iter__5801" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 195)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "seq"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "chunked-seq?"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var"))))
                                      (26 (ldc 0))        ;;STRING:: "clojure.core"
                                      (28 (ldc 3))        ;;STRING:: "chunk-first"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var"))))
                                      (39 (ldc 0))        ;;STRING:: "clojure.core"
                                      (41 (ldc 4))        ;;STRING:: "int"
                                      (43 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (46 (checkcast (class "clojure.lang.Var")))
                                      (49 (putstatic (fieldCP "const__3" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var"))))
                                      (52 (ldc 0))        ;;STRING:: "clojure.core"
                                      (54 (ldc 5))        ;;STRING:: "count"
                                      (56 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (59 (checkcast (class "clojure.lang.Var")))
                                      (62 (putstatic (fieldCP "const__4" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var"))))
                                      (65 (ldc 0))        ;;STRING:: "clojure.core"
                                      (67 (ldc 6))        ;;STRING:: "chunk-buffer"
                                      (69 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (72 (checkcast (class "clojure.lang.Var")))
                                      (75 (putstatic (fieldCP "const__5" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var"))))
                                      (78 (ldc 0))        ;;STRING:: "clojure.core"
                                      (80 (ldc 7))        ;;STRING:: "chunk-cons"
                                      (82 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (85 (checkcast (class "clojure.lang.Var")))
                                      (88 (putstatic (fieldCP "const__6" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var"))))
                                      (91 (ldc 0))        ;;STRING:: "clojure.core"
                                      (93 (ldc 8))        ;;STRING:: "chunk"
                                      (95 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (98 (checkcast (class "clojure.lang.Var")))
                                      (101 (putstatic (fieldCP "const__7" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var"))))
                                      (104 (ldc 0))       ;;STRING:: "clojure.core"
                                      (106 (ldc 9))       ;;STRING:: "chunk-rest"
                                      (108 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (111 (checkcast (class "clojure.lang.Var")))
                                      (114 (putstatic (fieldCP "const__8" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var"))))
                                      (117 (ldc 0))       ;;STRING:: "clojure.core"
                                      (119 (ldc 10))      ;;STRING:: "first"
                                      (121 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (124 (checkcast (class "clojure.lang.Var")))
                                      (127 (putstatic (fieldCP "const__9" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var"))))
                                      (130 (ldc 0))       ;;STRING:: "clojure.core"
                                      (132 (ldc 11))      ;;STRING:: "cons"
                                      (134 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (137 (checkcast (class "clojure.lang.Var")))
                                      (140 (putstatic (fieldCP "const__10" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var"))))
                                      (143 (ldc 0))       ;;STRING:: "clojure.core"
                                      (145 (ldc 12))      ;;STRING:: "list"
                                      (147 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (150 (checkcast (class "clojure.lang.Var")))
                                      (153 (putstatic (fieldCP "const__11" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var"))))
                                      (156 (ldc 0))       ;;STRING:: "clojure.core"
                                      (158 (ldc 13))      ;;STRING:: "nth"
                                      (160 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (163 (checkcast (class "clojure.lang.AFn")))
                                      (166 (putstatic (fieldCP "const__12" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.AFn"))))
                                      (169 (aconst_null))
                                      (170 (ldc 14))      ;;STRING:: "overage"
                                      (172 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (175 (checkcast (class "clojure.lang.AFn")))
                                      (178 (putstatic (fieldCP "const__13" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.AFn"))))
                                      (181 (ldc 0))       ;;STRING:: "clojure.core"
                                      (183 (ldc 15))      ;;STRING:: "rest"
                                      (185 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (188 (checkcast (class "clojure.lang.Var")))
                                      (191 (putstatic (fieldCP "const__14" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var"))))
                                      (194 (return))
                                      (endofcode 195))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "s__5802" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "java.lang.Object"))))
                                      (9 (aload_0))
                                      (10 (aload_2))
                                      (11 (putfield (fieldCP "iter__5801" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "java.lang.Object"))))
                                      (14 (return))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters )
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 7) (code_length . 343)
                                   (parsedcode
                                      (0 (aload_0)) 
                                      (1 (getfield (fieldCP "s__5802" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "java.lang.Object")))) 
                                      (4 (aload_0)) 
                                      (5 (aconst_null)) 
                                      (6 (putfield (fieldCP "s__5802" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "java.lang.Object")))) 
                                      (9 (astore_1)) 
                                      (10 (getstatic (fieldCP "const__0" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var")))) 
                                      (13 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (16 (checkcast (class "clojure.lang.IFn"))) 
                                      (19 (aload_1)) 
                                      (20 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (25 (astore_2)) 
                                      (26 (aload_2)) 
                                      (27 (dup)) 
                                      (28 (ifnull 340)) ;;to TAG_0
                                      (31 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (34 (if_acmpeq 341))  ;;to TAG_1
                                      (37 (aload_2)) 
                                      (38 (aconst_null)) 
                                      (39 (astore_2)) 
                                      (40 (astore_3)) 
                                      (41 (getstatic (fieldCP "const__1" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var")))) 
                                      (44 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (47 (checkcast (class "clojure.lang.IFn"))) 
                                      (50 (aload_3)) 
                                      (51 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (56 (dup)) 
                                      (57 (ifnull 251)) ;;to TAG_2
                                      (60 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (63 (if_acmpeq 252)) ;;to TAG_3
                                      (66 (getstatic (fieldCP "const__2" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var")))) 
                                      (69 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (72 (checkcast (class "clojure.lang.IFn"))) 
                                      (75 (aload_3)) 
                                      (76 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (81 (astore 4)) 
                                      (83 (aload 4)) 
                                      (85 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (88 (invokestatic (methodCP "intCast" "clojure.lang.RT" (int) int))) 
                                      (91 (istore 5)) 
                                      (93 (getstatic (fieldCP "const__5" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var")))) 
                                      (96 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (99 (checkcast (class "clojure.lang.IFn"))) 
                                      (102 (iload 5)) 
                                      (104 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (107 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (112 (astore 6)) 
                                      (114 (new (class "clojure.core$build_positional_factory$iter__5801__5805$fn__5806$fn__5807"))) 
                                      (117 (dup)) 
                                      (118 (aload 4)) 
                                      (120 (aconst_null)) 
                                      (121 (astore 4)) 
                                      (123 (aload 6)) 
                                      (125 (iload 5)) 
                                      (127 (invokespecial (methodCP "<init>" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806$fn__5807" ((class "java.lang.Object") (class "java.lang.Object") int) void))) 
                                      (130 (checkcast (class "clojure.lang.IFn"))) 
                                      (133 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (138 (dup)) 
                                      (139 (ifnull 213)) ;;to TAG_4
                                      (142 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (145 (if_acmpeq 214)) ;;to TAG_5
                                      (148 (getstatic (fieldCP "const__6" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var")))) 
                                      (151 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (154 (checkcast (class "clojure.lang.IFn"))) 
                                      (157 (getstatic (fieldCP "const__7" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var")))) 
                                      (160 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (163 (checkcast (class "clojure.lang.IFn"))) 
                                      (166 (aload 6)) 
                                      (168 (aconst_null)) 
                                      (169 (astore 6)) 
                                      (171 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (176 (aload_0)) 
                                      (177 (getfield (fieldCP "iter__5801" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "java.lang.Object")))) 
                                      (180 (checkcast (class "clojure.lang.IFn"))) 
                                      (183 (getstatic (fieldCP "const__8" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var")))) 
                                      (186 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (189 (checkcast (class "clojure.lang.IFn"))) 
                                      (192 (aload_3)) 
                                      (193 (aconst_null)) 
                                      (194 (astore_3)) 
                                      (195 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (200 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (205 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (210 (goto 248)) ;;to TAG_6
                                      (213 (pop)) ;;at TAG_4
                                      (214 (getstatic (fieldCP "const__6" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var")))) ;;at TAG_5
                                      (217 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (220 (checkcast (class "clojure.lang.IFn"))) 
                                      (223 (getstatic (fieldCP "const__7" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var")))) 
                                      (226 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (229 (checkcast (class "clojure.lang.IFn"))) 
                                      (232 (aload 6)) 
                                      (234 (aconst_null)) 
                                      (235 (astore 6)) 
                                      (237 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (242 (aconst_null)) 
                                      (243 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (248 (goto 337)) ;;to TAG_7;;at TAG_6
                                      (251 (pop)) ;;at TAG_2
                                      (252 (getstatic (fieldCP "const__9" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var")))) ;;at TAG_3
                                      (255 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (258 (checkcast (class "clojure.lang.IFn"))) 
                                      (261 (aload_3)) 
                                      (262 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (267 (astore 4)) 
                                      (269 (getstatic (fieldCP "const__10" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var")))) 
                                      (272 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (275 (checkcast (class "clojure.lang.IFn"))) 
                                      (278 (getstatic (fieldCP "const__11" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var")))) 
                                      (281 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (284 (checkcast (class "clojure.lang.IFn"))) 
                                      (287 (getstatic (fieldCP "const__12" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.AFn")))) 
                                      (290 (getstatic (fieldCP "const__13" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.AFn")))) 
                                      (293 (aload 4)) 
                                      (295 (aconst_null)) 
                                      (296 (astore 4)) 
                                      (298 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (303 (aload_0)) 
                                      (304 (getfield (fieldCP "iter__5801" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "java.lang.Object")))) 
                                      (307 (checkcast (class "clojure.lang.IFn"))) 
                                      (310 (getstatic (fieldCP "const__14" "clojure.core$build_positional_factory$iter__5801__5805$fn__5806" (class "clojure.lang.Var")))) 
                                      (313 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (316 (checkcast (class "clojure.lang.IFn"))) 
                                      (319 (aload_3)) 
                                      (320 (aconst_null)) 
                                      (321 (astore_3)) 
                                      (322 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (327 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (332 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (337 (goto 342)) ;;to TAG_8;;at TAG_7
                                      (340 (pop)) ;;at TAG_0
                                      (341 (aconst_null)) ;;at TAG_1
                                      (342 (areturn)) ;;at TAG_8
                                      (endofcode 343))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$build_positional_factory$iter__5801__5805$fn__5806-class-table*
  (make-static-class-decls 
   *clojure.core$build_positional_factory$iter__5801__5805$fn__5806*))

(defconst *package-name-map* 
  ("clojure.core$build_positional_factory$iter__5801__5805$fn__5806" . "clojure"))

