; test$file_and_line-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:58 CDT 2014.
;

(defconst *clojure.test$file_and_line*
 (make-class-def
      '(class "clojure.test$file_and_line"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "nth")
                        (STRING  "file")
                        (STRING  "line")
                        (STRING  "getStackTrace"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 38)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "nth"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.test$file_and_line" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "file"
                                      (16 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (19 (checkcast (class "clojure.lang.Keyword")))
                                      (22 (putstatic (fieldCP "const__1" "clojure.test$file_and_line" (class "clojure.lang.Keyword"))))
                                      (25 (aconst_null))
                                      (26 (ldc 3))        ;;STRING:: "line"
                                      (28 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (31 (checkcast (class "clojure.lang.Keyword")))
                                      (34 (putstatic (fieldCP "const__2" "clojure.test$file_and_line" (class "clojure.lang.Keyword"))))
                                      (37 (return))
                                      (endofcode 38))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 5) (max_locals . 4) (code_length . 66)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (aconst_null))
                                      (2 (astore_1))
                                      (3 (ldc 4))         ;;STRING:: "getStackTrace"
                                      (5 (invokestatic
					(methodCP "invokeNoArgInstanceMember" "clojure.lang.Reflector" ((class "java.lang.Object") (class "java.lang.String")) (class "java.lang.Object"))))
                                      (8 (aload_2))
                                      (9 (aconst_null))
                                      (10 (astore_2))
                                      (11 (checkcast (class "java.lang.Number")))
                                      (14 (invokestatic
					(methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int)))
                                      (17 (invokestatic
					(methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object"))))
                                      (20 (astore_3))
                                      (21 (iconst_4))
                                      (22 (anewarray (class "java.lang.Object")))
                                      (25 (dup))
                                      (26 (iconst_0))
                                      (27 (getstatic (fieldCP "const__1" "clojure.test$file_and_line" (class "clojure.lang.Keyword"))))
                                      (30 (aastore))
                                      (31 (dup))
                                      (32 (iconst_1))
                                      (33 (aload_3))
                                      (34 (checkcast (class "java.lang.StackTraceElement")))
                                      (37 (invokevirtual
					(methodCP "getFileName" "java.lang.StackTraceElement" () (class "java.lang.String"))))
                                      (40 (aastore))
                                      (41 (dup))
                                      (42 (iconst_2))
                                      (43 (getstatic (fieldCP "const__2" "clojure.test$file_and_line" (class "clojure.lang.Keyword"))))
                                      (46 (aastore))
                                      (47 (dup))
                                      (48 (iconst_3))
                                      (49 (aload_3))
                                      (50 (aconst_null))
                                      (51 (astore_3))
                                      (52 (checkcast (class "java.lang.StackTraceElement")))
                                      (55 (invokevirtual
					(methodCP "getLineNumber" "java.lang.StackTraceElement" () int)))
                                      (58 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (61 (aastore))
                                      (62 (invokestatic
					(methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (65 (areturn))
                                      (endofcode 66))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *test$file_and_line-class-table*
  (make-static-class-decls 
   *clojure.test$file_and_line*))

(defconst *package-name-map* 
  ("clojure.test$file_and_line" . "clojure"))

