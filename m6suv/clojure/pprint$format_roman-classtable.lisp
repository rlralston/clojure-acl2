; pprint$format_roman-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:56 CDT 2014.
;

(defconst *clojure.pprint$format_roman*
 (make-class-def
      '(class "clojure.pprint$format_roman"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.pprint")
                        (STRING  "next-arg")
                        (STRING  "clojure.core")
                        (STRING  "nth")
                        (STRING  "number?")
                        (STRING  ">")
                        (STRING  "<")
                        (LONG 4000)
                        (STRING  "remainders")
                        (LONG 10)
                        (STRING  "dec")
                        (STRING  "count")
                        (STRING  "empty?")
                        (STRING  "print")
                        (STRING  "apply")
                        (STRING  "str")
                        (STRING  "first")
                        (STRING  "=")
                        (STRING  "conj")
                        (STRING  "next")
                        (STRING  "format-integer")
                        (STRING  "mincol")
                        (STRING  "padchar")
                        (STRING  "commachar")
                        (STRING  "commainterval")
                        (LONG 3)
                        (STRING  "colon")
                        (STRING  "init-navigator"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__19" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__20" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__21" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__22" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__23" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__24" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__25" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__26" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__27" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__28" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__29" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__30" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__31" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 5) (max_locals . 0) (code_length . 533)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.pprint"
                                      (2 (ldc 1))         ;;STRING:: "next-arg"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (13 (ldc 2))        ;;STRING:: "clojure.core"
                                      (15 (ldc 3))        ;;STRING:: "nth"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (26 (lconst_0))
                                      (27 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (30 (putstatic (fieldCP "const__2" "clojure.pprint$format_roman" (class "java.lang.Object"))))
                                      (33 (lconst_1))
                                      (34 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (37 (putstatic (fieldCP "const__3" "clojure.pprint$format_roman" (class "java.lang.Object"))))
                                      (40 (ldc 2))        ;;STRING:: "clojure.core"
                                      (42 (ldc 4))        ;;STRING:: "number?"
                                      (44 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (47 (checkcast (class "clojure.lang.Var")))
                                      (50 (putstatic (fieldCP "const__4" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (53 (ldc 2))        ;;STRING:: "clojure.core"
                                      (55 (ldc 5))        ;;STRING:: ">"
                                      (57 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (60 (checkcast (class "clojure.lang.Var")))
                                      (63 (putstatic (fieldCP "const__5" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (66 (ldc 2))        ;;STRING:: "clojure.core"
                                      (68 (ldc 6))        ;;STRING:: "<"
                                      (70 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (73 (checkcast (class "clojure.lang.Var")))
                                      (76 (putstatic (fieldCP "const__6" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (79 (ldc2_w 7))     ;; LONG:: "4000"
                                      (82 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (85 (putstatic (fieldCP "const__7" "clojure.pprint$format_roman" (class "java.lang.Object"))))
                                      (88 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (90 (ldc 8))        ;;STRING:: "remainders"
                                      (92 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (95 (checkcast (class "clojure.lang.Var")))
                                      (98 (putstatic (fieldCP "const__8" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (101 (ldc2_w 9))    ;; LONG:: "10"
                                      (104 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (107 (putstatic (fieldCP "const__9" "clojure.pprint$format_roman" (class "java.lang.Object"))))
                                      (110 (ldc 2))       ;;STRING:: "clojure.core"
                                      (112 (ldc 10))      ;;STRING:: "dec"
                                      (114 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (117 (checkcast (class "clojure.lang.Var")))
                                      (120 (putstatic (fieldCP "const__10" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (123 (ldc 2))       ;;STRING:: "clojure.core"
                                      (125 (ldc 11))      ;;STRING:: "count"
                                      (127 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (130 (checkcast (class "clojure.lang.Var")))
                                      (133 (putstatic (fieldCP "const__11" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (136 (ldc 2))       ;;STRING:: "clojure.core"
                                      (138 (ldc 12))      ;;STRING:: "empty?"
                                      (140 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (143 (checkcast (class "clojure.lang.Var")))
                                      (146 (putstatic (fieldCP "const__12" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (149 (ldc 2))       ;;STRING:: "clojure.core"
                                      (151 (ldc 13))      ;;STRING:: "print"
                                      (153 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (156 (checkcast (class "clojure.lang.Var")))
                                      (159 (putstatic (fieldCP "const__13" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (162 (ldc 2))       ;;STRING:: "clojure.core"
                                      (164 (ldc 14))      ;;STRING:: "apply"
                                      (166 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (169 (checkcast (class "clojure.lang.Var")))
                                      (172 (putstatic (fieldCP "const__14" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (175 (ldc 2))       ;;STRING:: "clojure.core"
                                      (177 (ldc 15))      ;;STRING:: "str"
                                      (179 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (182 (checkcast (class "clojure.lang.Var")))
                                      (185 (putstatic (fieldCP "const__15" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (188 (ldc 2))       ;;STRING:: "clojure.core"
                                      (190 (ldc 16))      ;;STRING:: "first"
                                      (192 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (195 (checkcast (class "clojure.lang.Var")))
                                      (198 (putstatic (fieldCP "const__16" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (201 (ldc 2))       ;;STRING:: "clojure.core"
                                      (203 (ldc 17))      ;;STRING:: "="
                                      (205 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (208 (checkcast (class "clojure.lang.Var")))
                                      (211 (putstatic (fieldCP "const__17" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (214 (ldc 2))       ;;STRING:: "clojure.core"
                                      (216 (ldc 18))      ;;STRING:: "conj"
                                      (218 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (221 (checkcast (class "clojure.lang.Var")))
                                      (224 (putstatic (fieldCP "const__18" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (227 (ldc 2))       ;;STRING:: "clojure.core"
                                      (229 (ldc 19))      ;;STRING:: "next"
                                      (231 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (234 (checkcast (class "clojure.lang.Var")))
                                      (237 (putstatic (fieldCP "const__19" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (240 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (242 (ldc 20))      ;;STRING:: "format-integer"
                                      (244 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (247 (checkcast (class "clojure.lang.Var")))
                                      (250 (putstatic (fieldCP "const__20" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (253 (aconst_null))
                                      (254 (ldc 21))      ;;STRING:: "mincol"
                                      (256 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (259 (checkcast (class "clojure.lang.Keyword")))
                                      (262 (putstatic (fieldCP "const__21" "clojure.pprint$format_roman" (class "clojure.lang.Keyword"))))
                                      (265 (aconst_null))
                                      (266 (ldc 22))      ;;STRING:: "padchar"
                                      (268 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (271 (checkcast (class "clojure.lang.Keyword")))
                                      (274 (putstatic (fieldCP "const__22" "clojure.pprint$format_roman" (class "clojure.lang.Keyword"))))
                                      (277 (bipush 32))
                                      (279 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (282 (putstatic (fieldCP "const__23" "clojure.pprint$format_roman" (class "java.lang.Object"))))
                                      (285 (aconst_null))
                                      (286 (ldc 23))      ;;STRING:: "commachar"
                                      (288 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (291 (checkcast (class "clojure.lang.Keyword")))
                                      (294 (putstatic (fieldCP "const__24" "clojure.pprint$format_roman" (class "clojure.lang.Keyword"))))
                                      (297 (bipush 44))
                                      (299 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (302 (putstatic (fieldCP "const__25" "clojure.pprint$format_roman" (class "java.lang.Object"))))
                                      (305 (aconst_null))
                                      (306 (ldc 24))      ;;STRING:: "commainterval"
                                      (308 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (311 (checkcast (class "clojure.lang.Keyword")))
                                      (314 (putstatic (fieldCP "const__26" "clojure.pprint$format_roman" (class "clojure.lang.Keyword"))))
                                      (317 (ldc2_w 25))   ;; LONG:: "3"
                                      (320 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (323 (putstatic (fieldCP "const__27" "clojure.pprint$format_roman" (class "java.lang.Object"))))
                                      (326 (aconst_null))
                                      (327 (ldc 26))      ;;STRING:: "colon"
                                      (329 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (332 (checkcast (class "clojure.lang.Keyword")))
                                      (335 (putstatic (fieldCP "const__28" "clojure.pprint$format_roman" (class "clojure.lang.Keyword"))))
                                      (338 (bipush 10))
                                      (340 (anewarray (class "java.lang.Object")))
                                      (343 (dup))
                                      (344 (iconst_0))
                                      (345 (aconst_null))
                                      (346 (ldc 23))      ;;STRING:: "commachar"
                                      (348 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (351 (aastore))
                                      (352 (dup))
                                      (353 (iconst_1))
                                      (354 (bipush 44))
                                      (356 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (359 (aastore))
                                      (360 (dup))
                                      (361 (iconst_2))
                                      (362 (aconst_null))
                                      (363 (ldc 26))      ;;STRING:: "colon"
                                      (365 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (368 (aastore))
                                      (369 (dup))
                                      (370 (iconst_3))
                                      (371 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean"))))
                                      (374 (aastore))
                                      (375 (dup))
                                      (376 (iconst_4))
                                      (377 (aconst_null))
                                      (378 (ldc 22))      ;;STRING:: "padchar"
                                      (380 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (383 (aastore))
                                      (384 (dup))
                                      (385 (iconst_5))
                                      (386 (bipush 32))
                                      (388 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (391 (aastore))
                                      (392 (dup))
                                      (393 (bipush 6))
                                      (395 (aconst_null))
                                      (396 (ldc 21))      ;;STRING:: "mincol"
                                      (398 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (401 (aastore))
                                      (402 (dup))
                                      (403 (bipush 7))
                                      (405 (lconst_0))
                                      (406 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (409 (aastore))
                                      (410 (dup))
                                      (411 (bipush 8))
                                      (413 (aconst_null))
                                      (414 (ldc 24))      ;;STRING:: "commainterval"
                                      (416 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (419 (aastore))
                                      (420 (dup))
                                      (421 (bipush 9))
                                      (423 (ldc2_w 25))   ;; LONG:: "3"
                                      (426 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (429 (aastore))
                                      (430 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (433 (checkcast (class "clojure.lang.AFn")))
                                      (436 (putstatic (fieldCP "const__29" "clojure.pprint$format_roman" (class "clojure.lang.AFn"))))
                                      (439 (ldc 0))       ;;STRING:: "clojure.pprint"
                                      (441 (ldc 27))      ;;STRING:: "init-navigator"
                                      (443 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (446 (checkcast (class "clojure.lang.Var")))
                                      (449 (putstatic (fieldCP "const__30" "clojure.pprint$format_roman" (class "clojure.lang.Var"))))
                                      (452 (bipush 8))
                                      (454 (anewarray (class "java.lang.Object")))
                                      (457 (dup))
                                      (458 (iconst_0))
                                      (459 (aconst_null))
                                      (460 (ldc 23))      ;;STRING:: "commachar"
                                      (462 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (465 (aastore))
                                      (466 (dup))
                                      (467 (iconst_1))
                                      (468 (lconst_0))
                                      (469 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (472 (aastore))
                                      (473 (dup))
                                      (474 (iconst_2))
                                      (475 (aconst_null))
                                      (476 (ldc 22))      ;;STRING:: "padchar"
                                      (478 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (481 (aastore))
                                      (482 (dup))
                                      (483 (iconst_3))
                                      (484 (lconst_0))
                                      (485 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (488 (aastore))
                                      (489 (dup))
                                      (490 (iconst_4))
                                      (491 (aconst_null))
                                      (492 (ldc 21))      ;;STRING:: "mincol"
                                      (494 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (497 (aastore))
                                      (498 (dup))
                                      (499 (iconst_5))
                                      (500 (lconst_0))
                                      (501 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (504 (aastore))
                                      (505 (dup))
                                      (506 (bipush 6))
                                      (508 (aconst_null))
                                      (509 (ldc 24))      ;;STRING:: "commainterval"
                                      (511 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (514 (aastore))
                                      (515 (dup))
                                      (516 (bipush 7))
                                      (518 (lconst_0))
                                      (519 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (522 (aastore))
                                      (523 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (526 (checkcast (class "clojure.lang.AFn")))
                                      (529 (putstatic (fieldCP "const__31" "clojure.pprint$format_roman" (class "clojure.lang.AFn"))))
                                      (532 (return))
                                      (endofcode 533))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 9) (max_locals . 14) (code_length . 428)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$format_roman" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_3)) 
                                      (10 (aconst_null)) 
                                      (11 (astore_3)) 
                                      (12 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (17 (astore 5)) 
                                      (19 (aload 5)) 
                                      (21 (lconst_0)) 
                                      (22 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (25 (aconst_null)) 
                                      (26 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (29 (astore 6)) 
                                      (31 (aload 5)) 
                                      (33 (aconst_null)) 
                                      (34 (astore 5)) 
                                      (36 (lconst_1)) 
                                      (37 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (40 (aconst_null)) 
                                      (41 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (44 (astore 7)) 
                                      (46 (getstatic (fieldCP "const__4" "clojure.pprint$format_roman" (class "clojure.lang.Var")))) 
                                      (49 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (52 (checkcast (class "clojure.lang.IFn"))) 
                                      (55 (aload 6)) 
                                      (57 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (62 (astore 8)) 
                                      (64 (aload 8)) 
                                      (66 (dup)) 
                                      (67 (ifnull 130)) ;;to TAG_0
                                      (70 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (73 (if_acmpeq 131))  ;;to TAG_1
                                      (76 (aload 6)) 
                                      (78 (lconst_0)) 
                                      (79 (invokestatic (methodCP "gt" "clojure.lang.Numbers" ((class "java.lang.Object") long) boolean))) 
                                      (82 (istore 9)) 
                                      (84 (iload 9)) 
                                      (86 (ifeq 113)) ;;to TAG_2
                                      (89 (aload 6)) 
                                      (91 (ldc2_w 7)) ;; LONG:: "4000"
                                      (94 (invokestatic (methodCP "lt" "clojure.lang.Numbers" ((class "java.lang.Object") long) boolean))) 
                                      (97 (ifeq 106)) ;;to TAG_3
                                      (100 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (103 (goto 109)) ;;to TAG_4
                                      (106 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_3
                                      (109 (goto 127)) ;;to TAG_5;;at TAG_4
                                      (112 (pop)) 
                                      (113 (iload 9)) ;;at TAG_2
                                      (115 (ifeq 124)) ;;to TAG_6
                                      (118 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (121 (goto 127)) ;;to TAG_5
                                      (124 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) ;;at TAG_6
                                      (127 (goto 136)) ;;to TAG_7;;at TAG_5
                                      (130 (pop)) ;;at TAG_0
                                      (131 (aload 8)) ;;at TAG_1
                                      (133 (aconst_null)) 
                                      (134 (astore 8)) 
                                      (136 (dup)) ;;at TAG_7
                                      (137 (ifnull 368)) ;;to TAG_8
                                      (140 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (143 (if_acmpeq 369)) ;;to TAG_9
                                      (146 (getstatic (fieldCP "const__8" "clojure.pprint$format_roman" (class "clojure.lang.Var")))) 
                                      (149 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (152 (checkcast (class "clojure.lang.IFn"))) 
                                      (155 (getstatic (fieldCP "const__9" "clojure.pprint$format_roman" (class "java.lang.Object")))) 
                                      (158 (aload 6)) 
                                      (160 (aconst_null)) 
                                      (161 (astore 6)) 
                                      (163 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (168 (astore 8)) 
                                      (170 (getstatic (fieldCP "EMPTY" "clojure.lang.PersistentVector" (class "clojure.lang.PersistentVector")))) 
                                      (173 (astore 9)) 
                                      (175 (aload 8)) 
                                      (177 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (180 (i2l)) 
                                      (181 (invokestatic (methodCP "dec" "clojure.lang.Numbers" (long) long))) 
                                      (184 (lstore 10)) 
                                      (186 (aload 8)) 
                                      (188 (aconst_null)) 
                                      (189 (astore 8)) 
                                      (191 (astore 12)) 
                                      (193 (getstatic (fieldCP "const__12" "clojure.pprint$format_roman" (class "clojure.lang.Var")))) ;;at TAG_15
                                      (196 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (199 (checkcast (class "clojure.lang.IFn"))) 
                                      (202 (aload 12)) 
                                      (204 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (209 (dup)) 
                                      (210 (ifnull 259)) ;;to TAG_10
                                      (213 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (216 (if_acmpeq 260)) ;;to TAG_11
                                      (219 (getstatic (fieldCP "const__13" "clojure.pprint$format_roman" (class "clojure.lang.Var")))) 
                                      (222 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (225 (checkcast (class "clojure.lang.IFn"))) 
                                      (228 (getstatic (fieldCP "const__14" "clojure.pprint$format_roman" (class "clojure.lang.Var")))) 
                                      (231 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (234 (checkcast (class "clojure.lang.IFn"))) 
                                      (237 (getstatic (fieldCP "const__15" "clojure.pprint$format_roman" (class "clojure.lang.Var")))) 
                                      (240 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (243 (aload 9)) 
                                      (245 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (250 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (255 (pop)) 
                                      (256 (goto 365)) ;;to TAG_12
                                      (259 (pop)) ;;at TAG_10
                                      (260 (getstatic (fieldCP "const__16" "clojure.pprint$format_roman" (class "clojure.lang.Var")))) ;;at TAG_11
                                      (263 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (266 (checkcast (class "clojure.lang.IFn"))) 
                                      (269 (aload 12)) 
                                      (271 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (276 (astore 13)) 
                                      (278 (lconst_0)) 
                                      (279 (aload 13)) 
                                      (281 (invokestatic (methodCP "equiv" "clojure.lang.Util" (long (class "java.lang.Object")) boolean))) 
                                      (284 (ifeq 293)) ;;to TAG_13
                                      (287 (aload 9)) 
                                      (289 (goto 335)) ;;to TAG_14
                                      (292 (pop)) 
                                      (293 (getstatic (fieldCP "const__18" "clojure.pprint$format_roman" (class "clojure.lang.Var")))) ;;at TAG_13
                                      (296 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (299 (checkcast (class "clojure.lang.IFn"))) 
                                      (302 (aload 9)) 
                                      (304 (aload_1)) 
                                      (305 (lload 10)) 
                                      (307 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (310 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (313 (aload 13)) 
                                      (315 (aconst_null)) 
                                      (316 (astore 13)) 
                                      (318 (invokestatic (methodCP "dec" "clojure.lang.Numbers" ((class "java.lang.Object")) (class "java.lang.Number")))) 
                                      (321 (checkcast (class "java.lang.Number"))) 
                                      (324 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (327 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int) (class "java.lang.Object")))) 
                                      (330 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (335 (lload 10)) ;;at TAG_14
                                      (337 (invokestatic (methodCP "dec" "clojure.lang.Numbers" (long) long))) 
                                      (340 (getstatic (fieldCP "const__19" "clojure.pprint$format_roman" (class "clojure.lang.Var")))) 
                                      (343 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (346 (checkcast (class "clojure.lang.IFn"))) 
                                      (349 (aload 12)) 
                                      (351 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (356 (astore 12)) 
                                      (358 (lstore 10)) 
                                      (360 (astore 9)) 
                                      (362 (goto 193)) ;;to TAG_15
                                      (365 (goto 422)) ;;to TAG_16;;at TAG_12
                                      (368 (pop)) ;;at TAG_8
                                      (369 (getstatic (fieldCP "const__20" "clojure.pprint$format_roman" (class "clojure.lang.Var")))) ;;at TAG_9
                                      (372 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (375 (checkcast (class "clojure.lang.IFn"))) 
                                      (378 (getstatic (fieldCP "const__9" "clojure.pprint$format_roman" (class "java.lang.Object")))) 
                                      (381 (getstatic (fieldCP "const__29" "clojure.pprint$format_roman" (class "clojure.lang.AFn")))) 
                                      (384 (getstatic (fieldCP "const__30" "clojure.pprint$format_roman" (class "clojure.lang.Var")))) 
                                      (387 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (390 (checkcast (class "clojure.lang.IFn"))) 
                                      (393 (iconst_1)) 
                                      (394 (anewarray (class "java.lang.Object"))) 
                                      (397 (dup)) 
                                      (398 (iconst_0)) 
                                      (399 (aload 6)) 
                                      (401 (aconst_null)) 
                                      (402 (astore 6)) 
                                      (404 (aastore)) 
                                      (405 (invokestatic (methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector")))) 
                                      (408 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (413 (getstatic (fieldCP "const__31" "clojure.pprint$format_roman" (class "clojure.lang.AFn")))) 
                                      (416 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 5)) 
                                      (421 (pop)) 
                                      (422 (aload 7)) ;;at TAG_16
                                      (424 (aconst_null)) 
                                      (425 (astore 7)) 
                                      (427 (areturn)) 
                                      (endofcode 428))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$format_roman-class-table*
  (make-static-class-decls 
   *clojure.pprint$format_roman*))

(defconst *package-name-map* 
  ("clojure.pprint$format_roman" . "clojure"))

