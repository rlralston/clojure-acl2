; core$assert_same_protocol-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:40 CDT 2014.
;

(defconst *clojure.core$assert_same_protocol*
 (make-class-def
      '(class "clojure.core$assert_same_protocol"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "seq")
                        (STRING  "<")
                        (STRING  "resolve")
                        (STRING  "protocol")
                        (STRING  "meta")
                        (STRING  "bound?")
                        (STRING  "not=")
                        (STRING  "push-thread-bindings")
                        (STRING  "hash-map")
                        (STRING  "*out*")
                        (STRING  "*err*")
                        (STRING  "unchecked-inc")
                        (STRING  "chunked-seq?")
                        (STRING  "chunk-first")
                        (STRING  "chunk-rest")
                        (STRING  "int")
                        (STRING  "count")
                        (STRING  "first")
                        (STRING  "next"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__18" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__19" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1)
                        (field "__site__1__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__1__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 294)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "seq"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (13 (lconst_0))
                                      (14 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (17 (putstatic (fieldCP "const__1" "clojure.core$assert_same_protocol" (class "java.lang.Object"))))
                                      (20 (ldc 0))        ;;STRING:: "clojure.core"
                                      (22 (ldc 2))        ;;STRING:: "<"
                                      (24 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (27 (checkcast (class "clojure.lang.Var")))
                                      (30 (putstatic (fieldCP "const__2" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (33 (ldc 0))        ;;STRING:: "clojure.core"
                                      (35 (ldc 3))        ;;STRING:: "resolve"
                                      (37 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (40 (checkcast (class "clojure.lang.Var")))
                                      (43 (putstatic (fieldCP "const__3" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (46 (aconst_null))
                                      (47 (ldc 4))        ;;STRING:: "protocol"
                                      (49 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (52 (checkcast (class "clojure.lang.Keyword")))
                                      (55 (putstatic (fieldCP "const__4" "clojure.core$assert_same_protocol" (class "clojure.lang.Keyword"))))
                                      (58 (ldc 0))        ;;STRING:: "clojure.core"
                                      (60 (ldc 5))        ;;STRING:: "meta"
                                      (62 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (65 (checkcast (class "clojure.lang.Var")))
                                      (68 (putstatic (fieldCP "const__5" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (71 (ldc 0))        ;;STRING:: "clojure.core"
                                      (73 (ldc 6))        ;;STRING:: "bound?"
                                      (75 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (78 (checkcast (class "clojure.lang.Var")))
                                      (81 (putstatic (fieldCP "const__6" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (84 (ldc 0))        ;;STRING:: "clojure.core"
                                      (86 (ldc 7))        ;;STRING:: "not="
                                      (88 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (91 (checkcast (class "clojure.lang.Var")))
                                      (94 (putstatic (fieldCP "const__7" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (97 (ldc 0))        ;;STRING:: "clojure.core"
                                      (99 (ldc 8))        ;;STRING:: "push-thread-bindings"
                                      (101 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (104 (checkcast (class "clojure.lang.Var")))
                                      (107 (putstatic (fieldCP "const__8" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (110 (ldc 0))       ;;STRING:: "clojure.core"
                                      (112 (ldc 9))       ;;STRING:: "hash-map"
                                      (114 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (117 (checkcast (class "clojure.lang.Var")))
                                      (120 (putstatic (fieldCP "const__9" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (123 (ldc 0))       ;;STRING:: "clojure.core"
                                      (125 (ldc 10))      ;;STRING:: "*out*"
                                      (127 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (130 (checkcast (class "clojure.lang.Var")))
                                      (133 (putstatic (fieldCP "const__10" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (136 (ldc 0))       ;;STRING:: "clojure.core"
                                      (138 (ldc 11))      ;;STRING:: "*err*"
                                      (140 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (143 (checkcast (class "clojure.lang.Var")))
                                      (146 (putstatic (fieldCP "const__11" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (149 (ldc 0))       ;;STRING:: "clojure.core"
                                      (151 (ldc 12))      ;;STRING:: "unchecked-inc"
                                      (153 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (156 (checkcast (class "clojure.lang.Var")))
                                      (159 (putstatic (fieldCP "const__12" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (162 (ldc 0))       ;;STRING:: "clojure.core"
                                      (164 (ldc 13))      ;;STRING:: "chunked-seq?"
                                      (166 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (169 (checkcast (class "clojure.lang.Var")))
                                      (172 (putstatic (fieldCP "const__13" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (175 (ldc 0))       ;;STRING:: "clojure.core"
                                      (177 (ldc 14))      ;;STRING:: "chunk-first"
                                      (179 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (182 (checkcast (class "clojure.lang.Var")))
                                      (185 (putstatic (fieldCP "const__14" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (188 (ldc 0))       ;;STRING:: "clojure.core"
                                      (190 (ldc 15))      ;;STRING:: "chunk-rest"
                                      (192 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (195 (checkcast (class "clojure.lang.Var")))
                                      (198 (putstatic (fieldCP "const__15" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (201 (ldc 0))       ;;STRING:: "clojure.core"
                                      (203 (ldc 16))      ;;STRING:: "int"
                                      (205 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (208 (checkcast (class "clojure.lang.Var")))
                                      (211 (putstatic (fieldCP "const__16" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (214 (ldc 0))       ;;STRING:: "clojure.core"
                                      (216 (ldc 17))      ;;STRING:: "count"
                                      (218 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (221 (checkcast (class "clojure.lang.Var")))
                                      (224 (putstatic (fieldCP "const__17" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (227 (ldc 0))       ;;STRING:: "clojure.core"
                                      (229 (ldc 18))      ;;STRING:: "first"
                                      (231 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (234 (checkcast (class "clojure.lang.Var")))
                                      (237 (putstatic (fieldCP "const__18" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (240 (ldc 0))       ;;STRING:: "clojure.core"
                                      (242 (ldc 19))      ;;STRING:: "next"
                                      (244 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (247 (checkcast (class "clojure.lang.Var")))
                                      (250 (putstatic (fieldCP "const__19" "clojure.core$assert_same_protocol" (class "clojure.lang.Var"))))
                                      (253 (new (class "clojure.lang.KeywordLookupSite")))
                                      (256 (dup))
                                      (257 (aconst_null))
                                      (258 (ldc 4))       ;;STRING:: "protocol"
                                      (260 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (263 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (266 (dup))
                                      (267 (putstatic (fieldCP "__site__0__" "clojure.core$assert_same_protocol" (class "clojure.lang.KeywordLookupSite"))))
                                      (270 (putstatic (fieldCP "__thunk__0__" "clojure.core$assert_same_protocol" (class "clojure.lang.ILookupThunk"))))
                                      (273 (new (class "clojure.lang.KeywordLookupSite")))
                                      (276 (dup))
                                      (277 (aconst_null))
                                      (278 (ldc 4))       ;;STRING:: "protocol"
                                      (280 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (283 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (286 (dup))
                                      (287 (putstatic (fieldCP "__site__1__" "clojure.core$assert_same_protocol" (class "clojure.lang.KeywordLookupSite"))))
                                      (290 (putstatic (fieldCP "__thunk__1__" "clojure.core$assert_same_protocol" (class "clojure.lang.ILookupThunk"))))
                                      (293 (return))
                                      (endofcode 294))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 8) (max_locals . 16) (code_length . 745)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_2)) 
                                      (10 (aconst_null)) 
                                      (11 (astore_2)) 
                                      (12 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (17 (astore_3)) 
                                      (18 (aconst_null)) 
                                      (19 (astore 4)) 
                                      (21 (lconst_0)) 
                                      (22 (lstore 5)) 
                                      (24 (lconst_0)) 
                                      (25 (lstore 7)) 
                                      (27 (lload 7)) ;;at TAG_12
                                      (29 (lload 5)) 
                                      (31 (lcmp)) 
                                      (32 (ifge 316)) ;;to TAG_0
                                      (35 (aload 4)) 
                                      (37 (checkcast (class "clojure.lang.Indexed"))) 
                                      (40 (lload 7)) 
                                      (42 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (45 (invokeinterface (methodCP "nth" "clojure.lang.Indexed" (int) (class "java.lang.Object")) 2)) 
                                      (50 (astore 9)) 
                                      (52 (getstatic (fieldCP "const__3" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (55 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (58 (checkcast (class "clojure.lang.IFn"))) 
                                      (61 (aload 9)) 
                                      (63 (aconst_null)) 
                                      (64 (astore 9)) 
                                      (66 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (71 (astore 10)) 
                                      (73 (getstatic (fieldCP "__thunk__0__" "clojure.core$assert_same_protocol" (class "clojure.lang.ILookupThunk")))) 
                                      (76 (dup)) 
                                      (77 (getstatic (fieldCP "const__5" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (80 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (83 (checkcast (class "clojure.lang.IFn"))) 
                                      (86 (aload 10)) 
                                      (88 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (93 (dup_x2)) 
                                      (94 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (99 (dup_x2)) 
                                      (100 (if_acmpeq 107)) ;;to TAG_1
                                      (103 (pop)) 
                                      (104 (goto 129)) ;;to TAG_2
                                      (107 (swap)) ;;at TAG_1
                                      (108 (pop)) 
                                      (109 (dup)) 
                                      (110 (getstatic (fieldCP "__site__0__" "clojure.core$assert_same_protocol" (class "clojure.lang.KeywordLookupSite")))) 
                                      (113 (swap)) 
                                      (114 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (119 (dup)) 
                                      (120 (putstatic (fieldCP "__thunk__0__" "clojure.core$assert_same_protocol" (class "clojure.lang.ILookupThunk")))) 
                                      (123 (swap)) 
                                      (124 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (129 (astore 11)) ;;at TAG_2
                                      (131 (aload 10)) 
                                      (133 (astore 12)) 
                                      (135 (aload 12)) 
                                      (137 (dup)) 
                                      (138 (ifnull 206)) ;;to TAG_3
                                      (141 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (144 (if_acmpeq 207)) ;;to TAG_4
                                      (147 (getstatic (fieldCP "const__6" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (150 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (153 (checkcast (class "clojure.lang.IFn"))) 
                                      (156 (aload 10)) 
                                      (158 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (163 (astore 13)) 
                                      (165 (aload 13)) 
                                      (167 (dup)) 
                                      (168 (ifnull 197))  ;;to TAG_5
                                      (171 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (174 (if_acmpeq 198)) ;;to TAG_6
                                      (177 (getstatic (fieldCP "const__7" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (180 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (183 (checkcast (class "clojure.lang.IFn"))) 
                                      (186 (aload_1)) 
                                      (187 (aload 11)) 
                                      (189 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (194 (goto 203)) ;;to TAG_7
                                      (197 (pop)) ;;at TAG_5
                                      (198 (aload 13)) ;;at TAG_6
                                      (200 (aconst_null)) 
                                      (201 (astore 13)) 
                                      (203 (goto 212)) ;;to TAG_8;;at TAG_7
                                      (206 (pop)) ;;at TAG_3
                                      (207 (aload 12)) ;;at TAG_4
                                      (209 (aconst_null)) 
                                      (210 (astore 12)) 
                                      (212 (dup)) ;;at TAG_8
                                      (213 (ifnull 290)) ;;to TAG_9
                                      (216 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (219 (if_acmpeq 291)) ;;to TAG_10
                                      (222 (getstatic (fieldCP "const__8" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (225 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (228 (checkcast (class "clojure.lang.IFn"))) 
                                      (231 (getstatic (fieldCP "const__9" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (234 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (237 (checkcast (class "clojure.lang.IFn"))) 
                                      (240 (getstatic (fieldCP "const__10" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (243 (getstatic (fieldCP "const__11" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (246 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (249 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (254 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (259 (pop)) 
                                      (260 (new (class "clojure.core$assert_same_protocol$fn__5890"))) 
                                      (263 (dup)) 
                                      (264 (aload 11)) 
                                      (266 (aconst_null)) 
                                      (267 (astore 11)) 
                                      (269 (aload_1)) 
                                      (270 (aload 10)) 
                                      (272 (aconst_null)) 
                                      (273 (astore 10)) 
                                      (275 (invokespecial (methodCP "<init>" "clojure.core$assert_same_protocol$fn__5890" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (278 (checkcast (class "clojure.lang.IFn"))) 
                                      (281 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (286 (pop)) 
                                      (287 (goto 293)) ;;to TAG_11
                                      (290 (pop)) ;;at TAG_9
                                      (291 (aconst_null)) ;;at TAG_10
                                      (292 (pop)) 
                                      (293 (aload_3)) ;;at TAG_11
                                      (294 (aload 4)) 
                                      (296 (lload 5)) 
                                      (298 (lload 7)) 
                                      (300 (lconst_1)) 
                                      (301 (ladd)) 
                                      (302 (lstore 7)) 
                                      (304 (lstore 5)) 
                                      (306 (astore 4)) 
                                      (308 (astore_3)) 
                                      (309 (goto 27)) ;;to TAG_12
                                      (312 (goto 744)) ;;to TAG_13
                                      (315 (pop)) 
                                      (316 (getstatic (fieldCP "const__0" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) ;;at TAG_0
                                      (319 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (322 (checkcast (class "clojure.lang.IFn"))) 
                                      (325 (aload_3)) 
                                      (326 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (331 (astore 9)) 
                                      (333 (aload 9)) 
                                      (335 (dup)) 
                                      (336 (ifnull 742)) ;;to TAG_14
                                      (339 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (342 (if_acmpeq 743)) ;;to TAG_15
                                      (345 (aload 9)) 
                                      (347 (aconst_null)) 
                                      (348 (astore 9)) 
                                      (350 (astore 10)) 
                                      (352 (getstatic (fieldCP "const__13" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (355 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (358 (checkcast (class "clojure.lang.IFn"))) 
                                      (361 (aload 10)) 
                                      (363 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (368 (dup)) 
                                      (369 (ifnull 447)) ;;to TAG_16
                                      (372 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (375 (if_acmpeq 448)) ;;to TAG_17
                                      (378 (getstatic (fieldCP "const__14" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (381 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (384 (checkcast (class "clojure.lang.IFn"))) 
                                      (387 (aload 10)) 
                                      (389 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (394 (astore 11)) 
                                      (396 (getstatic (fieldCP "const__15" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (399 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (402 (checkcast (class "clojure.lang.IFn"))) 
                                      (405 (aload 10)) 
                                      (407 (aconst_null)) 
                                      (408 (astore 10)) 
                                      (410 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (415 (aload 11)) 
                                      (417 (aload 11)) 
                                      (419 (aconst_null)) 
                                      (420 (astore 11)) 
                                      (422 (invokestatic (methodCP "count" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (425 (invokestatic (methodCP "intCast" "clojure.lang.RT" (int) int))) 
                                      (428 (i2l)) 
                                      (429 (lconst_0)) 
                                      (430 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (433 (i2l)) 
                                      (434 (lstore 7)) 
                                      (436 (lstore 5)) 
                                      (438 (astore 4)) 
                                      (440 (astore_3)) 
                                      (441 (goto 27)) ;;to TAG_12
                                      (444 (goto 739)) ;;to TAG_18
                                      (447 (pop)) ;;at TAG_16
                                      (448 (getstatic (fieldCP "const__18" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) ;;at TAG_17
                                      (451 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (454 (checkcast (class "clojure.lang.IFn"))) 
                                      (457 (aload 10)) 
                                      (459 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (464 (astore 11)) 
                                      (466 (getstatic (fieldCP "const__3" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (469 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (472 (checkcast (class "clojure.lang.IFn"))) 
                                      (475 (aload 11)) 
                                      (477 (aconst_null)) 
                                      (478 (astore 11)) 
                                      (480 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (485 (astore 12)) 
                                      (487 (getstatic (fieldCP "__thunk__1__" "clojure.core$assert_same_protocol" (class "clojure.lang.ILookupThunk")))) 
                                      (490 (dup)) 
                                      (491 (getstatic (fieldCP "const__5" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (494 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (497 (checkcast (class "clojure.lang.IFn"))) 
                                      (500 (aload 12)) 
                                      (502 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (507 (dup_x2)) 
                                      (508 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (513 (dup_x2)) 
                                      (514 (if_acmpeq 521)) ;;to TAG_19
                                      (517 (pop)) 
                                      (518 (goto 543)) ;;to TAG_20
                                      (521 (swap)) ;;at TAG_19
                                      (522 (pop)) 
                                      (523 (dup)) 
                                      (524 (getstatic (fieldCP "__site__1__" "clojure.core$assert_same_protocol" (class "clojure.lang.KeywordLookupSite")))) 
                                      (527 (swap)) 
                                      (528 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (533 (dup)) 
                                      (534 (putstatic (fieldCP "__thunk__1__" "clojure.core$assert_same_protocol" (class "clojure.lang.ILookupThunk")))) 
                                      (537 (swap)) 
                                      (538 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (543 (astore 13)) ;;at TAG_20
                                      (545 (aload 12)) 
                                      (547 (astore 14)) 
                                      (549 (aload 14)) 
                                      (551 (dup)) 
                                      (552 (ifnull 620)) ;;to TAG_21
                                      (555 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (558 (if_acmpeq 621)) ;;to TAG_22
                                      (561 (getstatic (fieldCP "const__6" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (564 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (567 (checkcast (class "clojure.lang.IFn"))) 
                                      (570 (aload 12)) 
                                      (572 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (577 (astore 15)) 
                                      (579 (aload 15)) 
                                      (581 (dup)) 
                                      (582 (ifnull 611)) ;;to TAG_23
                                      (585 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (588 (if_acmpeq 612)) ;;to TAG_24
                                      (591 (getstatic (fieldCP "const__7" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (594 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (597 (checkcast (class "clojure.lang.IFn"))) 
                                      (600 (aload_1)) 
                                      (601 (aload 13)) 
                                      (603 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (608 (goto 617)) ;;to TAG_25
                                      (611 (pop)) ;;at TAG_23
                                      (612 (aload 15)) ;;at TAG_24
                                      (614 (aconst_null)) 
                                      (615 (astore 15)) 
                                      (617 (goto 626)) ;;to TAG_26;;at TAG_25
                                      (620 (pop)) ;;at TAG_21
                                      (621 (aload 14)) ;;at TAG_22
                                      (623 (aconst_null)) 
                                      (624 (astore 14)) 
                                      (626 (dup)) ;;at TAG_26
                                      (627 (ifnull 704)) ;;to TAG_27
                                      (630 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (633 (if_acmpeq 705)) ;;to TAG_28
                                      (636 (getstatic (fieldCP "const__8" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (639 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (642 (checkcast (class "clojure.lang.IFn"))) 
                                      (645 (getstatic (fieldCP "const__9" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (648 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (651 (checkcast (class "clojure.lang.IFn"))) 
                                      (654 (getstatic (fieldCP "const__10" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (657 (getstatic (fieldCP "const__11" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) 
                                      (660 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (663 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (668 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (673 (pop)) 
                                      (674 (new (class "clojure.core$assert_same_protocol$fn__5892"))) 
                                      (677 (dup)) 
                                      (678 (aload_1)) 
                                      (679 (aload 13)) 
                                      (681 (aconst_null)) 
                                      (682 (astore 13)) 
                                      (684 (aload 12)) 
                                      (686 (aconst_null)) 
                                      (687 (astore 12)) 
                                      (689 (invokespecial (methodCP "<init>" "clojure.core$assert_same_protocol$fn__5892" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) void))) 
                                      (692 (checkcast (class "clojure.lang.IFn"))) 
                                      (695 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (700 (pop)) 
                                      (701 (goto 707)) ;;to TAG_29
                                      (704 (pop)) ;;at TAG_27
                                      (705 (aconst_null)) ;;at TAG_28
                                      (706 (pop)) 
                                      (707 (getstatic (fieldCP "const__19" "clojure.core$assert_same_protocol" (class "clojure.lang.Var")))) ;;at TAG_29
                                      (710 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (713 (checkcast (class "clojure.lang.IFn"))) 
                                      (716 (aload 10)) 
                                      (718 (aconst_null)) 
                                      (719 (astore 10)) 
                                      (721 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (726 (aconst_null)) 
                                      (727 (lconst_0)) 
                                      (728 (lconst_0)) 
                                      (729 (lstore 7)) 
                                      (731 (lstore 5)) 
                                      (733 (astore 4)) 
                                      (735 (astore_3)) 
                                      (736 (goto 27)) ;;to TAG_12
                                      (739 (goto 744)) ;;to TAG_13;;at TAG_18
                                      (742 (pop)) ;;at TAG_14
                                      (743 (aconst_null)) ;;at TAG_15
                                      (744 (areturn)) ;;at TAG_13
                                      (endofcode 745))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 39)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 38 (0 . 1) (24 31))))  ;;to TAG_2;;to TAG_0;;to TAG_1
                                      (24 (aload_2)) ;;at TAG_1
                                      (25 (putstatic (fieldCP "__thunk__0__" "clojure.core$assert_same_protocol" (class "clojure.lang.ILookupThunk")))) 
                                      (28 (goto 38)) ;;to TAG_0
                                      (31 (aload_2)) ;;at TAG_2
                                      (32 (putstatic (fieldCP "__thunk__1__" "clojure.core$assert_same_protocol" (class "clojure.lang.ILookupThunk")))) 
                                      (35 (goto 38)) ;;to TAG_0
                                      (38 (return)) ;;at TAG_0
                                      (endofcode 39))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$assert_same_protocol-class-table*
  (make-static-class-decls 
   *clojure.core$assert_same_protocol*))

(defconst *package-name-map* 
  ("clojure.core$assert_same_protocol" . "clojure"))

