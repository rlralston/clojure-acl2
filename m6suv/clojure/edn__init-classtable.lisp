; edn__init-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:48 CDT 2014.
;

(defconst *clojure.edn__init*
 (make-class-def
      '(class "clojure.edn__init"
            "java.lang.Object"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "in-ns")
                        (STRING  "clojure.edn")
                        (STRING  "author")
                        (STRING  "Rich Hickey")
                        (STRING  "doc")
                        (STRING  "edn reading.")
                        (STRING  "read")
                        (STRING  "file")
                        (STRING  "column")
                        (STRING  "line")
                        (STRING  "arglists")
                        (STRING  "stream")
                        (STRING  "opts")
                        (STRING  "added")
                        (STRING  "1.5")
                        (STRING  "Reads the next object from stream, which must be an instance of\n  java.io.PushbackReader or some derivee.  stream defaults to the\n  current value of *in*.\n\n  Reads data in the edn format (subset of Clojure data):\n  http://edn-format.org\n\n  opts is a map that can include the following keys:\n  :eof - value to return on end-of-file. When not supplied, eof throws an exception.\n  :readers  - a map of tag symbols to data-reader functions to be considered before default-data-readers.\n              When not supplied, only the default-data-readers will be used.\n  :default - A function of two args, that will, if present and no reader is found for a tag,\n             be called with the tag and the value.")
                        (STRING  "clojure/edn.clj")
                        (STRING  "read-string")
                        (STRING  "s")
                        (STRING  "Reads one object from the string s. Returns nil when s is nil or empty.\n\n  Reads data in the edn format (subset of Clojure data):\n  http://edn-format.org\n\n  opts is a map as per clojure.edn/read")
                        (STRING  "clojure.edn__init"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__17" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "load"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 8) (max_locals . 0) (code_length . 116)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.edn__init" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (getstatic (fieldCP "const__1" "clojure.edn__init" (class "clojure.lang.AFn")))) 
                                      (12 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (17 (new (class "clojure.edn$loading__4910__auto__"))) 
                                      (20 (dup)) 
                                      (21 (invokespecial (methodCP "<init>" "clojure.edn$loading__4910__auto__" () void))) 
                                      (24 (checkcast (class "clojure.lang.IFn"))) 
                                      (27 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" () (class "java.lang.Object")) 1)) 
                                      (32 (getstatic (fieldCP "const__1" "clojure.edn__init" (class "clojure.lang.AFn")))) 
                                      (35 (checkcast (class "clojure.lang.Symbol"))) 
                                      (38 (getstatic (fieldCP "const__2" "clojure.edn__init" (class "clojure.lang.AFn")))) 
                                      (41 (invokevirtual (methodCP "equals" "clojure.lang.Symbol" ((class "java.lang.Object")) boolean))) 
                                      (44 (ifeq 52))  ;;to TAG_0
                                      (47 (aconst_null)) 
                                      (48 (goto 67)) ;;to TAG_1
                                      (51 (pop)) 
                                      (52 (new (class "clojure.edn$fn__6715"))) ;;at TAG_0
                                      (55 (dup)) 
                                      (56 (invokespecial (methodCP "<init>" "clojure.edn$fn__6715" () void))) 
                                      (59 (checkcast (class "java.util.concurrent.Callable"))) 
                                      (62 (invokestatic (methodCP "runInTransaction" "clojure.lang.LockingTransaction" ((class "java.util.concurrent.Callable")) (class "java.lang.Object")))) 
                                      (65 (pop)) 
                                      (66 (aconst_null)) 
                                      (67 (getstatic (fieldCP "const__3" "clojure.edn__init" (class "clojure.lang.Var")))) ;;at TAG_1
                                      (70 (dup)) 
                                      (71 (getstatic (fieldCP "const__13" "clojure.edn__init" (class "clojure.lang.AFn")))) 
                                      (74 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (77 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (80 (dup)) 
                                      (81 (new (class "clojure.edn$read"))) 
                                      (84 (dup)) 
                                      (85 (invokespecial (methodCP "<init>" "clojure.edn$read" () void))) 
                                      (88 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (91 (getstatic (fieldCP "const__14" "clojure.edn__init" (class "clojure.lang.Var")))) 
                                      (94 (dup)) 
                                      (95 (getstatic (fieldCP "const__17" "clojure.edn__init" (class "clojure.lang.AFn")))) 
                                      (98 (checkcast (class "clojure.lang.IPersistentMap"))) 
                                      (101 (invokevirtual (methodCP "setMeta" "clojure.lang.Var" ((class "clojure.lang.IPersistentMap")) void))) 
                                      (104 (dup)) 
                                      (105 (new (class "clojure.edn$read_string"))) 
                                      (108 (dup)) 
                                      (109 (invokespecial (methodCP "<init>" "clojure.edn$read_string" () void))) 
                                      (112 (invokevirtual (methodCP "bindRoot" "clojure.lang.Var" ((class "java.lang.Object")) void))) 
                                      (115 (return)) 
                                      (endofcode 116))
                                   (Exceptions )
                                   (StackMap )))
                        (method "__init0"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 11) (max_locals . 0) (code_length . 673)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "in-ns"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.edn__init" (class "clojure.lang.Var"))))
                                      (13 (aconst_null))
                                      (14 (ldc 2))        ;;STRING:: "clojure.edn"
                                      (16 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (19 (checkcast (class "clojure.lang.IObj")))
                                      (22 (iconst_4))
                                      (23 (anewarray (class "java.lang.Object")))
                                      (26 (dup))
                                      (27 (iconst_0))
                                      (28 (aconst_null))
                                      (29 (ldc 3))        ;;STRING:: "author"
                                      (31 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (34 (aastore))
                                      (35 (dup))
                                      (36 (iconst_1))
                                      (37 (ldc 4))        ;;STRING:: "Rich Hickey"
                                      (39 (aastore))
                                      (40 (dup))
                                      (41 (iconst_2))
                                      (42 (aconst_null))
                                      (43 (ldc 5))        ;;STRING:: "doc"
                                      (45 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (48 (aastore))
                                      (49 (dup))
                                      (50 (iconst_3))
                                      (51 (ldc 6))        ;;STRING:: "edn reading."
                                      (53 (aastore))
                                      (54 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (57 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (60 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (65 (checkcast (class "clojure.lang.AFn")))
                                      (68 (putstatic (fieldCP "const__1" "clojure.edn__init" (class "clojure.lang.AFn"))))
                                      (71 (aconst_null))
                                      (72 (ldc 0))        ;;STRING:: "clojure.core"
                                      (74 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (77 (checkcast (class "clojure.lang.AFn")))
                                      (80 (putstatic (fieldCP "const__2" "clojure.edn__init" (class "clojure.lang.AFn"))))
                                      (83 (ldc 2))        ;;STRING:: "clojure.edn"
                                      (85 (ldc 7))        ;;STRING:: "read"
                                      (87 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (90 (checkcast (class "clojure.lang.Var")))
                                      (93 (putstatic (fieldCP "const__3" "clojure.edn__init" (class "clojure.lang.Var"))))
                                      (96 (aconst_null))
                                      (97 (ldc 8))        ;;STRING:: "file"
                                      (99 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (102 (checkcast (class "clojure.lang.Keyword")))
                                      (105 (putstatic (fieldCP "const__4" "clojure.edn__init" (class "clojure.lang.Keyword"))))
                                      (108 (aconst_null))
                                      (109 (ldc 9))       ;;STRING:: "column"
                                      (111 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (114 (checkcast (class "clojure.lang.Keyword")))
                                      (117 (putstatic (fieldCP "const__5" "clojure.edn__init" (class "clojure.lang.Keyword"))))
                                      (120 (iconst_1))
                                      (121 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (124 (putstatic (fieldCP "const__6" "clojure.edn__init" (class "java.lang.Object"))))
                                      (127 (aconst_null))
                                      (128 (ldc 10))      ;;STRING:: "line"
                                      (130 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (133 (checkcast (class "clojure.lang.Keyword")))
                                      (136 (putstatic (fieldCP "const__7" "clojure.edn__init" (class "clojure.lang.Keyword"))))
                                      (139 (bipush 14))
                                      (141 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (144 (putstatic (fieldCP "const__8" "clojure.edn__init" (class "java.lang.Object"))))
                                      (147 (aconst_null))
                                      (148 (ldc 11))      ;;STRING:: "arglists"
                                      (150 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (153 (checkcast (class "clojure.lang.Keyword")))
                                      (156 (putstatic (fieldCP "const__9" "clojure.edn__init" (class "clojure.lang.Keyword"))))
                                      (159 (iconst_3))
                                      (160 (anewarray (class "java.lang.Object")))
                                      (163 (dup))
                                      (164 (iconst_0))
                                      (165 (iconst_0))
                                      (166 (anewarray (class "java.lang.Object")))
                                      (169 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (172 (aastore))
                                      (173 (dup))
                                      (174 (iconst_1))
                                      (175 (iconst_1))
                                      (176 (anewarray (class "java.lang.Object")))
                                      (179 (dup))
                                      (180 (iconst_0))
                                      (181 (aconst_null))
                                      (182 (ldc 12))      ;;STRING:: "stream"
                                      (184 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (187 (aastore))
                                      (188 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (191 (aastore))
                                      (192 (dup))
                                      (193 (iconst_2))
                                      (194 (iconst_2))
                                      (195 (anewarray (class "java.lang.Object")))
                                      (198 (dup))
                                      (199 (iconst_0))
                                      (200 (aconst_null))
                                      (201 (ldc 13))      ;;STRING:: "opts"
                                      (203 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (206 (aastore))
                                      (207 (dup))
                                      (208 (iconst_1))
                                      (209 (aconst_null))
                                      (210 (ldc 12))      ;;STRING:: "stream"
                                      (212 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (215 (aastore))
                                      (216 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (219 (aastore))
                                      (220 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (223 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (226 (putstatic (fieldCP "const__10" "clojure.edn__init" (class "java.lang.Object"))))
                                      (229 (aconst_null))
                                      (230 (ldc 14))      ;;STRING:: "added"
                                      (232 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (235 (checkcast (class "clojure.lang.Keyword")))
                                      (238 (putstatic (fieldCP "const__11" "clojure.edn__init" (class "clojure.lang.Keyword"))))
                                      (241 (aconst_null))
                                      (242 (ldc 5))       ;;STRING:: "doc"
                                      (244 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (247 (checkcast (class "clojure.lang.Keyword")))
                                      (250 (putstatic (fieldCP "const__12" "clojure.edn__init" (class "clojure.lang.Keyword"))))
                                      (253 (bipush 12))
                                      (255 (anewarray (class "java.lang.Object")))
                                      (258 (dup))
                                      (259 (iconst_0))
                                      (260 (aconst_null))
                                      (261 (ldc 11))      ;;STRING:: "arglists"
                                      (263 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (266 (aastore))
                                      (267 (dup))
                                      (268 (iconst_1))
                                      (269 (iconst_3))
                                      (270 (anewarray (class "java.lang.Object")))
                                      (273 (dup))
                                      (274 (iconst_0))
                                      (275 (iconst_0))
                                      (276 (anewarray (class "java.lang.Object")))
                                      (279 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (282 (aastore))
                                      (283 (dup))
                                      (284 (iconst_1))
                                      (285 (iconst_1))
                                      (286 (anewarray (class "java.lang.Object")))
                                      (289 (dup))
                                      (290 (iconst_0))
                                      (291 (aconst_null))
                                      (292 (ldc 12))      ;;STRING:: "stream"
                                      (294 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (297 (aastore))
                                      (298 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (301 (aastore))
                                      (302 (dup))
                                      (303 (iconst_2))
                                      (304 (iconst_2))
                                      (305 (anewarray (class "java.lang.Object")))
                                      (308 (dup))
                                      (309 (iconst_0))
                                      (310 (aconst_null))
                                      (311 (ldc 13))      ;;STRING:: "opts"
                                      (313 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (316 (aastore))
                                      (317 (dup))
                                      (318 (iconst_1))
                                      (319 (aconst_null))
                                      (320 (ldc 12))      ;;STRING:: "stream"
                                      (322 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (325 (aastore))
                                      (326 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (329 (aastore))
                                      (330 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (333 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (336 (aastore))
                                      (337 (dup))
                                      (338 (iconst_2))
                                      (339 (aconst_null))
                                      (340 (ldc 9))       ;;STRING:: "column"
                                      (342 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (345 (aastore))
                                      (346 (dup))
                                      (347 (iconst_3))
                                      (348 (iconst_1))
                                      (349 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (352 (aastore))
                                      (353 (dup))
                                      (354 (iconst_4))
                                      (355 (aconst_null))
                                      (356 (ldc 14))      ;;STRING:: "added"
                                      (358 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (361 (aastore))
                                      (362 (dup))
                                      (363 (iconst_5))
                                      (364 (ldc 15))      ;;STRING:: "1.5"
                                      (366 (aastore))
                                      (367 (dup))
                                      (368 (bipush 6))
                                      (370 (aconst_null))
                                      (371 (ldc 5))       ;;STRING:: "doc"
                                      (373 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (376 (aastore))
                                      (377 (dup))
                                      (378 (bipush 7))
                                      (380 (ldc 16))      ;;STRING:: "Reads the next object from stream, which must be an instance of\n  java.io.PushbackReader or some derivee.  stream defaults to the\n  current value of *in*.\n\n  Reads data in the edn format (subset of Clojure data):\n  http://edn-format.org\n\n  opts is a map that can include the following keys:\n  :eof - value to return on end-of-file. When not supplied, eof throws an exception.\n  :readers  - a map of tag symbols to data-reader functions to be considered before default-data-readers.\n              When not supplied, only the default-data-readers will be used.\n  :default - A function of two args, that will, if present and no reader is found for a tag,\n             be called with the tag and the value."
                                      (382 (aastore))
                                      (383 (dup))
                                      (384 (bipush 8))
                                      (386 (aconst_null))
                                      (387 (ldc 10))      ;;STRING:: "line"
                                      (389 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (392 (aastore))
                                      (393 (dup))
                                      (394 (bipush 9))
                                      (396 (bipush 14))
                                      (398 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (401 (aastore))
                                      (402 (dup))
                                      (403 (bipush 10))
                                      (405 (aconst_null))
                                      (406 (ldc 8))       ;;STRING:: "file"
                                      (408 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (411 (aastore))
                                      (412 (dup))
                                      (413 (bipush 11))
                                      (415 (ldc 17))      ;;STRING:: "clojure/edn.clj"
                                      (417 (aastore))
                                      (418 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (421 (checkcast (class "clojure.lang.AFn")))
                                      (424 (putstatic (fieldCP "const__13" "clojure.edn__init" (class "clojure.lang.AFn"))))
                                      (427 (ldc 2))       ;;STRING:: "clojure.edn"
                                      (429 (ldc 18))      ;;STRING:: "read-string"
                                      (431 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (434 (checkcast (class "clojure.lang.Var")))
                                      (437 (putstatic (fieldCP "const__14" "clojure.edn__init" (class "clojure.lang.Var"))))
                                      (440 (bipush 37))
                                      (442 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (445 (putstatic (fieldCP "const__15" "clojure.edn__init" (class "java.lang.Object"))))
                                      (448 (iconst_2))
                                      (449 (anewarray (class "java.lang.Object")))
                                      (452 (dup))
                                      (453 (iconst_0))
                                      (454 (iconst_1))
                                      (455 (anewarray (class "java.lang.Object")))
                                      (458 (dup))
                                      (459 (iconst_0))
                                      (460 (aconst_null))
                                      (461 (ldc 19))      ;;STRING:: "s"
                                      (463 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (466 (aastore))
                                      (467 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (470 (aastore))
                                      (471 (dup))
                                      (472 (iconst_1))
                                      (473 (iconst_2))
                                      (474 (anewarray (class "java.lang.Object")))
                                      (477 (dup))
                                      (478 (iconst_0))
                                      (479 (aconst_null))
                                      (480 (ldc 13))      ;;STRING:: "opts"
                                      (482 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (485 (aastore))
                                      (486 (dup))
                                      (487 (iconst_1))
                                      (488 (aconst_null))
                                      (489 (ldc 19))      ;;STRING:: "s"
                                      (491 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (494 (aastore))
                                      (495 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (498 (aastore))
                                      (499 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (502 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (505 (putstatic (fieldCP "const__16" "clojure.edn__init" (class "java.lang.Object"))))
                                      (508 (bipush 12))
                                      (510 (anewarray (class "java.lang.Object")))
                                      (513 (dup))
                                      (514 (iconst_0))
                                      (515 (aconst_null))
                                      (516 (ldc 11))      ;;STRING:: "arglists"
                                      (518 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (521 (aastore))
                                      (522 (dup))
                                      (523 (iconst_1))
                                      (524 (iconst_2))
                                      (525 (anewarray (class "java.lang.Object")))
                                      (528 (dup))
                                      (529 (iconst_0))
                                      (530 (iconst_1))
                                      (531 (anewarray (class "java.lang.Object")))
                                      (534 (dup))
                                      (535 (iconst_0))
                                      (536 (aconst_null))
                                      (537 (ldc 19))      ;;STRING:: "s"
                                      (539 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (542 (aastore))
                                      (543 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (546 (aastore))
                                      (547 (dup))
                                      (548 (iconst_1))
                                      (549 (iconst_2))
                                      (550 (anewarray (class "java.lang.Object")))
                                      (553 (dup))
                                      (554 (iconst_0))
                                      (555 (aconst_null))
                                      (556 (ldc 13))      ;;STRING:: "opts"
                                      (558 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (561 (aastore))
                                      (562 (dup))
                                      (563 (iconst_1))
                                      (564 (aconst_null))
                                      (565 (ldc 19))      ;;STRING:: "s"
                                      (567 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (570 (aastore))
                                      (571 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (574 (aastore))
                                      (575 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (578 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (581 (aastore))
                                      (582 (dup))
                                      (583 (iconst_2))
                                      (584 (aconst_null))
                                      (585 (ldc 9))       ;;STRING:: "column"
                                      (587 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (590 (aastore))
                                      (591 (dup))
                                      (592 (iconst_3))
                                      (593 (iconst_1))
                                      (594 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (597 (aastore))
                                      (598 (dup))
                                      (599 (iconst_4))
                                      (600 (aconst_null))
                                      (601 (ldc 14))      ;;STRING:: "added"
                                      (603 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (606 (aastore))
                                      (607 (dup))
                                      (608 (iconst_5))
                                      (609 (ldc 15))      ;;STRING:: "1.5"
                                      (611 (aastore))
                                      (612 (dup))
                                      (613 (bipush 6))
                                      (615 (aconst_null))
                                      (616 (ldc 5))       ;;STRING:: "doc"
                                      (618 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (621 (aastore))
                                      (622 (dup))
                                      (623 (bipush 7))
                                      (625 (ldc 20))      ;;STRING:: "Reads one object from the string s. Returns nil when s is nil or empty.\n\n  Reads data in the edn format (subset of Clojure data):\n  http://edn-format.org\n\n  opts is a map as per clojure.edn/read"
                                      (627 (aastore))
                                      (628 (dup))
                                      (629 (bipush 8))
                                      (631 (aconst_null))
                                      (632 (ldc 10))      ;;STRING:: "line"
                                      (634 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (637 (aastore))
                                      (638 (dup))
                                      (639 (bipush 9))
                                      (641 (bipush 37))
                                      (643 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (646 (aastore))
                                      (647 (dup))
                                      (648 (bipush 10))
                                      (650 (aconst_null))
                                      (651 (ldc 8))       ;;STRING:: "file"
                                      (653 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (656 (aastore))
                                      (657 (dup))
                                      (658 (bipush 11))
                                      (660 (ldc 17))      ;;STRING:: "clojure/edn.clj"
                                      (662 (aastore))
                                      (663 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (666 (checkcast (class "clojure.lang.AFn")))
                                      (669 (putstatic (fieldCP "const__17" "clojure.edn__init" (class "clojure.lang.AFn"))))
                                      (672 (return))
                                      (endofcode 673))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 1) (max_locals . 0) (code_length . 28)
                                   (parsedcode
                                      (0 (invokestatic (methodCP "__init0" "clojure.edn__init" () void))) 
                                      (3 (ldc 21)) ;;STRING:: "clojure.edn__init"
                                      (5 (invokestatic (methodCP "forName" "java.lang.Class" ((class "java.lang.String")) (class "java.lang.Class")))) 
                                      (8 (invokevirtual (methodCP "getClassLoader" "java.lang.Class" () (class "java.lang.ClassLoader")))) 
                                      (11 (invokestatic (methodCP "pushNSandLoader" "clojure.lang.Compiler" ((class "java.lang.ClassLoader")) void))) 
                                      (14 (invokestatic (methodCP "load" "clojure.edn__init" () void))) ;;at TAG_1
                                      (17 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) ;;at TAG_2
                                      (20 (goto 27)) ;;to TAG_0
                                      (23 (invokestatic (methodCP "popThreadBindings" "clojure.lang.Var" () void))) ;;at TAG_3
                                      (26 (athrow)) 
                                      (27 (return)) ;;at TAG_0
                                      (endofcode 28))
                                   (Exceptions 
                                     (handler 14 17  23 (class "java.lang.Throwable")))
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *public*  *super*  *synchronized* )
            (attributes))))


(defconst *edn__init-class-table*
  (make-static-class-decls 
   *clojure.edn__init*))

(defconst *package-name-map* 
  ("clojure.edn__init" . "clojure"))

