; core$expand_method_impl_cache$fn__5836-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:42 CDT 2014.
;

(defconst *clojure.core$expand_method_impl_cache$fn__5836*
 (make-class-def
      '(class "clojure.core$expand_method_impl_cache$fn__5836"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "nth")
                        (STRING  "*")
                        (LONG 2)
                        (STRING  "int")
                        (STRING  "shift-mask")
                        (STRING  "hash")
                        (STRING  "aset")
                        (STRING  "inc"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "shift" (class "java.lang.Object") (accessflags  *class* ) -1)
                        (field "mask" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 115)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "nth"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$expand_method_impl_cache$fn__5836" (class "clojure.lang.Var"))))
                                      (13 (lconst_0))
                                      (14 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (17 (putstatic (fieldCP "const__1" "clojure.core$expand_method_impl_cache$fn__5836" (class "java.lang.Object"))))
                                      (20 (lconst_1))
                                      (21 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (24 (putstatic (fieldCP "const__2" "clojure.core$expand_method_impl_cache$fn__5836" (class "java.lang.Object"))))
                                      (27 (ldc 0))        ;;STRING:: "clojure.core"
                                      (29 (ldc 2))        ;;STRING:: "*"
                                      (31 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (34 (checkcast (class "clojure.lang.Var")))
                                      (37 (putstatic (fieldCP "const__3" "clojure.core$expand_method_impl_cache$fn__5836" (class "clojure.lang.Var"))))
                                      (40 (ldc2_w 3))     ;; LONG:: "2"
                                      (43 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (46 (putstatic (fieldCP "const__4" "clojure.core$expand_method_impl_cache$fn__5836" (class "java.lang.Object"))))
                                      (49 (ldc 0))        ;;STRING:: "clojure.core"
                                      (51 (ldc 4))        ;;STRING:: "int"
                                      (53 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (56 (checkcast (class "clojure.lang.Var")))
                                      (59 (putstatic (fieldCP "const__5" "clojure.core$expand_method_impl_cache$fn__5836" (class "clojure.lang.Var"))))
                                      (62 (ldc 0))        ;;STRING:: "clojure.core"
                                      (64 (ldc 5))        ;;STRING:: "shift-mask"
                                      (66 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (69 (checkcast (class "clojure.lang.Var")))
                                      (72 (putstatic (fieldCP "const__6" "clojure.core$expand_method_impl_cache$fn__5836" (class "clojure.lang.Var"))))
                                      (75 (ldc 0))        ;;STRING:: "clojure.core"
                                      (77 (ldc 6))        ;;STRING:: "hash"
                                      (79 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (82 (checkcast (class "clojure.lang.Var")))
                                      (85 (putstatic (fieldCP "const__7" "clojure.core$expand_method_impl_cache$fn__5836" (class "clojure.lang.Var"))))
                                      (88 (ldc 0))        ;;STRING:: "clojure.core"
                                      (90 (ldc 7))        ;;STRING:: "aset"
                                      (92 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (95 (checkcast (class "clojure.lang.Var")))
                                      (98 (putstatic (fieldCP "const__8" "clojure.core$expand_method_impl_cache$fn__5836" (class "clojure.lang.Var"))))
                                      (101 (ldc 0))       ;;STRING:: "clojure.core"
                                      (103 (ldc 8))       ;;STRING:: "inc"
                                      (105 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (108 (checkcast (class "clojure.lang.Var")))
                                      (111 (putstatic (fieldCP "const__9" "clojure.core$expand_method_impl_cache$fn__5836" (class "clojure.lang.Var"))))
                                      (114 (return))
                                      (endofcode 115))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 3) (code_length . 15)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "shift" "clojure.core$expand_method_impl_cache$fn__5836" (class "java.lang.Object"))))
                                      (9 (aload_0))
                                      (10 (aload_2))
                                      (11 (putfield (fieldCP "mask" "clojure.core$expand_method_impl_cache$fn__5836" (class "java.lang.Object"))))
                                      (14 (return))
                                      (endofcode 15))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 7) (max_locals . 8) (code_length . 121)
                                   (parsedcode
                                      (0 (aload_2))
                                      (1 (aconst_null))
                                      (2 (astore_2))
                                      (3 (astore_3))
                                      (4 (aload_3))
                                      (5 (lconst_0))
                                      (6 (invokestatic
					(methodCP "intCast" "clojure.lang.RT" (long) int)))
                                      (9 (aconst_null))
                                      (10 (invokestatic
					(methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (13 (astore 4))
                                      (15 (aload_3))
                                      (16 (aconst_null))
                                      (17 (astore_3))
                                      (18 (lconst_1))
                                      (19 (invokestatic
					(methodCP "intCast" "clojure.lang.RT" (long) int)))
                                      (22 (aconst_null))
                                      (23 (invokestatic
					(methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (26 (astore 5))
                                      (28 (ldc2_w 3))     ;; LONG:: "2"
                                      (31 (getstatic (fieldCP "const__6" "clojure.core$expand_method_impl_cache$fn__5836" (class "clojure.lang.Var"))))
                                      (34 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (37 (checkcast (class "clojure.lang.IFn")))
                                      (40 (aload_0))
                                      (41 (getfield (fieldCP "shift" "clojure.core$expand_method_impl_cache$fn__5836" (class "java.lang.Object"))))
                                      (44 (aload_0))
                                      (45 (getfield (fieldCP "mask" "clojure.core$expand_method_impl_cache$fn__5836" (class "java.lang.Object"))))
                                      (48 (getstatic (fieldCP "const__7" "clojure.core$expand_method_impl_cache$fn__5836" (class "clojure.lang.Var"))))
                                      (51 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (54 (checkcast (class "clojure.lang.IFn")))
                                      (57 (aload 4))
                                      (59 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (64 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4))
                                      (69 (invokestatic
					(methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int)))
                                      (72 (i2l))
                                      (73 (invokestatic
					(methodCP "multiply" "clojure.lang.Numbers" (long long) long)))
                                      (76 (lstore 6))
                                      (78 (aload_1))
                                      (79 (checkcast (array (class "java.lang.Object"))))
                                      (82 (lload 6))
                                      (84 (invokestatic
					(methodCP "intCast" "clojure.lang.RT" (long) int)))
                                      (87 (aload 4))
                                      (89 (aconst_null))
                                      (90 (astore 4))
                                      (92 (invokestatic
					(methodCP "aset" "clojure.lang.RT" ((array (class "java.lang.Object")) int (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (95 (pop))
                                      (96 (aload_1))
                                      (97 (checkcast (array (class "java.lang.Object"))))
                                      (100 (lload 6))
                                      (102 (invokestatic
					(methodCP "inc" "clojure.lang.Numbers" (long) long)))
                                      (105 (invokestatic
					(methodCP "intCast" "clojure.lang.RT" (long) int)))
                                      (108 (aload 5))
                                      (110 (aconst_null))
                                      (111 (astore 5))
                                      (113 (invokestatic
					(methodCP "aset" "clojure.lang.RT" ((array (class "java.lang.Object")) int (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (116 (pop))
                                      (117 (aload_1))
                                      (118 (aconst_null))
                                      (119 (astore_1))
                                      (120 (areturn))
                                      (endofcode 121))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$expand_method_impl_cache$fn__5836-class-table*
  (make-static-class-decls 
   *clojure.core$expand_method_impl_cache$fn__5836*))

(defconst *package-name-map* 
  ("clojure.core$expand_method_impl_cache$fn__5836" . "clojure"))

