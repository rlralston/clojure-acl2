; pprint$process_directive_table_element-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:57 CDT 2014.
;

(defconst *clojure.pprint$process_directive_table_element*
 (make-class-def
      '(class "clojure.pprint$process_directive_table_element"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "nth")
                        (LONG 2)
                        (LONG 3)
                        (STRING  "nthnext")
                        (LONG 4)
                        (STRING  "directive")
                        (STRING  "params")
                        (STRING  "seq")
                        (STRING  "concat")
                        (STRING  "list")
                        (STRING  "array-map")
                        (STRING  "flags")
                        (STRING  "bracket-info")
                        (STRING  "generator-fn")
                        (STRING  "fn")
                        (STRING  "offset")
                        (STRING  "line")
                        (STRING  "column"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__12" (class "clojure.lang.AFn") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__13" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__14" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__15" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__16" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 8) (max_locals . 0) (code_length . 283)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "nth"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Var"))))
                                      (13 (lconst_0))
                                      (14 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (17 (putstatic (fieldCP "const__1" "clojure.pprint$process_directive_table_element" (class "java.lang.Object"))))
                                      (20 (lconst_1))
                                      (21 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (24 (putstatic (fieldCP "const__2" "clojure.pprint$process_directive_table_element" (class "java.lang.Object"))))
                                      (27 (ldc2_w 2))     ;; LONG:: "2"
                                      (30 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (33 (putstatic (fieldCP "const__3" "clojure.pprint$process_directive_table_element" (class "java.lang.Object"))))
                                      (36 (ldc2_w 3))     ;; LONG:: "3"
                                      (39 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (42 (putstatic (fieldCP "const__4" "clojure.pprint$process_directive_table_element" (class "java.lang.Object"))))
                                      (45 (ldc 0))        ;;STRING:: "clojure.core"
                                      (47 (ldc 4))        ;;STRING:: "nthnext"
                                      (49 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (52 (checkcast (class "clojure.lang.Var")))
                                      (55 (putstatic (fieldCP "const__5" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Var"))))
                                      (58 (ldc2_w 5))     ;; LONG:: "4"
                                      (61 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (64 (putstatic (fieldCP "const__6" "clojure.pprint$process_directive_table_element" (class "java.lang.Object"))))
                                      (67 (aconst_null))
                                      (68 (ldc 6))        ;;STRING:: "directive"
                                      (70 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (73 (checkcast (class "clojure.lang.Keyword")))
                                      (76 (putstatic (fieldCP "const__7" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Keyword"))))
                                      (79 (aconst_null))
                                      (80 (ldc 7))        ;;STRING:: "params"
                                      (82 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (85 (checkcast (class "clojure.lang.Keyword")))
                                      (88 (putstatic (fieldCP "const__8" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Keyword"))))
                                      (91 (ldc 0))        ;;STRING:: "clojure.core"
                                      (93 (ldc 8))        ;;STRING:: "seq"
                                      (95 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (98 (checkcast (class "clojure.lang.Var")))
                                      (101 (putstatic (fieldCP "const__9" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Var"))))
                                      (104 (ldc 0))       ;;STRING:: "clojure.core"
                                      (106 (ldc 9))       ;;STRING:: "concat"
                                      (108 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (111 (checkcast (class "clojure.lang.Var")))
                                      (114 (putstatic (fieldCP "const__10" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Var"))))
                                      (117 (ldc 0))       ;;STRING:: "clojure.core"
                                      (119 (ldc 10))      ;;STRING:: "list"
                                      (121 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (124 (checkcast (class "clojure.lang.Var")))
                                      (127 (putstatic (fieldCP "const__11" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Var"))))
                                      (130 (ldc 0))       ;;STRING:: "clojure.core"
                                      (132 (ldc 11))      ;;STRING:: "array-map"
                                      (134 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (137 (checkcast (class "clojure.lang.AFn")))
                                      (140 (putstatic (fieldCP "const__12" "clojure.pprint$process_directive_table_element" (class "clojure.lang.AFn"))))
                                      (143 (aconst_null))
                                      (144 (ldc 12))      ;;STRING:: "flags"
                                      (146 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (149 (checkcast (class "clojure.lang.Keyword")))
                                      (152 (putstatic (fieldCP "const__13" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Keyword"))))
                                      (155 (aconst_null))
                                      (156 (ldc 13))      ;;STRING:: "bracket-info"
                                      (158 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (161 (checkcast (class "clojure.lang.Keyword")))
                                      (164 (putstatic (fieldCP "const__14" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Keyword"))))
                                      (167 (aconst_null))
                                      (168 (ldc 14))      ;;STRING:: "generator-fn"
                                      (170 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (173 (checkcast (class "clojure.lang.Keyword")))
                                      (176 (putstatic (fieldCP "const__15" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Keyword"))))
                                      (179 (iconst_2))
                                      (180 (anewarray (class "java.lang.Object")))
                                      (183 (dup))
                                      (184 (iconst_0))
                                      (185 (aconst_null))
                                      (186 (ldc 15))      ;;STRING:: "fn"
                                      (188 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (191 (aastore))
                                      (192 (dup))
                                      (193 (iconst_1))
                                      (194 (iconst_2))
                                      (195 (anewarray (class "java.lang.Object")))
                                      (198 (dup))
                                      (199 (iconst_0))
                                      (200 (aconst_null))
                                      (201 (ldc 7))       ;;STRING:: "params"
                                      (203 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (206 (aastore))
                                      (207 (dup))
                                      (208 (iconst_1))
                                      (209 (aconst_null))
                                      (210 (ldc 16))      ;;STRING:: "offset"
                                      (212 (invokestatic
					(methodCP "intern" "clojure.lang.Symbol" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Symbol"))))
                                      (215 (aastore))
                                      (216 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (219 (aastore))
                                      (220 (invokestatic
					(methodCP "asList" "java.util.Arrays" ((array (class "java.lang.Object"))) (class "java.util.List"))))
                                      (223 (invokestatic
					(methodCP "create" "clojure.lang.PersistentList" ((class "java.util.List")) (class "clojure.lang.IPersistentList"))))
                                      (226 (checkcast (class "clojure.lang.IObj")))
                                      (229 (iconst_4))
                                      (230 (anewarray (class "java.lang.Object")))
                                      (233 (dup))
                                      (234 (iconst_0))
                                      (235 (aconst_null))
                                      (236 (ldc 17))      ;;STRING:: "line"
                                      (238 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (241 (aastore))
                                      (242 (dup))
                                      (243 (iconst_1))
                                      (244 (sipush 1306))
                                      (247 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (250 (aastore))
                                      (251 (dup))
                                      (252 (iconst_2))
                                      (253 (aconst_null))
                                      (254 (ldc 18))      ;;STRING:: "column"
                                      (256 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (259 (aastore))
                                      (260 (dup))
                                      (261 (iconst_3))
                                      (262 (bipush 28))
                                      (264 (invokestatic
					(methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer"))))
                                      (267 (aastore))
                                      (268 (invokestatic
					(methodCP "map" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (271 (checkcast (class "clojure.lang.IPersistentMap")))
                                      (274 (invokeinterface
					(methodCP "withMeta" "clojure.lang.IObj" ((class "clojure.lang.IPersistentMap")) (class "clojure.lang.IObj")) 2))
                                      (279 (putstatic (fieldCP "const__16" "clojure.pprint$process_directive_table_element" (class "java.lang.Object"))))
                                      (282 (return))
                                      (endofcode 283))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 11) (max_locals . 8) (code_length . 230)
                                   (parsedcode
                                      (0 (aload_1))
                                      (1 (aconst_null))
                                      (2 (astore_1))
                                      (3 (astore_2))
                                      (4 (aload_2))
                                      (5 (lconst_0))
                                      (6 (invokestatic
					(methodCP "intCast" "clojure.lang.RT" (long) int)))
                                      (9 (aconst_null))
                                      (10 (invokestatic
					(methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (13 (astore_3))
                                      (14 (aload_2))
                                      (15 (lconst_1))
                                      (16 (invokestatic
					(methodCP "intCast" "clojure.lang.RT" (long) int)))
                                      (19 (aconst_null))
                                      (20 (invokestatic
					(methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (23 (astore 4))
                                      (25 (aload_2))
                                      (26 (ldc2_w 2))     ;; LONG:: "2"
                                      (29 (invokestatic
					(methodCP "intCast" "clojure.lang.RT" (long) int)))
                                      (32 (aconst_null))
                                      (33 (invokestatic
					(methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (36 (astore 5))
                                      (38 (aload_2))
                                      (39 (ldc2_w 3))     ;; LONG:: "3"
                                      (42 (invokestatic
					(methodCP "intCast" "clojure.lang.RT" (long) int)))
                                      (45 (aconst_null))
                                      (46 (invokestatic
					(methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object"))))
                                      (49 (astore 6))
                                      (51 (getstatic (fieldCP "const__5" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Var"))))
                                      (54 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (57 (checkcast (class "clojure.lang.IFn")))
                                      (60 (aload_2))
                                      (61 (aconst_null))
                                      (62 (astore_2))
                                      (63 (getstatic (fieldCP "const__6" "clojure.pprint$process_directive_table_element" (class "java.lang.Object"))))
                                      (66 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (71 (astore 7))
                                      (73 (iconst_2))
                                      (74 (anewarray (class "java.lang.Object")))
                                      (77 (dup))
                                      (78 (iconst_0))
                                      (79 (aload_3))
                                      (80 (aastore))
                                      (81 (dup))
                                      (82 (iconst_1))
                                      (83 (bipush 10))
                                      (85 (anewarray (class "java.lang.Object")))
                                      (88 (dup))
                                      (89 (iconst_0))
                                      (90 (getstatic (fieldCP "const__7" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Keyword"))))
                                      (93 (aastore))
                                      (94 (dup))
                                      (95 (iconst_1))
                                      (96 (aload_3))
                                      (97 (aconst_null))
                                      (98 (astore_3))
                                      (99 (aastore))
                                      (100 (dup))
                                      (101 (iconst_2))
                                      (102 (getstatic (fieldCP "const__8" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Keyword"))))
                                      (105 (aastore))
                                      (106 (dup))
                                      (107 (iconst_3))
                                      (108 (getstatic (fieldCP "const__9" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Var"))))
                                      (111 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (114 (checkcast (class "clojure.lang.IFn")))
                                      (117 (getstatic (fieldCP "const__10" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Var"))))
                                      (120 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (123 (checkcast (class "clojure.lang.IFn")))
                                      (126 (getstatic (fieldCP "const__11" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Var"))))
                                      (129 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (132 (checkcast (class "clojure.lang.IFn")))
                                      (135 (getstatic (fieldCP "const__12" "clojure.pprint$process_directive_table_element" (class "clojure.lang.AFn"))))
                                      (138 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (143 (aload 4))
                                      (145 (aconst_null))
                                      (146 (astore 4))
                                      (148 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (153 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (158 (aastore))
                                      (159 (dup))
                                      (160 (iconst_4))
                                      (161 (getstatic (fieldCP "const__13" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Keyword"))))
                                      (164 (aastore))
                                      (165 (dup))
                                      (166 (iconst_5))
                                      (167 (aload 5))
                                      (169 (aconst_null))
                                      (170 (astore 5))
                                      (172 (aastore))
                                      (173 (dup))
                                      (174 (bipush 6))
                                      (176 (getstatic (fieldCP "const__14" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Keyword"))))
                                      (179 (aastore))
                                      (180 (dup))
                                      (181 (bipush 7))
                                      (183 (aload 6))
                                      (185 (aconst_null))
                                      (186 (astore 6))
                                      (188 (aastore))
                                      (189 (dup))
                                      (190 (bipush 8))
                                      (192 (getstatic (fieldCP "const__15" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Keyword"))))
                                      (195 (aastore))
                                      (196 (dup))
                                      (197 (bipush 9))
                                      (199 (getstatic (fieldCP "const__10" "clojure.pprint$process_directive_table_element" (class "clojure.lang.Var"))))
                                      (202 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (205 (checkcast (class "clojure.lang.IFn")))
                                      (208 (getstatic (fieldCP "const__16" "clojure.pprint$process_directive_table_element" (class "java.lang.Object"))))
                                      (211 (aload 7))
                                      (213 (aconst_null))
                                      (214 (astore 7))
                                      (216 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (221 (aastore))
                                      (222 (invokestatic
					(methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (225 (aastore))
                                      (226 (invokestatic
					(methodCP "vector" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentVector"))))
                                      (229 (areturn))
                                      (endofcode 230))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$process_directive_table_element-class-table*
  (make-static-class-decls 
   *clojure.pprint$process_directive_table_element*))

(defconst *package-name-map* 
  ("clojure.pprint$process_directive_table_element" . "clojure"))

