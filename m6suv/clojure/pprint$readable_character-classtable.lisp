; pprint$readable_character-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:57 CDT 2014.
;

(defconst *clojure.pprint$readable_character*
 (make-class-def
      '(class "clojure.pprint$readable_character"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.pprint")
                        (STRING  "next-arg")
                        (STRING  "clojure.core")
                        (STRING  "nth")
                        (STRING  "=")
                        (STRING  "char-format")
                        (STRING  "cl-format")
                        (STRING  "int")
                        (STRING  "pr")
                        (STRING  "str")
                        (STRING  "\\o~3,\n0o")
                        (STRING  "\\u~4,\n0x")
                        (STRING  "No matching clause: "))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__9" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__10" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__11" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "__site__0__" (class "clojure.lang.KeywordLookupSite") (accessflags  *class*  *final*  *static* ) -1)
                        (field "__thunk__0__" (class "clojure.lang.ILookupThunk") (accessflags  *class*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 4) (max_locals . 0) (code_length . 154)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.pprint"
                                      (2 (ldc 1))         ;;STRING:: "next-arg"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$readable_character" (class "clojure.lang.Var"))))
                                      (13 (ldc 2))        ;;STRING:: "clojure.core"
                                      (15 (ldc 3))        ;;STRING:: "nth"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$readable_character" (class "clojure.lang.Var"))))
                                      (26 (lconst_0))
                                      (27 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (30 (putstatic (fieldCP "const__2" "clojure.pprint$readable_character" (class "java.lang.Object"))))
                                      (33 (lconst_1))
                                      (34 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (37 (putstatic (fieldCP "const__3" "clojure.pprint$readable_character" (class "java.lang.Object"))))
                                      (40 (ldc 2))        ;;STRING:: "clojure.core"
                                      (42 (ldc 4))        ;;STRING:: "="
                                      (44 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (47 (checkcast (class "clojure.lang.Var")))
                                      (50 (putstatic (fieldCP "const__4" "clojure.pprint$readable_character" (class "clojure.lang.Var"))))
                                      (53 (aconst_null))
                                      (54 (ldc 5))        ;;STRING:: "char-format"
                                      (56 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (59 (checkcast (class "clojure.lang.Keyword")))
                                      (62 (putstatic (fieldCP "const__5" "clojure.pprint$readable_character" (class "clojure.lang.Keyword"))))
                                      (65 (bipush 111))
                                      (67 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (70 (putstatic (fieldCP "const__6" "clojure.pprint$readable_character" (class "java.lang.Object"))))
                                      (73 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (75 (ldc 6))        ;;STRING:: "cl-format"
                                      (77 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (80 (checkcast (class "clojure.lang.Var")))
                                      (83 (putstatic (fieldCP "const__7" "clojure.pprint$readable_character" (class "clojure.lang.Var"))))
                                      (86 (ldc 2))        ;;STRING:: "clojure.core"
                                      (88 (ldc 7))        ;;STRING:: "int"
                                      (90 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (93 (checkcast (class "clojure.lang.Var")))
                                      (96 (putstatic (fieldCP "const__8" "clojure.pprint$readable_character" (class "clojure.lang.Var"))))
                                      (99 (bipush 117))
                                      (101 (invokestatic
					(methodCP "valueOf" "java.lang.Character" (char) (class "java.lang.Character"))))
                                      (104 (putstatic (fieldCP "const__9" "clojure.pprint$readable_character" (class "java.lang.Object"))))
                                      (107 (ldc 2))       ;;STRING:: "clojure.core"
                                      (109 (ldc 8))       ;;STRING:: "pr"
                                      (111 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (114 (checkcast (class "clojure.lang.Var")))
                                      (117 (putstatic (fieldCP "const__10" "clojure.pprint$readable_character" (class "clojure.lang.Var"))))
                                      (120 (ldc 2))       ;;STRING:: "clojure.core"
                                      (122 (ldc 9))       ;;STRING:: "str"
                                      (124 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (127 (checkcast (class "clojure.lang.Var")))
                                      (130 (putstatic (fieldCP "const__11" "clojure.pprint$readable_character" (class "clojure.lang.Var"))))
                                      (133 (new (class "clojure.lang.KeywordLookupSite")))
                                      (136 (dup))
                                      (137 (aconst_null))
                                      (138 (ldc 5))       ;;STRING:: "char-format"
                                      (140 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (143 (invokespecial
					(methodCP "<init>" "clojure.lang.KeywordLookupSite" ((class "clojure.lang.Keyword")) void)))
                                      (146 (dup))
                                      (147 (putstatic (fieldCP "__site__0__" "clojure.pprint$readable_character" (class "clojure.lang.KeywordLookupSite"))))
                                      (150 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$readable_character" (class "clojure.lang.ILookupThunk"))))
                                      (153 (return))
                                      (endofcode 154))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 6) (max_locals . 9) (code_length . 310)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$readable_character" (class "clojure.lang.Var")))) 
                                      (3 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (6 (checkcast (class "clojure.lang.IFn"))) 
                                      (9 (aload_2)) 
                                      (10 (aconst_null)) 
                                      (11 (astore_2)) 
                                      (12 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (17 (astore 4)) 
                                      (19 (aload 4)) 
                                      (21 (lconst_0)) 
                                      (22 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (25 (aconst_null)) 
                                      (26 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (29 (astore 5)) 
                                      (31 (aload 4)) 
                                      (33 (aconst_null)) 
                                      (34 (astore 4)) 
                                      (36 (lconst_1)) 
                                      (37 (invokestatic (methodCP "intCast" "clojure.lang.RT" (long) int))) 
                                      (40 (aconst_null)) 
                                      (41 (invokestatic (methodCP "nth" "clojure.lang.RT" ((class "java.lang.Object") int (class "java.lang.Object")) (class "java.lang.Object")))) 
                                      (44 (astore 6)) 
                                      (46 (getstatic (fieldCP "const__4" "clojure.pprint$readable_character" (class "clojure.lang.Var")))) 
                                      (49 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (52 (astore 7)) 
                                      (54 (getstatic (fieldCP "__thunk__0__" "clojure.pprint$readable_character" (class "clojure.lang.ILookupThunk")))) 
                                      (57 (dup)) 
                                      (58 (aload_1)) 
                                      (59 (aconst_null)) 
                                      (60 (astore_1)) 
                                      (61 (dup_x2)) 
                                      (62 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (67 (dup_x2)) 
                                      (68 (if_acmpeq 75)) ;;to TAG_0
                                      (71 (pop)) 
                                      (72 (goto 97))  ;;to TAG_1
                                      (75 (swap)) ;;at TAG_0
                                      (76 (pop)) 
                                      (77 (dup)) 
                                      (78 (getstatic (fieldCP "__site__0__" "clojure.pprint$readable_character" (class "clojure.lang.KeywordLookupSite")))) 
                                      (81 (swap)) 
                                      (82 (invokeinterface (methodCP "fault" "clojure.lang.ILookupSite" ((class "java.lang.Object")) (class "clojure.lang.ILookupThunk")) 2)) 
                                      (87 (dup)) 
                                      (88 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$readable_character" (class "clojure.lang.ILookupThunk")))) 
                                      (91 (swap)) 
                                      (92 (invokeinterface (methodCP "get" "clojure.lang.ILookupThunk" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (97 (astore 8)) ;;at TAG_1
                                      (99 (aload 7)) 
                                      (101 (checkcast (class "clojure.lang.IFn"))) 
                                      (104 (getstatic (fieldCP "const__6" "clojure.pprint$readable_character" (class "java.lang.Object")))) 
                                      (107 (aload 8)) 
                                      (109 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (114 (dup)) 
                                      (115 (ifnull 158)) ;;to TAG_2
                                      (118 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (121 (if_acmpeq 159)) ;;to TAG_3
                                      (124 (getstatic (fieldCP "const__7" "clojure.pprint$readable_character" (class "clojure.lang.Var")))) 
                                      (127 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (130 (checkcast (class "clojure.lang.IFn"))) 
                                      (133 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (136 (ldc 10)) ;;STRING:: "\\o~3,\n0o"
                                      (138 (aload 5)) 
                                      (140 (aconst_null)) 
                                      (141 (astore 5)) 
                                      (143 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (146 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (149 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (154 (pop)) 
                                      (155 (goto 304)) ;;to TAG_4
                                      (158 (pop)) ;;at TAG_2
                                      (159 (aload 7)) ;;at TAG_3
                                      (161 (checkcast (class "clojure.lang.IFn"))) 
                                      (164 (getstatic (fieldCP "const__9" "clojure.pprint$readable_character" (class "java.lang.Object")))) 
                                      (167 (aload 8)) 
                                      (169 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (174 (dup)) 
                                      (175 (ifnull 218)) ;;to TAG_5
                                      (178 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (181 (if_acmpeq 219)) ;;to TAG_6
                                      (184 (getstatic (fieldCP "const__7" "clojure.pprint$readable_character" (class "clojure.lang.Var")))) 
                                      (187 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (190 (checkcast (class "clojure.lang.IFn"))) 
                                      (193 (getstatic (fieldCP "TRUE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (196 (ldc 11)) ;;STRING:: "\\u~4,\n0x"
                                      (198 (aload 5)) 
                                      (200 (aconst_null)) 
                                      (201 (astore 5)) 
                                      (203 (invokestatic (methodCP "intCast" "clojure.lang.RT" ((class "java.lang.Object")) int))) 
                                      (206 (invokestatic (methodCP "valueOf" "java.lang.Integer" (int) (class "java.lang.Integer")))) 
                                      (209 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (214 (pop)) 
                                      (215 (goto 304)) ;;to TAG_4
                                      (218 (pop)) ;;at TAG_5
                                      (219 (aload 7)) ;;at TAG_6
                                      (221 (aconst_null)) 
                                      (222 (astore 7)) 
                                      (224 (checkcast (class "clojure.lang.IFn"))) 
                                      (227 (aconst_null)) 
                                      (228 (aload 8)) 
                                      (230 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (235 (dup)) 
                                      (236 (ifnull 268)) ;;to TAG_7
                                      (239 (getstatic (fieldCP "FALSE" "java.lang.Boolean" (class "java.lang.Boolean")))) 
                                      (242 (if_acmpeq 269)) ;;to TAG_8
                                      (245 (getstatic (fieldCP "const__10" "clojure.pprint$readable_character" (class "clojure.lang.Var")))) 
                                      (248 (invokevirtual (methodCP "get" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (251 (checkcast (class "clojure.lang.IFn"))) 
                                      (254 (aload 5)) 
                                      (256 (aconst_null)) 
                                      (257 (astore 5)) 
                                      (259 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2)) 
                                      (264 (pop)) 
                                      (265 (goto 304)) ;;to TAG_4
                                      (268 (pop)) ;;at TAG_7
                                      (269 (new (class "java.lang.IllegalArgumentException"))) ;;at TAG_8
                                      (272 (dup)) 
                                      (273 (getstatic (fieldCP "const__11" "clojure.pprint$readable_character" (class "clojure.lang.Var")))) 
                                      (276 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (279 (checkcast (class "clojure.lang.IFn"))) 
                                      (282 (ldc 12)) ;;STRING:: "No matching clause: "
                                      (284 (aload 8)) 
                                      (286 (aconst_null)) 
                                      (287 (astore 8)) 
                                      (289 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3)) 
                                      (294 (checkcast (class "java.lang.String"))) 
                                      (297 (invokespecial (methodCP "<init>" "java.lang.IllegalArgumentException" ((class "java.lang.String")) void))) 
                                      (300 (checkcast (class "java.lang.Throwable"))) 
                                      (303 (athrow)) 
                                      (304 (aload 6)) ;;at TAG_4
                                      (306 (aconst_null)) 
                                      (307 (astore 6)) 
                                      (309 (areturn)) 
                                      (endofcode 310))
                                   (Exceptions )
                                   (StackMap )))
                        (method "swapThunk"
                              (parameters int (class "clojure.lang.ILookupThunk"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 3) (code_length . 28)
                                   (parsedcode
                                      (0 (iload_1)) 
                                      (1 (tableswitch (tableswitchinfo 27 (0 . 0) (20))))  ;;to TAG_0;;to TAG_1
                                      (20 (aload_2)) ;;at TAG_1
                                      (21 (putstatic (fieldCP "__thunk__0__" "clojure.pprint$readable_character" (class "clojure.lang.ILookupThunk")))) 
                                      (24 (goto 27))  ;;to TAG_0
                                      (27 (return)) ;;at TAG_0
                                      (endofcode 28))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$readable_character-class-table*
  (make-static-class-decls 
   *clojure.pprint$readable_character*))

(defconst *package-name-map* 
  ("clojure.pprint$readable_character" . "clojure"))

