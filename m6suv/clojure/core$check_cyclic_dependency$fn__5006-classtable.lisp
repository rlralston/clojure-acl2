; core$check_cyclic_dependency$fn__5006-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:41 CDT 2014.
;

(defconst *clojure.core$check_cyclic_dependency$fn__5006*
 (make-class-def
      '(class "clojure.core$check_cyclic_dependency$fn__5006"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.core")
                        (STRING  "=")
                        (STRING  "str")
                        (STRING  "[ ")
                        (STRING  " ]"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "path" (class "java.lang.Object") (accessflags  *class* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 27)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.core"
                                      (2 (ldc 1))         ;;STRING:: "="
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.core$check_cyclic_dependency$fn__5006" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.core"
                                      (15 (ldc 2))        ;;STRING:: "str"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.core$check_cyclic_dependency$fn__5006" (class "clojure.lang.Var"))))
                                      (26 (return))
                                      (endofcode 27))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters (class "java.lang.Object"))
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 2) (max_locals . 2) (code_length . 10)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (aload_0))
                                      (5 (aload_1))
                                      (6 (putfield (fieldCP "path" "clojure.core$check_cyclic_dependency$fn__5006" (class "java.lang.Object"))))
                                      (9 (return))
                                      (endofcode 10))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 4) (max_locals . 2) (code_length . 40)
                                   (parsedcode
                                      (0 (aload_1)) 
                                      (1 (aload_0)) 
                                      (2 (getfield (fieldCP "path" "clojure.core$check_cyclic_dependency$fn__5006" (class "java.lang.Object")))) 
                                      (5 (invokestatic (methodCP "equiv" "clojure.lang.Util" ((class "java.lang.Object") (class "java.lang.Object")) boolean))) 
                                      (8 (ifeq 36))  ;;to TAG_0
                                      (11 (getstatic (fieldCP "const__1" "clojure.core$check_cyclic_dependency$fn__5006" (class "clojure.lang.Var")))) 
                                      (14 (invokevirtual (methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object")))) 
                                      (17 (checkcast (class "clojure.lang.IFn"))) 
                                      (20 (ldc 3)) ;;STRING:: "[ "
                                      (22 (aload_1)) 
                                      (23 (aconst_null)) 
                                      (24 (astore_1)) 
                                      (25 (ldc 4)) ;;STRING:: " ]"
                                      (27 (invokeinterface (methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 4)) 
                                      (32 (goto 39)) ;;to TAG_1
                                      (35 (pop)) 
                                      (36 (aload_1)) ;;at TAG_0
                                      (37 (aconst_null)) 
                                      (38 (astore_1)) 
                                      (39 (areturn)) ;;at TAG_1
                                      (endofcode 40))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *core$check_cyclic_dependency$fn__5006-class-table*
  (make-static-class-decls 
   *clojure.core$check_cyclic_dependency$fn__5006*))

(defconst *package-name-map* 
  ("clojure.core$check_cyclic_dependency$fn__5006" . "clojure"))

