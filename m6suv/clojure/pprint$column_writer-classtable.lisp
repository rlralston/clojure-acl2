; pprint$column_writer-classtable.lisp
; Automatically generated by jvm2acl2 on Tue May 27 00:28:55 CDT 2014.
;

(defconst *clojure.pprint$column_writer*
 (make-class-def
      '(class "clojure.pprint$column_writer"
            "clojure.lang.AFunction"
            (constant_pool
                        (STRING  "clojure.pprint")
                        (STRING  "column-writer")
                        (STRING  "*default-page-width*")
                        (STRING  "clojure.core")
                        (STRING  "ref")
                        (STRING  "max")
                        (STRING  "cur")
                        (STRING  "line")
                        (STRING  "base")
                        (STRING  "init-proxy")
                        (STRING  "write")
                        (STRING  "flush")
                        (STRING  "deref"))
            (fields
                        (field "const__0" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__1" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__2" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__3" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__4" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__5" (class "java.lang.Object") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__6" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__7" (class "clojure.lang.Keyword") (accessflags  *class*  *final*  *public*  *static* ) -1)
                        (field "const__8" (class "clojure.lang.Var") (accessflags  *class*  *final*  *public*  *static* ) -1))
            (methods
                        (method "<clinit>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public*  *static* )
                              (code
                                   (max_stack . 2) (max_locals . 0) (code_length . 108)
                                   (parsedcode
                                      (0 (ldc 0))         ;;STRING:: "clojure.pprint"
                                      (2 (ldc 1))         ;;STRING:: "column-writer"
                                      (4 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (7 (checkcast (class "clojure.lang.Var")))
                                      (10 (putstatic (fieldCP "const__0" "clojure.pprint$column_writer" (class "clojure.lang.Var"))))
                                      (13 (ldc 0))        ;;STRING:: "clojure.pprint"
                                      (15 (ldc 2))        ;;STRING:: "*default-page-width*"
                                      (17 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (20 (checkcast (class "clojure.lang.Var")))
                                      (23 (putstatic (fieldCP "const__1" "clojure.pprint$column_writer" (class "clojure.lang.Var"))))
                                      (26 (ldc 3))        ;;STRING:: "clojure.core"
                                      (28 (ldc 4))        ;;STRING:: "ref"
                                      (30 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (33 (checkcast (class "clojure.lang.Var")))
                                      (36 (putstatic (fieldCP "const__2" "clojure.pprint$column_writer" (class "clojure.lang.Var"))))
                                      (39 (aconst_null))
                                      (40 (ldc 5))        ;;STRING:: "max"
                                      (42 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (45 (checkcast (class "clojure.lang.Keyword")))
                                      (48 (putstatic (fieldCP "const__3" "clojure.pprint$column_writer" (class "clojure.lang.Keyword"))))
                                      (51 (aconst_null))
                                      (52 (ldc 6))        ;;STRING:: "cur"
                                      (54 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (57 (checkcast (class "clojure.lang.Keyword")))
                                      (60 (putstatic (fieldCP "const__4" "clojure.pprint$column_writer" (class "clojure.lang.Keyword"))))
                                      (63 (lconst_0))
                                      (64 (invokestatic
					(methodCP "valueOf" "java.lang.Long" (long) (class "java.lang.Long"))))
                                      (67 (putstatic (fieldCP "const__5" "clojure.pprint$column_writer" (class "java.lang.Object"))))
                                      (70 (aconst_null))
                                      (71 (ldc 7))        ;;STRING:: "line"
                                      (73 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (76 (checkcast (class "clojure.lang.Keyword")))
                                      (79 (putstatic (fieldCP "const__6" "clojure.pprint$column_writer" (class "clojure.lang.Keyword"))))
                                      (82 (aconst_null))
                                      (83 (ldc 8))        ;;STRING:: "base"
                                      (85 (invokestatic
					(methodCP "keyword" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Keyword"))))
                                      (88 (checkcast (class "clojure.lang.Keyword")))
                                      (91 (putstatic (fieldCP "const__7" "clojure.pprint$column_writer" (class "clojure.lang.Keyword"))))
                                      (94 (ldc 3))        ;;STRING:: "clojure.core"
                                      (96 (ldc 9))        ;;STRING:: "init-proxy"
                                      (98 (invokestatic
					(methodCP "var" "clojure.lang.RT" ((class "java.lang.String") (class "java.lang.String")) (class "clojure.lang.Var"))))
                                      (101 (checkcast (class "clojure.lang.Var")))
                                      (104 (putstatic (fieldCP "const__8" "clojure.pprint$column_writer" (class "clojure.lang.Var"))))
                                      (107 (return))
                                      (endofcode 108))
                                   (Exceptions )
                                   (StackMap )))
                        (method "<init>"
                              (parameters )
                              (returntype . void)
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 1) (max_locals . 1) (code_length . 5)
                                   (parsedcode
                                      (0 (aload_0))
                                      (1 (invokespecial
					(methodCP "<init>" "clojure.lang.AFunction" () void)))
                                      (4 (return))
                                      (endofcode 5))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object") (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 9) (max_locals . 5) (code_length . 162)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__2" "clojure.pprint$column_writer" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (checkcast (class "clojure.lang.IFn")))
                                      (9 (bipush 8))
                                      (11 (anewarray (class "java.lang.Object")))
                                      (14 (dup))
                                      (15 (iconst_0))
                                      (16 (getstatic (fieldCP "const__3" "clojure.pprint$column_writer" (class "clojure.lang.Keyword"))))
                                      (19 (aastore))
                                      (20 (dup))
                                      (21 (iconst_1))
                                      (22 (aload_2))
                                      (23 (aconst_null))
                                      (24 (astore_2))
                                      (25 (aastore))
                                      (26 (dup))
                                      (27 (iconst_2))
                                      (28 (getstatic (fieldCP "const__4" "clojure.pprint$column_writer" (class "clojure.lang.Keyword"))))
                                      (31 (aastore))
                                      (32 (dup))
                                      (33 (iconst_3))
                                      (34 (getstatic (fieldCP "const__5" "clojure.pprint$column_writer" (class "java.lang.Object"))))
                                      (37 (aastore))
                                      (38 (dup))
                                      (39 (iconst_4))
                                      (40 (getstatic (fieldCP "const__6" "clojure.pprint$column_writer" (class "clojure.lang.Keyword"))))
                                      (43 (aastore))
                                      (44 (dup))
                                      (45 (iconst_5))
                                      (46 (getstatic (fieldCP "const__5" "clojure.pprint$column_writer" (class "java.lang.Object"))))
                                      (49 (aastore))
                                      (50 (dup))
                                      (51 (bipush 6))
                                      (53 (getstatic (fieldCP "const__7" "clojure.pprint$column_writer" (class "clojure.lang.Keyword"))))
                                      (56 (aastore))
                                      (57 (dup))
                                      (58 (bipush 7))
                                      (60 (aload_1))
                                      (61 (aastore))
                                      (62 (invokestatic
					(methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (65 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object")) (class "java.lang.Object")) 2))
                                      (70 (astore_3))
                                      (71 (new (class "clojure.pprint.proxy$java.io.Writer$IDeref$db53459f")))
                                      (74 (dup))
                                      (75 (invokespecial
					(methodCP "<init>" "clojure.pprint.proxy$java.io.Writer$IDeref$db53459f" () void)))
                                      (78 (astore 4))
                                      (80 (getstatic (fieldCP "const__8" "clojure.pprint$column_writer" (class "clojure.lang.Var"))))
                                      (83 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (86 (checkcast (class "clojure.lang.IFn")))
                                      (89 (aload 4))
                                      (91 (bipush 6))
                                      (93 (anewarray (class "java.lang.Object")))
                                      (96 (dup))
                                      (97 (iconst_0))
                                      (98 (ldc 10))       ;;STRING:: "write"
                                      (100 (aastore))
                                      (101 (dup))
                                      (102 (iconst_1))
                                      (103 (new (class "clojure.pprint$column_writer$fn__7358")))
                                      (106 (dup))
                                      (107 (invokespecial
					(methodCP "<init>" "clojure.pprint$column_writer$fn__7358" () void)))
                                      (110 (aastore))
                                      (111 (dup))
                                      (112 (iconst_2))
                                      (113 (ldc 11))      ;;STRING:: "flush"
                                      (115 (aastore))
                                      (116 (dup))
                                      (117 (iconst_3))
                                      (118 (new (class "clojure.pprint$column_writer$fn__7367")))
                                      (121 (dup))
                                      (122 (aload_1))
                                      (123 (aconst_null))
                                      (124 (astore_1))
                                      (125 (invokespecial
					(methodCP "<init>" "clojure.pprint$column_writer$fn__7367" ((class "java.lang.Object")) void)))
                                      (128 (aastore))
                                      (129 (dup))
                                      (130 (iconst_4))
                                      (131 (ldc 12))      ;;STRING:: "deref"
                                      (133 (aastore))
                                      (134 (dup))
                                      (135 (iconst_5))
                                      (136 (new (class "clojure.pprint$column_writer$fn__7369")))
                                      (139 (dup))
                                      (140 (aload_3))
                                      (141 (aconst_null))
                                      (142 (astore_3))
                                      (143 (invokespecial
					(methodCP "<init>" "clojure.pprint$column_writer$fn__7369" ((class "java.lang.Object")) void)))
                                      (146 (aastore))
                                      (147 (invokestatic
					(methodCP "mapUniqueKeys" "clojure.lang.RT" ((array (class "java.lang.Object"))) (class "clojure.lang.IPersistentMap"))))
                                      (150 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (155 (pop))
                                      (156 (aload 4))
                                      (158 (aconst_null))
                                      (159 (astore 4))
                                      (161 (areturn))
                                      (endofcode 162))
                                   (Exceptions )
                                   (StackMap )))
                        (method "invoke"
                              (parameters (class "java.lang.Object"))
                              (returntype . (class "java.lang.Object"))
                              (accessflags  *class*  *public* )
                              (code
                                   (max_stack . 3) (max_locals . 2) (code_length . 24)
                                   (parsedcode
                                      (0 (getstatic (fieldCP "const__0" "clojure.pprint$column_writer" (class "clojure.lang.Var"))))
                                      (3 (invokevirtual
					(methodCP "getRawRoot" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (6 (checkcast (class "clojure.lang.IFn")))
                                      (9 (aload_1))
                                      (10 (aconst_null))
                                      (11 (astore_1))
                                      (12 (getstatic (fieldCP "const__1" "clojure.pprint$column_writer" (class "clojure.lang.Var"))))
                                      (15 (invokevirtual
					(methodCP "get" "clojure.lang.Var" () (class "java.lang.Object"))))
                                      (18 (invokeinterface
					(methodCP "invoke" "clojure.lang.IFn" ((class "java.lang.Object") (class "java.lang.Object")) (class "java.lang.Object")) 3))
                                      (23 (areturn))
                                      (endofcode 24))
                                   (Exceptions )
                                   (StackMap ))))
            (interfaces)
            (accessflags  *class*  *final*  *public*  *super*  *synchronized* )
            (attributes
              (attribute "SourceFile")
              (attribute "SourceDebugExtension")))))


(defconst *pprint$column_writer-class-table*
  (make-static-class-decls 
   *clojure.pprint$column_writer*))

(defconst *package-name-map* 
  ("clojure.pprint$column_writer" . "clojure"))

